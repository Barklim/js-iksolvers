// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB;
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + (assert(DYNAMICTOP > 0),size))|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret; return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the a given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);

HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===

var ASM_CONSTS = [];





STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 14960;
  /* global initializers */ __ATINIT__.push();
  

/* memory initializer */ allocate([10,85,115,97,103,101,58,32,46,47,105,107,32,114,48,48,32,114,48,49,32,114,48,50,32,116,48,32,114,49,48,32,114,49,49,32,114,49,50,32,116,49,32,114,50,48,32,114,50,49,32,114,50,50,32,116,50,32,102,114,101,101,48,32,46,46,46,10,10,82,101,116,117,114,110,115,32,116,104,101,32,105,107,32,115,111,108,117,116,105,111,110,115,32,103,105,118,101,110,32,116,104,101,32,116,114,97,110,115,102,111,114,109,97,116,105,111,110,32,111,102,32,116,104,101,32,101,110,100,32,101,102,102,101,99,116,111,114,32,115,112,101,99,105,102,105,101,100,32,98,121,10,97,32,51,120,51,32,114,111,116,97,116,105,111,110,32,82,32,40,114,88,88,41,44,32,97,110,100,32,97,32,51,120,49,32,116,114,97,110,115,108,97,116,105,111,110,32,40,116,88,41,46,10,84,104,101,114,101,32,97,114,101,32,37,100,32,102,114,101,101,32,112,97,114,97,109,101,116,101,114,115,32,116,104,97,116,32,104,97,118,101,32,116,111,32,98,101,32,115,112,101,99,105,102,105,101,100,46,10,10,0,0,0,70,97,105,108,101,100,32,116,111,32,103,101,116,32,105,107,32,115,111,108,117,116,105,111,110,10,0,0,0,0,0,0,70,111,117,110,100,32,37,100,32,105,107,32,115,111,108,117,116,105,111,110,115,58,10,0,115,111,108,37,100,32,40,102,114,101,101,61,37,100,41,58,32,0,0,0,0,0,0,0,37,46,49,53,102,44,32,0,10,0,0,0,0,0,0,0,71,101,116,83,111,108,117,116,105,111,110,32,105,110,100,101,120,32,105,115,32,105,110,118,97,108,105,100,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,76,105,115,116,73,100,69,69,0,0,0,0,78,54,105,107,102,97,115,116,49,56,73,107,83,111,108,117,116,105,111,110,76,105,115,116,66,97,115,101,73,100,69,69,0,0,0,0,0,0,0,0,104,11,0,0,208,1,0,0,144,11,0,0,176,1,0,0,248,1,0,0,0,0,0,0,0,0,0,0,128,2,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,78,54,105,107,102,97,115,116,49,48,73,107,83,111,108,117,116,105,111,110,73,100,69,69,0,0,0,0,0,0,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,66,97,115,101,73,100,69,69,0,0,0,0,104,11,0,0,88,2,0,0,144,11,0,0,56,2,0,0,120,2,0,0,0,0,0,0,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,0,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,0,0,0,0,50,110,100,32,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,102,111,102,102,115,101,116,32,119,97,115,32,110,111,116,32,102,105,110,105,116,101,0,0,0,0,0,0,120,2,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,17,0,0,0,17,0,0,0,0,0,0,0,248,1,0,0,19,0,0,0,20,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,105,107,102,97,115,116,32,101,120,99,101,112,116,105,111,110,58,32,0,0,0,0,0,0,46,47,115,111,108,118,101,114,115,47,77,97,110,117,115,65,114,109,45,76,101,102,116,45,108,101,102,116,97,114,109,46,99,112,112,0,0,0,0,0,58,0,0,0,0,0,0,0,73,75,97,116,97,110,50,0,58,32,65,115,115,101,114,116,105,111,110,32,39,0,0,0,33,105,115,110,97,110,40,102,120,41,0,0,0,0,0,0,39,32,102,97,105,108,101,100,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,32,5,0,0,21,0,0,0,22,0,0,0,56,0,0,0,248,255,255,255,32,5,0,0,23,0,0,0,24,0,0,0,192,255,255,255,192,255,255,255,32,5,0,0,25,0,0,0,26,0,0,0,0,0,0,0,236,3,0,0,84,4,0,0,148,4,0,0,168,4,0,0,188,4,0,0,208,4,0,0,124,4,0,0,104,4,0,0,20,4,0,0,0,4,0,0,64,0,0,0,0,0,0,0,152,20,0,0,27,0,0,0,28,0,0,0,56,0,0,0,248,255,255,255,152,20,0,0,29,0,0,0,30,0,0,0,192,255,255,255,192,255,255,255,152,20,0,0,31,0,0,0,32,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,8,20,0,0,33,0,0,0,34,0,0,0,192,255,255,255,192,255,255,255,8,20,0,0,35,0,0,0,36,0,0,0,56,0,0,0,0,0,0,0,80,20,0,0,37,0,0,0,38,0,0,0,200,255,255,255,200,255,255,255,80,20,0,0,39,0,0,0,40,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,144,11,0,0,216,4,0,0,152,20,0,0,0,0,0,0,0,0,0,0,184,5,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,144,11,0,0,112,5,0,0,208,19,0,0,0,0,0,0,73,75,97,115,105,110,0,0,102,32,62,32,45,49,45,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,32,38,38,32,102,32,60,32,49,43,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,0,0,0,0,0,0,0,73,75,97,99,111,115,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,0,0,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,0,152,8,0,0,56,0,0,0,57,0,0,0,58,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,144,11,0,0,136,8,0,0,32,9,0,0,0,0,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,104,11,0,0,16,9,0,0,0,0,0,0,104,9,0,0,59,0,0,0,60,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,16,10,0,0,62,0,0,0,63,0,0,0,64,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,144,11,0,0,88,9,0,0,32,9,0,0,0,0,0,0,0,0,0,0,168,9,0,0,59,0,0,0,65,0,0,0,61,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,144,11,0,0,144,9,0,0,104,9,0,0,0,0,0,0,0,0,0,0,232,9,0,0,59,0,0,0,66,0,0,0,61,0,0,0,0,0,0,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,144,11,0,0,208,9,0,0,104,9,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,144,11,0,0,248,9,0,0,32,9,0,0,0,0,0,0,0,0,0,0,112,10,0,0,67,0,0,0,68,0,0,0,69,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,104,11,0,0,72,10,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,144,11,0,0,96,10,0,0,32,9,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,144,11,0,0,128,10,0,0,88,10,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,144,11,0,0,184,10,0,0,168,10,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,144,11,0,0,24,11,0,0,168,10,0,0,0,0,0,0,144,11,0,0,240,10,0,0,64,11,0,0,0,0,0,0,0,0,0,0,224,10,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,0,0,0,0,216,11,0,0,70,0,0,0,78,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,144,11,0,0,176,11,0,0,224,10,0,0,0,0,0,0,0,0,0,0,56,12,0,0,70,0,0,0,82,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,144,11,0,0,16,12,0,0,224,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,0,0,0,0,136,19,0,0,87,0,0,0,88,0,0,0,0,0,0,0,208,19,0,0,89,0,0,0,90,0,0,0,43,0,0,0,44,0,0,0,91,0,0,0,92,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,93,0,0,0,51,0,0,0,94,0,0,0,53,0,0,0,95,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,19,0,0,96,0,0,0,97,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,80,19,0,0,98,0,0,0,99,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,144,11,0,0,8,19,0,0,192,57,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,104,11,0,0,56,19,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,144,11,0,0,88,19,0,0,80,19,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,104,11,0,0,152,19,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,240,11,0,0,216,19,0,0,0,0,0,0,1,0,0,0,136,19,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,240,11,0,0,32,20,0,0,0,0,0,0,1,0,0,0,136,19,0,0,3,244,255,255,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,240,11,0,0,104,20,0,0,3,0,0,0,2,0,0,0,8,20,0,0,2,0,0,0,80,20,0,0,2,8,0,0,0,0,0,0,0,21,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,144,11,0,0,224,20,0,0,16,58,0,0,0,0,0,0,0,0,0,0,72,35,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,35,0,0,113,0,0,0,114,0,0,0,109,0,0,0,115,0,0,0,116,0,0,0,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,37,0,0,118,0,0,0,119,0,0,0,109,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127,0,0,0,128,0,0,0,129,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,216,37,0,0,131,0,0,0,132,0,0,0,109,0,0,0,133,0,0,0,134,0,0,0,135,0,0,0,136,0,0,0,137,0,0,0,138,0,0,0,139,0,0,0,140,0,0,0,141,0,0,0,142,0,0,0,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,38,0,0,144,0,0,0,145,0,0,0,109,0,0,0,146,0,0,0,147,0,0,0,148,0,0,0,149,0,0,0,150,0,0,0,151,0,0,0,152,0,0,0,153,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,48,39,0,0,154,0,0,0,155,0,0,0,109,0,0,0,156,0,0,0,157,0,0,0,158,0,0,0,159,0,0,0,160,0,0,0,161,0,0,0,162,0,0,0,163,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,232,39,0,0,164,0,0,0,165,0,0,0,109,0,0,0,166,0,0,0,167,0,0,0,168,0,0,0,169,0,0,0,170,0,0,0,171,0,0,0,172,0,0,0,248,255,255,255,232,39,0,0,173,0,0,0,174,0,0,0,175,0,0,0,176,0,0,0,177,0,0,0,178,0,0,0,179,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,136,40,0,0,180,0,0,0,181,0,0,0,109,0,0,0,182,0,0,0,183,0,0,0,184,0,0,0,185,0,0,0,186,0,0,0,187,0,0,0,188,0,0,0,248,255,255,255,136,40,0,0,189,0,0,0,190,0,0,0,191,0,0,0,192,0,0,0,193,0,0,0,194,0,0,0,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,24,41,0,0,196,0,0,0,197,0,0,0,109,0,0,0,198,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,41,0,0,199,0,0,0,200,0,0,0,109,0,0,0,201,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,35,0,0,202,0,0,0,203,0,0,0,109,0,0,0,204,0,0,0,205,0,0,0,206,0,0,0,207,0,0,0,208,0,0,0,209,0,0,0,210,0,0,0,211,0,0,0,212,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,213,0,0,0,214,0,0,0,109,0,0,0,215,0,0,0,216,0,0,0,217,0,0,0,218,0,0,0,219,0,0,0,220,0,0,0,221,0,0,0,222,0,0,0,223,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,36,0,0,224,0,0,0,225,0,0,0,109,0,0,0,226,0,0,0,227,0,0,0,228,0,0,0,229,0,0,0,230,0,0,0,231,0,0,0,232,0,0,0,233,0,0,0,234,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,36,0,0,235,0,0,0,236,0,0,0,109,0,0,0,237,0,0,0,238,0,0,0,239,0,0,0,240,0,0,0,241,0,0,0,242,0,0,0,243,0,0,0,244,0,0,0,245,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,42,0,0,246,0,0,0,247,0,0,0,109,0,0,0,248,0,0,0,249,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,0,0,0,0,160,42,0,0,250,0,0,0,251,0,0,0,109,0,0,0,252,0,0,0,253,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,0,0,0,0,48,43,0,0,254,0,0,0,255,0,0,0,109,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,46,48,76,102,0,0,0,0,0,0,0,192,43,0,0,2,1,0,0,3,1,0,0,109,0,0,0,4,1,0,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,44,0,0,6,1,0,0,7,1,0,0,109,0,0,0,8,1,0,0,9,1,0,0,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,44,0,0,11,1,0,0,12,1,0,0,109,0,0,0,13,1,0,0,14,1,0,0,15,1,0,0,0,0,0,0,0,0,0,0,118,101,99,116,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,32,35,0,0,16,1,0,0,17,1,0,0,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,31,0,0,18,1,0,0,19,1,0,0,109,0,0,0,20,1,0,0,21,1,0,0,22,1,0,0,23,1,0,0,24,1,0,0,25,1,0,0,26,1,0,0,27,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,32,0,0,28,1,0,0,29,1,0,0,109,0,0,0,30,1,0,0,31,1,0,0,32,1,0,0,33,1,0,0,34,1,0,0,35,1,0,0,36,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,34,0,0,37,1,0,0,38,1,0,0,109,0,0,0,39,1,0,0,40,1,0,0,41,1,0,0,42,1,0,0,43,1,0,0,0,0,0,0,248,34,0,0,44,1,0,0,45,1,0,0,109,0,0,0,46,1,0,0,47,1,0,0,48,1,0,0,49,1,0,0,50,1,0,0,116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,0,0,48,31,0,0,51,1,0,0,52,1,0,0,109,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,144,11,0,0,24,31,0,0,128,57,0,0,0,0,0,0,0,0,0,0,192,31,0,0,51,1,0,0,53,1,0,0,109,0,0,0,54,1,0,0,55,1,0,0,56,1,0,0,57,1,0,0,58,1,0,0,59,1,0,0,60,1,0,0,61,1,0,0,62,1,0,0,63,1,0,0,64,1,0,0,65,1,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,104,11,0,0,160,31,0,0,240,11,0,0,136,31,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,184,31,0,0,2,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,240,11,0,0,224,31,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,184,31,0,0,2,0,0,0,0,0,0,0,144,32,0,0,51,1,0,0,66,1,0,0,109,0,0,0,67,1,0,0,68,1,0,0,69,1,0,0,70,1,0,0,71,1,0,0,72,1,0,0,73,1,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,104,11,0,0,112,32,0,0,240,11,0,0,72,32,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,136,32,0,0,2,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,240,11,0,0,176,32,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,136,32,0,0,2,0,0,0,0,0,0,0,80,33,0,0,51,1,0,0,74,1,0,0,109,0,0,0,75,1,0,0,76,1,0,0,77,1,0,0,78,1,0,0,79,1,0,0,80,1,0,0,81,1,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,240,11,0,0,40,33,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,136,32,0,0,2,0,0,0,0,0,0,0,200,33,0,0,51,1,0,0,82,1,0,0,109,0,0,0,83,1,0,0,84,1,0,0,85,1,0,0,86,1,0,0,87,1,0,0,88,1,0,0,89,1,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,240,11,0,0,160,33,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,136,32,0,0,2,0,0,0,0,0,0,0,64,34,0,0,51,1,0,0,90,1,0,0,109,0,0,0,83,1,0,0,84,1,0,0,85,1,0,0,86,1,0,0,87,1,0,0,88,1,0,0,89,1,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,144,11,0,0,24,34,0,0,200,33,0,0,0,0,0,0,0,0,0,0,168,34,0,0,51,1,0,0,91,1,0,0,109,0,0,0,83,1,0,0,84,1,0,0,85,1,0,0,86,1,0,0,87,1,0,0,88,1,0,0,89,1,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,144,11,0,0,128,34,0,0,200,33,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,144,11,0,0,184,34,0,0,48,31,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,144,11,0,0,224,34,0,0,48,31,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,144,11,0,0,8,35,0,0,48,31,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,144,11,0,0,48,35,0,0,48,31,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,144,11,0,0,88,35,0,0,48,31,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,104,11,0,0,160,35,0,0,240,11,0,0,128,35,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,184,35,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,240,11,0,0,224,35,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,184,35,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,240,11,0,0,32,36,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,184,35,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,240,11,0,0,96,36,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,184,35,0,0,2,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,104,11,0,0,0,37,0,0,240,11,0,0,232,36,0,0,0,0,0,0,1,0,0,0,32,37,0,0,0,0,0,0,240,11,0,0,160,36,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,40,37,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,240,11,0,0,168,37,0,0,0,0,0,0,1,0,0,0,32,37,0,0,0,0,0,0,240,11,0,0,96,37,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,192,37,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,104,11,0,0,88,38,0,0,240,11,0,0,64,38,0,0,0,0,0,0,1,0,0,0,120,38,0,0,0,0,0,0,240,11,0,0,248,37,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,128,38,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,240,11,0,0,0,39,0,0,0,0,0,0,1,0,0,0,120,38,0,0,0,0,0,0,240,11,0,0,184,38,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,24,39,0,0,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,104,11,0,0,152,39,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,104,11,0,0,184,39,0,0,240,11,0,0,80,39,0,0,0,0,0,0,3,0,0,0,48,31,0,0,2,0,0,0,176,39,0,0,2], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([224,39,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,104,11,0,0,88,40,0,0,240,11,0,0,16,40,0,0,0,0,0,0,3,0,0,0,48,31,0,0,2,0,0,0,176,39,0,0,2,0,0,0,128,40,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,104,11,0,0,248,40,0,0,240,11,0,0,176,40,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,16,41,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,240,11,0,0,56,41,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,16,41,0,0,0,8,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,104,11,0,0,232,41,0,0,240,11,0,0,160,41,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,8,42,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,104,11,0,0,120,42,0,0,240,11,0,0,48,42,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,152,42,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,104,11,0,0,8,43,0,0,240,11,0,0,192,42,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,40,43,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,104,11,0,0,152,43,0,0,240,11,0,0,80,43,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,184,43,0,0,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,104,11,0,0,248,43,0,0,240,11,0,0,224,43,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,16,44,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,240,11,0,0,56,44,0,0,0,0,0,0,2,0,0,0,48,31,0,0,2,0,0,0,16,44,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,104,11,0,0,96,57,0,0,58,32,0,0,0,0,0,0,0,0,0,0,192,57,0,0,92,1,0,0,93,1,0,0,64,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,144,11,0,0,168,57,0,0,16,10,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,104,11,0,0,208,57,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,144,11,0,0,248,57,0,0,240,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);




/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  var _emscripten_resume=true;

  var _emscripten_landingpad=true;

  
  
  function _free() {
  }
  Module["_free"] = _free;function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
        Module.printErr('exception during cxa_free_exception: ' + e);
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }

  
  
  
  var FS=undefined;
  
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  
  var SOCKFS=undefined;function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      assert((varargs & 7) === 0);
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        argIndex = Runtime.prepVararg(argIndex, type);
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
          argIndex += 8;
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
          argIndex += 8;
        } else {
          assert((argIndex & 3) === 0);
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += 4;
        }
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      // extra effort to support printf, even without a filesystem. very partial, very hackish
      var result = __formatString(format, varargs);
      var string = intArrayToString(result);
      if (string[string.length-1] === '\n') string = string.substr(0, string.length-1); // remove a final \n, as Module.print will do that
      Module.print(string);
      return result.length;
    }

  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }

  var _emscripten_postinvoke=true;

  
  var PTHREAD_SPECIFIC={};
  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  function ___gxx_personality_v0() {
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  var _BDtoIHigh=true;

  function _pthread_cond_broadcast() {
      return 0;
    }

  function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function _pthread_mutex_unlock() {}

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function _pthread_mutex_lock() {}

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function ___cxa_guard_abort() {}

  
  var LOCALE={curr:0,check:function (locale) {
        if (locale) locale = Pointer_stringify(locale);
        return locale === 'C' || locale === 'POSIX' || !locale;
      }};
  
  function _calloc(n, s) {
      var ret = _malloc(n*s);
      _memset(ret, 0, n*s);
      return ret;
    }function _newlocale(mask, locale, base) {
      if (!LOCALE.check(locale)) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      if (!base) base = _calloc(1, 4);
      return base;
    }

   
  Module["_memmove"] = _memmove;

  var _emscripten_preinvoke=true;

  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = EXCEPTIONS.caught.pop();
      EXCEPTIONS.last = ptr;
      throw ptr;
    }

  function ___cxa_guard_release() {}

  function _uselocale(locale) {
      var old = LOCALE.curr;
      if (locale) LOCALE.curr = locale;
      return old;
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function ___errno_location() {
      return ___errno_state;
    }

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  var _BItoD=true;

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }



  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }


  var _asin=Math_asin;

  function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  var _fabs=Math_abs;

  var _sqrt=Math_sqrt;

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _freelocale(locale) {
      _free(locale);
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _sin=Math_sin;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }


  var _cos=Math_cos;

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  var _atan2=Math_atan2;

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _acos=Math_acos;

  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function nullFunc_iiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_id(x) { Module["printErr"]("Invalid function pointer called with signature 'id'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_di(x) { Module["printErr"]("Invalid function pointer called with signature 'di'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_diii(x) { Module["printErr"]("Invalid function pointer called with signature 'diii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_id(index,a1) {
  try {
    return Module["dynCall_id"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_iiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  try {
    Module["dynCall_viiiiiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_di(index,a1) {
  try {
    return Module["dynCall_di"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "nullFunc_iiiiiiii": nullFunc_iiiiiiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_ii": nullFunc_ii, "nullFunc_id": nullFunc_id, "nullFunc_iiiiiiiiiiii": nullFunc_iiiiiiiiiiii, "nullFunc_iiii": nullFunc_iiii, "nullFunc_viiiiiiiiiiiiiii": nullFunc_viiiiiiiiiiiiiii, "nullFunc_viiiiid": nullFunc_viiiiid, "nullFunc_viiiiiiii": nullFunc_viiiiiiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_di": nullFunc_di, "nullFunc_viiiiiii": nullFunc_viiiiiii, "nullFunc_viiiiiid": nullFunc_viiiiiid, "nullFunc_viiiiiiiii": nullFunc_viiiiiiiii, "nullFunc_viiiiiiiiii": nullFunc_viiiiiiiiii, "nullFunc_iii": nullFunc_iii, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_diii": nullFunc_diii, "nullFunc_i": nullFunc_i, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_viii": nullFunc_viii, "nullFunc_v": nullFunc_v, "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii, "nullFunc_viiii": nullFunc_viiii, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_id": invoke_id, "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii, "invoke_viiiiid": invoke_viiiiid, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_di": invoke_di, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_diii": invoke_diii, "invoke_i": invoke_i, "invoke_iiiii": invoke_iiiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "_strftime": _strftime, "_pthread_cond_wait": _pthread_cond_wait, "_sin": _sin, "___ctype_tolower_loc": ___ctype_tolower_loc, "_uselocale": _uselocale, "_vfprintf": _vfprintf, "___ctype_b_loc": ___ctype_b_loc, "___cxa_guard_acquire": ___cxa_guard_acquire, "_atan2": _atan2, "___setErrNo": ___setErrNo, "___gxx_personality_v0": ___gxx_personality_v0, "___cxa_free_exception": ___cxa_free_exception, "_calloc": _calloc, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___ctype_toupper_loc": ___ctype_toupper_loc, "___cxa_guard_release": ___cxa_guard_release, "__addDays": __addDays, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_strftime_l": _strftime_l, "_fprintf": _fprintf, "__reallyNegative": __reallyNegative, "_sbrk": _sbrk, "_acos": _acos, "_catgets": _catgets, "_newlocale": _newlocale, "___cxa_allocate_exception": ___cxa_allocate_exception, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_fileno": _fileno, "___resumeException": ___resumeException, "_asin": _asin, "_freelocale": _freelocale, "___cxa_begin_catch": ___cxa_begin_catch, "_pthread_getspecific": _pthread_getspecific, "__arraySum": __arraySum, "_cos": _cos, "___cxa_end_catch": ___cxa_end_catch, "___cxa_call_unexpected": ___cxa_call_unexpected, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pthread_once": _pthread_once, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_printf": _printf, "_pthread_key_create": _pthread_key_create, "_write": _write, "__isLeapYear": __isLeapYear, "___errno_location": ___errno_location, "_pthread_setspecific": _pthread_setspecific, "_fputc": _fputc, "___cxa_throw": ___cxa_throw, "_sysconf": _sysconf, "_send": _send, "___cxa_rethrow": ___cxa_rethrow, "_abort": _abort, "_catclose": _catclose, "_fwrite": _fwrite, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_strerror": _strerror, "__formatString": __formatString, "_sqrt": _sqrt, "_catopen": _catopen, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_pure_virtual": ___cxa_pure_virtual, "___cxa_guard_abort": ___cxa_guard_abort, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "_stderr": _stderr };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var _stderr=env._stderr|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var nullFunc_iiiiiiii=env.nullFunc_iiiiiiii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_id=env.nullFunc_id;
  var nullFunc_iiiiiiiiiiii=env.nullFunc_iiiiiiiiiiii;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_viiiiiiiiiiiiiii=env.nullFunc_viiiiiiiiiiiiiii;
  var nullFunc_viiiiid=env.nullFunc_viiiiid;
  var nullFunc_viiiiiiii=env.nullFunc_viiiiiiii;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_di=env.nullFunc_di;
  var nullFunc_viiiiiii=env.nullFunc_viiiiiii;
  var nullFunc_viiiiiid=env.nullFunc_viiiiiid;
  var nullFunc_viiiiiiiii=env.nullFunc_viiiiiiiii;
  var nullFunc_viiiiiiiiii=env.nullFunc_viiiiiiiiii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var nullFunc_diii=env.nullFunc_diii;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_id=env.invoke_id;
  var invoke_iiiiiiiiiiii=env.invoke_iiiiiiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiiiiiiiiiii=env.invoke_viiiiiiiiiiiiiii;
  var invoke_viiiiid=env.invoke_viiiiid;
  var invoke_viiiiiiii=env.invoke_viiiiiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_di=env.invoke_di;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiiiid=env.invoke_viiiiiid;
  var invoke_viiiiiiiii=env.invoke_viiiiiiiii;
  var invoke_viiiiiiiiii=env.invoke_viiiiiiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_diii=env.invoke_diii;
  var invoke_i=env.invoke_i;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _sin=env._sin;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _uselocale=env._uselocale;
  var _vfprintf=env._vfprintf;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var _atan2=env._atan2;
  var ___setErrNo=env.___setErrNo;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var _calloc=env._calloc;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var __addDays=env.__addDays;
  var _pwrite=env._pwrite;
  var _strerror_r=env._strerror_r;
  var _strftime_l=env._strftime_l;
  var _fprintf=env._fprintf;
  var __reallyNegative=env.__reallyNegative;
  var _sbrk=env._sbrk;
  var _acos=env._acos;
  var _catgets=env._catgets;
  var _newlocale=env._newlocale;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _fileno=env._fileno;
  var ___resumeException=env.___resumeException;
  var _asin=env._asin;
  var _freelocale=env._freelocale;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _pthread_getspecific=env._pthread_getspecific;
  var __arraySum=env.__arraySum;
  var _cos=env._cos;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var ___cxa_call_unexpected=env.___cxa_call_unexpected;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pthread_once=env._pthread_once;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _printf=env._printf;
  var _pthread_key_create=env._pthread_key_create;
  var _write=env._write;
  var __isLeapYear=env.__isLeapYear;
  var ___errno_location=env.___errno_location;
  var _pthread_setspecific=env._pthread_setspecific;
  var _fputc=env._fputc;
  var ___cxa_throw=env.___cxa_throw;
  var _sysconf=env._sysconf;
  var _send=env._send;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var _abort=env._abort;
  var _catclose=env._catclose;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var _strerror=env._strerror;
  var __formatString=env.__formatString;
  var _sqrt=env._sqrt;
  var _catopen=env._catopen;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var ___cxa_guard_abort=env.___cxa_guard_abort;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
if ((STACKTOP|0) >= (STACK_MAX|0)) abort();

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}
function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __Z20GetNumFreeParametersv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __Z12GetNumJointsv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 6;
}
function __Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE($eetrans,$eerot,$pfree,$solutions) {
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $solver = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 608|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $solver = sp;
 $0 = $eetrans;
 $1 = $eerot;
 $2 = $pfree;
 $3 = $solutions;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = (__ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($solver,$4,$5,$6,$7)|0);
 STACKTOP = sp;return ($8|0);
}
function _main($argc,$argv) {
 $argc = $argc|0;
 $argv = $argv|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0.0, $198 = 0, $199 = 0, $2 = 0, $20 = 0.0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0.0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0.0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $bSuccess = 0, $eerot = 0, $eetrans = 0, $i = 0, $i1 = 0, $j = 0, $sol = 0, $solutions = 0, $solvalues = 0, $vararg_buffer = 0, $vararg_buffer1 = 0;
 var $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, $vararg_ptr9 = 0, $vfree = 0, $vsolfree = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer13 = sp + 136|0;
 $vararg_buffer10 = sp + 128|0;
 $vararg_buffer6 = sp + 120|0;
 $vararg_buffer3 = sp + 112|0;
 $vararg_buffer1 = sp + 104|0;
 $vararg_buffer = sp + 96|0;
 $solutions = sp + 208|0;
 $vfree = sp + 192|0;
 $eerot = sp + 24|0;
 $eetrans = sp;
 $solvalues = sp + 164|0;
 $vsolfree = sp + 144|0;
 $0 = 0;
 $1 = $argc;
 $2 = $argv;
 $6 = $1;
 $7 = (__Z20GetNumFreeParametersv()|0);
 $8 = (12 + ($7))|0;
 $9 = (($8) + 1)|0;
 $10 = ($6|0)!=($9|0);
 if ($10) {
  $11 = (__Z20GetNumFreeParametersv()|0);
  HEAP32[$vararg_buffer>>2] = $11;
  (_printf((8|0),($vararg_buffer|0))|0);
  $0 = 1;
  $224 = $0;
  STACKTOP = sp;return ($224|0);
 }
 __ZN6ikfast14IkSolutionListIdEC2Ev($solutions);
 __THREW__ = 0;
 $12 = (invoke_i(350)|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 L5: do {
  if ($14) {
   label = 23;
  } else {
   __THREW__ = 0;
   invoke_vii(351,($vfree|0),($12|0));
   $15 = __THREW__; __THREW__ = 0;
   $16 = $15&1;
   if ($16) {
    label = 23;
   } else {
    $17 = $2;
    $18 = (($17) + 4|0);
    $19 = HEAP32[$18>>2]|0;
    __THREW__ = 0;
    $20 = (+invoke_di(352,($19|0)));
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    L8: do {
     if ($22) {
      label = 24;
     } else {
      HEAPF64[$eerot>>3] = $20;
      $23 = $2;
      $24 = (($23) + 8|0);
      $25 = HEAP32[$24>>2]|0;
      __THREW__ = 0;
      $26 = (+invoke_di(352,($25|0)));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       label = 24;
      } else {
       $29 = (($eerot) + 8|0);
       HEAPF64[$29>>3] = $26;
       $30 = $2;
       $31 = (($30) + 12|0);
       $32 = HEAP32[$31>>2]|0;
       __THREW__ = 0;
       $33 = (+invoke_di(352,($32|0)));
       $34 = __THREW__; __THREW__ = 0;
       $35 = $34&1;
       if ($35) {
        label = 24;
       } else {
        $36 = (($eerot) + 16|0);
        HEAPF64[$36>>3] = $33;
        $37 = $2;
        $38 = (($37) + 16|0);
        $39 = HEAP32[$38>>2]|0;
        __THREW__ = 0;
        $40 = (+invoke_di(352,($39|0)));
        $41 = __THREW__; __THREW__ = 0;
        $42 = $41&1;
        if ($42) {
         label = 24;
        } else {
         HEAPF64[$eetrans>>3] = $40;
         $43 = $2;
         $44 = (($43) + 20|0);
         $45 = HEAP32[$44>>2]|0;
         __THREW__ = 0;
         $46 = (+invoke_di(352,($45|0)));
         $47 = __THREW__; __THREW__ = 0;
         $48 = $47&1;
         if ($48) {
          label = 24;
         } else {
          $49 = (($eerot) + 24|0);
          HEAPF64[$49>>3] = $46;
          $50 = $2;
          $51 = (($50) + 24|0);
          $52 = HEAP32[$51>>2]|0;
          __THREW__ = 0;
          $53 = (+invoke_di(352,($52|0)));
          $54 = __THREW__; __THREW__ = 0;
          $55 = $54&1;
          if ($55) {
           label = 24;
          } else {
           $56 = (($eerot) + 32|0);
           HEAPF64[$56>>3] = $53;
           $57 = $2;
           $58 = (($57) + 28|0);
           $59 = HEAP32[$58>>2]|0;
           __THREW__ = 0;
           $60 = (+invoke_di(352,($59|0)));
           $61 = __THREW__; __THREW__ = 0;
           $62 = $61&1;
           if ($62) {
            label = 24;
           } else {
            $63 = (($eerot) + 40|0);
            HEAPF64[$63>>3] = $60;
            $64 = $2;
            $65 = (($64) + 32|0);
            $66 = HEAP32[$65>>2]|0;
            __THREW__ = 0;
            $67 = (+invoke_di(352,($66|0)));
            $68 = __THREW__; __THREW__ = 0;
            $69 = $68&1;
            if ($69) {
             label = 24;
            } else {
             $70 = (($eetrans) + 8|0);
             HEAPF64[$70>>3] = $67;
             $71 = $2;
             $72 = (($71) + 36|0);
             $73 = HEAP32[$72>>2]|0;
             __THREW__ = 0;
             $74 = (+invoke_di(352,($73|0)));
             $75 = __THREW__; __THREW__ = 0;
             $76 = $75&1;
             if ($76) {
              label = 24;
             } else {
              $77 = (($eerot) + 48|0);
              HEAPF64[$77>>3] = $74;
              $78 = $2;
              $79 = (($78) + 40|0);
              $80 = HEAP32[$79>>2]|0;
              __THREW__ = 0;
              $81 = (+invoke_di(352,($80|0)));
              $82 = __THREW__; __THREW__ = 0;
              $83 = $82&1;
              if ($83) {
               label = 24;
              } else {
               $84 = (($eerot) + 56|0);
               HEAPF64[$84>>3] = $81;
               $85 = $2;
               $86 = (($85) + 44|0);
               $87 = HEAP32[$86>>2]|0;
               __THREW__ = 0;
               $88 = (+invoke_di(352,($87|0)));
               $89 = __THREW__; __THREW__ = 0;
               $90 = $89&1;
               if ($90) {
                label = 24;
               } else {
                $91 = (($eerot) + 64|0);
                HEAPF64[$91>>3] = $88;
                $92 = $2;
                $93 = (($92) + 48|0);
                $94 = HEAP32[$93>>2]|0;
                __THREW__ = 0;
                $95 = (+invoke_di(352,($94|0)));
                $96 = __THREW__; __THREW__ = 0;
                $97 = $96&1;
                if ($97) {
                 label = 24;
                } else {
                 $98 = (($eetrans) + 16|0);
                 HEAPF64[$98>>3] = $95;
                 $i = 0;
                 while(1) {
                  $99 = $i;
                  $100 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($vfree)|0);
                  $101 = ($99>>>0)<($100>>>0);
                  if (!($101)) {
                   break;
                  }
                  $102 = $i;
                  $103 = (13 + ($102))|0;
                  $104 = $2;
                  $105 = (($104) + ($103<<2)|0);
                  $106 = HEAP32[$105>>2]|0;
                  __THREW__ = 0;
                  $107 = (+invoke_di(352,($106|0)));
                  $108 = __THREW__; __THREW__ = 0;
                  $109 = $108&1;
                  if ($109) {
                   label = 24;
                   break L8;
                  }
                  $110 = $i;
                  __THREW__ = 0;
                  $111 = (invoke_iii(353,($vfree|0),($110|0))|0);
                  $112 = __THREW__; __THREW__ = 0;
                  $113 = $112&1;
                  if ($113) {
                   label = 24;
                   break L8;
                  }
                  HEAPF64[$111>>3] = $107;
                  $114 = $i;
                  $115 = (($114) + 1)|0;
                  $i = $115;
                 }
                 $120 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($vfree)|0);
                 $121 = ($120>>>0)>(0);
                 if ($121) {
                  __THREW__ = 0;
                  $122 = (invoke_iii(353,($vfree|0),0)|0);
                  $123 = __THREW__; __THREW__ = 0;
                  $124 = $123&1;
                  if ($124) {
                   label = 24;
                   break;
                  }
                  $125 = $122;
                 } else {
                  $125 = 0;
                 }
                 __THREW__ = 0;
                 $126 = (invoke_iiiii(354,($eetrans|0),($eerot|0),($125|0),($solutions|0))|0);
                 $127 = __THREW__; __THREW__ = 0;
                 $128 = $127&1;
                 if ($128) {
                  label = 24;
                 } else {
                  $129 = $126&1;
                  $bSuccess = $129;
                  $130 = $bSuccess;
                  $131 = $130&1;
                  L34: do {
                   if ($131) {
                    __THREW__ = 0;
                    $135 = (invoke_ii(5,($solutions|0))|0);
                    $136 = __THREW__; __THREW__ = 0;
                    $137 = $136&1;
                    if ($137) {
                     label = 24;
                     break L8;
                    }
                    __THREW__ = 0;
                    HEAP32[$vararg_buffer3>>2] = $135;
                    (invoke_iii(356,(304|0),($vararg_buffer3|0))|0);
                    $138 = __THREW__; __THREW__ = 0;
                    $139 = $138&1;
                    if ($139) {
                     label = 24;
                     break L8;
                    }
                    __THREW__ = 0;
                    $140 = (invoke_i(357)|0);
                    $141 = __THREW__; __THREW__ = 0;
                    $142 = $141&1;
                    if ($142) {
                     label = 24;
                     break L8;
                    }
                    __THREW__ = 0;
                    invoke_vii(351,($solvalues|0),($140|0));
                    $143 = __THREW__; __THREW__ = 0;
                    $144 = $143&1;
                    if ($144) {
                     label = 24;
                     break L8;
                    }
                    $i1 = 0;
                    L42: while(1) {
                     $145 = $i1;
                     __THREW__ = 0;
                     $146 = (invoke_ii(5,($solutions|0))|0);
                     $147 = __THREW__; __THREW__ = 0;
                     $148 = $147&1;
                     if ($148) {
                      label = 57;
                      break;
                     }
                     $149 = ($145>>>0)<($146>>>0);
                     if (!($149)) {
                      label = 64;
                      break;
                     }
                     $150 = $i1;
                     __THREW__ = 0;
                     $151 = (invoke_iii(4,($solutions|0),($150|0))|0);
                     $152 = __THREW__; __THREW__ = 0;
                     $153 = $152&1;
                     if ($153) {
                      label = 57;
                      break;
                     }
                     $sol = $151;
                     $154 = $i1;
                     $155 = $sol;
                     $156 = HEAP32[$155>>2]|0;
                     $157 = (($156) + 16|0);
                     $158 = HEAP32[$157>>2]|0;
                     __THREW__ = 0;
                     $159 = (invoke_ii($158|0,($155|0))|0);
                     $160 = __THREW__; __THREW__ = 0;
                     $161 = $160&1;
                     if ($161) {
                      label = 57;
                      break;
                     }
                     $162 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($159)|0);
                     __THREW__ = 0;
                     HEAP32[$vararg_buffer6>>2] = $154;
                     $vararg_ptr9 = (($vararg_buffer6) + 4|0);
                     HEAP32[$vararg_ptr9>>2] = $162;
                     (invoke_iii(356,(328|0),($vararg_buffer6|0))|0);
                     $163 = __THREW__; __THREW__ = 0;
                     $164 = $163&1;
                     if ($164) {
                      label = 57;
                      break;
                     }
                     $165 = $sol;
                     $166 = HEAP32[$165>>2]|0;
                     $167 = (($166) + 16|0);
                     $168 = HEAP32[$167>>2]|0;
                     __THREW__ = 0;
                     $169 = (invoke_ii($168|0,($165|0))|0);
                     $170 = __THREW__; __THREW__ = 0;
                     $171 = $170&1;
                     if ($171) {
                      label = 57;
                      break;
                     }
                     $172 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($169)|0);
                     __THREW__ = 0;
                     invoke_vii(351,($vsolfree|0),($172|0));
                     $173 = __THREW__; __THREW__ = 0;
                     $174 = $173&1;
                     if ($174) {
                      label = 57;
                      break;
                     }
                     $175 = $sol;
                     $176 = HEAP32[$175>>2]|0;
                     $177 = (($176) + 8|0);
                     $178 = HEAP32[$177>>2]|0;
                     __THREW__ = 0;
                     $179 = (invoke_iii(353,($solvalues|0),0)|0);
                     $180 = __THREW__; __THREW__ = 0;
                     $181 = $180&1;
                     if ($181) {
                      label = 58;
                      break;
                     }
                     $182 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($vsolfree)|0);
                     $183 = ($182>>>0)>(0);
                     if ($183) {
                      __THREW__ = 0;
                      $184 = (invoke_iii(353,($vsolfree|0),0)|0);
                      $185 = __THREW__; __THREW__ = 0;
                      $186 = $185&1;
                      if ($186) {
                       label = 58;
                       break;
                      }
                      $187 = $184;
                     } else {
                      $187 = 0;
                     }
                     __THREW__ = 0;
                     invoke_viii($178|0,($175|0),($179|0),($187|0));
                     $188 = __THREW__; __THREW__ = 0;
                     $189 = $188&1;
                     if ($189) {
                      label = 58;
                      break;
                     }
                     $j = 0;
                     while(1) {
                      $190 = $j;
                      $191 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($solvalues)|0);
                      $192 = ($190>>>0)<($191>>>0);
                      if (!($192)) {
                       break;
                      }
                      $193 = $j;
                      __THREW__ = 0;
                      $194 = (invoke_iii(353,($solvalues|0),($193|0))|0);
                      $195 = __THREW__; __THREW__ = 0;
                      $196 = $195&1;
                      if ($196) {
                       label = 58;
                       break L42;
                      }
                      $197 = +HEAPF64[$194>>3];
                      __THREW__ = 0;
                      HEAPF64[$vararg_buffer10>>3] = $197;
                      (invoke_iii(356,(352|0),($vararg_buffer10|0))|0);
                      $198 = __THREW__; __THREW__ = 0;
                      $199 = $198&1;
                      if ($199) {
                       label = 58;
                       break L42;
                      }
                      $200 = $j;
                      $201 = (($200) + 1)|0;
                      $j = $201;
                     }
                     __THREW__ = 0;
                     (invoke_iii(356,(360|0),($vararg_buffer13|0))|0);
                     $208 = __THREW__; __THREW__ = 0;
                     $209 = $208&1;
                     if ($209) {
                      label = 58;
                      break;
                     }
                     __THREW__ = 0;
                     invoke_vi(358,($vsolfree|0));
                     $210 = __THREW__; __THREW__ = 0;
                     $211 = $210&1;
                     if ($211) {
                      label = 57;
                      break;
                     }
                     $212 = $i1;
                     $213 = (($212) + 1)|0;
                     $i1 = $213;
                    }
                    do {
                     if ((label|0) == 57) {
                      $202 = ___cxa_find_matching_catch()|0;
                      $203 = tempRet0;
                      $3 = $202;
                      $4 = $203;
                     }
                     else if ((label|0) == 58) {
                      $204 = ___cxa_find_matching_catch()|0;
                      $205 = tempRet0;
                      $3 = $204;
                      $4 = $205;
                      __THREW__ = 0;
                      invoke_vi(358,($vsolfree|0));
                      $206 = __THREW__; __THREW__ = 0;
                      $207 = $206&1;
                      if ($207) {
                       $227 = ___cxa_find_matching_catch(0|0)|0;
                       $228 = tempRet0;
                       ___clang_call_terminate($227);
                       // unreachable;
                      } else {
                       break;
                      }
                     }
                     else if ((label|0) == 64) {
                      $0 = 0;
                      $5 = 1;
                      __THREW__ = 0;
                      invoke_vi(358,($solvalues|0));
                      $214 = __THREW__; __THREW__ = 0;
                      $215 = $214&1;
                      if ($215) {
                       label = 24;
                       break L8;
                      }
                      break L34;
                     }
                    } while(0);
                    __THREW__ = 0;
                    invoke_vi(358,($solvalues|0));
                    $216 = __THREW__; __THREW__ = 0;
                    $217 = $216&1;
                    if ($217) {
                     $227 = ___cxa_find_matching_catch(0|0)|0;
                     $228 = tempRet0;
                     ___clang_call_terminate($227);
                     // unreachable;
                    } else {
                     break L8;
                    }
                   } else {
                    $132 = HEAP32[_stderr>>2]|0;
                    __THREW__ = 0;
                    (invoke_iiii(355,($132|0),(272|0),($vararg_buffer1|0))|0);
                    $133 = __THREW__; __THREW__ = 0;
                    $134 = $133&1;
                    if ($134) {
                     label = 24;
                     break L8;
                    }
                    $0 = -1;
                    $5 = 1;
                   }
                  } while(0);
                  __THREW__ = 0;
                  invoke_vi(358,($vfree|0));
                  $218 = __THREW__; __THREW__ = 0;
                  $219 = $218&1;
                  if ($219) {
                   label = 23;
                   break L5;
                  }
                  __ZN6ikfast14IkSolutionListIdED2Ev($solutions);
                  $224 = $0;
                  STACKTOP = sp;return ($224|0);
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    if ((label|0) == 24) {
     $118 = ___cxa_find_matching_catch()|0;
     $119 = tempRet0;
     $3 = $118;
     $4 = $119;
    }
    __THREW__ = 0;
    invoke_vi(358,($vfree|0));
    $220 = __THREW__; __THREW__ = 0;
    $221 = $220&1;
    if ($221) {
     $227 = ___cxa_find_matching_catch(0|0)|0;
     $228 = tempRet0;
     ___clang_call_terminate($227);
     // unreachable;
    } else {
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 23) {
  $116 = ___cxa_find_matching_catch()|0;
  $117 = tempRet0;
  $3 = $116;
  $4 = $117;
 }
 __THREW__ = 0;
 invoke_vi(1,($solutions|0));
 $222 = __THREW__; __THREW__ = 0;
 $223 = $222&1;
 if ($223) {
  $227 = ___cxa_find_matching_catch(0|0)|0;
  $228 = tempRet0;
  ___clang_call_terminate($227);
  // unreachable;
 }
 $225 = $3;
 $226 = $4;
 ___resumeException($225|0);
 // unreachable;
 return (0)|0;
}
function __Z5IKsind($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = (+Math_sin((+$1)));
 STACKTOP = sp;return (+$2);
}
function __Z5IKcosd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = (+Math_cos((+$1)));
 STACKTOP = sp;return (+$2);
}
function __ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($this,$eetrans,$eerot,$pfree,$solutions) {
 $this = $this|0;
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0.0, $1000 = 0.0, $1001 = 0, $1002 = 0.0, $1003 = 0.0, $1004 = 0.0, $1005 = 0.0, $1006 = 0, $1007 = 0, $1008 = 0.0, $1009 = 0.0, $101 = 0.0, $1010 = 0.0, $1011 = 0.0, $1012 = 0, $1013 = 0.0, $1014 = 0.0;
 var $1015 = 0.0, $1016 = 0.0, $1017 = 0, $1018 = 0.0, $1019 = 0.0, $102 = 0, $1020 = 0.0, $1021 = 0, $1022 = 0.0, $1023 = 0.0, $1024 = 0.0, $1025 = 0.0, $1026 = 0.0, $1027 = 0, $1028 = 0.0, $1029 = 0.0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0.0;
 var $1033 = 0.0, $1034 = 0, $1035 = 0, $1036 = 0.0, $1037 = 0.0, $1038 = 0, $1039 = 0, $104 = 0.0, $1040 = 0, $1041 = 0.0, $1042 = 0.0, $1043 = 0, $1044 = 0.0, $1045 = 0.0, $1046 = 0.0, $1047 = 0, $1048 = 0.0, $1049 = 0.0, $105 = 0.0, $1050 = 0.0;
 var $1051 = 0, $1052 = 0.0, $1053 = 0.0, $1054 = 0.0, $1055 = 0.0, $1056 = 0, $1057 = 0.0, $1058 = 0.0, $1059 = 0.0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0.0, $1065 = 0, $1066 = 0.0, $1067 = 0.0, $1068 = 0.0, $1069 = 0;
 var $107 = 0, $1070 = 0.0, $1071 = 0.0, $1072 = 0.0, $1073 = 0.0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0.0, $1078 = 0.0, $1079 = 0.0, $108 = 0.0, $1080 = 0.0, $1081 = 0.0, $1082 = 0.0, $1083 = 0.0, $1084 = 0.0, $1085 = 0.0, $1086 = 0.0, $1087 = 0;
 var $1088 = 0.0, $1089 = 0.0, $109 = 0, $1090 = 0.0, $1091 = 0, $1092 = 0.0, $1093 = 0.0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0.0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0;
 var $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0.0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0.0, $1116 = 0, $1117 = 0, $1118 = 0.0, $1119 = 0.0, $112 = 0, $1120 = 0.0, $1121 = 0, $1122 = 0;
 var $1123 = 0, $1124 = 0.0, $1125 = 0, $1126 = 0, $1127 = 0.0, $1128 = 0.0, $1129 = 0.0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0.0, $1140 = 0;
 var $1141 = 0.0, $1142 = 0, $1143 = 0, $1144 = 0.0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0.0, $1149 = 0, $115 = 0.0, $1150 = 0.0, $1151 = 0.0, $1152 = 0.0, $1153 = 0.0, $1154 = 0, $1155 = 0.0, $1156 = 0.0, $1157 = 0.0, $1158 = 0.0, $1159 = 0;
 var $116 = 0, $1160 = 0.0, $1161 = 0.0, $1162 = 0.0, $1163 = 0.0, $1164 = 0, $1165 = 0.0, $1166 = 0.0, $1167 = 0.0, $1168 = 0, $1169 = 0.0, $117 = 0, $1170 = 0.0, $1171 = 0.0, $1172 = 0.0, $1173 = 0.0, $1174 = 0, $1175 = 0.0, $1176 = 0.0, $1177 = 0.0;
 var $1178 = 0, $1179 = 0.0, $118 = 0.0, $1180 = 0.0, $1181 = 0, $1182 = 0, $1183 = 0.0, $1184 = 0.0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0.0, $1190 = 0, $1191 = 0, $1192 = 0.0, $1193 = 0.0, $1194 = 0, $1195 = 0.0;
 var $1196 = 0.0, $1197 = 0, $1198 = 0.0, $1199 = 0.0, $12 = 0, $120 = 0, $1200 = 0.0, $1201 = 0.0, $1202 = 0.0, $1203 = 0.0, $1204 = 0.0, $1205 = 0.0, $1206 = 0.0, $1207 = 0, $1208 = 0.0, $1209 = 0.0, $121 = 0, $1210 = 0.0, $1211 = 0, $1212 = 0.0;
 var $1213 = 0.0, $1214 = 0.0, $1215 = 0, $1216 = 0.0, $1217 = 0.0, $1218 = 0, $1219 = 0.0, $122 = 0.0, $1220 = 0.0, $1221 = 0, $1222 = 0.0, $1223 = 0.0, $1224 = 0.0, $1225 = 0, $1226 = 0.0, $1227 = 0.0, $1228 = 0.0, $1229 = 0, $123 = 0.0, $1230 = 0.0;
 var $1231 = 0.0, $1232 = 0.0, $1233 = 0, $1234 = 0.0, $1235 = 0.0, $1236 = 0, $1237 = 0, $1238 = 0.0, $1239 = 0.0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0.0, $1243 = 0.0, $1244 = 0, $1245 = 0, $1246 = 0.0, $1247 = 0.0, $1248 = 0, $1249 = 0;
 var $125 = 0, $1250 = 0.0, $1251 = 0.0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0.0, $1258 = 0, $1259 = 0.0, $126 = 0.0, $1260 = 0.0, $1261 = 0, $1262 = 0.0, $1263 = 0.0, $1264 = 0.0, $1265 = 0, $1266 = 0.0, $1267 = 0.0;
 var $1268 = 0.0, $1269 = 0, $127 = 0.0, $1270 = 0.0, $1271 = 0.0, $1272 = 0.0, $1273 = 0.0, $1274 = 0.0, $1275 = 0.0, $1276 = 0, $1277 = 0, $1278 = 0.0, $1279 = 0.0, $128 = 0, $1280 = 0.0, $1281 = 0, $1282 = 0.0, $1283 = 0.0, $1284 = 0.0, $1285 = 0.0;
 var $1286 = 0, $1287 = 0.0, $1288 = 0.0, $1289 = 0.0, $129 = 0, $1290 = 0.0, $1291 = 0, $1292 = 0.0, $1293 = 0.0, $1294 = 0.0, $1295 = 0.0, $1296 = 0.0, $1297 = 0, $1298 = 0.0, $1299 = 0.0, $13 = 0, $130 = 0.0, $1300 = 0, $1301 = 0, $1302 = 0.0;
 var $1303 = 0.0, $1304 = 0, $1305 = 0, $1306 = 0.0, $1307 = 0.0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0.0, $1312 = 0.0, $1313 = 0, $1314 = 0.0, $1315 = 0.0, $1316 = 0.0, $1317 = 0, $1318 = 0.0, $1319 = 0.0, $132 = 0, $1320 = 0.0;
 var $1321 = 0, $1322 = 0.0, $1323 = 0.0, $1324 = 0.0, $1325 = 0.0, $1326 = 0, $1327 = 0.0, $1328 = 0.0, $1329 = 0.0, $133 = 0.0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0.0, $1335 = 0.0, $1336 = 0, $1337 = 0.0, $1338 = 0, $1339 = 0.0;
 var $134 = 0.0, $1340 = 0.0, $1341 = 0.0, $1342 = 0.0, $1343 = 0.0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0.0, $1348 = 0.0, $1349 = 0.0, $135 = 0.0, $1350 = 0.0, $1351 = 0.0, $1352 = 0.0, $1353 = 0.0, $1354 = 0.0, $1355 = 0.0, $1356 = 0.0, $1357 = 0;
 var $1358 = 0.0, $1359 = 0.0, $136 = 0, $1360 = 0.0, $1361 = 0, $1362 = 0.0, $1363 = 0.0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0;
 var $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0.0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0.0, $1386 = 0, $1387 = 0, $1388 = 0.0, $1389 = 0.0, $139 = 0, $1390 = 0.0, $1391 = 0, $1392 = 0, $1393 = 0;
 var $1394 = 0.0, $1395 = 0, $1396 = 0, $1397 = 0.0, $1398 = 0.0, $1399 = 0.0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0.0, $1410 = 0;
 var $1411 = 0.0, $1412 = 0, $1413 = 0, $1414 = 0.0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0.0, $1419 = 0, $142 = 0, $1420 = 0.0, $1421 = 0.0, $1422 = 0.0, $1423 = 0.0, $1424 = 0, $1425 = 0.0, $1426 = 0.0, $1427 = 0.0, $1428 = 0.0, $1429 = 0;
 var $143 = 0, $1430 = 0.0, $1431 = 0.0, $1432 = 0.0, $1433 = 0.0, $1434 = 0, $1435 = 0.0, $1436 = 0.0, $1437 = 0.0, $1438 = 0, $1439 = 0.0, $144 = 0.0, $1440 = 0.0, $1441 = 0.0, $1442 = 0.0, $1443 = 0.0, $1444 = 0, $1445 = 0.0, $1446 = 0.0, $1447 = 0.0;
 var $1448 = 0, $1449 = 0.0, $145 = 0, $1450 = 0.0, $1451 = 0, $1452 = 0, $1453 = 0.0, $1454 = 0.0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0.0, $1463 = 0, $1464 = 0.0, $1465 = 0.0;
 var $1466 = 0.0, $1467 = 0, $1468 = 0.0, $1469 = 0.0, $147 = 0.0, $1470 = 0.0, $1471 = 0.0, $1472 = 0.0, $1473 = 0, $1474 = 0.0, $1475 = 0.0, $1476 = 0.0, $1477 = 0, $1478 = 0.0, $1479 = 0.0, $148 = 0, $1480 = 0.0, $1481 = 0, $1482 = 0.0, $1483 = 0;
 var $1484 = 0.0, $1485 = 0, $1486 = 0.0, $1487 = 0.0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0.0, $1491 = 0.0, $1492 = 0, $1493 = 0, $1494 = 0.0, $1495 = 0.0, $1496 = 0, $1497 = 0, $1498 = 0.0, $1499 = 0.0, $15 = 0, $150 = 0.0, $1500 = 0;
 var $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0.0, $1506 = 0, $1507 = 0.0, $1508 = 0.0, $1509 = 0, $151 = 0, $1510 = 0.0, $1511 = 0.0, $1512 = 0.0, $1513 = 0, $1514 = 0.0, $1515 = 0.0, $1516 = 0.0, $1517 = 0, $1518 = 0.0, $1519 = 0.0;
 var $152 = 0, $1520 = 0.0, $1521 = 0.0, $1522 = 0.0, $1523 = 0.0, $1524 = 0, $1525 = 0, $1526 = 0.0, $1527 = 0.0, $1528 = 0, $1529 = 0.0, $153 = 0.0, $1530 = 0.0, $1531 = 0.0, $1532 = 0.0, $1533 = 0.0, $1534 = 0, $1535 = 0.0, $1536 = 0.0, $1537 = 0.0;
 var $1538 = 0.0, $1539 = 0, $154 = 0, $1540 = 0.0, $1541 = 0.0, $1542 = 0, $1543 = 0.0, $1544 = 0.0, $1545 = 0.0, $1546 = 0.0, $1547 = 0, $1548 = 0.0, $1549 = 0.0, $155 = 0, $1550 = 0.0, $1551 = 0.0, $1552 = 0.0, $1553 = 0, $1554 = 0.0, $1555 = 0.0;
 var $1556 = 0, $1557 = 0, $1558 = 0.0, $1559 = 0.0, $156 = 0.0, $1560 = 0, $1561 = 0, $1562 = 0.0, $1563 = 0.0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0.0, $157 = 0, $1570 = 0, $1571 = 0.0, $1572 = 0.0, $1573 = 0;
 var $1574 = 0.0, $1575 = 0.0, $1576 = 0.0, $1577 = 0.0, $1578 = 0, $1579 = 0.0, $158 = 0, $1580 = 0.0, $1581 = 0.0, $1582 = 0.0, $1583 = 0, $1584 = 0.0, $1585 = 0.0, $1586 = 0.0, $1587 = 0.0, $1588 = 0, $1589 = 0, $159 = 0.0, $1590 = 0.0, $1591 = 0.0;
 var $1592 = 0, $1593 = 0.0, $1594 = 0.0, $1595 = 0.0, $1596 = 0, $1597 = 0.0, $1598 = 0.0, $1599 = 0.0, $16 = 0, $160 = 0, $1600 = 0.0, $1601 = 0.0, $1602 = 0.0, $1603 = 0, $1604 = 0.0, $1605 = 0.0, $1606 = 0.0, $1607 = 0, $1608 = 0.0, $1609 = 0.0;
 var $161 = 0, $1610 = 0.0, $1611 = 0, $1612 = 0.0, $1613 = 0.0, $1614 = 0.0, $1615 = 0.0, $1616 = 0.0, $1617 = 0, $1618 = 0.0, $1619 = 0.0, $162 = 0.0, $1620 = 0, $1621 = 0, $1622 = 0.0, $1623 = 0.0, $1624 = 0, $1625 = 0, $1626 = 0.0, $1627 = 0.0;
 var $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0.0, $1632 = 0.0, $1633 = 0, $1634 = 0.0, $1635 = 0, $1636 = 0.0, $1637 = 0.0, $1638 = 0.0, $1639 = 0, $164 = 0, $1640 = 0.0, $1641 = 0.0, $1642 = 0.0, $1643 = 0.0, $1644 = 0, $1645 = 0;
 var $1646 = 0, $1647 = 0, $1648 = 0.0, $1649 = 0.0, $165 = 0.0, $1650 = 0, $1651 = 0.0, $1652 = 0.0, $1653 = 0.0, $1654 = 0, $1655 = 0.0, $1656 = 0.0, $1657 = 0.0, $1658 = 0.0, $1659 = 0.0, $166 = 0, $1660 = 0, $1661 = 0.0, $1662 = 0.0, $1663 = 0.0;
 var $1664 = 0, $1665 = 0.0, $1666 = 0.0, $1667 = 0.0, $1668 = 0, $1669 = 0.0, $167 = 0, $1670 = 0.0, $1671 = 0.0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0.0, $1676 = 0.0, $1677 = 0.0, $1678 = 0.0, $1679 = 0.0, $168 = 0.0, $1680 = 0.0, $1681 = 0.0;
 var $1682 = 0.0, $1683 = 0.0, $1684 = 0.0, $1685 = 0, $1686 = 0.0, $1687 = 0.0, $1688 = 0.0, $1689 = 0, $169 = 0, $1690 = 0.0, $1691 = 0.0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0.0;
 var $170 = 0, $1700 = 0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0.0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0.0, $1714 = 0, $1715 = 0, $1716 = 0.0, $1717 = 0.0;
 var $1718 = 0.0, $1719 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0.0, $1723 = 0, $1724 = 0, $1725 = 0.0, $1726 = 0.0, $1727 = 0.0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0;
 var $1736 = 0, $1737 = 0, $1738 = 0, $1739 = 0.0, $174 = 0.0, $1740 = 0, $1741 = 0, $1742 = 0.0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0.0, $1747 = 0, $1748 = 0.0, $1749 = 0.0, $175 = 0.0, $1750 = 0.0, $1751 = 0.0, $1752 = 0, $1753 = 0.0;
 var $1754 = 0.0, $1755 = 0.0, $1756 = 0, $1757 = 0.0, $1758 = 0.0, $1759 = 0.0, $176 = 0, $1760 = 0, $1761 = 0.0, $1762 = 0.0, $1763 = 0.0, $1764 = 0.0, $1765 = 0, $1766 = 0.0, $1767 = 0.0, $1768 = 0.0, $1769 = 0.0, $177 = 0.0, $1770 = 0.0, $1771 = 0.0;
 var $1772 = 0.0, $1773 = 0.0, $1774 = 0.0, $1775 = 0, $1776 = 0.0, $1777 = 0.0, $1778 = 0.0, $1779 = 0, $178 = 0.0, $1780 = 0.0, $1781 = 0.0, $1782 = 0.0, $1783 = 0, $1784 = 0.0, $1785 = 0.0, $1786 = 0.0, $1787 = 0.0, $1788 = 0.0, $1789 = 0.0, $179 = 0;
 var $1790 = 0, $1791 = 0.0, $1792 = 0.0, $1793 = 0, $1794 = 0, $1795 = 0.0, $1796 = 0.0, $1797 = 0, $1798 = 0, $1799 = 0.0, $18 = 0, $180 = 0.0, $1800 = 0.0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0.0;
 var $1808 = 0.0, $1809 = 0, $181 = 0.0, $1810 = 0.0, $1811 = 0.0, $1812 = 0, $1813 = 0.0, $1814 = 0.0, $1815 = 0.0, $1816 = 0.0, $1817 = 0, $1818 = 0.0, $1819 = 0.0, $182 = 0, $1820 = 0.0, $1821 = 0, $1822 = 0.0, $1823 = 0.0, $1824 = 0, $1825 = 0.0;
 var $1826 = 0.0, $1827 = 0.0, $1828 = 0.0, $1829 = 0.0, $183 = 0.0, $1830 = 0, $1831 = 0.0, $1832 = 0.0, $1833 = 0.0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0.0, $1839 = 0.0, $184 = 0, $1840 = 0, $1841 = 0.0, $1842 = 0, $1843 = 0.0;
 var $1844 = 0.0, $1845 = 0.0, $1846 = 0.0, $1847 = 0.0, $1848 = 0, $1849 = 0, $185 = 0.0, $1850 = 0, $1851 = 0.0, $1852 = 0.0, $1853 = 0.0, $1854 = 0.0, $1855 = 0.0, $1856 = 0.0, $1857 = 0.0, $1858 = 0.0, $1859 = 0.0, $186 = 0.0, $1860 = 0.0, $1861 = 0;
 var $1862 = 0.0, $1863 = 0.0, $1864 = 0.0, $1865 = 0, $1866 = 0.0, $1867 = 0.0, $1868 = 0, $1869 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0.0;
 var $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0, $1889 = 0.0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0.0, $1893 = 0.0, $1894 = 0.0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0.0;
 var $1899 = 0, $19 = 0, $190 = 0.0, $1900 = 0, $1901 = 0.0, $1902 = 0.0, $1903 = 0.0, $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0.0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0.0;
 var $1916 = 0, $1917 = 0, $1918 = 0.0, $1919 = 0, $192 = 0.0, $1920 = 0, $1921 = 0, $1922 = 0.0, $1923 = 0, $1924 = 0.0, $1925 = 0.0, $1926 = 0.0, $1927 = 0.0, $1928 = 0, $1929 = 0.0, $193 = 0, $1930 = 0.0, $1931 = 0.0, $1932 = 0, $1933 = 0.0;
 var $1934 = 0.0, $1935 = 0.0, $1936 = 0, $1937 = 0.0, $1938 = 0.0, $1939 = 0.0, $194 = 0.0, $1940 = 0.0, $1941 = 0, $1942 = 0.0, $1943 = 0.0, $1944 = 0.0, $1945 = 0.0, $1946 = 0.0, $1947 = 0.0, $1948 = 0.0, $1949 = 0.0, $195 = 0, $1950 = 0.0, $1951 = 0;
 var $1952 = 0.0, $1953 = 0.0, $1954 = 0.0, $1955 = 0, $1956 = 0.0, $1957 = 0.0, $1958 = 0.0, $1959 = 0, $196 = 0.0, $1960 = 0.0, $1961 = 0.0, $1962 = 0.0, $1963 = 0.0, $1964 = 0.0, $1965 = 0.0, $1966 = 0, $1967 = 0.0, $1968 = 0.0, $1969 = 0, $197 = 0.0;
 var $1970 = 0, $1971 = 0.0, $1972 = 0.0, $1973 = 0, $1974 = 0, $1975 = 0.0, $1976 = 0.0, $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0.0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0.0, $1985 = 0.0, $1986 = 0, $1987 = 0.0, $1988 = 0.0;
 var $1989 = 0.0, $199 = 0, $1990 = 0.0, $1991 = 0.0, $1992 = 0.0, $1993 = 0, $1994 = 0.0, $1995 = 0.0, $1996 = 0.0, $1997 = 0, $1998 = 0.0, $1999 = 0.0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0.0, $2001 = 0, $2002 = 0.0, $2003 = 0.0, $2004 = 0;
 var $2005 = 0.0, $2006 = 0.0, $2007 = 0, $2008 = 0.0, $2009 = 0, $201 = 0.0, $2010 = 0.0, $2011 = 0.0, $2012 = 0.0, $2013 = 0, $2014 = 0.0, $2015 = 0.0, $2016 = 0, $2017 = 0, $2018 = 0.0, $2019 = 0.0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0.0;
 var $2023 = 0.0, $2024 = 0, $2025 = 0, $2026 = 0.0, $2027 = 0.0, $2028 = 0, $2029 = 0, $203 = 0.0, $2030 = 0, $2031 = 0, $2032 = 0, $2033 = 0.0, $2034 = 0, $2035 = 0.0, $2036 = 0.0, $2037 = 0, $2038 = 0.0, $2039 = 0.0, $204 = 0.0, $2040 = 0.0;
 var $2041 = 0.0, $2042 = 0, $2043 = 0.0, $2044 = 0.0, $2045 = 0.0, $2046 = 0.0, $2047 = 0, $2048 = 0.0, $2049 = 0.0, $205 = 0, $2050 = 0.0, $2051 = 0.0, $2052 = 0, $2053 = 0, $2054 = 0.0, $2055 = 0.0, $2056 = 0, $2057 = 0.0, $2058 = 0.0, $2059 = 0.0;
 var $206 = 0.0, $2060 = 0.0, $2061 = 0.0, $2062 = 0, $2063 = 0.0, $2064 = 0.0, $2065 = 0.0, $2066 = 0.0, $2067 = 0, $2068 = 0.0, $2069 = 0.0, $207 = 0, $2070 = 0.0, $2071 = 0, $2072 = 0.0, $2073 = 0.0, $2074 = 0.0, $2075 = 0, $2076 = 0.0, $2077 = 0.0;
 var $2078 = 0.0, $2079 = 0.0, $208 = 0.0, $2080 = 0.0, $2081 = 0, $2082 = 0.0, $2083 = 0.0, $2084 = 0, $2085 = 0, $2086 = 0.0, $2087 = 0.0, $2088 = 0, $2089 = 0, $209 = 0.0, $2090 = 0.0, $2091 = 0.0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0;
 var $2096 = 0, $2097 = 0.0, $2098 = 0, $2099 = 0.0, $21 = 0, $210 = 0.0, $2100 = 0.0, $2101 = 0, $2102 = 0.0, $2103 = 0.0, $2104 = 0.0, $2105 = 0, $2106 = 0.0, $2107 = 0.0, $2108 = 0.0, $2109 = 0, $211 = 0, $2110 = 0.0, $2111 = 0.0, $2112 = 0;
 var $2113 = 0.0, $2114 = 0.0, $2115 = 0.0, $2116 = 0.0, $2117 = 0, $2118 = 0.0, $2119 = 0.0, $212 = 0.0, $2120 = 0.0, $2121 = 0.0, $2122 = 0, $2123 = 0.0, $2124 = 0.0, $2125 = 0, $2126 = 0.0, $2127 = 0.0, $2128 = 0.0, $2129 = 0, $213 = 0, $2130 = 0.0;
 var $2131 = 0.0, $2132 = 0.0, $2133 = 0.0, $2134 = 0.0, $2135 = 0.0, $2136 = 0.0, $2137 = 0, $2138 = 0, $2139 = 0.0, $214 = 0.0, $2140 = 0.0, $2141 = 0.0, $2142 = 0.0, $2143 = 0.0, $2144 = 0.0, $2145 = 0, $2146 = 0.0, $2147 = 0.0, $2148 = 0, $2149 = 0;
 var $215 = 0.0, $2150 = 0.0, $2151 = 0.0, $2152 = 0, $2153 = 0, $2154 = 0.0, $2155 = 0.0, $2156 = 0, $2157 = 0, $2158 = 0, $2159 = 0.0, $216 = 0.0, $2160 = 0.0, $2161 = 0, $2162 = 0.0, $2163 = 0, $2164 = 0.0, $2165 = 0.0, $2166 = 0.0, $2167 = 0;
 var $2168 = 0.0, $2169 = 0.0, $217 = 0, $2170 = 0.0, $2171 = 0.0, $2172 = 0, $2173 = 0, $2174 = 0, $2175 = 0, $2176 = 0.0, $2177 = 0.0, $2178 = 0, $2179 = 0.0, $218 = 0, $2180 = 0.0, $2181 = 0.0, $2182 = 0, $2183 = 0.0, $2184 = 0.0, $2185 = 0.0;
 var $2186 = 0.0, $2187 = 0.0, $2188 = 0, $2189 = 0.0, $219 = 0.0, $2190 = 0.0, $2191 = 0, $2192 = 0.0, $2193 = 0.0, $2194 = 0.0, $2195 = 0.0, $2196 = 0, $2197 = 0.0, $2198 = 0.0, $2199 = 0.0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0;
 var $2203 = 0.0, $2204 = 0.0, $2205 = 0.0, $2206 = 0.0, $2207 = 0.0, $2208 = 0.0, $2209 = 0.0, $221 = 0.0, $2210 = 0.0, $2211 = 0.0, $2212 = 0.0, $2213 = 0, $2214 = 0.0, $2215 = 0.0, $2216 = 0.0, $2217 = 0, $2218 = 0.0, $2219 = 0.0, $222 = 0.0, $2220 = 0;
 var $2221 = 0, $2222 = 0, $2223 = 0, $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0;
 var $224 = 0.0, $2240 = 0, $2241 = 0.0, $2242 = 0, $2243 = 0, $2244 = 0.0, $2245 = 0.0, $2246 = 0.0, $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0.0, $2251 = 0, $2252 = 0, $2253 = 0.0, $2254 = 0.0, $2255 = 0.0, $2256 = 0, $2257 = 0;
 var $2258 = 0, $2259 = 0, $226 = 0.0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0, $2266 = 0, $2267 = 0.0, $2268 = 0, $2269 = 0, $227 = 0.0, $2270 = 0.0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0.0, $2275 = 0;
 var $2276 = 0.0, $2277 = 0.0, $2278 = 0.0, $2279 = 0.0, $228 = 0.0, $2280 = 0, $2281 = 0.0, $2282 = 0.0, $2283 = 0.0, $2284 = 0, $2285 = 0.0, $2286 = 0.0, $2287 = 0.0, $2288 = 0, $2289 = 0.0, $229 = 0, $2290 = 0.0, $2291 = 0.0, $2292 = 0.0, $2293 = 0;
 var $2294 = 0.0, $2295 = 0.0, $2296 = 0.0, $2297 = 0.0, $2298 = 0.0, $2299 = 0.0, $23 = 0.0, $230 = 0.0, $2300 = 0.0, $2301 = 0.0, $2302 = 0.0, $2303 = 0, $2304 = 0.0, $2305 = 0.0, $2306 = 0.0, $2307 = 0, $2308 = 0.0, $2309 = 0.0, $231 = 0, $2310 = 0.0;
 var $2311 = 0.0, $2312 = 0.0, $2313 = 0.0, $2314 = 0, $2315 = 0.0, $2316 = 0.0, $2317 = 0.0, $2318 = 0, $2319 = 0.0, $232 = 0.0, $2320 = 0.0, $2321 = 0, $2322 = 0, $2323 = 0.0, $2324 = 0.0, $2325 = 0, $2326 = 0, $2327 = 0.0, $2328 = 0.0, $2329 = 0;
 var $233 = 0.0, $2330 = 0, $2331 = 0, $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0.0, $2336 = 0.0, $2337 = 0, $2338 = 0.0, $2339 = 0, $234 = 0.0, $2340 = 0.0, $2341 = 0.0, $2342 = 0.0, $2343 = 0, $2344 = 0.0, $2345 = 0.0, $2346 = 0.0, $2347 = 0.0;
 var $2348 = 0, $2349 = 0, $235 = 0, $2350 = 0, $2351 = 0, $2352 = 0.0, $2353 = 0.0, $2354 = 0, $2355 = 0.0, $2356 = 0.0, $2357 = 0.0, $2358 = 0.0, $2359 = 0, $236 = 0, $2360 = 0.0, $2361 = 0.0, $2362 = 0.0, $2363 = 0, $2364 = 0.0, $2365 = 0.0;
 var $2366 = 0, $2367 = 0.0, $2368 = 0.0, $2369 = 0.0, $237 = 0.0, $2370 = 0.0, $2371 = 0.0, $2372 = 0, $2373 = 0.0, $2374 = 0.0, $2375 = 0.0, $2376 = 0, $2377 = 0, $2378 = 0, $2379 = 0.0, $238 = 0, $2380 = 0.0, $2381 = 0.0, $2382 = 0.0, $2383 = 0.0;
 var $2384 = 0.0, $2385 = 0.0, $2386 = 0.0, $2387 = 0.0, $2388 = 0.0, $2389 = 0, $239 = 0.0, $2390 = 0.0, $2391 = 0.0, $2392 = 0.0, $2393 = 0, $2394 = 0.0, $2395 = 0.0, $2396 = 0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0, $240 = 0.0, $2400 = 0;
 var $2401 = 0, $2402 = 0, $2403 = 0, $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0, $2408 = 0, $2409 = 0, $241 = 0, $2410 = 0, $2411 = 0, $2412 = 0, $2413 = 0, $2414 = 0, $2415 = 0, $2416 = 0, $2417 = 0.0, $2418 = 0, $2419 = 0;
 var $242 = 0.0, $2420 = 0.0, $2421 = 0.0, $2422 = 0.0, $2423 = 0, $2424 = 0, $2425 = 0, $2426 = 0.0, $2427 = 0, $2428 = 0, $2429 = 0.0, $243 = 0, $2430 = 0.0, $2431 = 0.0, $2432 = 0, $2433 = 0, $2434 = 0, $2435 = 0, $2436 = 0, $2437 = 0;
 var $2438 = 0, $2439 = 0, $244 = 0.0, $2440 = 0, $2441 = 0, $2442 = 0, $2443 = 0.0, $2444 = 0, $2445 = 0, $2446 = 0.0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0.0, $2450 = 0.0, $2451 = 0, $2452 = 0.0, $2453 = 0.0, $2454 = 0.0, $2455 = 0.0;
 var $2456 = 0, $2457 = 0.0, $2458 = 0.0, $2459 = 0.0, $246 = 0.0, $2460 = 0, $2461 = 0.0, $2462 = 0.0, $2463 = 0.0, $2464 = 0, $2465 = 0.0, $2466 = 0.0, $2467 = 0.0, $2468 = 0.0, $2469 = 0, $247 = 0, $2470 = 0.0, $2471 = 0.0, $2472 = 0.0, $2473 = 0.0;
 var $2474 = 0.0, $2475 = 0.0, $2476 = 0.0, $2477 = 0.0, $2478 = 0.0, $2479 = 0, $248 = 0.0, $2480 = 0.0, $2481 = 0.0, $2482 = 0.0, $2483 = 0, $2484 = 0.0, $2485 = 0.0, $2486 = 0.0, $2487 = 0, $2488 = 0.0, $2489 = 0.0, $249 = 0, $2490 = 0.0, $2491 = 0.0;
 var $2492 = 0.0, $2493 = 0.0, $2494 = 0, $2495 = 0.0, $2496 = 0.0, $2497 = 0, $2498 = 0, $2499 = 0.0, $25 = 0, $250 = 0.0, $2500 = 0.0, $2501 = 0, $2502 = 0, $2503 = 0.0, $2504 = 0.0, $2505 = 0, $2506 = 0, $2507 = 0, $2508 = 0, $2509 = 0;
 var $251 = 0.0, $2510 = 0, $2511 = 0, $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0.0, $2516 = 0.0, $2517 = 0, $2518 = 0.0, $2519 = 0.0, $252 = 0.0, $2520 = 0, $2521 = 0.0, $2522 = 0.0, $2523 = 0, $2524 = 0.0, $2525 = 0.0, $2526 = 0, $2527 = 0.0;
 var $2528 = 0.0, $2529 = 0, $253 = 0, $2530 = 0.0, $2531 = 0.0, $2532 = 0, $2533 = 0.0, $2534 = 0.0, $2535 = 0.0, $2536 = 0.0, $2537 = 0.0, $2538 = 0, $2539 = 0.0, $254 = 0, $2540 = 0.0, $2541 = 0.0, $2542 = 0.0, $2543 = 0.0, $2544 = 0, $2545 = 0.0;
 var $2546 = 0.0, $2547 = 0.0, $2548 = 0.0, $2549 = 0.0, $255 = 0.0, $2550 = 0, $2551 = 0.0, $2552 = 0.0, $2553 = 0.0, $2554 = 0, $2555 = 0.0, $2556 = 0.0, $2557 = 0.0, $2558 = 0.0, $2559 = 0.0, $256 = 0.0, $2560 = 0, $2561 = 0.0, $2562 = 0.0, $2563 = 0.0;
 var $2564 = 0.0, $2565 = 0, $2566 = 0.0, $2567 = 0.0, $2568 = 0.0, $2569 = 0, $257 = 0.0, $2570 = 0, $2571 = 0, $2572 = 0.0, $2573 = 0.0, $2574 = 0, $2575 = 0.0, $2576 = 0, $2577 = 0.0, $2578 = 0.0, $2579 = 0.0, $258 = 0.0, $2580 = 0, $2581 = 0.0;
 var $2582 = 0.0, $2583 = 0.0, $2584 = 0.0, $2585 = 0.0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0.0, $259 = 0, $2590 = 0.0, $2591 = 0.0, $2592 = 0.0, $2593 = 0.0, $2594 = 0.0, $2595 = 0.0, $2596 = 0.0, $2597 = 0.0, $2598 = 0.0, $2599 = 0, $26 = 0;
 var $260 = 0.0, $2600 = 0.0, $2601 = 0.0, $2602 = 0.0, $2603 = 0, $2604 = 0.0, $2605 = 0.0, $2606 = 0, $2607 = 0, $2608 = 0, $2609 = 0, $261 = 0, $2610 = 0, $2611 = 0, $2612 = 0, $2613 = 0, $2614 = 0, $2615 = 0, $2616 = 0, $2617 = 0;
 var $2618 = 0, $2619 = 0, $262 = 0.0, $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0.0, $2628 = 0, $2629 = 0, $263 = 0.0, $2630 = 0.0, $2631 = 0.0, $2632 = 0.0, $2633 = 0, $2634 = 0, $2635 = 0;
 var $2636 = 0.0, $2637 = 0, $2638 = 0, $2639 = 0.0, $264 = 0.0, $2640 = 0.0, $2641 = 0.0, $2642 = 0, $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0, $2653 = 0.0;
 var $2654 = 0, $2655 = 0, $2656 = 0.0, $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0.0, $2661 = 0, $2662 = 0.0, $2663 = 0.0, $2664 = 0.0, $2665 = 0.0, $2666 = 0, $2667 = 0.0, $2668 = 0.0, $2669 = 0, $267 = 0.0, $2670 = 0.0, $2671 = 0.0;
 var $2672 = 0, $2673 = 0.0, $2674 = 0, $2675 = 0.0, $2676 = 0.0, $2677 = 0, $2678 = 0.0, $2679 = 0.0, $268 = 0, $2680 = 0, $2681 = 0.0, $2682 = 0.0, $2683 = 0.0, $2684 = 0, $2685 = 0.0, $2686 = 0.0, $2687 = 0.0, $2688 = 0.0, $2689 = 0.0, $269 = 0.0;
 var $2690 = 0, $2691 = 0.0, $2692 = 0.0, $2693 = 0.0, $2694 = 0.0, $2695 = 0, $2696 = 0.0, $2697 = 0.0, $2698 = 0.0, $2699 = 0.0, $27 = 0, $270 = 0.0, $2700 = 0, $2701 = 0.0, $2702 = 0.0, $2703 = 0.0, $2704 = 0.0, $2705 = 0, $2706 = 0.0, $2707 = 0.0;
 var $2708 = 0.0, $2709 = 0.0, $271 = 0, $2710 = 0, $2711 = 0.0, $2712 = 0, $2713 = 0.0, $2714 = 0.0, $2715 = 0.0, $2716 = 0.0, $2717 = 0.0, $2718 = 0, $2719 = 0, $272 = 0.0, $2720 = 0.0, $2721 = 0.0, $2722 = 0.0, $2723 = 0.0, $2724 = 0.0, $2725 = 0.0;
 var $2726 = 0.0, $2727 = 0.0, $2728 = 0.0, $2729 = 0, $273 = 0.0, $2730 = 0.0, $2731 = 0.0, $2732 = 0.0, $2733 = 0.0, $2734 = 0, $2735 = 0.0, $2736 = 0.0, $2737 = 0.0, $2738 = 0.0, $2739 = 0.0, $274 = 0.0, $2740 = 0.0, $2741 = 0.0, $2742 = 0.0, $2743 = 0.0;
 var $2744 = 0.0, $2745 = 0.0, $2746 = 0.0, $2747 = 0, $2748 = 0.0, $2749 = 0.0, $275 = 0.0, $2750 = 0.0, $2751 = 0, $2752 = 0, $2753 = 0.0, $2754 = 0.0, $2755 = 0.0, $2756 = 0.0, $2757 = 0, $2758 = 0.0, $2759 = 0.0, $276 = 0.0, $2760 = 0.0, $2761 = 0.0;
 var $2762 = 0.0, $2763 = 0.0, $2764 = 0.0, $2765 = 0, $2766 = 0.0, $2767 = 0.0, $2768 = 0.0, $2769 = 0.0, $277 = 0, $2770 = 0.0, $2771 = 0, $2772 = 0.0, $2773 = 0.0, $2774 = 0, $2775 = 0, $2776 = 0.0, $2777 = 0.0, $2778 = 0, $2779 = 0, $278 = 0;
 var $2780 = 0.0, $2781 = 0.0, $2782 = 0, $2783 = 0, $2784 = 0.0, $2785 = 0.0, $2786 = 0, $2787 = 0, $2788 = 0.0, $2789 = 0.0, $279 = 0.0, $2790 = 0, $2791 = 0, $2792 = 0, $2793 = 0, $2794 = 0, $2795 = 0, $2796 = 0.0, $2797 = 0.0, $2798 = 0;
 var $2799 = 0.0, $28 = 0, $280 = 0.0, $2800 = 0.0, $2801 = 0, $2802 = 0.0, $2803 = 0.0, $2804 = 0, $2805 = 0.0, $2806 = 0.0, $2807 = 0, $2808 = 0.0, $2809 = 0.0, $281 = 0.0, $2810 = 0, $2811 = 0.0, $2812 = 0.0, $2813 = 0.0, $2814 = 0.0, $2815 = 0;
 var $2816 = 0.0, $2817 = 0.0, $2818 = 0.0, $2819 = 0.0, $282 = 0.0, $2820 = 0.0, $2821 = 0, $2822 = 0.0, $2823 = 0.0, $2824 = 0.0, $2825 = 0, $2826 = 0.0, $2827 = 0.0, $2828 = 0.0, $2829 = 0.0, $283 = 0, $2830 = 0.0, $2831 = 0, $2832 = 0.0, $2833 = 0.0;
 var $2834 = 0.0, $2835 = 0, $2836 = 0.0, $2837 = 0.0, $2838 = 0.0, $2839 = 0.0, $284 = 0.0, $2840 = 0, $2841 = 0.0, $2842 = 0.0, $2843 = 0.0, $2844 = 0.0, $2845 = 0.0, $2846 = 0, $2847 = 0.0, $2848 = 0.0, $2849 = 0.0, $285 = 0, $2850 = 0, $2851 = 0;
 var $2852 = 0, $2853 = 0.0, $2854 = 0.0, $2855 = 0, $2856 = 0.0, $2857 = 0, $2858 = 0.0, $2859 = 0.0, $286 = 0.0, $2860 = 0.0, $2861 = 0, $2862 = 0.0, $2863 = 0.0, $2864 = 0.0, $2865 = 0.0, $2866 = 0.0, $2867 = 0, $2868 = 0, $2869 = 0, $287 = 0.0;
 var $2870 = 0.0, $2871 = 0.0, $2872 = 0.0, $2873 = 0.0, $2874 = 0.0, $2875 = 0.0, $2876 = 0.0, $2877 = 0.0, $2878 = 0.0, $2879 = 0.0, $288 = 0.0, $2880 = 0, $2881 = 0.0, $2882 = 0.0, $2883 = 0.0, $2884 = 0, $2885 = 0.0, $2886 = 0.0, $2887 = 0, $2888 = 0;
 var $2889 = 0, $289 = 0, $2890 = 0, $2891 = 0, $2892 = 0, $2893 = 0, $2894 = 0, $2895 = 0, $2896 = 0, $2897 = 0, $2898 = 0, $2899 = 0, $29 = 0.0, $290 = 0, $2900 = 0, $2901 = 0, $2902 = 0, $2903 = 0, $2904 = 0, $2905 = 0;
 var $2906 = 0, $2907 = 0, $2908 = 0.0, $2909 = 0, $291 = 0.0, $2910 = 0, $2911 = 0.0, $2912 = 0.0, $2913 = 0.0, $2914 = 0, $2915 = 0, $2916 = 0, $2917 = 0.0, $2918 = 0, $2919 = 0, $292 = 0.0, $2920 = 0.0, $2921 = 0.0, $2922 = 0.0, $2923 = 0;
 var $2924 = 0, $2925 = 0, $2926 = 0, $2927 = 0, $2928 = 0, $2929 = 0, $293 = 0.0, $2930 = 0, $2931 = 0, $2932 = 0, $2933 = 0, $2934 = 0.0, $2935 = 0, $2936 = 0, $2937 = 0.0, $2938 = 0, $2939 = 0, $294 = 0.0, $2940 = 0, $2941 = 0.0;
 var $2942 = 0, $2943 = 0.0, $2944 = 0.0, $2945 = 0.0, $2946 = 0.0, $2947 = 0, $2948 = 0.0, $2949 = 0.0, $295 = 0, $2950 = 0, $2951 = 0.0, $2952 = 0.0, $2953 = 0, $2954 = 0.0, $2955 = 0, $2956 = 0.0, $2957 = 0.0, $2958 = 0, $2959 = 0.0, $296 = 0.0;
 var $2960 = 0.0, $2961 = 0, $2962 = 0.0, $2963 = 0.0, $2964 = 0.0, $2965 = 0, $2966 = 0.0, $2967 = 0.0, $2968 = 0.0, $2969 = 0.0, $297 = 0, $2970 = 0.0, $2971 = 0, $2972 = 0.0, $2973 = 0.0, $2974 = 0.0, $2975 = 0.0, $2976 = 0, $2977 = 0.0, $2978 = 0.0;
 var $2979 = 0.0, $298 = 0.0, $2980 = 0.0, $2981 = 0, $2982 = 0.0, $2983 = 0, $2984 = 0.0, $2985 = 0.0, $2986 = 0, $2987 = 0.0, $2988 = 0.0, $2989 = 0.0, $299 = 0.0, $2990 = 0.0, $2991 = 0.0, $2992 = 0.0, $2993 = 0.0, $2994 = 0, $2995 = 0.0, $2996 = 0.0;
 var $2997 = 0.0, $2998 = 0.0, $2999 = 0, $3 = 0, $30 = 0, $300 = 0.0, $3000 = 0, $3001 = 0.0, $3002 = 0.0, $3003 = 0.0, $3004 = 0.0, $3005 = 0.0, $3006 = 0.0, $3007 = 0.0, $3008 = 0.0, $3009 = 0.0, $301 = 0, $3010 = 0, $3011 = 0.0, $3012 = 0.0;
 var $3013 = 0.0, $3014 = 0.0, $3015 = 0, $3016 = 0.0, $3017 = 0.0, $3018 = 0.0, $3019 = 0.0, $302 = 0, $3020 = 0.0, $3021 = 0, $3022 = 0.0, $3023 = 0.0, $3024 = 0.0, $3025 = 0.0, $3026 = 0.0, $3027 = 0.0, $3028 = 0.0, $3029 = 0.0, $303 = 0.0, $3030 = 0.0;
 var $3031 = 0.0, $3032 = 0, $3033 = 0, $3034 = 0.0, $3035 = 0.0, $3036 = 0.0, $3037 = 0.0, $3038 = 0, $3039 = 0.0, $304 = 0, $3040 = 0.0, $3041 = 0.0, $3042 = 0.0, $3043 = 0.0, $3044 = 0.0, $3045 = 0.0, $3046 = 0.0, $3047 = 0, $3048 = 0.0, $3049 = 0.0;
 var $305 = 0.0, $3050 = 0.0, $3051 = 0.0, $3052 = 0, $3053 = 0.0, $3054 = 0.0, $3055 = 0, $3056 = 0, $3057 = 0.0, $3058 = 0.0, $3059 = 0, $306 = 0.0, $3060 = 0, $3061 = 0.0, $3062 = 0.0, $3063 = 0, $3064 = 0, $3065 = 0.0, $3066 = 0.0, $3067 = 0;
 var $3068 = 0, $3069 = 0.0, $307 = 0, $3070 = 0.0, $3071 = 0, $3072 = 0, $3073 = 0, $3074 = 0, $3075 = 0, $3076 = 0, $3077 = 0.0, $3078 = 0.0, $3079 = 0, $308 = 0.0, $3080 = 0.0, $3081 = 0.0, $3082 = 0, $3083 = 0.0, $3084 = 0.0, $3085 = 0;
 var $3086 = 0.0, $3087 = 0.0, $3088 = 0, $3089 = 0.0, $309 = 0.0, $3090 = 0.0, $3091 = 0, $3092 = 0.0, $3093 = 0.0, $3094 = 0.0, $3095 = 0.0, $3096 = 0.0, $3097 = 0, $3098 = 0.0, $3099 = 0, $31 = 0, $310 = 0.0, $3100 = 0.0, $3101 = 0.0, $3102 = 0.0;
 var $3103 = 0.0, $3104 = 0.0, $3105 = 0, $3106 = 0, $3107 = 0, $3108 = 0, $3109 = 0.0, $311 = 0.0, $3110 = 0.0, $3111 = 0.0, $3112 = 0, $3113 = 0.0, $3114 = 0.0, $3115 = 0.0, $3116 = 0.0, $3117 = 0.0, $3118 = 0, $3119 = 0.0, $312 = 0.0, $3120 = 0.0;
 var $3121 = 0.0, $3122 = 0.0, $3123 = 0, $3124 = 0.0, $3125 = 0.0, $3126 = 0.0, $3127 = 0.0, $3128 = 0, $3129 = 0.0, $313 = 0, $3130 = 0.0, $3131 = 0.0, $3132 = 0.0, $3133 = 0.0, $3134 = 0, $3135 = 0.0, $3136 = 0.0, $3137 = 0.0, $3138 = 0.0, $3139 = 0.0;
 var $314 = 0, $3140 = 0, $3141 = 0, $3142 = 0, $3143 = 0.0, $3144 = 0.0, $3145 = 0.0, $3146 = 0.0, $3147 = 0.0, $3148 = 0.0, $3149 = 0.0, $315 = 0.0, $3150 = 0.0, $3151 = 0.0, $3152 = 0.0, $3153 = 0, $3154 = 0.0, $3155 = 0.0, $3156 = 0.0, $3157 = 0;
 var $3158 = 0.0, $3159 = 0.0, $316 = 0.0, $3160 = 0, $3161 = 0, $3162 = 0, $3163 = 0, $3164 = 0, $3165 = 0, $3166 = 0, $3167 = 0, $3168 = 0, $3169 = 0, $317 = 0.0, $3170 = 0, $3171 = 0, $3172 = 0, $3173 = 0, $3174 = 0, $3175 = 0;
 var $3176 = 0, $3177 = 0, $3178 = 0, $3179 = 0, $318 = 0.0, $3180 = 0, $3181 = 0.0, $3182 = 0, $3183 = 0, $3184 = 0.0, $3185 = 0.0, $3186 = 0.0, $3187 = 0, $3188 = 0, $3189 = 0, $319 = 0, $3190 = 0.0, $3191 = 0, $3192 = 0, $3193 = 0.0;
 var $3194 = 0.0, $3195 = 0.0, $3196 = 0, $3197 = 0, $3198 = 0, $3199 = 0, $32 = 0, $320 = 0.0, $3200 = 0, $3201 = 0, $3202 = 0, $3203 = 0, $3204 = 0, $3205 = 0, $3206 = 0, $3207 = 0.0, $3208 = 0, $3209 = 0, $321 = 0, $3210 = 0.0;
 var $3211 = 0, $3212 = 0, $3213 = 0, $3214 = 0.0, $3215 = 0, $3216 = 0.0, $3217 = 0.0, $3218 = 0.0, $3219 = 0.0, $322 = 0.0, $3220 = 0, $3221 = 0.0, $3222 = 0.0, $3223 = 0, $3224 = 0.0, $3225 = 0.0, $3226 = 0, $3227 = 0.0, $3228 = 0, $3229 = 0.0;
 var $323 = 0.0, $3230 = 0.0, $3231 = 0, $3232 = 0.0, $3233 = 0.0, $3234 = 0, $3235 = 0.0, $3236 = 0.0, $3237 = 0.0, $3238 = 0, $3239 = 0.0, $324 = 0.0, $3240 = 0.0, $3241 = 0.0, $3242 = 0.0, $3243 = 0.0, $3244 = 0, $3245 = 0.0, $3246 = 0.0, $3247 = 0.0;
 var $3248 = 0.0, $3249 = 0, $325 = 0, $3250 = 0.0, $3251 = 0.0, $3252 = 0.0, $3253 = 0.0, $3254 = 0, $3255 = 0.0, $3256 = 0.0, $3257 = 0.0, $3258 = 0, $3259 = 0.0, $326 = 0, $3260 = 0.0, $3261 = 0.0, $3262 = 0.0, $3263 = 0.0, $3264 = 0, $3265 = 0.0;
 var $3266 = 0, $3267 = 0.0, $3268 = 0.0, $3269 = 0.0, $327 = 0.0, $3270 = 0.0, $3271 = 0.0, $3272 = 0, $3273 = 0, $3274 = 0.0, $3275 = 0.0, $3276 = 0.0, $3277 = 0.0, $3278 = 0, $3279 = 0.0, $328 = 0.0, $3280 = 0.0, $3281 = 0.0, $3282 = 0.0, $3283 = 0.0;
 var $3284 = 0.0, $3285 = 0.0, $3286 = 0.0, $3287 = 0.0, $3288 = 0, $3289 = 0.0, $329 = 0.0, $3290 = 0.0, $3291 = 0.0, $3292 = 0.0, $3293 = 0.0, $3294 = 0.0, $3295 = 0.0, $3296 = 0.0, $3297 = 0, $3298 = 0.0, $3299 = 0.0, $33 = 0, $330 = 0.0, $3300 = 0.0;
 var $3301 = 0.0, $3302 = 0.0, $3303 = 0.0, $3304 = 0.0, $3305 = 0, $3306 = 0.0, $3307 = 0.0, $3308 = 0, $3309 = 0.0, $331 = 0, $3310 = 0.0, $3311 = 0.0, $3312 = 0.0, $3313 = 0.0, $3314 = 0, $3315 = 0.0, $3316 = 0.0, $3317 = 0.0, $3318 = 0.0, $3319 = 0;
 var $332 = 0.0, $3320 = 0.0, $3321 = 0.0, $3322 = 0.0, $3323 = 0.0, $3324 = 0.0, $3325 = 0, $3326 = 0.0, $3327 = 0.0, $3328 = 0, $3329 = 0, $333 = 0, $3330 = 0.0, $3331 = 0.0, $3332 = 0, $3333 = 0, $3334 = 0.0, $3335 = 0.0, $3336 = 0, $3337 = 0;
 var $3338 = 0.0, $3339 = 0.0, $334 = 0.0, $3340 = 0, $3341 = 0, $3342 = 0.0, $3343 = 0.0, $3344 = 0, $3345 = 0, $3346 = 0, $3347 = 0, $3348 = 0, $3349 = 0, $335 = 0.0, $3350 = 0, $3351 = 0, $3352 = 0.0, $3353 = 0, $3354 = 0.0, $3355 = 0;
 var $3356 = 0, $3357 = 0, $3358 = 0.0, $3359 = 0.0, $336 = 0.0, $3360 = 0, $3361 = 0.0, $3362 = 0, $3363 = 0.0, $3364 = 0.0, $3365 = 0, $3366 = 0.0, $3367 = 0, $3368 = 0.0, $3369 = 0.0, $337 = 0, $3370 = 0.0, $3371 = 0, $3372 = 0, $3373 = 0.0;
 var $3374 = 0, $3375 = 0.0, $3376 = 0.0, $3377 = 0, $3378 = 0.0, $3379 = 0, $338 = 0, $3380 = 0.0, $3381 = 0.0, $3382 = 0.0, $3383 = 0.0, $3384 = 0.0, $3385 = 0, $3386 = 0, $3387 = 0, $3388 = 0.0, $3389 = 0.0, $339 = 0.0, $3390 = 0, $3391 = 0.0;
 var $3392 = 0.0, $3393 = 0, $3394 = 0.0, $3395 = 0.0, $3396 = 0.0, $3397 = 0.0, $3398 = 0.0, $3399 = 0.0, $34 = 0, $340 = 0.0, $3400 = 0.0, $3401 = 0.0, $3402 = 0.0, $3403 = 0.0, $3404 = 0.0, $3405 = 0.0, $3406 = 0.0, $3407 = 0.0, $3408 = 0.0, $3409 = 0.0;
 var $341 = 0.0, $3410 = 0.0, $3411 = 0, $3412 = 0, $3413 = 0.0, $3414 = 0.0, $3415 = 0, $3416 = 0, $3417 = 0.0, $3418 = 0.0, $3419 = 0, $342 = 0.0, $3420 = 0.0, $3421 = 0, $3422 = 0.0, $3423 = 0.0, $3424 = 0.0, $3425 = 0, $3426 = 0.0, $3427 = 0.0;
 var $3428 = 0, $3429 = 0.0, $343 = 0, $3430 = 0, $3431 = 0, $3432 = 0.0, $3433 = 0.0, $3434 = 0, $3435 = 0.0, $3436 = 0, $3437 = 0, $3438 = 0.0, $3439 = 0.0, $344 = 0.0, $3440 = 0, $3441 = 0, $3442 = 0, $3443 = 0, $3444 = 0, $3445 = 0;
 var $3446 = 0, $3447 = 0, $3448 = 0, $3449 = 0, $345 = 0, $3450 = 0, $3451 = 0, $3452 = 0, $3453 = 0, $3454 = 0, $3455 = 0, $3456 = 0, $3457 = 0, $3458 = 0, $3459 = 0, $346 = 0.0, $3460 = 0, $3461 = 0, $3462 = 0.0, $3463 = 0;
 var $3464 = 0, $3465 = 0.0, $3466 = 0.0, $3467 = 0.0, $3468 = 0, $3469 = 0, $347 = 0.0, $3470 = 0, $3471 = 0.0, $3472 = 0, $3473 = 0, $3474 = 0.0, $3475 = 0.0, $3476 = 0.0, $3477 = 0, $3478 = 0, $3479 = 0, $348 = 0.0, $3480 = 0, $3481 = 0;
 var $3482 = 0, $3483 = 0, $3484 = 0, $3485 = 0, $3486 = 0, $3487 = 0, $3488 = 0.0, $3489 = 0, $349 = 0, $3490 = 0, $3491 = 0.0, $3492 = 0, $3493 = 0, $3494 = 0, $3495 = 0.0, $3496 = 0, $3497 = 0, $3498 = 0.0, $3499 = 0.0, $35 = 0.0;
 var $350 = 0, $3500 = 0, $3501 = 0.0, $3502 = 0, $3503 = 0.0, $3504 = 0.0, $3505 = 0, $3506 = 0.0, $3507 = 0, $3508 = 0.0, $3509 = 0.0, $351 = 0.0, $3510 = 0, $3511 = 0.0, $3512 = 0.0, $3513 = 0, $3514 = 0.0, $3515 = 0.0, $3516 = 0.0, $3517 = 0.0;
 var $3518 = 0.0, $3519 = 0.0, $352 = 0.0, $3520 = 0.0, $3521 = 0.0, $3522 = 0.0, $3523 = 0.0, $3524 = 0.0, $3525 = 0, $3526 = 0.0, $3527 = 0.0, $3528 = 0.0, $3529 = 0.0, $353 = 0.0, $3530 = 0.0, $3531 = 0.0, $3532 = 0.0, $3533 = 0.0, $3534 = 0.0, $3535 = 0.0;
 var $3536 = 0.0, $3537 = 0, $3538 = 0.0, $3539 = 0.0, $354 = 0.0, $3540 = 0.0, $3541 = 0.0, $3542 = 0.0, $3543 = 0.0, $3544 = 0, $3545 = 0.0, $3546 = 0.0, $3547 = 0.0, $3548 = 0.0, $3549 = 0.0, $355 = 0, $3550 = 0.0, $3551 = 0.0, $3552 = 0.0, $3553 = 0.0;
 var $3554 = 0.0, $3555 = 0.0, $3556 = 0.0, $3557 = 0, $3558 = 0, $3559 = 0.0, $356 = 0.0, $3560 = 0.0, $3561 = 0.0, $3562 = 0.0, $3563 = 0, $3564 = 0.0, $3565 = 0.0, $3566 = 0, $3567 = 0, $3568 = 0.0, $3569 = 0.0, $357 = 0, $3570 = 0, $3571 = 0;
 var $3572 = 0.0, $3573 = 0.0, $3574 = 0, $3575 = 0, $3576 = 0.0, $3577 = 0, $3578 = 0.0, $3579 = 0.0, $358 = 0.0, $3580 = 0, $3581 = 0.0, $3582 = 0, $3583 = 0.0, $3584 = 0.0, $3585 = 0, $3586 = 0.0, $3587 = 0.0, $3588 = 0, $3589 = 0.0, $359 = 0.0;
 var $3590 = 0, $3591 = 0.0, $3592 = 0.0, $3593 = 0, $3594 = 0.0, $3595 = 0.0, $3596 = 0, $3597 = 0.0, $3598 = 0.0, $3599 = 0.0, $36 = 0, $360 = 0.0, $3600 = 0.0, $3601 = 0.0, $3602 = 0.0, $3603 = 0.0, $3604 = 0.0, $3605 = 0.0, $3606 = 0.0, $3607 = 0;
 var $3608 = 0.0, $3609 = 0.0, $361 = 0, $3610 = 0.0, $3611 = 0.0, $3612 = 0.0, $3613 = 0.0, $3614 = 0.0, $3615 = 0.0, $3616 = 0.0, $3617 = 0.0, $3618 = 0.0, $3619 = 0.0, $362 = 0, $3620 = 0.0, $3621 = 0.0, $3622 = 0.0, $3623 = 0.0, $3624 = 0.0, $3625 = 0.0;
 var $3626 = 0.0, $3627 = 0.0, $3628 = 0.0, $3629 = 0.0, $363 = 0, $3630 = 0.0, $3631 = 0.0, $3632 = 0.0, $3633 = 0, $3634 = 0.0, $3635 = 0.0, $3636 = 0.0, $3637 = 0, $3638 = 0.0, $3639 = 0.0, $364 = 0.0, $3640 = 0.0, $3641 = 0.0, $3642 = 0.0, $3643 = 0.0;
 var $3644 = 0.0, $3645 = 0.0, $3646 = 0, $3647 = 0.0, $3648 = 0.0, $3649 = 0, $365 = 0.0, $3650 = 0.0, $3651 = 0.0, $3652 = 0.0, $3653 = 0.0, $3654 = 0, $3655 = 0.0, $3656 = 0.0, $3657 = 0.0, $3658 = 0, $3659 = 0.0, $366 = 0.0, $3660 = 0.0, $3661 = 0.0;
 var $3662 = 0.0, $3663 = 0, $3664 = 0.0, $3665 = 0, $3666 = 0.0, $3667 = 0.0, $3668 = 0.0, $3669 = 0.0, $367 = 0.0, $3670 = 0.0, $3671 = 0.0, $3672 = 0, $3673 = 0.0, $3674 = 0.0, $3675 = 0, $3676 = 0, $3677 = 0.0, $3678 = 0.0, $3679 = 0, $368 = 0;
 var $3680 = 0, $3681 = 0.0, $3682 = 0.0, $3683 = 0, $3684 = 0, $3685 = 0.0, $3686 = 0, $3687 = 0.0, $3688 = 0.0, $3689 = 0, $369 = 0.0, $3690 = 0.0, $3691 = 0, $3692 = 0.0, $3693 = 0.0, $3694 = 0, $3695 = 0.0, $3696 = 0.0, $3697 = 0, $3698 = 0.0;
 var $3699 = 0.0, $37 = 0, $370 = 0, $3700 = 0, $3701 = 0.0, $3702 = 0, $3703 = 0.0, $3704 = 0.0, $3705 = 0, $3706 = 0.0, $3707 = 0.0, $3708 = 0, $3709 = 0.0, $371 = 0, $3710 = 0.0, $3711 = 0.0, $3712 = 0.0, $3713 = 0.0, $3714 = 0.0, $3715 = 0.0;
 var $3716 = 0, $3717 = 0.0, $3718 = 0.0, $3719 = 0.0, $372 = 0.0, $3720 = 0.0, $3721 = 0.0, $3722 = 0.0, $3723 = 0.0, $3724 = 0.0, $3725 = 0.0, $3726 = 0, $3727 = 0.0, $3728 = 0.0, $3729 = 0.0, $373 = 0.0, $3730 = 0, $3731 = 0.0, $3732 = 0.0, $3733 = 0.0;
 var $3734 = 0.0, $3735 = 0, $3736 = 0.0, $3737 = 0.0, $3738 = 0.0, $3739 = 0.0, $374 = 0.0, $3740 = 0.0, $3741 = 0, $3742 = 0.0, $3743 = 0.0, $3744 = 0.0, $3745 = 0.0, $3746 = 0.0, $3747 = 0.0, $3748 = 0.0, $3749 = 0, $375 = 0.0, $3750 = 0.0, $3751 = 0.0;
 var $3752 = 0.0, $3753 = 0, $3754 = 0.0, $3755 = 0.0, $3756 = 0.0, $3757 = 0.0, $3758 = 0.0, $3759 = 0.0, $376 = 0.0, $3760 = 0.0, $3761 = 0.0, $3762 = 0.0, $3763 = 0.0, $3764 = 0.0, $3765 = 0.0, $3766 = 0, $3767 = 0.0, $3768 = 0.0, $3769 = 0.0, $377 = 0;
 var $3770 = 0.0, $3771 = 0.0, $3772 = 0.0, $3773 = 0.0, $3774 = 0.0, $3775 = 0.0, $3776 = 0.0, $3777 = 0.0, $3778 = 0.0, $3779 = 0.0, $378 = 0.0, $3780 = 0.0, $3781 = 0.0, $3782 = 0.0, $3783 = 0.0, $3784 = 0.0, $3785 = 0, $3786 = 0.0, $3787 = 0.0, $3788 = 0;
 var $3789 = 0, $379 = 0.0, $3790 = 0.0, $3791 = 0.0, $3792 = 0, $3793 = 0, $3794 = 0.0, $3795 = 0.0, $3796 = 0, $3797 = 0, $3798 = 0, $3799 = 0.0, $38 = 0, $380 = 0, $3800 = 0, $3801 = 0.0, $3802 = 0.0, $3803 = 0, $3804 = 0.0, $3805 = 0.0;
 var $3806 = 0, $3807 = 0.0, $3808 = 0.0, $3809 = 0, $381 = 0.0, $3810 = 0.0, $3811 = 0, $3812 = 0.0, $3813 = 0.0, $3814 = 0, $3815 = 0.0, $3816 = 0.0, $3817 = 0, $3818 = 0.0, $3819 = 0.0, $382 = 0.0, $3820 = 0.0, $3821 = 0.0, $3822 = 0.0, $3823 = 0.0;
 var $3824 = 0.0, $3825 = 0.0, $3826 = 0.0, $3827 = 0.0, $3828 = 0.0, $3829 = 0, $383 = 0, $3830 = 0.0, $3831 = 0.0, $3832 = 0.0, $3833 = 0.0, $3834 = 0.0, $3835 = 0, $3836 = 0.0, $3837 = 0.0, $3838 = 0.0, $3839 = 0, $384 = 0.0, $3840 = 0.0, $3841 = 0.0;
 var $3842 = 0.0, $3843 = 0.0, $3844 = 0, $3845 = 0.0, $3846 = 0.0, $3847 = 0.0, $3848 = 0.0, $3849 = 0.0, $385 = 0, $3850 = 0, $3851 = 0.0, $3852 = 0.0, $3853 = 0.0, $3854 = 0, $3855 = 0, $3856 = 0, $3857 = 0, $3858 = 0.0, $3859 = 0.0, $386 = 0;
 var $3860 = 0, $3861 = 0.0, $3862 = 0.0, $3863 = 0.0, $3864 = 0.0, $3865 = 0.0, $3866 = 0.0, $3867 = 0.0, $3868 = 0.0, $3869 = 0.0, $387 = 0, $3870 = 0.0, $3871 = 0.0, $3872 = 0.0, $3873 = 0.0, $3874 = 0.0, $3875 = 0.0, $3876 = 0.0, $3877 = 0.0, $3878 = 0.0;
 var $3879 = 0, $388 = 0, $3880 = 0, $3881 = 0, $3882 = 0.0, $3883 = 0.0, $3884 = 0.0, $3885 = 0.0, $3886 = 0.0, $3887 = 0.0, $3888 = 0.0, $3889 = 0.0, $389 = 0, $3890 = 0.0, $3891 = 0.0, $3892 = 0, $3893 = 0.0, $3894 = 0.0, $3895 = 0.0, $3896 = 0;
 var $3897 = 0.0, $3898 = 0.0, $3899 = 0, $39 = 0, $390 = 0, $3900 = 0, $3901 = 0, $3902 = 0, $3903 = 0, $3904 = 0, $3905 = 0, $3906 = 0, $3907 = 0, $3908 = 0, $3909 = 0, $391 = 0, $3910 = 0, $3911 = 0, $3912 = 0, $3913 = 0;
 var $3914 = 0, $3915 = 0, $3916 = 0, $3917 = 0, $3918 = 0, $3919 = 0, $392 = 0, $3920 = 0.0, $3921 = 0, $3922 = 0, $3923 = 0.0, $3924 = 0.0, $3925 = 0.0, $3926 = 0, $3927 = 0, $3928 = 0, $3929 = 0.0, $393 = 0, $3930 = 0, $3931 = 0;
 var $3932 = 0.0, $3933 = 0.0, $3934 = 0.0, $3935 = 0, $3936 = 0, $3937 = 0, $3938 = 0, $3939 = 0, $394 = 0, $3940 = 0, $3941 = 0, $3942 = 0, $3943 = 0, $3944 = 0, $3945 = 0, $3946 = 0.0, $3947 = 0, $3948 = 0, $3949 = 0, $395 = 0;
 var $3950 = 0.0, $3951 = 0, $3952 = 0, $3953 = 0, $3954 = 0.0, $3955 = 0, $3956 = 0, $3957 = 0.0, $3958 = 0.0, $3959 = 0, $396 = 0, $3960 = 0.0, $3961 = 0.0, $3962 = 0, $3963 = 0.0, $3964 = 0.0, $3965 = 0, $3966 = 0.0, $3967 = 0, $3968 = 0.0;
 var $3969 = 0.0, $397 = 0, $3970 = 0, $3971 = 0.0, $3972 = 0, $3973 = 0.0, $3974 = 0.0, $3975 = 0, $3976 = 0.0, $3977 = 0.0, $3978 = 0.0, $3979 = 0.0, $398 = 0, $3980 = 0, $3981 = 0.0, $3982 = 0.0, $3983 = 0.0, $3984 = 0.0, $3985 = 0.0, $3986 = 0.0;
 var $3987 = 0.0, $3988 = 0.0, $3989 = 0.0, $399 = 0, $3990 = 0.0, $3991 = 0.0, $3992 = 0.0, $3993 = 0.0, $3994 = 0, $3995 = 0.0, $3996 = 0.0, $3997 = 0.0, $3998 = 0.0, $3999 = 0.0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0.0, $4001 = 0.0, $4002 = 0.0;
 var $4003 = 0.0, $4004 = 0.0, $4005 = 0.0, $4006 = 0.0, $4007 = 0, $4008 = 0.0, $4009 = 0.0, $401 = 0, $4010 = 0.0, $4011 = 0.0, $4012 = 0, $4013 = 0.0, $4014 = 0.0, $4015 = 0.0, $4016 = 0.0, $4017 = 0.0, $4018 = 0.0, $4019 = 0.0, $402 = 0, $4020 = 0.0;
 var $4021 = 0.0, $4022 = 0.0, $4023 = 0.0, $4024 = 0.0, $4025 = 0.0, $4026 = 0, $4027 = 0.0, $4028 = 0.0, $4029 = 0.0, $403 = 0, $4030 = 0.0, $4031 = 0.0, $4032 = 0.0, $4033 = 0.0, $4034 = 0.0, $4035 = 0.0, $4036 = 0, $4037 = 0.0, $4038 = 0.0, $4039 = 0.0;
 var $404 = 0, $4040 = 0.0, $4041 = 0.0, $4042 = 0.0, $4043 = 0, $4044 = 0.0, $4045 = 0.0, $4046 = 0.0, $4047 = 0.0, $4048 = 0.0, $4049 = 0.0, $405 = 0, $4050 = 0.0, $4051 = 0.0, $4052 = 0.0, $4053 = 0.0, $4054 = 0.0, $4055 = 0.0, $4056 = 0.0, $4057 = 0.0;
 var $4058 = 0.0, $4059 = 0.0, $406 = 0, $4060 = 0, $4061 = 0.0, $4062 = 0.0, $4063 = 0, $4064 = 0, $4065 = 0.0, $4066 = 0.0, $4067 = 0, $4068 = 0, $4069 = 0.0, $407 = 0.0, $4070 = 0.0, $4071 = 0, $4072 = 0, $4073 = 0.0, $4074 = 0.0, $4075 = 0;
 var $4076 = 0, $4077 = 0.0, $4078 = 0.0, $4079 = 0, $408 = 0, $4080 = 0, $4081 = 0, $4082 = 0, $4083 = 0, $4084 = 0, $4085 = 0.0, $4086 = 0, $4087 = 0.0, $4088 = 0.0, $4089 = 0, $409 = 0, $4090 = 0.0, $4091 = 0.0, $4092 = 0, $4093 = 0.0;
 var $4094 = 0, $4095 = 0.0, $4096 = 0.0, $4097 = 0, $4098 = 0.0, $4099 = 0.0, $41 = 0, $410 = 0.0, $4100 = 0.0, $4101 = 0.0, $4102 = 0.0, $4103 = 0.0, $4104 = 0, $4105 = 0.0, $4106 = 0.0, $4107 = 0.0, $4108 = 0.0, $4109 = 0.0, $411 = 0.0, $4110 = 0.0;
 var $4111 = 0.0, $4112 = 0, $4113 = 0.0, $4114 = 0.0, $4115 = 0, $4116 = 0.0, $4117 = 0.0, $4118 = 0.0, $4119 = 0, $412 = 0.0, $4120 = 0.0, $4121 = 0.0, $4122 = 0.0, $4123 = 0.0, $4124 = 0, $4125 = 0.0, $4126 = 0.0, $4127 = 0.0, $4128 = 0, $4129 = 0.0;
 var $413 = 0, $4130 = 0, $4131 = 0.0, $4132 = 0.0, $4133 = 0.0, $4134 = 0.0, $4135 = 0, $4136 = 0, $4137 = 0, $4138 = 0.0, $4139 = 0.0, $414 = 0, $4140 = 0, $4141 = 0.0, $4142 = 0.0, $4143 = 0, $4144 = 0.0, $4145 = 0.0, $4146 = 0.0, $4147 = 0.0;
 var $4148 = 0.0, $4149 = 0.0, $415 = 0, $4150 = 0.0, $4151 = 0.0, $4152 = 0.0, $4153 = 0.0, $4154 = 0.0, $4155 = 0.0, $4156 = 0.0, $4157 = 0.0, $4158 = 0.0, $4159 = 0.0, $416 = 0.0, $4160 = 0, $4161 = 0, $4162 = 0, $4163 = 0.0, $4164 = 0.0, $4165 = 0.0;
 var $4166 = 0.0, $4167 = 0.0, $4168 = 0.0, $4169 = 0.0, $417 = 0, $4170 = 0.0, $4171 = 0.0, $4172 = 0.0, $4173 = 0, $4174 = 0.0, $4175 = 0.0, $4176 = 0.0, $4177 = 0, $4178 = 0.0, $4179 = 0.0, $418 = 0, $4180 = 0, $4181 = 0, $4182 = 0, $4183 = 0;
 var $4184 = 0, $4185 = 0, $4186 = 0, $4187 = 0, $4188 = 0, $4189 = 0, $419 = 0.0, $4190 = 0, $4191 = 0, $4192 = 0, $4193 = 0, $4194 = 0, $4195 = 0, $4196 = 0, $4197 = 0, $4198 = 0, $4199 = 0, $42 = 0, $420 = 0.0, $4200 = 0;
 var $4201 = 0.0, $4202 = 0, $4203 = 0, $4204 = 0.0, $4205 = 0.0, $4206 = 0.0, $4207 = 0, $4208 = 0, $4209 = 0, $421 = 0.0, $4210 = 0.0, $4211 = 0, $4212 = 0, $4213 = 0.0, $4214 = 0.0, $4215 = 0.0, $4216 = 0, $4217 = 0, $4218 = 0, $4219 = 0;
 var $422 = 0, $4220 = 0, $4221 = 0, $4222 = 0, $4223 = 0, $4224 = 0, $4225 = 0, $4226 = 0, $4227 = 0.0, $4228 = 0, $4229 = 0, $423 = 0, $4230 = 0, $4231 = 0.0, $4232 = 0, $4233 = 0, $4234 = 0, $4235 = 0.0, $4236 = 0, $4237 = 0;
 var $4238 = 0.0, $4239 = 0.0, $424 = 0, $4240 = 0, $4241 = 0.0, $4242 = 0.0, $4243 = 0, $4244 = 0.0, $4245 = 0.0, $4246 = 0, $4247 = 0.0, $4248 = 0, $4249 = 0.0, $425 = 0, $4250 = 0.0, $4251 = 0, $4252 = 0.0, $4253 = 0, $4254 = 0.0, $4255 = 0.0;
 var $4256 = 0, $4257 = 0.0, $4258 = 0.0, $4259 = 0.0, $426 = 0, $4260 = 0.0, $4261 = 0, $4262 = 0.0, $4263 = 0.0, $4264 = 0.0, $4265 = 0.0, $4266 = 0.0, $4267 = 0.0, $4268 = 0.0, $4269 = 0.0, $427 = 0, $4270 = 0.0, $4271 = 0.0, $4272 = 0, $4273 = 0.0;
 var $4274 = 0.0, $4275 = 0.0, $4276 = 0.0, $4277 = 0.0, $4278 = 0, $4279 = 0.0, $428 = 0, $4280 = 0.0, $4281 = 0.0, $4282 = 0.0, $4283 = 0.0, $4284 = 0.0, $4285 = 0.0, $4286 = 0.0, $4287 = 0.0, $4288 = 0.0, $4289 = 0.0, $429 = 0, $4290 = 0.0, $4291 = 0.0;
 var $4292 = 0.0, $4293 = 0, $4294 = 0.0, $4295 = 0.0, $4296 = 0.0, $4297 = 0.0, $4298 = 0.0, $4299 = 0.0, $43 = 0, $430 = 0, $4300 = 0.0, $4301 = 0.0, $4302 = 0.0, $4303 = 0.0, $4304 = 0.0, $4305 = 0.0, $4306 = 0.0, $4307 = 0, $4308 = 0.0, $4309 = 0.0;
 var $431 = 0, $4310 = 0.0, $4311 = 0, $4312 = 0.0, $4313 = 0.0, $4314 = 0.0, $4315 = 0.0, $4316 = 0.0, $4317 = 0.0, $4318 = 0.0, $4319 = 0.0, $432 = 0, $4320 = 0.0, $4321 = 0.0, $4322 = 0.0, $4323 = 0.0, $4324 = 0, $4325 = 0.0, $4326 = 0.0, $4327 = 0.0;
 var $4328 = 0.0, $4329 = 0.0, $433 = 0.0, $4330 = 0.0, $4331 = 0.0, $4332 = 0.0, $4333 = 0.0, $4334 = 0.0, $4335 = 0.0, $4336 = 0.0, $4337 = 0.0, $4338 = 0.0, $4339 = 0.0, $434 = 0, $4340 = 0.0, $4341 = 0, $4342 = 0.0, $4343 = 0.0, $4344 = 0, $4345 = 0;
 var $4346 = 0.0, $4347 = 0.0, $4348 = 0, $4349 = 0, $435 = 0, $4350 = 0.0, $4351 = 0.0, $4352 = 0, $4353 = 0, $4354 = 0.0, $4355 = 0.0, $4356 = 0, $4357 = 0, $4358 = 0.0, $4359 = 0.0, $436 = 0, $4360 = 0, $4361 = 0, $4362 = 0, $4363 = 0;
 var $4364 = 0, $4365 = 0, $4366 = 0.0, $4367 = 0.0, $4368 = 0, $4369 = 0.0, $437 = 0.0, $4370 = 0, $4371 = 0.0, $4372 = 0.0, $4373 = 0, $4374 = 0.0, $4375 = 0, $4376 = 0.0, $4377 = 0.0, $4378 = 0, $4379 = 0.0, $438 = 0, $4380 = 0.0, $4381 = 0;
 var $4382 = 0.0, $4383 = 0.0, $4384 = 0.0, $4385 = 0.0, $4386 = 0, $4387 = 0, $4388 = 0, $4389 = 0.0, $439 = 0, $4390 = 0.0, $4391 = 0.0, $4392 = 0.0, $4393 = 0, $4394 = 0.0, $4395 = 0.0, $4396 = 0.0, $4397 = 0, $4398 = 0.0, $4399 = 0.0, $44 = 0;
 var $440 = 0, $4400 = 0.0, $4401 = 0.0, $4402 = 0.0, $4403 = 0.0, $4404 = 0.0, $4405 = 0.0, $4406 = 0.0, $4407 = 0.0, $4408 = 0.0, $4409 = 0.0, $441 = 0.0, $4410 = 0.0, $4411 = 0.0, $4412 = 0.0, $4413 = 0.0, $4414 = 0.0, $4415 = 0.0, $4416 = 0.0, $4417 = 0.0;
 var $4418 = 0.0, $4419 = 0.0, $442 = 0, $4420 = 0.0, $4421 = 0, $4422 = 0.0, $4423 = 0.0, $4424 = 0.0, $4425 = 0.0, $4426 = 0.0, $4427 = 0, $4428 = 0, $4429 = 0, $443 = 0, $4430 = 0.0, $4431 = 0.0, $4432 = 0.0, $4433 = 0.0, $4434 = 0.0, $4435 = 0.0;
 var $4436 = 0.0, $4437 = 0.0, $4438 = 0.0, $4439 = 0.0, $444 = 0.0, $4440 = 0, $4441 = 0.0, $4442 = 0.0, $4443 = 0.0, $4444 = 0, $4445 = 0.0, $4446 = 0.0, $4447 = 0, $4448 = 0, $4449 = 0, $445 = 0, $4450 = 0, $4451 = 0, $4452 = 0, $4453 = 0;
 var $4454 = 0, $4455 = 0, $4456 = 0, $4457 = 0, $4458 = 0, $4459 = 0, $446 = 0.0, $4460 = 0, $4461 = 0, $4462 = 0, $4463 = 0, $4464 = 0, $4465 = 0, $4466 = 0, $4467 = 0, $4468 = 0.0, $4469 = 0, $447 = 0.0, $4470 = 0, $4471 = 0.0;
 var $4472 = 0.0, $4473 = 0.0, $4474 = 0, $4475 = 0, $4476 = 0, $4477 = 0.0, $4478 = 0, $4479 = 0, $448 = 0, $4480 = 0.0, $4481 = 0.0, $4482 = 0.0, $4483 = 0, $4484 = 0, $4485 = 0, $4486 = 0, $4487 = 0, $4488 = 0, $4489 = 0, $449 = 0.0;
 var $4490 = 0, $4491 = 0, $4492 = 0, $4493 = 0, $4494 = 0.0, $4495 = 0, $4496 = 0, $4497 = 0, $4498 = 0.0, $4499 = 0, $45 = 0, $450 = 0, $4500 = 0, $4501 = 0, $4502 = 0.0, $4503 = 0, $4504 = 0, $4505 = 0.0, $4506 = 0.0, $4507 = 0;
 var $4508 = 0.0, $4509 = 0.0, $451 = 0.0, $4510 = 0, $4511 = 0.0, $4512 = 0.0, $4513 = 0, $4514 = 0.0, $4515 = 0, $4516 = 0.0, $4517 = 0.0, $4518 = 0, $4519 = 0.0, $452 = 0.0, $4520 = 0, $4521 = 0.0, $4522 = 0.0, $4523 = 0, $4524 = 0.0, $4525 = 0.0;
 var $4526 = 0.0, $4527 = 0.0, $4528 = 0, $4529 = 0.0, $453 = 0.0, $4530 = 0.0, $4531 = 0.0, $4532 = 0.0, $4533 = 0.0, $4534 = 0.0, $4535 = 0.0, $4536 = 0.0, $4537 = 0.0, $4538 = 0, $4539 = 0.0, $454 = 0, $4540 = 0.0, $4541 = 0.0, $4542 = 0.0, $4543 = 0.0;
 var $4544 = 0.0, $4545 = 0, $4546 = 0.0, $4547 = 0.0, $4548 = 0.0, $4549 = 0.0, $455 = 0.0, $4550 = 0.0, $4551 = 0.0, $4552 = 0.0, $4553 = 0.0, $4554 = 0.0, $4555 = 0.0, $4556 = 0.0, $4557 = 0.0, $4558 = 0.0, $4559 = 0.0, $456 = 0.0, $4560 = 0, $4561 = 0.0;
 var $4562 = 0.0, $4563 = 0.0, $4564 = 0.0, $4565 = 0.0, $4566 = 0.0, $4567 = 0.0, $4568 = 0.0, $4569 = 0.0, $457 = 0, $4570 = 0.0, $4571 = 0.0, $4572 = 0.0, $4573 = 0.0, $4574 = 0, $4575 = 0.0, $4576 = 0.0, $4577 = 0.0, $4578 = 0.0, $4579 = 0.0, $458 = 0.0;
 var $4580 = 0.0, $4581 = 0.0, $4582 = 0.0, $4583 = 0.0, $4584 = 0, $4585 = 0.0, $4586 = 0.0, $4587 = 0.0, $4588 = 0.0, $4589 = 0.0, $459 = 0.0, $4590 = 0.0, $4591 = 0, $4592 = 0.0, $4593 = 0.0, $4594 = 0.0, $4595 = 0.0, $4596 = 0.0, $4597 = 0.0, $4598 = 0.0;
 var $4599 = 0.0, $46 = 0, $460 = 0.0, $4600 = 0.0, $4601 = 0.0, $4602 = 0.0, $4603 = 0.0, $4604 = 0.0, $4605 = 0.0, $4606 = 0.0, $4607 = 0.0, $4608 = 0, $4609 = 0.0, $461 = 0, $4610 = 0.0, $4611 = 0, $4612 = 0, $4613 = 0.0, $4614 = 0.0, $4615 = 0;
 var $4616 = 0, $4617 = 0.0, $4618 = 0.0, $4619 = 0, $462 = 0.0, $4620 = 0, $4621 = 0.0, $4622 = 0.0, $4623 = 0, $4624 = 0, $4625 = 0.0, $4626 = 0.0, $4627 = 0, $4628 = 0, $4629 = 0, $463 = 0.0, $4630 = 0, $4631 = 0, $4632 = 0, $4633 = 0;
 var $4634 = 0, $4635 = 0, $4636 = 0, $4637 = 0, $4638 = 0, $4639 = 0, $464 = 0, $4640 = 0, $4641 = 0, $4642 = 0, $465 = 0, $466 = 0.0, $467 = 0.0, $468 = 0, $469 = 0, $47 = 0, $470 = 0.0, $471 = 0, $472 = 0.0, $473 = 0.0;
 var $474 = 0.0, $475 = 0, $476 = 0.0, $477 = 0, $478 = 0.0, $479 = 0.0, $48 = 0.0, $480 = 0.0, $481 = 0, $482 = 0.0, $483 = 0.0, $484 = 0.0, $485 = 0, $486 = 0.0, $487 = 0.0, $488 = 0.0, $489 = 0.0, $49 = 0, $490 = 0.0, $491 = 0;
 var $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0, $496 = 0.0, $497 = 0.0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0.0, $501 = 0.0, $502 = 0, $503 = 0, $504 = 0, $505 = 0.0, $506 = 0.0, $507 = 0.0, $508 = 0, $509 = 0.0;
 var $51 = 0, $510 = 0.0, $511 = 0.0, $512 = 0, $513 = 0, $514 = 0, $515 = 0.0, $516 = 0.0, $517 = 0.0, $518 = 0.0, $519 = 0.0, $52 = 0.0, $520 = 0, $521 = 0.0, $522 = 0, $523 = 0.0, $524 = 0.0, $525 = 0.0, $526 = 0.0, $527 = 0;
 var $528 = 0.0, $529 = 0.0, $53 = 0, $530 = 0.0, $531 = 0, $532 = 0.0, $533 = 0, $534 = 0.0, $535 = 0.0, $536 = 0.0, $537 = 0.0, $538 = 0.0, $539 = 0.0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0.0, $545 = 0.0;
 var $546 = 0.0, $547 = 0, $548 = 0, $549 = 0.0, $55 = 0, $550 = 0.0, $551 = 0.0, $552 = 0, $553 = 0, $554 = 0.0, $555 = 0.0, $556 = 0.0, $557 = 0.0, $558 = 0.0, $559 = 0.0, $56 = 0.0, $560 = 0.0, $561 = 0.0, $562 = 0.0, $563 = 0.0;
 var $564 = 0.0, $565 = 0.0, $566 = 0.0, $567 = 0.0, $568 = 0.0, $569 = 0.0, $57 = 0, $570 = 0.0, $571 = 0.0, $572 = 0, $573 = 0, $574 = 0.0, $575 = 0.0, $576 = 0, $577 = 0, $578 = 0.0, $579 = 0.0, $58 = 0, $580 = 0, $581 = 0.0;
 var $582 = 0, $583 = 0.0, $584 = 0.0, $585 = 0.0, $586 = 0, $587 = 0.0, $588 = 0.0, $589 = 0, $59 = 0, $590 = 0.0, $591 = 0, $592 = 0, $593 = 0.0, $594 = 0.0, $595 = 0, $596 = 0.0, $597 = 0, $598 = 0, $599 = 0.0, $6 = 0.0;
 var $60 = 0.0, $600 = 0.0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0.0, $624 = 0, $625 = 0, $626 = 0.0, $627 = 0.0, $628 = 0.0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0.0, $633 = 0, $634 = 0, $635 = 0.0;
 var $636 = 0.0, $637 = 0.0, $638 = 0, $639 = 0, $64 = 0.0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0.0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0.0;
 var $654 = 0, $655 = 0, $656 = 0, $657 = 0.0, $658 = 0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0, $662 = 0.0, $663 = 0.0, $664 = 0, $665 = 0.0, $666 = 0.0, $667 = 0, $668 = 0.0, $669 = 0, $67 = 0, $670 = 0.0, $671 = 0.0;
 var $672 = 0, $673 = 0.0, $674 = 0.0, $675 = 0, $676 = 0.0, $677 = 0.0, $678 = 0.0, $679 = 0, $68 = 0.0, $680 = 0.0, $681 = 0.0, $682 = 0, $683 = 0.0, $684 = 0.0, $685 = 0.0, $686 = 0.0, $687 = 0.0, $688 = 0.0, $689 = 0, $69 = 0;
 var $690 = 0.0, $691 = 0.0, $692 = 0.0, $693 = 0, $694 = 0.0, $695 = 0.0, $696 = 0.0, $697 = 0.0, $698 = 0, $699 = 0.0, $7 = 0, $70 = 0, $700 = 0.0, $701 = 0.0, $702 = 0.0, $703 = 0.0, $704 = 0.0, $705 = 0, $706 = 0.0, $707 = 0.0;
 var $708 = 0.0, $709 = 0.0, $71 = 0, $710 = 0, $711 = 0.0, $712 = 0.0, $713 = 0.0, $714 = 0.0, $715 = 0.0, $716 = 0, $717 = 0.0, $718 = 0.0, $719 = 0.0, $72 = 0.0, $720 = 0.0, $721 = 0.0, $722 = 0.0, $723 = 0.0, $724 = 0, $725 = 0.0;
 var $726 = 0.0, $727 = 0.0, $728 = 0.0, $729 = 0.0, $73 = 0, $730 = 0.0, $731 = 0, $732 = 0.0, $733 = 0.0, $734 = 0, $735 = 0, $736 = 0.0, $737 = 0.0, $738 = 0, $739 = 0, $74 = 0, $740 = 0.0, $741 = 0.0, $742 = 0, $743 = 0;
 var $744 = 0.0, $745 = 0, $746 = 0.0, $747 = 0.0, $748 = 0, $749 = 0.0, $75 = 0, $750 = 0, $751 = 0.0, $752 = 0.0, $753 = 0, $754 = 0.0, $755 = 0.0, $756 = 0, $757 = 0.0, $758 = 0.0, $759 = 0, $76 = 0.0, $760 = 0.0, $761 = 0.0;
 var $762 = 0, $763 = 0.0, $764 = 0.0, $765 = 0, $766 = 0.0, $767 = 0.0, $768 = 0.0, $769 = 0.0, $77 = 0, $770 = 0.0, $771 = 0.0, $772 = 0.0, $773 = 0, $774 = 0.0, $775 = 0.0, $776 = 0.0, $777 = 0.0, $778 = 0, $779 = 0.0, $78 = 0;
 var $780 = 0.0, $781 = 0.0, $782 = 0, $783 = 0.0, $784 = 0.0, $785 = 0.0, $786 = 0.0, $787 = 0, $788 = 0.0, $789 = 0.0, $79 = 0, $790 = 0.0, $791 = 0.0, $792 = 0.0, $793 = 0, $794 = 0.0, $795 = 0.0, $796 = 0.0, $797 = 0.0, $798 = 0;
 var $799 = 0.0, $8 = 0, $80 = 0.0, $800 = 0.0, $801 = 0.0, $802 = 0.0, $803 = 0.0, $804 = 0, $805 = 0.0, $806 = 0.0, $807 = 0.0, $808 = 0, $809 = 0.0, $81 = 0, $810 = 0.0, $811 = 0.0, $812 = 0.0, $813 = 0.0, $814 = 0.0, $815 = 0.0;
 var $816 = 0, $817 = 0.0, $818 = 0.0, $819 = 0.0, $82 = 0, $820 = 0.0, $821 = 0.0, $822 = 0.0, $823 = 0, $824 = 0.0, $825 = 0.0, $826 = 0, $827 = 0, $828 = 0.0, $829 = 0.0, $83 = 0.0, $830 = 0, $831 = 0, $832 = 0.0, $833 = 0.0;
 var $834 = 0, $835 = 0, $836 = 0.0, $837 = 0, $838 = 0.0, $839 = 0.0, $84 = 0, $840 = 0, $841 = 0.0, $842 = 0.0, $843 = 0, $844 = 0.0, $845 = 0.0, $846 = 0, $847 = 0.0, $848 = 0, $849 = 0.0, $85 = 0, $850 = 0.0, $851 = 0;
 var $852 = 0.0, $853 = 0.0, $854 = 0, $855 = 0.0, $856 = 0.0, $857 = 0, $858 = 0.0, $859 = 0.0, $86 = 0, $860 = 0.0, $861 = 0.0, $862 = 0.0, $863 = 0.0, $864 = 0.0, $865 = 0, $866 = 0.0, $867 = 0.0, $868 = 0, $869 = 0.0, $87 = 0.0;
 var $870 = 0.0, $871 = 0.0, $872 = 0.0, $873 = 0.0, $874 = 0, $875 = 0.0, $876 = 0.0, $877 = 0.0, $878 = 0.0, $879 = 0.0, $88 = 0, $880 = 0, $881 = 0.0, $882 = 0.0, $883 = 0.0, $884 = 0.0, $885 = 0.0, $886 = 0.0, $887 = 0, $888 = 0.0;
 var $889 = 0.0, $89 = 0, $890 = 0.0, $891 = 0.0, $892 = 0, $893 = 0.0, $894 = 0.0, $895 = 0.0, $896 = 0.0, $897 = 0, $898 = 0.0, $899 = 0.0, $9 = 0, $90 = 0, $900 = 0.0, $901 = 0.0, $902 = 0, $903 = 0.0, $904 = 0.0, $905 = 0.0;
 var $906 = 0.0, $907 = 0.0, $908 = 0, $909 = 0.0, $91 = 0.0, $910 = 0.0, $911 = 0.0, $912 = 0.0, $913 = 0.0, $914 = 0.0, $915 = 0, $916 = 0.0, $917 = 0.0, $918 = 0, $919 = 0, $92 = 0, $920 = 0.0, $921 = 0.0, $922 = 0, $923 = 0;
 var $924 = 0.0, $925 = 0.0, $926 = 0, $927 = 0, $928 = 0.0, $929 = 0.0, $93 = 0, $930 = 0, $931 = 0.0, $932 = 0.0, $933 = 0.0, $934 = 0, $935 = 0.0, $936 = 0.0, $937 = 0, $938 = 0.0, $939 = 0.0, $94 = 0.0, $940 = 0.0, $941 = 0.0;
 var $942 = 0.0, $943 = 0.0, $944 = 0.0, $945 = 0.0, $946 = 0.0, $947 = 0, $948 = 0.0, $949 = 0.0, $95 = 0, $950 = 0.0, $951 = 0, $952 = 0.0, $953 = 0, $954 = 0.0, $955 = 0, $956 = 0, $957 = 0.0, $958 = 0.0, $959 = 0.0, $96 = 0;
 var $960 = 0.0, $961 = 0.0, $962 = 0.0, $963 = 0, $964 = 0.0, $965 = 0.0, $966 = 0, $967 = 0, $968 = 0.0, $969 = 0.0, $97 = 0.0, $970 = 0, $971 = 0, $972 = 0.0, $973 = 0.0, $974 = 0, $975 = 0, $976 = 0.0, $977 = 0.0, $978 = 0;
 var $979 = 0, $98 = 0, $980 = 0.0, $981 = 0.0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0.0, $988 = 0, $989 = 0.0, $99 = 0, $990 = 0.0, $991 = 0, $992 = 0.0, $993 = 0.0, $994 = 0, $995 = 0.0, $996 = 0.0;
 var $997 = 0.0, $998 = 0.0, $999 = 0.0, $bgotonextstatement = 0, $bgotonextstatement15 = 0, $bgotonextstatement32 = 0, $bgotonextstatement49 = 0, $bgotonextstatement6 = 0, $cj0array = 0, $cj0array19 = 0, $cj0array26 = 0, $cj0array36 = 0, $cj0array43 = 0, $cj0array51 = 0, $cj0array58 = 0, $cj0array65 = 0, $cj0array72 = 0, $cj0array9 = 0, $cj1array = 0, $cj1array81 = 0;
 var $cj1array88 = 0, $cj1array95 = 0, $cj2array = 0, $dummyiter = 0, $evalcond = 0, $evalcond100 = 0, $evalcond14 = 0, $evalcond24 = 0, $evalcond31 = 0, $evalcond41 = 0, $evalcond48 = 0, $evalcond5 = 0, $evalcond56 = 0, $evalcond63 = 0, $evalcond70 = 0, $evalcond86 = 0, $evalcond93 = 0, $iij0 = 0, $iij013 = 0, $iij023 = 0;
 var $iij030 = 0, $iij040 = 0, $iij047 = 0, $iij055 = 0, $iij062 = 0, $iij069 = 0, $iij076 = 0, $iij1 = 0, $iij185 = 0, $iij192 = 0, $iij199 = 0, $iij2 = 0, $ij0 = 0, $ij012 = 0, $ij022 = 0, $ij029 = 0, $ij039 = 0, $ij046 = 0, $ij054 = 0, $ij061 = 0;
 var $ij068 = 0, $ij075 = 0, $ij1 = 0, $ij184 = 0, $ij191 = 0, $ij198 = 0, $ij2 = 0, $j0array = 0, $j0array18 = 0, $j0array25 = 0, $j0array35 = 0, $j0array42 = 0, $j0array50 = 0, $j0array57 = 0, $j0array64 = 0, $j0array71 = 0, $j0array8 = 0, $j0eval = 0, $j0eval1 = 0, $j0eval16 = 0;
 var $j0eval17 = 0, $j0eval2 = 0, $j0eval3 = 0, $j0eval33 = 0, $j0eval34 = 0, $j0eval4 = 0, $j0eval7 = 0, $j0valid = 0, $j0valid11 = 0, $j0valid21 = 0, $j0valid28 = 0, $j0valid38 = 0, $j0valid45 = 0, $j0valid53 = 0, $j0valid60 = 0, $j0valid67 = 0, $j0valid74 = 0, $j1array = 0, $j1array80 = 0, $j1array87 = 0;
 var $j1array94 = 0, $j1eval = 0, $j1eval77 = 0, $j1eval78 = 0, $j1eval79 = 0, $j1valid = 0, $j1valid83 = 0, $j1valid90 = 0, $j1valid97 = 0, $j2array = 0, $j2valid = 0, $sj0array = 0, $sj0array10 = 0, $sj0array20 = 0, $sj0array27 = 0, $sj0array37 = 0, $sj0array44 = 0, $sj0array52 = 0, $sj0array59 = 0, $sj0array66 = 0;
 var $sj0array73 = 0, $sj1array = 0, $sj1array82 = 0, $sj1array89 = 0, $sj1array96 = 0, $sj2array = 0, $x351 = 0.0, $x352 = 0.0, $x353 = 0.0, $x354 = 0.0, $x355 = 0.0, $x356 = 0, $x357 = 0, $x358 = 0.0, $x359 = 0.0, $x360 = 0.0, $x361 = 0.0, $x362 = 0.0, $x363 = 0.0, $x364 = 0.0;
 var $x365 = 0.0, $x366 = 0, $x367 = 0, $x368 = 0.0, $x369 = 0.0, $x370 = 0.0, $x371 = 0.0, $x372 = 0.0, $x373 = 0, $x374 = 0, $x375 = 0.0, $x376 = 0.0, $x377 = 0.0, $x378 = 0.0, $x379 = 0.0, $x380 = 0.0, $x381 = 0.0, $x382 = 0.0, $x383 = 0.0, $x384 = 0.0;
 var $x385 = 0, $x386 = 0, $x387 = 0.0, $x388 = 0.0, $x389 = 0.0, $x390 = 0.0, $x391 = 0.0, $x392 = 0, $x393 = 0, $x394 = 0.0, $x395 = 0.0, $x396 = 0.0, $x397 = 0.0, $x398 = 0.0, $x399 = 0.0, $x400 = 0.0, $x401 = 0.0, $x402 = 0, $x403 = 0, $x404 = 0.0;
 var $x405 = 0.0, $x406 = 0.0, $x407 = 0.0, $x408 = 0.0, $x409 = 0.0, $x410 = 0.0, $x411 = 0.0, $x412 = 0.0, $x413 = 0.0, $x414 = 0.0, $x415 = 0.0, $x416 = 0.0, $x417 = 0, $x418 = 0, $x419 = 0.0, $x420 = 0.0, $x421 = 0.0, $x422 = 0.0, $x423 = 0.0, $x424 = 0.0;
 var $x425 = 0.0, $x426 = 0.0, $x427 = 0.0, $x428 = 0.0, $x429 = 0.0, $x43 = 0.0, $x430 = 0.0, $x431 = 0.0, $x432 = 0, $x433 = 0, $x434 = 0.0, $x435 = 0.0, $x436 = 0.0, $x437 = 0.0, $x438 = 0.0, $x439 = 0.0, $x44 = 0.0, $x440 = 0.0, $x441 = 0.0, $x442 = 0.0;
 var $x443 = 0.0, $x444 = 0.0, $x445 = 0, $x446 = 0, $x447 = 0.0, $x448 = 0.0, $x449 = 0.0, $x45 = 0.0, $x450 = 0.0, $x451 = 0.0, $x452 = 0.0, $x453 = 0.0, $x454 = 0.0, $x455 = 0.0, $x456 = 0.0, $x457 = 0.0, $x458 = 0.0, $x459 = 0.0, $x46 = 0.0, $x460 = 0.0;
 var $x461 = 0.0, $x462 = 0.0, $x463 = 0.0, $x464 = 0.0, $x465 = 0.0, $x466 = 0.0, $x467 = 0, $x468 = 0, $x469 = 0.0, $x47 = 0.0, $x470 = 0.0, $x471 = 0.0, $x472 = 0.0, $x473 = 0.0, $x474 = 0.0, $x475 = 0.0, $x476 = 0.0, $x477 = 0.0, $x478 = 0.0, $x479 = 0.0;
 var $x48 = 0.0, $x480 = 0.0, $x481 = 0, $x482 = 0, $x483 = 0.0, $x484 = 0.0, $x485 = 0.0, $x486 = 0.0, $x487 = 0.0, $x488 = 0.0, $x489 = 0.0, $x49 = 0, $x490 = 0.0, $x491 = 0.0, $x492 = 0.0, $x493 = 0.0, $x494 = 0.0, $x495 = 0, $x496 = 0, $x497 = 0.0;
 var $x498 = 0.0, $x499 = 0.0, $x50 = 0, $x500 = 0.0, $x501 = 0.0, $x502 = 0.0, $x503 = 0.0, $x504 = 0.0, $x51 = 0.0, $x52 = 0.0, $x53 = 0.0, $x54 = 0.0, $x55 = 0.0, $x56 = 0.0, $x57 = 0.0, $x58 = 0.0, $x59 = 0.0, $x60 = 0.0, $x61 = 0.0, $x62 = 0.0;
 var $x63 = 0.0, $x64 = 0.0, $x65 = 0.0, $x66 = 0.0, $x67 = 0.0, $x68 = 0.0, $x69 = 0.0, $x70 = 0.0, $x71 = 0.0, $x72 = 0.0, $x73 = 0.0, $x74 = 0, $x75 = 0, $x76 = 0.0, $x77 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 3072|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $j2array = sp + 2856|0;
 $cj2array = sp + 2840|0;
 $sj2array = sp + 2824|0;
 $j2valid = sp + 3062|0;
 $j0eval = sp + 2808|0;
 $j1eval = sp + 2792|0;
 $j1array = sp + 2776|0;
 $cj1array = sp + 2760|0;
 $sj1array = sp + 2744|0;
 $j1valid = sp + 3060|0;
 $x49 = sp + 2720|0;
 $x50 = sp + 2696|0;
 $j0eval1 = sp + 2664|0;
 $j0eval2 = sp + 2592|0;
 $j0eval3 = sp + 2520|0;
 $evalcond = sp + 2432|0;
 $j0eval4 = sp + 2392|0;
 $j0array = sp + 2368|0;
 $cj0array = sp + 2360|0;
 $sj0array = sp + 2352|0;
 $j0valid = sp + 3058|0;
 $x74 = sp + 2328|0;
 $x75 = sp + 2312|0;
 $evalcond5 = sp + 2296|0;
 $j0eval7 = sp + 2240|0;
 $j0array8 = sp + 2216|0;
 $cj0array9 = sp + 2208|0;
 $sj0array10 = sp + 2200|0;
 $j0valid11 = sp + 3056|0;
 $x356 = sp + 2176|0;
 $x357 = sp + 2160|0;
 $evalcond14 = sp + 2144|0;
 $j0eval16 = sp + 2096|0;
 $j0eval17 = sp + 2056|0;
 $j0array18 = sp + 2032|0;
 $cj0array19 = sp + 2024|0;
 $sj0array20 = sp + 2016|0;
 $j0valid21 = sp + 3054|0;
 $x366 = sp + 1992|0;
 $x367 = sp + 1976|0;
 $evalcond24 = sp + 1952|0;
 $j0array25 = sp + 1912|0;
 $cj0array26 = sp + 1904|0;
 $sj0array27 = sp + 1896|0;
 $j0valid28 = sp + 3053|0;
 $x373 = sp + 1872|0;
 $x374 = sp + 1856|0;
 $evalcond31 = sp + 1832|0;
 $j0eval33 = sp + 1768|0;
 $j0eval34 = sp + 1728|0;
 $j0array35 = sp + 1704|0;
 $cj0array36 = sp + 1696|0;
 $sj0array37 = sp + 1688|0;
 $j0valid38 = sp + 3051|0;
 $x385 = sp + 1664|0;
 $x386 = sp + 1648|0;
 $evalcond41 = sp + 1624|0;
 $j0array42 = sp + 1584|0;
 $cj0array43 = sp + 1576|0;
 $sj0array44 = sp + 1568|0;
 $j0valid45 = sp + 3050|0;
 $x392 = sp + 1544|0;
 $x393 = sp + 1528|0;
 $evalcond48 = sp + 1504|0;
 $j0array50 = sp + 1464|0;
 $cj0array51 = sp + 1456|0;
 $sj0array52 = sp + 1448|0;
 $j0valid53 = sp + 3048|0;
 $x402 = sp + 1400|0;
 $x403 = sp + 1384|0;
 $evalcond56 = sp + 1344|0;
 $j0array57 = sp + 1264|0;
 $cj0array58 = sp + 1256|0;
 $sj0array59 = sp + 1248|0;
 $j0valid60 = sp + 3047|0;
 $x417 = sp + 1200|0;
 $x418 = sp + 1184|0;
 $evalcond63 = sp + 1144|0;
 $j0array64 = sp + 1064|0;
 $cj0array65 = sp + 1056|0;
 $sj0array66 = sp + 1048|0;
 $j0valid67 = sp + 3046|0;
 $x432 = sp + 1000|0;
 $x433 = sp + 984|0;
 $evalcond70 = sp + 944|0;
 $j0array71 = sp + 856|0;
 $cj0array72 = sp + 840|0;
 $sj0array73 = sp + 824|0;
 $j0valid74 = sp + 3044|0;
 $x445 = sp + 808|0;
 $x446 = sp + 784|0;
 $j1eval77 = sp + 752|0;
 $j1eval78 = sp + 696|0;
 $j1eval79 = sp + 632|0;
 $j1array80 = sp + 576|0;
 $cj1array81 = sp + 568|0;
 $sj1array82 = sp + 560|0;
 $j1valid83 = sp + 3042|0;
 $x467 = sp + 504|0;
 $x468 = sp + 488|0;
 $evalcond86 = sp + 448|0;
 $j1array87 = sp + 376|0;
 $cj1array88 = sp + 368|0;
 $sj1array89 = sp + 360|0;
 $j1valid90 = sp + 3041|0;
 $x481 = sp + 312|0;
 $x482 = sp + 296|0;
 $evalcond93 = sp + 256|0;
 $j1array94 = sp + 184|0;
 $cj1array95 = sp + 176|0;
 $sj1array96 = sp + 168|0;
 $j1valid97 = sp + 3040|0;
 $x495 = sp + 120|0;
 $x496 = sp + 104|0;
 $evalcond100 = sp + 64|0;
 $0 = $this;
 $1 = $eetrans;
 $2 = $eerot;
 $3 = $pfree;
 $4 = $solutions;
 $5 = $0;
 $6 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 HEAPF64[$5>>3] = $6;
 $7 = (($5) + 536|0);
 HEAP8[$7>>0] = -1;
 $8 = (($5) + 536|0);
 $9 = (($8) + 1|0);
 HEAP8[$9>>0] = -1;
 $10 = (($5) + 538|0);
 HEAP8[$10>>0] = -1;
 $11 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $12 = (($5) + 40|0);
 HEAPF64[$12>>3] = $11;
 $13 = (($5) + 539|0);
 HEAP8[$13>>0] = -1;
 $14 = (($5) + 539|0);
 $15 = (($14) + 1|0);
 HEAP8[$15>>0] = -1;
 $16 = (($5) + 541|0);
 HEAP8[$16>>0] = -1;
 $17 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $18 = (($5) + 80|0);
 HEAPF64[$18>>3] = $17;
 $19 = (($5) + 542|0);
 HEAP8[$19>>0] = -1;
 $20 = (($5) + 542|0);
 $21 = (($20) + 1|0);
 HEAP8[$21>>0] = -1;
 $22 = (($5) + 544|0);
 HEAP8[$22>>0] = -1;
 $23 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $24 = (($5) + 120|0);
 HEAPF64[$24>>3] = $23;
 $25 = (($5) + 545|0);
 HEAP8[$25>>0] = -1;
 $26 = (($5) + 545|0);
 $27 = (($26) + 1|0);
 HEAP8[$27>>0] = -1;
 $28 = (($5) + 547|0);
 HEAP8[$28>>0] = -1;
 $29 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $30 = (($5) + 160|0);
 HEAPF64[$30>>3] = $29;
 $31 = (($5) + 548|0);
 HEAP8[$31>>0] = -1;
 $32 = (($5) + 548|0);
 $33 = (($32) + 1|0);
 HEAP8[$33>>0] = -1;
 $34 = (($5) + 550|0);
 HEAP8[$34>>0] = -1;
 $35 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $36 = (($5) + 200|0);
 HEAPF64[$36>>3] = $35;
 $37 = (($5) + 551|0);
 HEAP8[$37>>0] = -1;
 $38 = (($5) + 551|0);
 $39 = (($38) + 1|0);
 HEAP8[$39>>0] = -1;
 $40 = (($5) + 553|0);
 HEAP8[$40>>0] = -1;
 $dummyiter = 0;
 while(1) {
  $41 = $dummyiter;
  $42 = ($41|0)<(1);
  if (!($42)) {
   break;
  }
  $43 = $4;
  $44 = HEAP32[$43>>2]|0;
  $45 = (($44) + 20|0);
  $46 = HEAP32[$45>>2]|0;
  FUNCTION_TABLE_vi[$46 & 1023]($43);
  $47 = $2;
  $48 = +HEAPF64[$47>>3];
  $49 = (($5) + 248|0);
  HEAPF64[$49>>3] = $48;
  $50 = $2;
  $51 = (($50) + 8|0);
  $52 = +HEAPF64[$51>>3];
  $53 = (($5) + 272|0);
  HEAPF64[$53>>3] = $52;
  $54 = $2;
  $55 = (($54) + 16|0);
  $56 = +HEAPF64[$55>>3];
  $57 = (($5) + 296|0);
  HEAPF64[$57>>3] = $56;
  $58 = $2;
  $59 = (($58) + 24|0);
  $60 = +HEAPF64[$59>>3];
  $61 = (($5) + 320|0);
  HEAPF64[$61>>3] = $60;
  $62 = $2;
  $63 = (($62) + 32|0);
  $64 = +HEAPF64[$63>>3];
  $65 = (($5) + 344|0);
  HEAPF64[$65>>3] = $64;
  $66 = $2;
  $67 = (($66) + 40|0);
  $68 = +HEAPF64[$67>>3];
  $69 = (($5) + 368|0);
  HEAPF64[$69>>3] = $68;
  $70 = $2;
  $71 = (($70) + 48|0);
  $72 = +HEAPF64[$71>>3];
  $73 = (($5) + 392|0);
  HEAPF64[$73>>3] = $72;
  $74 = $2;
  $75 = (($74) + 56|0);
  $76 = +HEAPF64[$75>>3];
  $77 = (($5) + 416|0);
  HEAPF64[$77>>3] = $76;
  $78 = $2;
  $79 = (($78) + 64|0);
  $80 = +HEAPF64[$79>>3];
  $81 = (($5) + 440|0);
  HEAPF64[$81>>3] = $80;
  $82 = $1;
  $83 = +HEAPF64[$82>>3];
  $84 = (($5) + 464|0);
  HEAPF64[$84>>3] = $83;
  $85 = $1;
  $86 = (($85) + 8|0);
  $87 = +HEAPF64[$86>>3];
  $88 = (($5) + 488|0);
  HEAPF64[$88>>3] = $87;
  $89 = $1;
  $90 = (($89) + 16|0);
  $91 = +HEAPF64[$90>>3];
  $92 = (($5) + 512|0);
  HEAPF64[$92>>3] = $91;
  $93 = (($5) + 248|0);
  $94 = +HEAPF64[$93>>3];
  $95 = (($5) + 240|0);
  HEAPF64[$95>>3] = $94;
  $96 = (($5) + 296|0);
  $97 = +HEAPF64[$96>>3];
  $98 = (($5) + 264|0);
  HEAPF64[$98>>3] = $97;
  $99 = (($5) + 272|0);
  $100 = +HEAPF64[$99>>3];
  $101 = -1.0 * $100;
  $102 = (($5) + 288|0);
  HEAPF64[$102>>3] = $101;
  $103 = (($5) + 464|0);
  $104 = +HEAPF64[$103>>3];
  $105 = -0.045415999999999998 + $104;
  $106 = (($5) + 456|0);
  HEAPF64[$106>>3] = $105;
  $107 = (($5) + 392|0);
  $108 = +HEAPF64[$107>>3];
  $109 = (($5) + 312|0);
  HEAPF64[$109>>3] = $108;
  $110 = (($5) + 440|0);
  $111 = +HEAPF64[$110>>3];
  $112 = (($5) + 336|0);
  HEAPF64[$112>>3] = $111;
  $113 = (($5) + 416|0);
  $114 = +HEAPF64[$113>>3];
  $115 = -1.0 * $114;
  $116 = (($5) + 360|0);
  HEAPF64[$116>>3] = $115;
  $117 = (($5) + 512|0);
  $118 = +HEAPF64[$117>>3];
  $119 = -0.46705200000000002 + $118;
  $120 = (($5) + 480|0);
  HEAPF64[$120>>3] = $119;
  $121 = (($5) + 320|0);
  $122 = +HEAPF64[$121>>3];
  $123 = -1.0 * $122;
  $124 = (($5) + 384|0);
  HEAPF64[$124>>3] = $123;
  $125 = (($5) + 368|0);
  $126 = +HEAPF64[$125>>3];
  $127 = -1.0 * $126;
  $128 = (($5) + 408|0);
  HEAPF64[$128>>3] = $127;
  $129 = (($5) + 344|0);
  $130 = +HEAPF64[$129>>3];
  $131 = (($5) + 432|0);
  HEAPF64[$131>>3] = $130;
  $132 = (($5) + 488|0);
  $133 = +HEAPF64[$132>>3];
  $134 = -1.0 * $133;
  $135 = 0.30240800000000001 + $134;
  $136 = (($5) + 504|0);
  HEAPF64[$136>>3] = $135;
  $137 = (($5) + 240|0);
  $138 = +HEAPF64[$137>>3];
  $139 = (($5) + 248|0);
  HEAPF64[$139>>3] = $138;
  $140 = (($5) + 264|0);
  $141 = +HEAPF64[$140>>3];
  $142 = (($5) + 272|0);
  HEAPF64[$142>>3] = $141;
  $143 = (($5) + 288|0);
  $144 = +HEAPF64[$143>>3];
  $145 = (($5) + 296|0);
  HEAPF64[$145>>3] = $144;
  $146 = (($5) + 312|0);
  $147 = +HEAPF64[$146>>3];
  $148 = (($5) + 320|0);
  HEAPF64[$148>>3] = $147;
  $149 = (($5) + 336|0);
  $150 = +HEAPF64[$149>>3];
  $151 = (($5) + 344|0);
  HEAPF64[$151>>3] = $150;
  $152 = (($5) + 360|0);
  $153 = +HEAPF64[$152>>3];
  $154 = (($5) + 368|0);
  HEAPF64[$154>>3] = $153;
  $155 = (($5) + 384|0);
  $156 = +HEAPF64[$155>>3];
  $157 = (($5) + 392|0);
  HEAPF64[$157>>3] = $156;
  $158 = (($5) + 408|0);
  $159 = +HEAPF64[$158>>3];
  $160 = (($5) + 416|0);
  HEAPF64[$160>>3] = $159;
  $161 = (($5) + 432|0);
  $162 = +HEAPF64[$161>>3];
  $163 = (($5) + 440|0);
  HEAPF64[$163>>3] = $162;
  $164 = (($5) + 456|0);
  $165 = +HEAPF64[$164>>3];
  $166 = (($5) + 464|0);
  HEAPF64[$166>>3] = $165;
  $167 = (($5) + 480|0);
  $168 = +HEAPF64[$167>>3];
  $169 = (($5) + 488|0);
  HEAPF64[$169>>3] = $168;
  $170 = (($5) + 504|0);
  $171 = +HEAPF64[$170>>3];
  $172 = (($5) + 512|0);
  HEAPF64[$172>>3] = $171;
  $173 = (($5) + 464|0);
  $174 = +HEAPF64[$173>>3];
  $175 = 1.0 * $174;
  $x43 = $175;
  $176 = (($5) + 512|0);
  $177 = +HEAPF64[$176>>3];
  $178 = 1.0 * $177;
  $x44 = $178;
  $179 = (($5) + 488|0);
  $180 = +HEAPF64[$179>>3];
  $181 = 1.0 * $180;
  $x45 = $181;
  $182 = (($5) + 464|0);
  $183 = +HEAPF64[$182>>3];
  $184 = (($5) + 464|0);
  $185 = +HEAPF64[$184>>3];
  $186 = $183 * $185;
  $187 = (($5) + 488|0);
  $188 = +HEAPF64[$187>>3];
  $189 = (($5) + 488|0);
  $190 = +HEAPF64[$189>>3];
  $191 = $188 * $190;
  $192 = $186 + $191;
  $193 = (($5) + 512|0);
  $194 = +HEAPF64[$193>>3];
  $195 = (($5) + 512|0);
  $196 = +HEAPF64[$195>>3];
  $197 = $194 * $196;
  $198 = $192 + $197;
  $199 = (($5) + 528|0);
  HEAPF64[$199>>3] = $198;
  $200 = (($5) + 464|0);
  $201 = +HEAPF64[$200>>3];
  $202 = (($5) + 248|0);
  $203 = +HEAPF64[$202>>3];
  $204 = $201 * $203;
  $205 = (($5) + 488|0);
  $206 = +HEAPF64[$205>>3];
  $207 = (($5) + 320|0);
  $208 = +HEAPF64[$207>>3];
  $209 = $206 * $208;
  $210 = $204 + $209;
  $211 = (($5) + 512|0);
  $212 = +HEAPF64[$211>>3];
  $213 = (($5) + 392|0);
  $214 = +HEAPF64[$213>>3];
  $215 = $212 * $214;
  $216 = $210 + $215;
  $217 = (($5) + 472|0);
  HEAPF64[$217>>3] = $216;
  $218 = (($5) + 464|0);
  $219 = +HEAPF64[$218>>3];
  $220 = (($5) + 272|0);
  $221 = +HEAPF64[$220>>3];
  $222 = $219 * $221;
  $223 = (($5) + 488|0);
  $224 = +HEAPF64[$223>>3];
  $225 = (($5) + 344|0);
  $226 = +HEAPF64[$225>>3];
  $227 = $224 * $226;
  $228 = $222 + $227;
  $229 = (($5) + 512|0);
  $230 = +HEAPF64[$229>>3];
  $231 = (($5) + 416|0);
  $232 = +HEAPF64[$231>>3];
  $233 = $230 * $232;
  $234 = $228 + $233;
  $235 = (($5) + 496|0);
  HEAPF64[$235>>3] = $234;
  $236 = (($5) + 464|0);
  $237 = +HEAPF64[$236>>3];
  $238 = (($5) + 296|0);
  $239 = +HEAPF64[$238>>3];
  $240 = $237 * $239;
  $241 = (($5) + 488|0);
  $242 = +HEAPF64[$241>>3];
  $243 = (($5) + 368|0);
  $244 = +HEAPF64[$243>>3];
  $245 = $242 * $244;
  $246 = $240 + $245;
  $247 = (($5) + 512|0);
  $248 = +HEAPF64[$247>>3];
  $249 = (($5) + 440|0);
  $250 = +HEAPF64[$249>>3];
  $251 = $248 * $250;
  $252 = $246 + $251;
  $253 = (($5) + 520|0);
  HEAPF64[$253>>3] = $252;
  $254 = (($5) + 392|0);
  $255 = +HEAPF64[$254>>3];
  $256 = -1.0 * $255;
  $257 = $x45;
  $258 = $256 * $257;
  $259 = (($5) + 512|0);
  $260 = +HEAPF64[$259>>3];
  $261 = (($5) + 320|0);
  $262 = +HEAPF64[$261>>3];
  $263 = $260 * $262;
  $264 = $258 + $263;
  $265 = (($5) + 256|0);
  HEAPF64[$265>>3] = $264;
  $266 = (($5) + 464|0);
  $267 = +HEAPF64[$266>>3];
  $268 = (($5) + 392|0);
  $269 = +HEAPF64[$268>>3];
  $270 = $267 * $269;
  $271 = (($5) + 248|0);
  $272 = +HEAPF64[$271>>3];
  $273 = -1.0 * $272;
  $274 = $x44;
  $275 = $273 * $274;
  $276 = $270 + $275;
  $277 = (($5) + 280|0);
  HEAPF64[$277>>3] = $276;
  $278 = (($5) + 320|0);
  $279 = +HEAPF64[$278>>3];
  $280 = -1.0 * $279;
  $281 = $x43;
  $282 = $280 * $281;
  $283 = (($5) + 488|0);
  $284 = +HEAPF64[$283>>3];
  $285 = (($5) + 248|0);
  $286 = +HEAPF64[$285>>3];
  $287 = $284 * $286;
  $288 = $282 + $287;
  $289 = (($5) + 304|0);
  HEAPF64[$289>>3] = $288;
  $290 = (($5) + 416|0);
  $291 = +HEAPF64[$290>>3];
  $292 = -1.0 * $291;
  $293 = $x45;
  $294 = $292 * $293;
  $295 = (($5) + 512|0);
  $296 = +HEAPF64[$295>>3];
  $297 = (($5) + 344|0);
  $298 = +HEAPF64[$297>>3];
  $299 = $296 * $298;
  $300 = $294 + $299;
  $301 = (($5) + 328|0);
  HEAPF64[$301>>3] = $300;
  $302 = (($5) + 464|0);
  $303 = +HEAPF64[$302>>3];
  $304 = (($5) + 416|0);
  $305 = +HEAPF64[$304>>3];
  $306 = $303 * $305;
  $307 = (($5) + 272|0);
  $308 = +HEAPF64[$307>>3];
  $309 = -1.0 * $308;
  $310 = $x44;
  $311 = $309 * $310;
  $312 = $306 + $311;
  $313 = (($5) + 352|0);
  HEAPF64[$313>>3] = $312;
  $314 = (($5) + 344|0);
  $315 = +HEAPF64[$314>>3];
  $316 = -1.0 * $315;
  $317 = $x43;
  $318 = $316 * $317;
  $319 = (($5) + 488|0);
  $320 = +HEAPF64[$319>>3];
  $321 = (($5) + 272|0);
  $322 = +HEAPF64[$321>>3];
  $323 = $320 * $322;
  $324 = $318 + $323;
  $325 = (($5) + 376|0);
  HEAPF64[$325>>3] = $324;
  $326 = (($5) + 440|0);
  $327 = +HEAPF64[$326>>3];
  $328 = -1.0 * $327;
  $329 = $x45;
  $330 = $328 * $329;
  $331 = (($5) + 512|0);
  $332 = +HEAPF64[$331>>3];
  $333 = (($5) + 368|0);
  $334 = +HEAPF64[$333>>3];
  $335 = $332 * $334;
  $336 = $330 + $335;
  $337 = (($5) + 400|0);
  HEAPF64[$337>>3] = $336;
  $338 = (($5) + 296|0);
  $339 = +HEAPF64[$338>>3];
  $340 = -1.0 * $339;
  $341 = $x44;
  $342 = $340 * $341;
  $343 = (($5) + 464|0);
  $344 = +HEAPF64[$343>>3];
  $345 = (($5) + 440|0);
  $346 = +HEAPF64[$345>>3];
  $347 = $344 * $346;
  $348 = $342 + $347;
  $349 = (($5) + 424|0);
  HEAPF64[$349>>3] = $348;
  $350 = (($5) + 368|0);
  $351 = +HEAPF64[$350>>3];
  $352 = -1.0 * $351;
  $353 = $x43;
  $354 = $352 * $353;
  $355 = (($5) + 488|0);
  $356 = +HEAPF64[$355>>3];
  $357 = (($5) + 296|0);
  $358 = +HEAPF64[$357>>3];
  $359 = $356 * $358;
  $360 = $354 + $359;
  $361 = (($5) + 448|0);
  HEAPF64[$361>>3] = $360;
  ;HEAP8[$j2valid+0>>0]=0|0;HEAP8[$j2valid+1>>0]=0|0;
  $362 = (($5) + 544|0);
  HEAP8[$362>>0] = 2;
  $363 = (($5) + 528|0);
  $364 = +HEAPF64[$363>>3];
  $365 = 3.7298123904367602 * $364;
  $366 = -1.0578345548468899 + $365;
  HEAPF64[$cj2array>>3] = $366;
  $367 = +HEAPF64[$cj2array>>3];
  $368 = $367 >= -1.0000020000000001;
  if ($368) {
   $369 = +HEAPF64[$cj2array>>3];
   $370 = $369 <= 1.0000020000000001;
   if ($370) {
    $371 = (($j2valid) + 1|0);
    HEAP8[$371>>0] = 1;
    HEAP8[$j2valid>>0] = 1;
    $372 = +HEAPF64[$cj2array>>3];
    $373 = (+__Z6IKacosd($372));
    HEAPF64[$j2array>>3] = $373;
    $374 = +HEAPF64[$j2array>>3];
    $375 = (+__Z5IKsind($374));
    HEAPF64[$sj2array>>3] = $375;
    $376 = +HEAPF64[$cj2array>>3];
    $377 = (($cj2array) + 8|0);
    HEAPF64[$377>>3] = $376;
    $378 = +HEAPF64[$j2array>>3];
    $379 = -$378;
    $380 = (($j2array) + 8|0);
    HEAPF64[$380>>3] = $379;
    $381 = +HEAPF64[$sj2array>>3];
    $382 = -$381;
    $383 = (($sj2array) + 8|0);
    HEAPF64[$383>>3] = $382;
   } else {
    label = 6;
   }
  } else {
   label = 6;
  }
  if ((label|0) == 6) {
   label = 0;
   $384 = +HEAPF64[$cj2array>>3];
   $385 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($384)|0);
   if ($385) {
    HEAP8[$j2valid>>0] = 1;
    HEAPF64[$cj2array>>3] = 1.0;
    HEAPF64[$sj2array>>3] = 0.0;
    HEAPF64[$j2array>>3] = 0.0;
   }
  }
  $ij2 = 0;
  while(1) {
   $386 = $ij2;
   $387 = ($386|0)<(2);
   if (!($387)) {
    break;
   }
   $388 = $ij2;
   $389 = (($j2valid) + ($388)|0);
   $390 = HEAP8[$389>>0]|0;
   $391 = $390&1;
   L16: do {
    if ($391) {
     $392 = $ij2;
     $393 = $392&255;
     $394 = (($5) + 542|0);
     HEAP8[$394>>0] = $393;
     $395 = (($5) + 542|0);
     $396 = (($395) + 1|0);
     HEAP8[$396>>0] = -1;
     $397 = $ij2;
     $398 = (($397) + 1)|0;
     $iij2 = $398;
     while(1) {
      $399 = $iij2;
      $400 = ($399|0)<(2);
      if (!($400)) {
       break;
      }
      $401 = $iij2;
      $402 = (($j2valid) + ($401)|0);
      $403 = HEAP8[$402>>0]|0;
      $404 = $403&1;
      if ($404) {
       $405 = $ij2;
       $406 = (($cj2array) + ($405<<3)|0);
       $407 = +HEAPF64[$406>>3];
       $408 = $iij2;
       $409 = (($cj2array) + ($408<<3)|0);
       $410 = +HEAPF64[$409>>3];
       $411 = $407 - $410;
       $412 = (+__Z5IKabsd($411));
       $413 = $412 < 9.9999999999999995E-7;
       if ($413) {
        $414 = $ij2;
        $415 = (($sj2array) + ($414<<3)|0);
        $416 = +HEAPF64[$415>>3];
        $417 = $iij2;
        $418 = (($sj2array) + ($417<<3)|0);
        $419 = +HEAPF64[$418>>3];
        $420 = $416 - $419;
        $421 = (+__Z5IKabsd($420));
        $422 = $421 < 9.9999999999999995E-7;
        if ($422) {
         label = 18;
         break;
        }
       }
      }
      $429 = $iij2;
      $430 = (($429) + 1)|0;
      $iij2 = $430;
     }
     if ((label|0) == 18) {
      label = 0;
      $423 = $iij2;
      $424 = (($j2valid) + ($423)|0);
      HEAP8[$424>>0] = 0;
      $425 = $iij2;
      $426 = $425&255;
      $427 = (($5) + 542|0);
      $428 = (($427) + 1|0);
      HEAP8[$428>>0] = $426;
     }
     $431 = $ij2;
     $432 = (($j2array) + ($431<<3)|0);
     $433 = +HEAPF64[$432>>3];
     $434 = (($5) + 80|0);
     HEAPF64[$434>>3] = $433;
     $435 = $ij2;
     $436 = (($cj2array) + ($435<<3)|0);
     $437 = +HEAPF64[$436>>3];
     $438 = (($5) + 88|0);
     HEAPF64[$438>>3] = $437;
     $439 = $ij2;
     $440 = (($sj2array) + ($439<<3)|0);
     $441 = +HEAPF64[$440>>3];
     $442 = (($5) + 96|0);
     HEAPF64[$442>>3] = $441;
     $443 = (($5) + 464|0);
     $444 = +HEAPF64[$443>>3];
     $445 = (($5) + 464|0);
     $446 = +HEAPF64[$445>>3];
     $447 = $444 * $446;
     $448 = (($5) + 488|0);
     $449 = +HEAPF64[$448>>3];
     $450 = (($5) + 488|0);
     $451 = +HEAPF64[$450>>3];
     $452 = $449 * $451;
     $453 = $447 + $452;
     HEAPF64[$j0eval>>3] = $453;
     $454 = (($5) + 464|0);
     $455 = +HEAPF64[$454>>3];
     $456 = (+__Z5IKabsd($455));
     $457 = (($5) + 488|0);
     $458 = +HEAPF64[$457>>3];
     $459 = (+__Z5IKabsd($458));
     $460 = $456 + $459;
     $461 = (($j0eval) + 8|0);
     HEAPF64[$461>>3] = $460;
     $462 = +HEAPF64[$j0eval>>3];
     $463 = (+__Z5IKabsd($462));
     $464 = $463 < 9.9999999999999995E-7;
     do {
      if ($464) {
       label = 23;
      } else {
       $465 = (($j0eval) + 8|0);
       $466 = +HEAPF64[$465>>3];
       $467 = (+__Z5IKabsd($466));
       $468 = $467 < 9.9999999999999995E-7;
       if ($468) {
        label = 23;
       } else {
        ;HEAP8[$j0valid74+0>>0]=0|0;HEAP8[$j0valid74+1>>0]=0|0;
        $3350 = (($5) + 538|0);
        HEAP8[$3350>>0] = 2;
        $3351 = (($5) + 464|0);
        $3352 = +HEAPF64[$3351>>3];
        $3353 = (($5) + 488|0);
        $3354 = +HEAPF64[$3353>>3];
        __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x445,$3352,$3354,1.9999999999999999E-6);
        $3355 = (($x445) + 8|0);
        $3356 = HEAP8[$3355>>0]|0;
        $3357 = $3356&1;
        if (!($3357)) {
         break L16;
        }
        $3358 = +HEAPF64[$x445>>3];
        $3359 = 1.0 * $3358;
        $x443 = $3359;
        $3360 = (($5) + 464|0);
        $3361 = +HEAPF64[$3360>>3];
        $3362 = (($5) + 464|0);
        $3363 = +HEAPF64[$3362>>3];
        $3364 = $3361 * $3363;
        $3365 = (($5) + 488|0);
        $3366 = +HEAPF64[$3365>>3];
        $3367 = (($5) + 488|0);
        $3368 = +HEAPF64[$3367>>3];
        $3369 = $3366 * $3368;
        $3370 = $3364 + $3369;
        $3371 = $3370 < -1.0000000000000001E-5;
        if ($3371) {
         break L16;
        }
        $3372 = (($5) + 464|0);
        $3373 = +HEAPF64[$3372>>3];
        $3374 = (($5) + 464|0);
        $3375 = +HEAPF64[$3374>>3];
        $3376 = $3373 * $3375;
        $3377 = (($5) + 488|0);
        $3378 = +HEAPF64[$3377>>3];
        $3379 = (($5) + 488|0);
        $3380 = +HEAPF64[$3379>>3];
        $3381 = $3378 * $3380;
        $3382 = $3376 + $3381;
        $3383 = (+__Z6IKsqrtd($3382));
        $3384 = (+__Z5IKabsd($3383));
        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x446,$3384,-1);
        $3385 = (($x446) + 8|0);
        $3386 = HEAP8[$3385>>0]|0;
        $3387 = $3386&1;
        if (!($3387)) {
         break L16;
        }
        $3388 = +HEAPF64[$x446>>3];
        $3389 = 0.10015 * $3388;
        $3390 = $3389 < -1.0000020000000001;
        if (!($3390)) {
         $3391 = +HEAPF64[$x446>>3];
         $3392 = 0.10015 * $3391;
         $3393 = $3392 > 1.0000020000000001;
         if (!($3393)) {
          $3394 = +HEAPF64[$x446>>3];
          $3395 = 0.10015 * $3394;
          $3396 = (+__Z6IKasind($3395));
          $x444 = $3396;
          $3397 = $x443;
          $3398 = -1.0 * $3397;
          $3399 = $x444;
          $3400 = -1.0 * $3399;
          $3401 = $3398 + $3400;
          HEAPF64[$j0array71>>3] = $3401;
          $3402 = +HEAPF64[$j0array71>>3];
          $3403 = (+__Z5IKsind($3402));
          HEAPF64[$sj0array73>>3] = $3403;
          $3404 = +HEAPF64[$j0array71>>3];
          $3405 = (+__Z5IKcosd($3404));
          HEAPF64[$cj0array72>>3] = $3405;
          $3406 = $x443;
          $3407 = -1.0 * $3406;
          $3408 = 3.14159265358979 + $3407;
          $3409 = $x444;
          $3410 = $3408 + $3409;
          $3411 = (($j0array71) + 8|0);
          HEAPF64[$3411>>3] = $3410;
          $3412 = (($j0array71) + 8|0);
          $3413 = +HEAPF64[$3412>>3];
          $3414 = (+__Z5IKsind($3413));
          $3415 = (($sj0array73) + 8|0);
          HEAPF64[$3415>>3] = $3414;
          $3416 = (($j0array71) + 8|0);
          $3417 = +HEAPF64[$3416>>3];
          $3418 = (+__Z5IKcosd($3417));
          $3419 = (($cj0array72) + 8|0);
          HEAPF64[$3419>>3] = $3418;
          $3420 = +HEAPF64[$j0array71>>3];
          $3421 = $3420 > 3.14159265358979;
          if ($3421) {
           $3422 = +HEAPF64[$j0array71>>3];
           $3423 = $3422 - 6.2831853071795898;
           HEAPF64[$j0array71>>3] = $3423;
          } else {
           $3424 = +HEAPF64[$j0array71>>3];
           $3425 = $3424 < -3.14159265358979;
           if ($3425) {
            $3426 = +HEAPF64[$j0array71>>3];
            $3427 = $3426 + 6.2831853071795898;
            HEAPF64[$j0array71>>3] = $3427;
           }
          }
          HEAP8[$j0valid74>>0] = 1;
          $3428 = (($j0array71) + 8|0);
          $3429 = +HEAPF64[$3428>>3];
          $3430 = $3429 > 3.14159265358979;
          if ($3430) {
           $3431 = (($j0array71) + 8|0);
           $3432 = +HEAPF64[$3431>>3];
           $3433 = $3432 - 6.2831853071795898;
           HEAPF64[$3431>>3] = $3433;
          } else {
           $3434 = (($j0array71) + 8|0);
           $3435 = +HEAPF64[$3434>>3];
           $3436 = $3435 < -3.14159265358979;
           if ($3436) {
            $3437 = (($j0array71) + 8|0);
            $3438 = +HEAPF64[$3437>>3];
            $3439 = $3438 + 6.2831853071795898;
            HEAPF64[$3437>>3] = $3439;
           }
          }
          $3440 = (($j0valid74) + 1|0);
          HEAP8[$3440>>0] = 1;
          $ij075 = 0;
          while(1) {
           $3441 = $ij075;
           $3442 = ($3441|0)<(2);
           if (!($3442)) {
            break;
           }
           $3443 = $ij075;
           $3444 = (($j0valid74) + ($3443)|0);
           $3445 = HEAP8[$3444>>0]|0;
           $3446 = $3445&1;
           L62: do {
            if ($3446) {
             $3447 = $ij075;
             $3448 = $3447&255;
             $3449 = (($5) + 536|0);
             HEAP8[$3449>>0] = $3448;
             $3450 = (($5) + 536|0);
             $3451 = (($3450) + 1|0);
             HEAP8[$3451>>0] = -1;
             $3452 = $ij075;
             $3453 = (($3452) + 1)|0;
             $iij076 = $3453;
             L65: while(1) {
              $3454 = $iij076;
              $3455 = ($3454|0)<(2);
              if (!($3455)) {
               break;
              }
              $3456 = $iij076;
              $3457 = (($j0valid74) + ($3456)|0);
              $3458 = HEAP8[$3457>>0]|0;
              $3459 = $3458&1;
              do {
               if ($3459) {
                $3460 = $ij075;
                $3461 = (($cj0array72) + ($3460<<3)|0);
                $3462 = +HEAPF64[$3461>>3];
                $3463 = $iij076;
                $3464 = (($cj0array72) + ($3463<<3)|0);
                $3465 = +HEAPF64[$3464>>3];
                $3466 = $3462 - $3465;
                $3467 = (+__Z5IKabsd($3466));
                $3468 = $3467 < 9.9999999999999995E-7;
                if (!($3468)) {
                 break;
                }
                $3469 = $ij075;
                $3470 = (($sj0array73) + ($3469<<3)|0);
                $3471 = +HEAPF64[$3470>>3];
                $3472 = $iij076;
                $3473 = (($sj0array73) + ($3472<<3)|0);
                $3474 = +HEAPF64[$3473>>3];
                $3475 = $3471 - $3474;
                $3476 = (+__Z5IKabsd($3475));
                $3477 = $3476 < 9.9999999999999995E-7;
                if ($3477) {
                 label = 423;
                 break L65;
                }
               }
              } while(0);
              $3484 = $iij076;
              $3485 = (($3484) + 1)|0;
              $iij076 = $3485;
             }
             if ((label|0) == 423) {
              label = 0;
              $3478 = $iij076;
              $3479 = (($j0valid74) + ($3478)|0);
              HEAP8[$3479>>0] = 0;
              $3480 = $iij076;
              $3481 = $3480&255;
              $3482 = (($5) + 536|0);
              $3483 = (($3482) + 1|0);
              HEAP8[$3483>>0] = $3481;
             }
             $3486 = $ij075;
             $3487 = (($j0array71) + ($3486<<3)|0);
             $3488 = +HEAPF64[$3487>>3];
             HEAPF64[$5>>3] = $3488;
             $3489 = $ij075;
             $3490 = (($cj0array72) + ($3489<<3)|0);
             $3491 = +HEAPF64[$3490>>3];
             $3492 = (($5) + 8|0);
             HEAPF64[$3492>>3] = $3491;
             $3493 = $ij075;
             $3494 = (($sj0array73) + ($3493<<3)|0);
             $3495 = +HEAPF64[$3494>>3];
             $3496 = (($5) + 16|0);
             HEAPF64[$3496>>3] = $3495;
             $3497 = (($5) + 88|0);
             $3498 = +HEAPF64[$3497>>3];
             $3499 = 331000.0 * $3498;
             $x447 = $3499;
             $3500 = (($5) + 464|0);
             $3501 = +HEAPF64[$3500>>3];
             $3502 = (($5) + 16|0);
             $3503 = +HEAPF64[$3502>>3];
             $3504 = $3501 * $3503;
             $x448 = $3504;
             $3505 = (($5) + 8|0);
             $3506 = +HEAPF64[$3505>>3];
             $3507 = (($5) + 488|0);
             $3508 = +HEAPF64[$3507>>3];
             $3509 = $3506 * $3508;
             $x449 = $3509;
             $3510 = (($5) + 96|0);
             $3511 = +HEAPF64[$3510>>3];
             $3512 = 331000.0 * $3511;
             $x450 = $3512;
             $3513 = (($5) + 88|0);
             $3514 = +HEAPF64[$3513>>3];
             $3515 = 1.0204244526500299 + $3514;
             HEAPF64[$j1eval77>>3] = $3515;
             $3516 = $x447;
             $3517 = $x449;
             $3518 = $3516 * $3517;
             $3519 = $x448;
             $3520 = -405000.0 * $3519;
             $3521 = $3518 + $3520;
             $3522 = $x449;
             $3523 = 405000.0 * $3522;
             $3524 = $3521 + $3523;
             $3525 = (($5) + 512|0);
             $3526 = +HEAPF64[$3525>>3];
             $3527 = -1.0 * $3526;
             $3528 = $x450;
             $3529 = $3527 * $3528;
             $3530 = $3524 + $3529;
             $3531 = $x447;
             $3532 = -1.0 * $3531;
             $3533 = $x448;
             $3534 = $3532 * $3533;
             $3535 = $3530 + $3534;
             $3536 = (+__Z5IKabsd($3535));
             $3537 = (($5) + 512|0);
             $3538 = +HEAPF64[$3537>>3];
             $3539 = -405000.0 * $3538;
             $3540 = $x448;
             $3541 = $x450;
             $3542 = $3540 * $3541;
             $3543 = $3539 + $3542;
             $3544 = (($5) + 512|0);
             $3545 = +HEAPF64[$3544>>3];
             $3546 = -1.0 * $3545;
             $3547 = $x447;
             $3548 = $3546 * $3547;
             $3549 = $3543 + $3548;
             $3550 = $x449;
             $3551 = -1.0 * $3550;
             $3552 = $x450;
             $3553 = $3551 * $3552;
             $3554 = $3549 + $3553;
             $3555 = (+__Z5IKabsd($3554));
             $3556 = $3536 + $3555;
             $3557 = (($j1eval77) + 8|0);
             HEAPF64[$3557>>3] = $3556;
             $3558 = (($5) + 88|0);
             $3559 = +HEAPF64[$3558>>3];
             $3560 = 268110.0 * $3559;
             $3561 = 273586.0 + $3560;
             $3562 = (+__Z6IKsignd($3561));
             $3563 = (($j1eval77) + 16|0);
             HEAPF64[$3563>>3] = $3562;
             $3564 = +HEAPF64[$j1eval77>>3];
             $3565 = (+__Z5IKabsd($3564));
             $3566 = $3565 < 9.9999999999999995E-7;
             do {
              if ($3566) {
               label = 429;
              } else {
               $3567 = (($j1eval77) + 8|0);
               $3568 = +HEAPF64[$3567>>3];
               $3569 = (+__Z5IKabsd($3568));
               $3570 = $3569 < 9.9999999999999995E-7;
               if ($3570) {
                label = 429;
                break;
               }
               $3571 = (($j1eval77) + 16|0);
               $3572 = +HEAPF64[$3571>>3];
               $3573 = (+__Z5IKabsd($3572));
               $3574 = $3573 < 9.9999999999999995E-7;
               if ($3574) {
                label = 429;
                break;
               }
               ;HEAP8[$j1valid97+0>>0]=0|0;
               $4364 = (($5) + 541|0);
               HEAP8[$4364>>0] = 1;
               $4365 = (($5) + 88|0);
               $4366 = +HEAPF64[$4365>>3];
               $4367 = 331000.0 * $4366;
               $x491 = $4367;
               $4368 = (($5) + 464|0);
               $4369 = +HEAPF64[$4368>>3];
               $4370 = (($5) + 16|0);
               $4371 = +HEAPF64[$4370>>3];
               $4372 = $4369 * $4371;
               $x492 = $4372;
               $4373 = (($5) + 8|0);
               $4374 = +HEAPF64[$4373>>3];
               $4375 = (($5) + 488|0);
               $4376 = +HEAPF64[$4375>>3];
               $4377 = $4374 * $4376;
               $x493 = $4377;
               $4378 = (($5) + 96|0);
               $4379 = +HEAPF64[$4378>>3];
               $4380 = 331000.0 * $4379;
               $x494 = $4380;
               $4381 = (($5) + 88|0);
               $4382 = +HEAPF64[$4381>>3];
               $4383 = 268110.0 * $4382;
               $4384 = 273586.0 + $4383;
               $4385 = (+__Z6IKsignd($4384));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x495,$4385,-1);
               $4386 = (($x495) + 8|0);
               $4387 = HEAP8[$4386>>0]|0;
               $4388 = $4387&1;
               if (!($4388)) {
                break L62;
               }
               $4389 = $x493;
               $4390 = -1.0 * $4389;
               $4391 = $x494;
               $4392 = $4390 * $4391;
               $4393 = (($5) + 512|0);
               $4394 = +HEAPF64[$4393>>3];
               $4395 = -405000.0 * $4394;
               $4396 = $4392 + $4395;
               $4397 = (($5) + 512|0);
               $4398 = +HEAPF64[$4397>>3];
               $4399 = -1.0 * $4398;
               $4400 = $x491;
               $4401 = $4399 * $4400;
               $4402 = $4396 + $4401;
               $4403 = $x492;
               $4404 = $x494;
               $4405 = $4403 * $4404;
               $4406 = $4402 + $4405;
               $4407 = $x491;
               $4408 = $x493;
               $4409 = $4407 * $4408;
               $4410 = $x491;
               $4411 = -1.0 * $4410;
               $4412 = $x492;
               $4413 = $4411 * $4412;
               $4414 = $4409 + $4413;
               $4415 = $x493;
               $4416 = 405000.0 * $4415;
               $4417 = $4414 + $4416;
               $4418 = $x492;
               $4419 = -405000.0 * $4418;
               $4420 = $4417 + $4419;
               $4421 = (($5) + 512|0);
               $4422 = +HEAPF64[$4421>>3];
               $4423 = -1.0 * $4422;
               $4424 = $x494;
               $4425 = $4423 * $4424;
               $4426 = $4420 + $4425;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x496,$4406,$4426,1.9999999999999999E-6);
               $4427 = (($x496) + 8|0);
               $4428 = HEAP8[$4427>>0]|0;
               $4429 = $4428&1;
               if (!($4429)) {
                break L62;
               }
               $4430 = +HEAPF64[$x495>>3];
               $4431 = 1.5707963267949001 * $4430;
               $4432 = -1.5707963267949001 + $4431;
               $4433 = +HEAPF64[$x496>>3];
               $4434 = $4432 + $4433;
               HEAPF64[$j1array94>>3] = $4434;
               $4435 = +HEAPF64[$j1array94>>3];
               $4436 = (+__Z5IKsind($4435));
               HEAPF64[$sj1array96>>3] = $4436;
               $4437 = +HEAPF64[$j1array94>>3];
               $4438 = (+__Z5IKcosd($4437));
               HEAPF64[$cj1array95>>3] = $4438;
               $4439 = +HEAPF64[$j1array94>>3];
               $4440 = $4439 > 3.14159265358979;
               if ($4440) {
                $4441 = +HEAPF64[$j1array94>>3];
                $4442 = $4441 - 6.2831853071795898;
                HEAPF64[$j1array94>>3] = $4442;
               } else {
                $4443 = +HEAPF64[$j1array94>>3];
                $4444 = $4443 < -3.14159265358979;
                if ($4444) {
                 $4445 = +HEAPF64[$j1array94>>3];
                 $4446 = $4445 + 6.2831853071795898;
                 HEAPF64[$j1array94>>3] = $4446;
                }
               }
               HEAP8[$j1valid97>>0] = 1;
               $ij198 = 0;
               while(1) {
                $4447 = $ij198;
                $4448 = ($4447|0)<(1);
                if (!($4448)) {
                 break;
                }
                $4449 = $ij198;
                $4450 = (($j1valid97) + ($4449)|0);
                $4451 = HEAP8[$4450>>0]|0;
                $4452 = $4451&1;
                L96: do {
                 if ($4452) {
                  $4453 = $ij198;
                  $4454 = $4453&255;
                  $4455 = (($5) + 539|0);
                  HEAP8[$4455>>0] = $4454;
                  $4456 = (($5) + 539|0);
                  $4457 = (($4456) + 1|0);
                  HEAP8[$4457>>0] = -1;
                  $4458 = $ij198;
                  $4459 = (($4458) + 1)|0;
                  $iij199 = $4459;
                  L99: while(1) {
                   $4460 = $iij199;
                   $4461 = ($4460|0)<(1);
                   if (!($4461)) {
                    break;
                   }
                   $4462 = $iij199;
                   $4463 = (($j1valid97) + ($4462)|0);
                   $4464 = HEAP8[$4463>>0]|0;
                   $4465 = $4464&1;
                   do {
                    if ($4465) {
                     $4466 = $ij198;
                     $4467 = (($cj1array95) + ($4466<<3)|0);
                     $4468 = +HEAPF64[$4467>>3];
                     $4469 = $iij199;
                     $4470 = (($cj1array95) + ($4469<<3)|0);
                     $4471 = +HEAPF64[$4470>>3];
                     $4472 = $4468 - $4471;
                     $4473 = (+__Z5IKabsd($4472));
                     $4474 = $4473 < 9.9999999999999995E-7;
                     if (!($4474)) {
                      break;
                     }
                     $4475 = $ij198;
                     $4476 = (($sj1array96) + ($4475<<3)|0);
                     $4477 = +HEAPF64[$4476>>3];
                     $4478 = $iij199;
                     $4479 = (($sj1array96) + ($4478<<3)|0);
                     $4480 = +HEAPF64[$4479>>3];
                     $4481 = $4477 - $4480;
                     $4482 = (+__Z5IKabsd($4481));
                     $4483 = $4482 < 9.9999999999999995E-7;
                     if ($4483) {
                      label = 516;
                      break L99;
                     }
                    }
                   } while(0);
                   $4490 = $iij199;
                   $4491 = (($4490) + 1)|0;
                   $iij199 = $4491;
                  }
                  if ((label|0) == 516) {
                   label = 0;
                   $4484 = $iij199;
                   $4485 = (($j1valid97) + ($4484)|0);
                   HEAP8[$4485>>0] = 0;
                   $4486 = $iij199;
                   $4487 = $4486&255;
                   $4488 = (($5) + 539|0);
                   $4489 = (($4488) + 1|0);
                   HEAP8[$4489>>0] = $4487;
                  }
                  $4492 = $ij198;
                  $4493 = (($j1array94) + ($4492<<3)|0);
                  $4494 = +HEAPF64[$4493>>3];
                  $4495 = (($5) + 40|0);
                  HEAPF64[$4495>>3] = $4494;
                  $4496 = $ij198;
                  $4497 = (($cj1array95) + ($4496<<3)|0);
                  $4498 = +HEAPF64[$4497>>3];
                  $4499 = (($5) + 48|0);
                  HEAPF64[$4499>>3] = $4498;
                  $4500 = $ij198;
                  $4501 = (($sj1array96) + ($4500<<3)|0);
                  $4502 = +HEAPF64[$4501>>3];
                  $4503 = (($5) + 56|0);
                  HEAPF64[$4503>>3] = $4502;
                  $4504 = (($5) + 40|0);
                  $4505 = +HEAPF64[$4504>>3];
                  $4506 = (+__Z5IKsind($4505));
                  $x497 = $4506;
                  $4507 = (($5) + 40|0);
                  $4508 = +HEAPF64[$4507>>3];
                  $4509 = (+__Z5IKcosd($4508));
                  $x498 = $4509;
                  $4510 = (($5) + 96|0);
                  $4511 = +HEAPF64[$4510>>3];
                  $4512 = 0.33100000000000002 * $4511;
                  $x499 = $4512;
                  $4513 = (($5) + 8|0);
                  $4514 = +HEAPF64[$4513>>3];
                  $4515 = (($5) + 488|0);
                  $4516 = +HEAPF64[$4515>>3];
                  $4517 = $4514 * $4516;
                  $x500 = $4517;
                  $4518 = (($5) + 464|0);
                  $4519 = +HEAPF64[$4518>>3];
                  $4520 = (($5) + 16|0);
                  $4521 = +HEAPF64[$4520>>3];
                  $4522 = $4519 * $4521;
                  $x501 = $4522;
                  $4523 = (($5) + 88|0);
                  $4524 = +HEAPF64[$4523>>3];
                  $4525 = 0.33100000000000002 * $4524;
                  $x502 = $4525;
                  $4526 = $x498;
                  $4527 = 0.81000000000000005 * $4526;
                  $x503 = $4527;
                  $4528 = (($5) + 512|0);
                  $4529 = +HEAPF64[$4528>>3];
                  $4530 = $x497;
                  $4531 = $4529 * $4530;
                  $x504 = $4531;
                  $4532 = $x497;
                  $4533 = 0.40500000000000003 * $4532;
                  $4534 = $x497;
                  $4535 = $x502;
                  $4536 = $4534 * $4535;
                  $4537 = $4533 + $4536;
                  $4538 = (($5) + 512|0);
                  $4539 = +HEAPF64[$4538>>3];
                  $4540 = $4537 + $4539;
                  $4541 = $x498;
                  $4542 = $x499;
                  $4543 = $4541 * $4542;
                  $4544 = $4540 + $4543;
                  HEAPF64[$evalcond100>>3] = $4544;
                  $4545 = (($5) + 512|0);
                  $4546 = +HEAPF64[$4545>>3];
                  $4547 = $x498;
                  $4548 = $4546 * $4547;
                  $4549 = $x497;
                  $4550 = $x500;
                  $4551 = $4549 * $4550;
                  $4552 = $4548 + $4551;
                  $4553 = $x499;
                  $4554 = $4552 + $4553;
                  $4555 = $x497;
                  $4556 = -1.0 * $4555;
                  $4557 = $x501;
                  $4558 = $4556 * $4557;
                  $4559 = $4554 + $4558;
                  $4560 = (($evalcond100) + 8|0);
                  HEAPF64[$4560>>3] = $4559;
                  $4561 = $x498;
                  $4562 = -1.0 * $4561;
                  $4563 = $x500;
                  $4564 = $4562 * $4563;
                  $4565 = 0.40500000000000003 + $4564;
                  $4566 = $x498;
                  $4567 = $x501;
                  $4568 = $4566 * $4567;
                  $4569 = $4565 + $4568;
                  $4570 = $x502;
                  $4571 = $4569 + $4570;
                  $4572 = $x504;
                  $4573 = $4571 + $4572;
                  $4574 = (($evalcond100) + 16|0);
                  HEAPF64[$4574>>3] = $4573;
                  $4575 = $x500;
                  $4576 = $x503;
                  $4577 = $4575 * $4576;
                  $4578 = -0.044433977499999999 + $4577;
                  $4579 = $x501;
                  $4580 = -1.0 * $4579;
                  $4581 = $x503;
                  $4582 = $4580 * $4581;
                  $4583 = $4578 + $4582;
                  $4584 = (($5) + 528|0);
                  $4585 = +HEAPF64[$4584>>3];
                  $4586 = -1.0 * $4585;
                  $4587 = $4583 + $4586;
                  $4588 = $x504;
                  $4589 = -0.81000000000000005 * $4588;
                  $4590 = $4587 + $4589;
                  $4591 = (($evalcond100) + 24|0);
                  HEAPF64[$4591>>3] = $4590;
                  $4592 = $x498;
                  $4593 = 0.40500000000000003 * $4592;
                  $4594 = $x497;
                  $4595 = -1.0 * $4594;
                  $4596 = $x499;
                  $4597 = $4595 * $4596;
                  $4598 = $4593 + $4597;
                  $4599 = $x498;
                  $4600 = $x502;
                  $4601 = $4599 * $4600;
                  $4602 = $4598 + $4601;
                  $4603 = $x501;
                  $4604 = $4602 + $4603;
                  $4605 = $x500;
                  $4606 = -1.0 * $4605;
                  $4607 = $4604 + $4606;
                  $4608 = (($evalcond100) + 32|0);
                  HEAPF64[$4608>>3] = $4607;
                  $4609 = +HEAPF64[$evalcond100>>3];
                  $4610 = (+__Z5IKabsd($4609));
                  $4611 = $4610 > 5.0000000000000004E-6;
                  do {
                   if (!($4611)) {
                    $4612 = (($evalcond100) + 8|0);
                    $4613 = +HEAPF64[$4612>>3];
                    $4614 = (+__Z5IKabsd($4613));
                    $4615 = $4614 > 5.0000000000000004E-6;
                    if ($4615) {
                     break;
                    }
                    $4616 = (($evalcond100) + 16|0);
                    $4617 = +HEAPF64[$4616>>3];
                    $4618 = (+__Z5IKabsd($4617));
                    $4619 = $4618 > 5.0000000000000004E-6;
                    if ($4619) {
                     break;
                    }
                    $4620 = (($evalcond100) + 24|0);
                    $4621 = +HEAPF64[$4620>>3];
                    $4622 = (+__Z5IKabsd($4621));
                    $4623 = $4622 > 5.0000000000000004E-6;
                    if ($4623) {
                     break;
                    }
                    $4624 = (($evalcond100) + 32|0);
                    $4625 = +HEAPF64[$4624>>3];
                    $4626 = (+__Z5IKabsd($4625));
                    $4627 = $4626 > 5.0000000000000004E-6;
                    if ($4627) {
                     break;
                    }
                    $4628 = $4;
                    __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$4628);
                    break L96;
                   }
                  } while(0);
                 } else {
                 }
                } while(0);
                $4629 = $ij198;
                $4630 = (($4629) + 1)|0;
                $ij198 = $4630;
               }
              }
             } while(0);
             if ((label|0) == 429) {
              label = 0;
              $3575 = (($5) + 464|0);
              $3576 = +HEAPF64[$3575>>3];
              $3577 = (($5) + 16|0);
              $3578 = +HEAPF64[$3577>>3];
              $3579 = $3576 * $3578;
              $x451 = $3579;
              $3580 = (($5) + 8|0);
              $3581 = +HEAPF64[$3580>>3];
              $3582 = (($5) + 488|0);
              $3583 = +HEAPF64[$3582>>3];
              $3584 = $3581 * $3583;
              $x452 = $3584;
              $3585 = (($5) + 512|0);
              $3586 = +HEAPF64[$3585>>3];
              $3587 = 1000.0 * $3586;
              $x453 = $3587;
              $3588 = (($5) + 512|0);
              $3589 = +HEAPF64[$3588>>3];
              $3590 = (($5) + 96|0);
              $3591 = +HEAPF64[$3590>>3];
              $3592 = $3589 * $3591;
              $x454 = $3592;
              $3593 = (($5) + 88|0);
              $3594 = +HEAPF64[$3593>>3];
              $3595 = 331.0 * $3594;
              $x455 = $3595;
              $3596 = (($5) + 88|0);
              $3597 = +HEAPF64[$3596>>3];
              $3598 = -1.0 * $3597;
              $3599 = $x452;
              $3600 = $3598 * $3599;
              $3601 = $x451;
              $3602 = 1.22356495468278 * $3601;
              $3603 = $3600 + $3602;
              $3604 = $x454;
              $3605 = -1.0 * $3604;
              $3606 = $3603 + $3605;
              $3607 = (($5) + 88|0);
              $3608 = +HEAPF64[$3607>>3];
              $3609 = $x451;
              $3610 = $3608 * $3609;
              $3611 = $3606 + $3610;
              $3612 = $x452;
              $3613 = -1.22356495468278 * $3612;
              $3614 = $3611 + $3613;
              HEAPF64[$j1eval78>>3] = $3614;
              $3615 = $x451;
              $3616 = 405.0 * $3615;
              $3617 = $x452;
              $3618 = -405.0 * $3617;
              $3619 = $3616 + $3618;
              $3620 = $x452;
              $3621 = -1.0 * $3620;
              $3622 = $x455;
              $3623 = $3621 * $3622;
              $3624 = $3619 + $3623;
              $3625 = $x454;
              $3626 = -331.0 * $3625;
              $3627 = $3624 + $3626;
              $3628 = $x451;
              $3629 = $x455;
              $3630 = $3628 * $3629;
              $3631 = $3627 + $3630;
              $3632 = (+__Z6IKsignd($3631));
              $3633 = (($j1eval78) + 8|0);
              HEAPF64[$3633>>3] = $3632;
              $3634 = $x452;
              $3635 = $x453;
              $3636 = $3634 * $3635;
              $3637 = (($5) + 96|0);
              $3638 = +HEAPF64[$3637>>3];
              $3639 = 134.05500000000001 * $3638;
              $3640 = $3636 + $3639;
              $3641 = $x451;
              $3642 = -1.0 * $3641;
              $3643 = $x453;
              $3644 = $3642 * $3643;
              $3645 = $3640 + $3644;
              $3646 = (($5) + 88|0);
              $3647 = +HEAPF64[$3646>>3];
              $3648 = 109.56100000000001 * $3647;
              $3649 = (($5) + 96|0);
              $3650 = +HEAPF64[$3649>>3];
              $3651 = $3648 * $3650;
              $3652 = $3645 + $3651;
              $3653 = (+__Z5IKabsd($3652));
              $3654 = (($5) + 88|0);
              $3655 = +HEAPF64[$3654>>3];
              $3656 = -268.11000000000001 * $3655;
              $3657 = -164.02500000000001 + $3656;
              $3658 = (($5) + 512|0);
              $3659 = +HEAPF64[$3658>>3];
              $3660 = $x453;
              $3661 = $3659 * $3660;
              $3662 = $3657 + $3661;
              $3663 = (($5) + 88|0);
              $3664 = +HEAPF64[$3663>>3];
              $3665 = (($5) + 88|0);
              $3666 = +HEAPF64[$3665>>3];
              $3667 = $3664 * $3666;
              $3668 = -109.56100000000001 * $3667;
              $3669 = $3662 + $3668;
              $3670 = (+__Z5IKabsd($3669));
              $3671 = $3653 + $3670;
              $3672 = (($j1eval78) + 16|0);
              HEAPF64[$3672>>3] = $3671;
              $3673 = +HEAPF64[$j1eval78>>3];
              $3674 = (+__Z5IKabsd($3673));
              $3675 = $3674 < 9.9999999999999995E-7;
              do {
               if ($3675) {
                label = 432;
               } else {
                $3676 = (($j1eval78) + 8|0);
                $3677 = +HEAPF64[$3676>>3];
                $3678 = (+__Z5IKabsd($3677));
                $3679 = $3678 < 9.9999999999999995E-7;
                if ($3679) {
                 label = 432;
                 break;
                }
                $3680 = (($j1eval78) + 16|0);
                $3681 = +HEAPF64[$3680>>3];
                $3682 = (+__Z5IKabsd($3681));
                $3683 = $3682 < 9.9999999999999995E-7;
                if ($3683) {
                 label = 432;
                 break;
                }
                ;HEAP8[$j1valid90+0>>0]=0|0;
                $4083 = (($5) + 541|0);
                HEAP8[$4083>>0] = 1;
                $4084 = (($5) + 8|0);
                $4085 = +HEAPF64[$4084>>3];
                $4086 = (($5) + 488|0);
                $4087 = +HEAPF64[$4086>>3];
                $4088 = $4085 * $4087;
                $x477 = $4088;
                $4089 = (($5) + 512|0);
                $4090 = +HEAPF64[$4089>>3];
                $4091 = 1000.0 * $4090;
                $x478 = $4091;
                $4092 = (($5) + 464|0);
                $4093 = +HEAPF64[$4092>>3];
                $4094 = (($5) + 16|0);
                $4095 = +HEAPF64[$4094>>3];
                $4096 = $4093 * $4095;
                $x479 = $4096;
                $4097 = (($5) + 88|0);
                $4098 = +HEAPF64[$4097>>3];
                $4099 = 331.0 * $4098;
                $x480 = $4099;
                $4100 = $x478;
                $4101 = -1.0 * $4100;
                $4102 = $x479;
                $4103 = $4101 * $4102;
                $4104 = (($5) + 96|0);
                $4105 = +HEAPF64[$4104>>3];
                $4106 = 134.05500000000001 * $4105;
                $4107 = $4103 + $4106;
                $4108 = $x477;
                $4109 = $x478;
                $4110 = $4108 * $4109;
                $4111 = $4107 + $4110;
                $4112 = (($5) + 88|0);
                $4113 = +HEAPF64[$4112>>3];
                $4114 = 109.56100000000001 * $4113;
                $4115 = (($5) + 96|0);
                $4116 = +HEAPF64[$4115>>3];
                $4117 = $4114 * $4116;
                $4118 = $4111 + $4117;
                $4119 = (($5) + 512|0);
                $4120 = +HEAPF64[$4119>>3];
                $4121 = $x478;
                $4122 = $4120 * $4121;
                $4123 = -164.02500000000001 + $4122;
                $4124 = (($5) + 88|0);
                $4125 = +HEAPF64[$4124>>3];
                $4126 = -268.11000000000001 * $4125;
                $4127 = $4123 + $4126;
                $4128 = (($5) + 88|0);
                $4129 = +HEAPF64[$4128>>3];
                $4130 = (($5) + 88|0);
                $4131 = +HEAPF64[$4130>>3];
                $4132 = $4129 * $4131;
                $4133 = -109.56100000000001 * $4132;
                $4134 = $4127 + $4133;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x481,$4118,$4134,1.9999999999999999E-6);
                $4135 = (($x481) + 8|0);
                $4136 = HEAP8[$4135>>0]|0;
                $4137 = $4136&1;
                if (!($4137)) {
                 break L62;
                }
                $4138 = $x477;
                $4139 = -405.0 * $4138;
                $4140 = (($5) + 512|0);
                $4141 = +HEAPF64[$4140>>3];
                $4142 = -331.0 * $4141;
                $4143 = (($5) + 96|0);
                $4144 = +HEAPF64[$4143>>3];
                $4145 = $4142 * $4144;
                $4146 = $4139 + $4145;
                $4147 = $x479;
                $4148 = 405.0 * $4147;
                $4149 = $4146 + $4148;
                $4150 = $x477;
                $4151 = -1.0 * $4150;
                $4152 = $x480;
                $4153 = $4151 * $4152;
                $4154 = $4149 + $4153;
                $4155 = $x479;
                $4156 = $x480;
                $4157 = $4155 * $4156;
                $4158 = $4154 + $4157;
                $4159 = (+__Z6IKsignd($4158));
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x482,$4159,-1);
                $4160 = (($x482) + 8|0);
                $4161 = HEAP8[$4160>>0]|0;
                $4162 = $4161&1;
                if (!($4162)) {
                 break L62;
                }
                $4163 = +HEAPF64[$x481>>3];
                $4164 = -1.5707963267949001 + $4163;
                $4165 = +HEAPF64[$x482>>3];
                $4166 = 1.5707963267949001 * $4165;
                $4167 = $4164 + $4166;
                HEAPF64[$j1array87>>3] = $4167;
                $4168 = +HEAPF64[$j1array87>>3];
                $4169 = (+__Z5IKsind($4168));
                HEAPF64[$sj1array89>>3] = $4169;
                $4170 = +HEAPF64[$j1array87>>3];
                $4171 = (+__Z5IKcosd($4170));
                HEAPF64[$cj1array88>>3] = $4171;
                $4172 = +HEAPF64[$j1array87>>3];
                $4173 = $4172 > 3.14159265358979;
                if ($4173) {
                 $4174 = +HEAPF64[$j1array87>>3];
                 $4175 = $4174 - 6.2831853071795898;
                 HEAPF64[$j1array87>>3] = $4175;
                } else {
                 $4176 = +HEAPF64[$j1array87>>3];
                 $4177 = $4176 < -3.14159265358979;
                 if ($4177) {
                  $4178 = +HEAPF64[$j1array87>>3];
                  $4179 = $4178 + 6.2831853071795898;
                  HEAPF64[$j1array87>>3] = $4179;
                 }
                }
                HEAP8[$j1valid90>>0] = 1;
                $ij191 = 0;
                while(1) {
                 $4180 = $ij191;
                 $4181 = ($4180|0)<(1);
                 if (!($4181)) {
                  break;
                 }
                 $4182 = $ij191;
                 $4183 = (($j1valid90) + ($4182)|0);
                 $4184 = HEAP8[$4183>>0]|0;
                 $4185 = $4184&1;
                 L141: do {
                  if ($4185) {
                   $4186 = $ij191;
                   $4187 = $4186&255;
                   $4188 = (($5) + 539|0);
                   HEAP8[$4188>>0] = $4187;
                   $4189 = (($5) + 539|0);
                   $4190 = (($4189) + 1|0);
                   HEAP8[$4190>>0] = -1;
                   $4191 = $ij191;
                   $4192 = (($4191) + 1)|0;
                   $iij192 = $4192;
                   L144: while(1) {
                    $4193 = $iij192;
                    $4194 = ($4193|0)<(1);
                    if (!($4194)) {
                     break;
                    }
                    $4195 = $iij192;
                    $4196 = (($j1valid90) + ($4195)|0);
                    $4197 = HEAP8[$4196>>0]|0;
                    $4198 = $4197&1;
                    do {
                     if ($4198) {
                      $4199 = $ij191;
                      $4200 = (($cj1array88) + ($4199<<3)|0);
                      $4201 = +HEAPF64[$4200>>3];
                      $4202 = $iij192;
                      $4203 = (($cj1array88) + ($4202<<3)|0);
                      $4204 = +HEAPF64[$4203>>3];
                      $4205 = $4201 - $4204;
                      $4206 = (+__Z5IKabsd($4205));
                      $4207 = $4206 < 9.9999999999999995E-7;
                      if (!($4207)) {
                       break;
                      }
                      $4208 = $ij191;
                      $4209 = (($sj1array89) + ($4208<<3)|0);
                      $4210 = +HEAPF64[$4209>>3];
                      $4211 = $iij192;
                      $4212 = (($sj1array89) + ($4211<<3)|0);
                      $4213 = +HEAPF64[$4212>>3];
                      $4214 = $4210 - $4213;
                      $4215 = (+__Z5IKabsd($4214));
                      $4216 = $4215 < 9.9999999999999995E-7;
                      if ($4216) {
                       label = 485;
                       break L144;
                      }
                     }
                    } while(0);
                    $4223 = $iij192;
                    $4224 = (($4223) + 1)|0;
                    $iij192 = $4224;
                   }
                   if ((label|0) == 485) {
                    label = 0;
                    $4217 = $iij192;
                    $4218 = (($j1valid90) + ($4217)|0);
                    HEAP8[$4218>>0] = 0;
                    $4219 = $iij192;
                    $4220 = $4219&255;
                    $4221 = (($5) + 539|0);
                    $4222 = (($4221) + 1|0);
                    HEAP8[$4222>>0] = $4220;
                   }
                   $4225 = $ij191;
                   $4226 = (($j1array87) + ($4225<<3)|0);
                   $4227 = +HEAPF64[$4226>>3];
                   $4228 = (($5) + 40|0);
                   HEAPF64[$4228>>3] = $4227;
                   $4229 = $ij191;
                   $4230 = (($cj1array88) + ($4229<<3)|0);
                   $4231 = +HEAPF64[$4230>>3];
                   $4232 = (($5) + 48|0);
                   HEAPF64[$4232>>3] = $4231;
                   $4233 = $ij191;
                   $4234 = (($sj1array89) + ($4233<<3)|0);
                   $4235 = +HEAPF64[$4234>>3];
                   $4236 = (($5) + 56|0);
                   HEAPF64[$4236>>3] = $4235;
                   $4237 = (($5) + 40|0);
                   $4238 = +HEAPF64[$4237>>3];
                   $4239 = (+__Z5IKsind($4238));
                   $x483 = $4239;
                   $4240 = (($5) + 40|0);
                   $4241 = +HEAPF64[$4240>>3];
                   $4242 = (+__Z5IKcosd($4241));
                   $x484 = $4242;
                   $4243 = (($5) + 96|0);
                   $4244 = +HEAPF64[$4243>>3];
                   $4245 = 0.33100000000000002 * $4244;
                   $x485 = $4245;
                   $4246 = (($5) + 8|0);
                   $4247 = +HEAPF64[$4246>>3];
                   $4248 = (($5) + 488|0);
                   $4249 = +HEAPF64[$4248>>3];
                   $4250 = $4247 * $4249;
                   $x486 = $4250;
                   $4251 = (($5) + 464|0);
                   $4252 = +HEAPF64[$4251>>3];
                   $4253 = (($5) + 16|0);
                   $4254 = +HEAPF64[$4253>>3];
                   $4255 = $4252 * $4254;
                   $x487 = $4255;
                   $4256 = (($5) + 88|0);
                   $4257 = +HEAPF64[$4256>>3];
                   $4258 = 0.33100000000000002 * $4257;
                   $x488 = $4258;
                   $4259 = $x484;
                   $4260 = 0.81000000000000005 * $4259;
                   $x489 = $4260;
                   $4261 = (($5) + 512|0);
                   $4262 = +HEAPF64[$4261>>3];
                   $4263 = $x483;
                   $4264 = $4262 * $4263;
                   $x490 = $4264;
                   $4265 = $x484;
                   $4266 = $x485;
                   $4267 = $4265 * $4266;
                   $4268 = $x483;
                   $4269 = $x488;
                   $4270 = $4268 * $4269;
                   $4271 = $4267 + $4270;
                   $4272 = (($5) + 512|0);
                   $4273 = +HEAPF64[$4272>>3];
                   $4274 = $4271 + $4273;
                   $4275 = $x483;
                   $4276 = 0.40500000000000003 * $4275;
                   $4277 = $4274 + $4276;
                   HEAPF64[$evalcond93>>3] = $4277;
                   $4278 = (($5) + 512|0);
                   $4279 = +HEAPF64[$4278>>3];
                   $4280 = $x484;
                   $4281 = $4279 * $4280;
                   $4282 = $x483;
                   $4283 = $x486;
                   $4284 = $4282 * $4283;
                   $4285 = $4281 + $4284;
                   $4286 = $x485;
                   $4287 = $4285 + $4286;
                   $4288 = $x483;
                   $4289 = -1.0 * $4288;
                   $4290 = $x487;
                   $4291 = $4289 * $4290;
                   $4292 = $4287 + $4291;
                   $4293 = (($evalcond93) + 8|0);
                   HEAPF64[$4293>>3] = $4292;
                   $4294 = $x484;
                   $4295 = $x487;
                   $4296 = $4294 * $4295;
                   $4297 = 0.40500000000000003 + $4296;
                   $4298 = $x484;
                   $4299 = -1.0 * $4298;
                   $4300 = $x486;
                   $4301 = $4299 * $4300;
                   $4302 = $4297 + $4301;
                   $4303 = $x488;
                   $4304 = $4302 + $4303;
                   $4305 = $x490;
                   $4306 = $4304 + $4305;
                   $4307 = (($evalcond93) + 16|0);
                   HEAPF64[$4307>>3] = $4306;
                   $4308 = $x490;
                   $4309 = -0.81000000000000005 * $4308;
                   $4310 = -0.044433977499999999 + $4309;
                   $4311 = (($5) + 528|0);
                   $4312 = +HEAPF64[$4311>>3];
                   $4313 = -1.0 * $4312;
                   $4314 = $4310 + $4313;
                   $4315 = $x487;
                   $4316 = -1.0 * $4315;
                   $4317 = $x489;
                   $4318 = $4316 * $4317;
                   $4319 = $4314 + $4318;
                   $4320 = $x486;
                   $4321 = $x489;
                   $4322 = $4320 * $4321;
                   $4323 = $4319 + $4322;
                   $4324 = (($evalcond93) + 24|0);
                   HEAPF64[$4324>>3] = $4323;
                   $4325 = $x484;
                   $4326 = $x488;
                   $4327 = $4325 * $4326;
                   $4328 = $x483;
                   $4329 = -1.0 * $4328;
                   $4330 = $x485;
                   $4331 = $4329 * $4330;
                   $4332 = $4327 + $4331;
                   $4333 = $x486;
                   $4334 = -1.0 * $4333;
                   $4335 = $4332 + $4334;
                   $4336 = $x487;
                   $4337 = $4335 + $4336;
                   $4338 = $x484;
                   $4339 = 0.40500000000000003 * $4338;
                   $4340 = $4337 + $4339;
                   $4341 = (($evalcond93) + 32|0);
                   HEAPF64[$4341>>3] = $4340;
                   $4342 = +HEAPF64[$evalcond93>>3];
                   $4343 = (+__Z5IKabsd($4342));
                   $4344 = $4343 > 5.0000000000000004E-6;
                   do {
                    if (!($4344)) {
                     $4345 = (($evalcond93) + 8|0);
                     $4346 = +HEAPF64[$4345>>3];
                     $4347 = (+__Z5IKabsd($4346));
                     $4348 = $4347 > 5.0000000000000004E-6;
                     if ($4348) {
                      break;
                     }
                     $4349 = (($evalcond93) + 16|0);
                     $4350 = +HEAPF64[$4349>>3];
                     $4351 = (+__Z5IKabsd($4350));
                     $4352 = $4351 > 5.0000000000000004E-6;
                     if ($4352) {
                      break;
                     }
                     $4353 = (($evalcond93) + 24|0);
                     $4354 = +HEAPF64[$4353>>3];
                     $4355 = (+__Z5IKabsd($4354));
                     $4356 = $4355 > 5.0000000000000004E-6;
                     if ($4356) {
                      break;
                     }
                     $4357 = (($evalcond93) + 32|0);
                     $4358 = +HEAPF64[$4357>>3];
                     $4359 = (+__Z5IKabsd($4358));
                     $4360 = $4359 > 5.0000000000000004E-6;
                     if ($4360) {
                      break;
                     }
                     $4361 = $4;
                     __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$4361);
                     break L141;
                    }
                   } while(0);
                  } else {
                  }
                 } while(0);
                 $4362 = $ij191;
                 $4363 = (($4362) + 1)|0;
                 $ij191 = $4363;
                }
               }
              } while(0);
              L164: do {
               if ((label|0) == 432) {
                label = 0;
                $3684 = (($5) + 464|0);
                $3685 = +HEAPF64[$3684>>3];
                $3686 = (($5) + 16|0);
                $3687 = +HEAPF64[$3686>>3];
                $3688 = $3685 * $3687;
                $x456 = $3688;
                $3689 = (($5) + 8|0);
                $3690 = +HEAPF64[$3689>>3];
                $3691 = (($5) + 488|0);
                $3692 = +HEAPF64[$3691>>3];
                $3693 = $3690 * $3692;
                $x457 = $3693;
                $3694 = (($5) + 88|0);
                $3695 = +HEAPF64[$3694>>3];
                $3696 = 26811.0 * $3695;
                $x458 = $3696;
                $3697 = (($5) + 528|0);
                $3698 = +HEAPF64[$3697>>3];
                $3699 = 33100.0 * $3698;
                $x459 = $3699;
                $3700 = (($5) + 512|0);
                $3701 = +HEAPF64[$3700>>3];
                $3702 = (($5) + 96|0);
                $3703 = +HEAPF64[$3702>>3];
                $3704 = $3701 * $3703;
                $x460 = $3704;
                $3705 = (($5) + 512|0);
                $3706 = +HEAPF64[$3705>>3];
                $3707 = 81000.0 * $3706;
                $x461 = $3707;
                $3708 = (($5) + 88|0);
                $3709 = +HEAPF64[$3708>>3];
                $3710 = -1.0 * $3709;
                $3711 = $x456;
                $3712 = $3710 * $3711;
                $3713 = $x457;
                $3714 = 1.22356495468278 * $3713;
                $3715 = $3712 + $3714;
                $3716 = (($5) + 88|0);
                $3717 = +HEAPF64[$3716>>3];
                $3718 = $x457;
                $3719 = $3717 * $3718;
                $3720 = $3715 + $3719;
                $3721 = $x460;
                $3722 = $3720 + $3721;
                $3723 = $x456;
                $3724 = -1.22356495468278 * $3723;
                $3725 = $3722 + $3724;
                HEAPF64[$j1eval79>>3] = $3725;
                $3726 = (($5) + 88|0);
                $3727 = +HEAPF64[$3726>>3];
                $3728 = 1470.76465525 * $3727;
                $3729 = 1799.5760887500001 + $3728;
                $3730 = (($5) + 88|0);
                $3731 = +HEAPF64[$3730>>3];
                $3732 = $x459;
                $3733 = $3731 * $3732;
                $3734 = $3729 + $3733;
                $3735 = (($5) + 512|0);
                $3736 = +HEAPF64[$3735>>3];
                $3737 = -1.0 * $3736;
                $3738 = $x461;
                $3739 = $3737 * $3738;
                $3740 = $3734 + $3739;
                $3741 = (($5) + 528|0);
                $3742 = +HEAPF64[$3741>>3];
                $3743 = 40500.0 * $3742;
                $3744 = $3740 + $3743;
                $3745 = (+__Z5IKabsd($3744));
                $3746 = $x456;
                $3747 = $x461;
                $3748 = $3746 * $3747;
                $3749 = (($5) + 96|0);
                $3750 = +HEAPF64[$3749>>3];
                $3751 = -1470.76465525 * $3750;
                $3752 = $3748 + $3751;
                $3753 = (($5) + 96|0);
                $3754 = +HEAPF64[$3753>>3];
                $3755 = -1.0 * $3754;
                $3756 = $x459;
                $3757 = $3755 * $3756;
                $3758 = $3752 + $3757;
                $3759 = $x457;
                $3760 = -1.0 * $3759;
                $3761 = $x461;
                $3762 = $3760 * $3761;
                $3763 = $3758 + $3762;
                $3764 = (+__Z5IKabsd($3763));
                $3765 = $3745 + $3764;
                $3766 = (($j1eval79) + 8|0);
                HEAPF64[$3766>>3] = $3765;
                $3767 = $x456;
                $3768 = -32805.0 * $3767;
                $3769 = $x456;
                $3770 = -1.0 * $3769;
                $3771 = $x458;
                $3772 = $3770 * $3771;
                $3773 = $3768 + $3772;
                $3774 = $x457;
                $3775 = 32805.0 * $3774;
                $3776 = $3773 + $3775;
                $3777 = $x460;
                $3778 = 26811.0 * $3777;
                $3779 = $3776 + $3778;
                $3780 = $x457;
                $3781 = $x458;
                $3782 = $3780 * $3781;
                $3783 = $3779 + $3782;
                $3784 = (+__Z6IKsignd($3783));
                $3785 = (($j1eval79) + 16|0);
                HEAPF64[$3785>>3] = $3784;
                $3786 = +HEAPF64[$j1eval79>>3];
                $3787 = (+__Z5IKabsd($3786));
                $3788 = $3787 < 9.9999999999999995E-7;
                do {
                 if (!($3788)) {
                  $3789 = (($j1eval79) + 8|0);
                  $3790 = +HEAPF64[$3789>>3];
                  $3791 = (+__Z5IKabsd($3790));
                  $3792 = $3791 < 9.9999999999999995E-7;
                  if ($3792) {
                   break;
                  }
                  $3793 = (($j1eval79) + 16|0);
                  $3794 = +HEAPF64[$3793>>3];
                  $3795 = (+__Z5IKabsd($3794));
                  $3796 = $3795 < 9.9999999999999995E-7;
                  if ($3796) {
                   break;
                  }
                  ;HEAP8[$j1valid83+0>>0]=0|0;
                  $3797 = (($5) + 541|0);
                  HEAP8[$3797>>0] = 1;
                  $3798 = (($5) + 8|0);
                  $3799 = +HEAPF64[$3798>>3];
                  $3800 = (($5) + 488|0);
                  $3801 = +HEAPF64[$3800>>3];
                  $3802 = $3799 * $3801;
                  $x462 = $3802;
                  $3803 = (($5) + 512|0);
                  $3804 = +HEAPF64[$3803>>3];
                  $3805 = 81000.0 * $3804;
                  $x463 = $3805;
                  $3806 = (($5) + 88|0);
                  $3807 = +HEAPF64[$3806>>3];
                  $3808 = 26811.0 * $3807;
                  $x464 = $3808;
                  $3809 = (($5) + 464|0);
                  $3810 = +HEAPF64[$3809>>3];
                  $3811 = (($5) + 16|0);
                  $3812 = +HEAPF64[$3811>>3];
                  $3813 = $3810 * $3812;
                  $x465 = $3813;
                  $3814 = (($5) + 528|0);
                  $3815 = +HEAPF64[$3814>>3];
                  $3816 = 33100.0 * $3815;
                  $x466 = $3816;
                  $3817 = (($5) + 96|0);
                  $3818 = +HEAPF64[$3817>>3];
                  $3819 = -1470.76465525 * $3818;
                  $3820 = $x462;
                  $3821 = -1.0 * $3820;
                  $3822 = $x463;
                  $3823 = $3821 * $3822;
                  $3824 = $3819 + $3823;
                  $3825 = $x463;
                  $3826 = $x465;
                  $3827 = $3825 * $3826;
                  $3828 = $3824 + $3827;
                  $3829 = (($5) + 96|0);
                  $3830 = +HEAPF64[$3829>>3];
                  $3831 = -1.0 * $3830;
                  $3832 = $x466;
                  $3833 = $3831 * $3832;
                  $3834 = $3828 + $3833;
                  $3835 = (($5) + 88|0);
                  $3836 = +HEAPF64[$3835>>3];
                  $3837 = 1470.76465525 * $3836;
                  $3838 = 1799.5760887500001 + $3837;
                  $3839 = (($5) + 88|0);
                  $3840 = +HEAPF64[$3839>>3];
                  $3841 = $x466;
                  $3842 = $3840 * $3841;
                  $3843 = $3838 + $3842;
                  $3844 = (($5) + 512|0);
                  $3845 = +HEAPF64[$3844>>3];
                  $3846 = -1.0 * $3845;
                  $3847 = $x463;
                  $3848 = $3846 * $3847;
                  $3849 = $3843 + $3848;
                  $3850 = (($5) + 528|0);
                  $3851 = +HEAPF64[$3850>>3];
                  $3852 = 40500.0 * $3851;
                  $3853 = $3849 + $3852;
                  __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x467,$3834,$3853,1.9999999999999999E-6);
                  $3854 = (($x467) + 8|0);
                  $3855 = HEAP8[$3854>>0]|0;
                  $3856 = $3855&1;
                  if (!($3856)) {
                   break L62;
                  }
                  $3857 = (($5) + 512|0);
                  $3858 = +HEAPF64[$3857>>3];
                  $3859 = 26811.0 * $3858;
                  $3860 = (($5) + 96|0);
                  $3861 = +HEAPF64[$3860>>3];
                  $3862 = $3859 * $3861;
                  $3863 = $x465;
                  $3864 = -32805.0 * $3863;
                  $3865 = $3862 + $3864;
                  $3866 = $x464;
                  $3867 = -1.0 * $3866;
                  $3868 = $x465;
                  $3869 = $3867 * $3868;
                  $3870 = $3865 + $3869;
                  $3871 = $x462;
                  $3872 = 32805.0 * $3871;
                  $3873 = $3870 + $3872;
                  $3874 = $x462;
                  $3875 = $x464;
                  $3876 = $3874 * $3875;
                  $3877 = $3873 + $3876;
                  $3878 = (+__Z6IKsignd($3877));
                  __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x468,$3878,-1);
                  $3879 = (($x468) + 8|0);
                  $3880 = HEAP8[$3879>>0]|0;
                  $3881 = $3880&1;
                  if (!($3881)) {
                   break L62;
                  }
                  $3882 = +HEAPF64[$x467>>3];
                  $3883 = -1.5707963267949001 + $3882;
                  $3884 = +HEAPF64[$x468>>3];
                  $3885 = 1.5707963267949001 * $3884;
                  $3886 = $3883 + $3885;
                  HEAPF64[$j1array80>>3] = $3886;
                  $3887 = +HEAPF64[$j1array80>>3];
                  $3888 = (+__Z5IKsind($3887));
                  HEAPF64[$sj1array82>>3] = $3888;
                  $3889 = +HEAPF64[$j1array80>>3];
                  $3890 = (+__Z5IKcosd($3889));
                  HEAPF64[$cj1array81>>3] = $3890;
                  $3891 = +HEAPF64[$j1array80>>3];
                  $3892 = $3891 > 3.14159265358979;
                  if ($3892) {
                   $3893 = +HEAPF64[$j1array80>>3];
                   $3894 = $3893 - 6.2831853071795898;
                   HEAPF64[$j1array80>>3] = $3894;
                  } else {
                   $3895 = +HEAPF64[$j1array80>>3];
                   $3896 = $3895 < -3.14159265358979;
                   if ($3896) {
                    $3897 = +HEAPF64[$j1array80>>3];
                    $3898 = $3897 + 6.2831853071795898;
                    HEAPF64[$j1array80>>3] = $3898;
                   }
                  }
                  HEAP8[$j1valid83>>0] = 1;
                  $ij184 = 0;
                  while(1) {
                   $3899 = $ij184;
                   $3900 = ($3899|0)<(1);
                   if (!($3900)) {
                    break;
                   }
                   $3901 = $ij184;
                   $3902 = (($j1valid83) + ($3901)|0);
                   $3903 = HEAP8[$3902>>0]|0;
                   $3904 = $3903&1;
                   L186: do {
                    if ($3904) {
                     $3905 = $ij184;
                     $3906 = $3905&255;
                     $3907 = (($5) + 539|0);
                     HEAP8[$3907>>0] = $3906;
                     $3908 = (($5) + 539|0);
                     $3909 = (($3908) + 1|0);
                     HEAP8[$3909>>0] = -1;
                     $3910 = $ij184;
                     $3911 = (($3910) + 1)|0;
                     $iij185 = $3911;
                     L189: while(1) {
                      $3912 = $iij185;
                      $3913 = ($3912|0)<(1);
                      if (!($3913)) {
                       break;
                      }
                      $3914 = $iij185;
                      $3915 = (($j1valid83) + ($3914)|0);
                      $3916 = HEAP8[$3915>>0]|0;
                      $3917 = $3916&1;
                      do {
                       if ($3917) {
                        $3918 = $ij184;
                        $3919 = (($cj1array81) + ($3918<<3)|0);
                        $3920 = +HEAPF64[$3919>>3];
                        $3921 = $iij185;
                        $3922 = (($cj1array81) + ($3921<<3)|0);
                        $3923 = +HEAPF64[$3922>>3];
                        $3924 = $3920 - $3923;
                        $3925 = (+__Z5IKabsd($3924));
                        $3926 = $3925 < 9.9999999999999995E-7;
                        if (!($3926)) {
                         break;
                        }
                        $3927 = $ij184;
                        $3928 = (($sj1array82) + ($3927<<3)|0);
                        $3929 = +HEAPF64[$3928>>3];
                        $3930 = $iij185;
                        $3931 = (($sj1array82) + ($3930<<3)|0);
                        $3932 = +HEAPF64[$3931>>3];
                        $3933 = $3929 - $3932;
                        $3934 = (+__Z5IKabsd($3933));
                        $3935 = $3934 < 9.9999999999999995E-7;
                        if ($3935) {
                         label = 454;
                         break L189;
                        }
                       }
                      } while(0);
                      $3942 = $iij185;
                      $3943 = (($3942) + 1)|0;
                      $iij185 = $3943;
                     }
                     if ((label|0) == 454) {
                      label = 0;
                      $3936 = $iij185;
                      $3937 = (($j1valid83) + ($3936)|0);
                      HEAP8[$3937>>0] = 0;
                      $3938 = $iij185;
                      $3939 = $3938&255;
                      $3940 = (($5) + 539|0);
                      $3941 = (($3940) + 1|0);
                      HEAP8[$3941>>0] = $3939;
                     }
                     $3944 = $ij184;
                     $3945 = (($j1array80) + ($3944<<3)|0);
                     $3946 = +HEAPF64[$3945>>3];
                     $3947 = (($5) + 40|0);
                     HEAPF64[$3947>>3] = $3946;
                     $3948 = $ij184;
                     $3949 = (($cj1array81) + ($3948<<3)|0);
                     $3950 = +HEAPF64[$3949>>3];
                     $3951 = (($5) + 48|0);
                     HEAPF64[$3951>>3] = $3950;
                     $3952 = $ij184;
                     $3953 = (($sj1array82) + ($3952<<3)|0);
                     $3954 = +HEAPF64[$3953>>3];
                     $3955 = (($5) + 56|0);
                     HEAPF64[$3955>>3] = $3954;
                     $3956 = (($5) + 40|0);
                     $3957 = +HEAPF64[$3956>>3];
                     $3958 = (+__Z5IKsind($3957));
                     $x469 = $3958;
                     $3959 = (($5) + 40|0);
                     $3960 = +HEAPF64[$3959>>3];
                     $3961 = (+__Z5IKcosd($3960));
                     $x470 = $3961;
                     $3962 = (($5) + 96|0);
                     $3963 = +HEAPF64[$3962>>3];
                     $3964 = 0.33100000000000002 * $3963;
                     $x471 = $3964;
                     $3965 = (($5) + 8|0);
                     $3966 = +HEAPF64[$3965>>3];
                     $3967 = (($5) + 488|0);
                     $3968 = +HEAPF64[$3967>>3];
                     $3969 = $3966 * $3968;
                     $x472 = $3969;
                     $3970 = (($5) + 464|0);
                     $3971 = +HEAPF64[$3970>>3];
                     $3972 = (($5) + 16|0);
                     $3973 = +HEAPF64[$3972>>3];
                     $3974 = $3971 * $3973;
                     $x473 = $3974;
                     $3975 = (($5) + 88|0);
                     $3976 = +HEAPF64[$3975>>3];
                     $3977 = 0.33100000000000002 * $3976;
                     $x474 = $3977;
                     $3978 = $x470;
                     $3979 = 0.81000000000000005 * $3978;
                     $x475 = $3979;
                     $3980 = (($5) + 512|0);
                     $3981 = +HEAPF64[$3980>>3];
                     $3982 = $x469;
                     $3983 = $3981 * $3982;
                     $x476 = $3983;
                     $3984 = $x469;
                     $3985 = $x474;
                     $3986 = $3984 * $3985;
                     $3987 = $x470;
                     $3988 = $x471;
                     $3989 = $3987 * $3988;
                     $3990 = $3986 + $3989;
                     $3991 = $x469;
                     $3992 = 0.40500000000000003 * $3991;
                     $3993 = $3990 + $3992;
                     $3994 = (($5) + 512|0);
                     $3995 = +HEAPF64[$3994>>3];
                     $3996 = $3993 + $3995;
                     HEAPF64[$evalcond86>>3] = $3996;
                     $3997 = $x469;
                     $3998 = $x472;
                     $3999 = $3997 * $3998;
                     $4000 = $x469;
                     $4001 = -1.0 * $4000;
                     $4002 = $x473;
                     $4003 = $4001 * $4002;
                     $4004 = $3999 + $4003;
                     $4005 = $x471;
                     $4006 = $4004 + $4005;
                     $4007 = (($5) + 512|0);
                     $4008 = +HEAPF64[$4007>>3];
                     $4009 = $x470;
                     $4010 = $4008 * $4009;
                     $4011 = $4006 + $4010;
                     $4012 = (($evalcond86) + 8|0);
                     HEAPF64[$4012>>3] = $4011;
                     $4013 = $x470;
                     $4014 = $x473;
                     $4015 = $4013 * $4014;
                     $4016 = 0.40500000000000003 + $4015;
                     $4017 = $x474;
                     $4018 = $4016 + $4017;
                     $4019 = $x476;
                     $4020 = $4018 + $4019;
                     $4021 = $x470;
                     $4022 = -1.0 * $4021;
                     $4023 = $x472;
                     $4024 = $4022 * $4023;
                     $4025 = $4020 + $4024;
                     $4026 = (($evalcond86) + 16|0);
                     HEAPF64[$4026>>3] = $4025;
                     $4027 = $x472;
                     $4028 = $x475;
                     $4029 = $4027 * $4028;
                     $4030 = -0.044433977499999999 + $4029;
                     $4031 = $x473;
                     $4032 = -1.0 * $4031;
                     $4033 = $x475;
                     $4034 = $4032 * $4033;
                     $4035 = $4030 + $4034;
                     $4036 = (($5) + 528|0);
                     $4037 = +HEAPF64[$4036>>3];
                     $4038 = -1.0 * $4037;
                     $4039 = $4035 + $4038;
                     $4040 = $x476;
                     $4041 = -0.81000000000000005 * $4040;
                     $4042 = $4039 + $4041;
                     $4043 = (($evalcond86) + 24|0);
                     HEAPF64[$4043>>3] = $4042;
                     $4044 = $x470;
                     $4045 = $x474;
                     $4046 = $4044 * $4045;
                     $4047 = $x469;
                     $4048 = -1.0 * $4047;
                     $4049 = $x471;
                     $4050 = $4048 * $4049;
                     $4051 = $4046 + $4050;
                     $4052 = $x472;
                     $4053 = -1.0 * $4052;
                     $4054 = $4051 + $4053;
                     $4055 = $x473;
                     $4056 = $4054 + $4055;
                     $4057 = $x470;
                     $4058 = 0.40500000000000003 * $4057;
                     $4059 = $4056 + $4058;
                     $4060 = (($evalcond86) + 32|0);
                     HEAPF64[$4060>>3] = $4059;
                     $4061 = +HEAPF64[$evalcond86>>3];
                     $4062 = (+__Z5IKabsd($4061));
                     $4063 = $4062 > 5.0000000000000004E-6;
                     do {
                      if (!($4063)) {
                       $4064 = (($evalcond86) + 8|0);
                       $4065 = +HEAPF64[$4064>>3];
                       $4066 = (+__Z5IKabsd($4065));
                       $4067 = $4066 > 5.0000000000000004E-6;
                       if ($4067) {
                        break;
                       }
                       $4068 = (($evalcond86) + 16|0);
                       $4069 = +HEAPF64[$4068>>3];
                       $4070 = (+__Z5IKabsd($4069));
                       $4071 = $4070 > 5.0000000000000004E-6;
                       if ($4071) {
                        break;
                       }
                       $4072 = (($evalcond86) + 24|0);
                       $4073 = +HEAPF64[$4072>>3];
                       $4074 = (+__Z5IKabsd($4073));
                       $4075 = $4074 > 5.0000000000000004E-6;
                       if ($4075) {
                        break;
                       }
                       $4076 = (($evalcond86) + 32|0);
                       $4077 = +HEAPF64[$4076>>3];
                       $4078 = (+__Z5IKabsd($4077));
                       $4079 = $4078 > 5.0000000000000004E-6;
                       if ($4079) {
                        break;
                       }
                       $4080 = $4;
                       __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$4080);
                       break L186;
                      }
                     } while(0);
                    } else {
                    }
                   } while(0);
                   $4081 = $ij184;
                   $4082 = (($4081) + 1)|0;
                   $ij184 = $4082;
                  }
                  break L164;
                 }
                } while(0);
                break L62;
               }
              } while(0);
             }
            } else {
            }
           } while(0);
           $4631 = $ij075;
           $4632 = (($4631) + 1)|0;
           $ij075 = $4632;
          }
          break;
         }
        }
        break L16;
       }
      }
     } while(0);
     do {
      if ((label|0) == 23) {
       label = 0;
       $469 = (($5) + 96|0);
       $470 = +HEAPF64[$469>>3];
       $471 = (($5) + 96|0);
       $472 = +HEAPF64[$471>>3];
       $473 = $470 * $472;
       $474 = 1.49711119832787 + $473;
       $475 = (($5) + 88|0);
       $476 = +HEAPF64[$475>>3];
       $477 = (($5) + 88|0);
       $478 = +HEAPF64[$477>>3];
       $479 = $476 * $478;
       $480 = $474 + $479;
       $481 = (($5) + 88|0);
       $482 = +HEAPF64[$481>>3];
       $483 = 2.4471299093655601 * $482;
       $484 = $480 + $483;
       HEAPF64[$j1eval>>3] = $484;
       $485 = (($5) + 88|0);
       $486 = +HEAPF64[$485>>3];
       $487 = 0.33100000000000002 * $486;
       $488 = 0.40500000000000003 + $487;
       $489 = (+__Z5IKabsd($488));
       $490 = 3.0211480362537801 * $489;
       $491 = (($5) + 96|0);
       $492 = +HEAPF64[$491>>3];
       $493 = (+__Z5IKabsd($492));
       $494 = $490 + $493;
       $495 = (($j1eval) + 8|0);
       HEAPF64[$495>>3] = $494;
       $496 = +HEAPF64[$j1eval>>3];
       $497 = (+__Z5IKabsd($496));
       $498 = $497 < 9.9999999999999995E-7;
       if (!($498)) {
        $499 = (($j1eval) + 8|0);
        $500 = +HEAPF64[$499>>3];
        $501 = (+__Z5IKabsd($500));
        $502 = $501 < 9.9999999999999995E-7;
        if (!($502)) {
         ;HEAP8[$j1valid+0>>0]=0|0;HEAP8[$j1valid+1>>0]=0|0;
         $503 = (($5) + 541|0);
         HEAP8[$503>>0] = 2;
         $504 = (($5) + 88|0);
         $505 = +HEAPF64[$504>>3];
         $506 = 0.33100000000000002 * $505;
         $507 = 0.40500000000000003 + $506;
         $x46 = $507;
         $508 = (($5) + 96|0);
         $509 = +HEAPF64[$508>>3];
         $510 = 0.33100000000000002 * $509;
         $511 = $x46;
         __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x49,$510,$511,1.9999999999999999E-6);
         $512 = (($x49) + 8|0);
         $513 = HEAP8[$512>>0]|0;
         $514 = $513&1;
         if (!($514)) {
          break L16;
         }
         $515 = +HEAPF64[$x49>>3];
         $516 = 1.0 * $515;
         $x47 = $516;
         $517 = $x46;
         $518 = $x46;
         $519 = $517 * $518;
         $520 = (($5) + 96|0);
         $521 = +HEAPF64[$520>>3];
         $522 = (($5) + 96|0);
         $523 = +HEAPF64[$522>>3];
         $524 = $521 * $523;
         $525 = 0.10956100000000001 * $524;
         $526 = $519 + $525;
         $527 = $526 < -1.0000000000000001E-5;
         if ($527) {
          break L16;
         }
         $528 = $x46;
         $529 = $x46;
         $530 = $528 * $529;
         $531 = (($5) + 96|0);
         $532 = +HEAPF64[$531>>3];
         $533 = (($5) + 96|0);
         $534 = +HEAPF64[$533>>3];
         $535 = $532 * $534;
         $536 = 0.10956100000000001 * $535;
         $537 = $530 + $536;
         $538 = (+__Z6IKsqrtd($537));
         $539 = (+__Z5IKabsd($538));
         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x50,$539,-1);
         $540 = (($x50) + 8|0);
         $541 = HEAP8[$540>>0]|0;
         $542 = $541&1;
         if (!($542)) {
          break L16;
         }
         $543 = (($5) + 512|0);
         $544 = +HEAPF64[$543>>3];
         $545 = +HEAPF64[$x50>>3];
         $546 = $544 * $545;
         $547 = $546 < -1.0000020000000001;
         if (!($547)) {
          $548 = (($5) + 512|0);
          $549 = +HEAPF64[$548>>3];
          $550 = +HEAPF64[$x50>>3];
          $551 = $549 * $550;
          $552 = $551 > 1.0000020000000001;
          if (!($552)) {
           $553 = (($5) + 512|0);
           $554 = +HEAPF64[$553>>3];
           $555 = +HEAPF64[$x50>>3];
           $556 = $554 * $555;
           $557 = (+__Z6IKasind($556));
           $x48 = $557;
           $558 = $x48;
           $559 = -1.0 * $558;
           $560 = $x47;
           $561 = -1.0 * $560;
           $562 = $559 + $561;
           HEAPF64[$j1array>>3] = $562;
           $563 = +HEAPF64[$j1array>>3];
           $564 = (+__Z5IKsind($563));
           HEAPF64[$sj1array>>3] = $564;
           $565 = +HEAPF64[$j1array>>3];
           $566 = (+__Z5IKcosd($565));
           HEAPF64[$cj1array>>3] = $566;
           $567 = $x47;
           $568 = -1.0 * $567;
           $569 = 3.14159265358979 + $568;
           $570 = $x48;
           $571 = $569 + $570;
           $572 = (($j1array) + 8|0);
           HEAPF64[$572>>3] = $571;
           $573 = (($j1array) + 8|0);
           $574 = +HEAPF64[$573>>3];
           $575 = (+__Z5IKsind($574));
           $576 = (($sj1array) + 8|0);
           HEAPF64[$576>>3] = $575;
           $577 = (($j1array) + 8|0);
           $578 = +HEAPF64[$577>>3];
           $579 = (+__Z5IKcosd($578));
           $580 = (($cj1array) + 8|0);
           HEAPF64[$580>>3] = $579;
           $581 = +HEAPF64[$j1array>>3];
           $582 = $581 > 3.14159265358979;
           if ($582) {
            $583 = +HEAPF64[$j1array>>3];
            $584 = $583 - 6.2831853071795898;
            HEAPF64[$j1array>>3] = $584;
           } else {
            $585 = +HEAPF64[$j1array>>3];
            $586 = $585 < -3.14159265358979;
            if ($586) {
             $587 = +HEAPF64[$j1array>>3];
             $588 = $587 + 6.2831853071795898;
             HEAPF64[$j1array>>3] = $588;
            }
           }
           HEAP8[$j1valid>>0] = 1;
           $589 = (($j1array) + 8|0);
           $590 = +HEAPF64[$589>>3];
           $591 = $590 > 3.14159265358979;
           if ($591) {
            $592 = (($j1array) + 8|0);
            $593 = +HEAPF64[$592>>3];
            $594 = $593 - 6.2831853071795898;
            HEAPF64[$592>>3] = $594;
           } else {
            $595 = (($j1array) + 8|0);
            $596 = +HEAPF64[$595>>3];
            $597 = $596 < -3.14159265358979;
            if ($597) {
             $598 = (($j1array) + 8|0);
             $599 = +HEAPF64[$598>>3];
             $600 = $599 + 6.2831853071795898;
             HEAPF64[$598>>3] = $600;
            }
           }
           $601 = (($j1valid) + 1|0);
           HEAP8[$601>>0] = 1;
           $ij1 = 0;
           while(1) {
            $602 = $ij1;
            $603 = ($602|0)<(2);
            if (!($603)) {
             break;
            }
            $604 = $ij1;
            $605 = (($j1valid) + ($604)|0);
            $606 = HEAP8[$605>>0]|0;
            $607 = $606&1;
            L250: do {
             if ($607) {
              $608 = $ij1;
              $609 = $608&255;
              $610 = (($5) + 539|0);
              HEAP8[$610>>0] = $609;
              $611 = (($5) + 539|0);
              $612 = (($611) + 1|0);
              HEAP8[$612>>0] = -1;
              $613 = $ij1;
              $614 = (($613) + 1)|0;
              $iij1 = $614;
              L253: while(1) {
               $615 = $iij1;
               $616 = ($615|0)<(2);
               if (!($616)) {
                break;
               }
               $617 = $iij1;
               $618 = (($j1valid) + ($617)|0);
               $619 = HEAP8[$618>>0]|0;
               $620 = $619&1;
               do {
                if ($620) {
                 $621 = $ij1;
                 $622 = (($cj1array) + ($621<<3)|0);
                 $623 = +HEAPF64[$622>>3];
                 $624 = $iij1;
                 $625 = (($cj1array) + ($624<<3)|0);
                 $626 = +HEAPF64[$625>>3];
                 $627 = $623 - $626;
                 $628 = (+__Z5IKabsd($627));
                 $629 = $628 < 9.9999999999999995E-7;
                 if (!($629)) {
                  break;
                 }
                 $630 = $ij1;
                 $631 = (($sj1array) + ($630<<3)|0);
                 $632 = +HEAPF64[$631>>3];
                 $633 = $iij1;
                 $634 = (($sj1array) + ($633<<3)|0);
                 $635 = +HEAPF64[$634>>3];
                 $636 = $632 - $635;
                 $637 = (+__Z5IKabsd($636));
                 $638 = $637 < 9.9999999999999995E-7;
                 if ($638) {
                  label = 54;
                  break L253;
                 }
                }
               } while(0);
               $645 = $iij1;
               $646 = (($645) + 1)|0;
               $iij1 = $646;
              }
              if ((label|0) == 54) {
               label = 0;
               $639 = $iij1;
               $640 = (($j1valid) + ($639)|0);
               HEAP8[$640>>0] = 0;
               $641 = $iij1;
               $642 = $641&255;
               $643 = (($5) + 539|0);
               $644 = (($643) + 1|0);
               HEAP8[$644>>0] = $642;
              }
              $647 = $ij1;
              $648 = (($j1array) + ($647<<3)|0);
              $649 = +HEAPF64[$648>>3];
              $650 = (($5) + 40|0);
              HEAPF64[$650>>3] = $649;
              $651 = $ij1;
              $652 = (($cj1array) + ($651<<3)|0);
              $653 = +HEAPF64[$652>>3];
              $654 = (($5) + 48|0);
              HEAPF64[$654>>3] = $653;
              $655 = $ij1;
              $656 = (($sj1array) + ($655<<3)|0);
              $657 = +HEAPF64[$656>>3];
              $658 = (($5) + 56|0);
              HEAPF64[$658>>3] = $657;
              $659 = (($5) + 512|0);
              $660 = +HEAPF64[$659>>3];
              $661 = (($5) + 512|0);
              $662 = +HEAPF64[$661>>3];
              $663 = $660 * $662;
              $x51 = $663;
              $664 = (($5) + 96|0);
              $665 = +HEAPF64[$664>>3];
              $666 = 6620.0 * $665;
              $x52 = $666;
              $667 = (($5) + 528|0);
              $668 = +HEAPF64[$667>>3];
              $669 = (($5) + 56|0);
              $670 = +HEAPF64[$669>>3];
              $671 = $668 * $670;
              $x53 = $671;
              $672 = (($5) + 56|0);
              $673 = +HEAPF64[$672>>3];
              $674 = 2003.0 * $673;
              $x54 = $674;
              $675 = (($5) + 56|0);
              $676 = +HEAPF64[$675>>3];
              $677 = $x51;
              $678 = $676 * $677;
              $x55 = $678;
              $679 = (($5) + 48|0);
              $680 = +HEAPF64[$679>>3];
              $681 = 2.0E+4 * $680;
              $682 = (($5) + 512|0);
              $683 = +HEAPF64[$682>>3];
              $684 = $681 * $683;
              $x56 = $684;
              $685 = $x53;
              $686 = $x55;
              $687 = -1.0 * $686;
              $688 = $685 + $687;
              HEAPF64[$j0eval1>>3] = $688;
              $689 = (($5) + 464|0);
              $690 = +HEAPF64[$689>>3];
              $691 = $x56;
              $692 = $690 * $691;
              $693 = (($5) + 464|0);
              $694 = +HEAPF64[$693>>3];
              $695 = $x52;
              $696 = $694 * $695;
              $697 = $692 + $696;
              $698 = (($5) + 488|0);
              $699 = +HEAPF64[$698>>3];
              $700 = -1.0 * $699;
              $701 = $x54;
              $702 = $700 * $701;
              $703 = $697 + $702;
              $704 = (+__Z5IKabsd($703));
              $705 = (($5) + 464|0);
              $706 = +HEAPF64[$705>>3];
              $707 = -1.0 * $706;
              $708 = $x54;
              $709 = $707 * $708;
              $710 = (($5) + 488|0);
              $711 = +HEAPF64[$710>>3];
              $712 = -1.0 * $711;
              $713 = $x56;
              $714 = $712 * $713;
              $715 = $709 + $714;
              $716 = (($5) + 488|0);
              $717 = +HEAPF64[$716>>3];
              $718 = -1.0 * $717;
              $719 = $x52;
              $720 = $718 * $719;
              $721 = $715 + $720;
              $722 = (+__Z5IKabsd($721));
              $723 = $704 + $722;
              $724 = (($j0eval1) + 8|0);
              HEAPF64[$724>>3] = $723;
              $725 = $x53;
              $726 = 2.0E+4 * $725;
              $727 = $x55;
              $728 = -2.0E+4 * $727;
              $729 = $726 + $728;
              $730 = (+__Z6IKsignd($729));
              $731 = (($j0eval1) + 16|0);
              HEAPF64[$731>>3] = $730;
              $732 = +HEAPF64[$j0eval1>>3];
              $733 = (+__Z5IKabsd($732));
              $734 = $733 < 9.9999999999999995E-7;
              do {
               if ($734) {
                label = 60;
               } else {
                $735 = (($j0eval1) + 8|0);
                $736 = +HEAPF64[$735>>3];
                $737 = (+__Z5IKabsd($736));
                $738 = $737 < 9.9999999999999995E-7;
                if ($738) {
                 label = 60;
                 break;
                }
                $739 = (($j0eval1) + 16|0);
                $740 = +HEAPF64[$739>>3];
                $741 = (+__Z5IKabsd($740));
                $742 = $741 < 9.9999999999999995E-7;
                if ($742) {
                 label = 60;
                 break;
                }
                ;HEAP8[$j0valid67+0>>0]=0|0;
                $3075 = (($5) + 538|0);
                HEAP8[$3075>>0] = 1;
                $3076 = (($5) + 96|0);
                $3077 = +HEAPF64[$3076>>3];
                $3078 = 6620.0 * $3077;
                $x428 = $3078;
                $3079 = (($5) + 56|0);
                $3080 = +HEAPF64[$3079>>3];
                $3081 = 2.0E+4 * $3080;
                $x429 = $3081;
                $3082 = (($5) + 56|0);
                $3083 = +HEAPF64[$3082>>3];
                $3084 = 2003.0 * $3083;
                $x430 = $3084;
                $3085 = (($5) + 48|0);
                $3086 = +HEAPF64[$3085>>3];
                $3087 = 2.0E+4 * $3086;
                $3088 = (($5) + 512|0);
                $3089 = +HEAPF64[$3088>>3];
                $3090 = $3087 * $3089;
                $x431 = $3090;
                $3091 = (($5) + 528|0);
                $3092 = +HEAPF64[$3091>>3];
                $3093 = $x429;
                $3094 = $3092 * $3093;
                $3095 = $x429;
                $3096 = -1.0 * $3095;
                $3097 = (($5) + 512|0);
                $3098 = +HEAPF64[$3097>>3];
                $3099 = (($5) + 512|0);
                $3100 = +HEAPF64[$3099>>3];
                $3101 = $3098 * $3100;
                $3102 = $3096 * $3101;
                $3103 = $3094 + $3102;
                $3104 = (+__Z6IKsignd($3103));
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x432,$3104,-1);
                $3105 = (($x432) + 8|0);
                $3106 = HEAP8[$3105>>0]|0;
                $3107 = $3106&1;
                if (!($3107)) {
                 break L250;
                }
                $3108 = (($5) + 464|0);
                $3109 = +HEAPF64[$3108>>3];
                $3110 = $x431;
                $3111 = $3109 * $3110;
                $3112 = (($5) + 488|0);
                $3113 = +HEAPF64[$3112>>3];
                $3114 = -1.0 * $3113;
                $3115 = $x430;
                $3116 = $3114 * $3115;
                $3117 = $3111 + $3116;
                $3118 = (($5) + 464|0);
                $3119 = +HEAPF64[$3118>>3];
                $3120 = $x428;
                $3121 = $3119 * $3120;
                $3122 = $3117 + $3121;
                $3123 = (($5) + 488|0);
                $3124 = +HEAPF64[$3123>>3];
                $3125 = -1.0 * $3124;
                $3126 = $x431;
                $3127 = $3125 * $3126;
                $3128 = (($5) + 488|0);
                $3129 = +HEAPF64[$3128>>3];
                $3130 = -1.0 * $3129;
                $3131 = $x428;
                $3132 = $3130 * $3131;
                $3133 = $3127 + $3132;
                $3134 = (($5) + 464|0);
                $3135 = +HEAPF64[$3134>>3];
                $3136 = -1.0 * $3135;
                $3137 = $x430;
                $3138 = $3136 * $3137;
                $3139 = $3133 + $3138;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x433,$3122,$3139,1.9999999999999999E-6);
                $3140 = (($x433) + 8|0);
                $3141 = HEAP8[$3140>>0]|0;
                $3142 = $3141&1;
                if (!($3142)) {
                 break L250;
                }
                $3143 = +HEAPF64[$x432>>3];
                $3144 = 1.5707963267949001 * $3143;
                $3145 = -1.5707963267949001 + $3144;
                $3146 = +HEAPF64[$x433>>3];
                $3147 = $3145 + $3146;
                HEAPF64[$j0array64>>3] = $3147;
                $3148 = +HEAPF64[$j0array64>>3];
                $3149 = (+__Z5IKsind($3148));
                HEAPF64[$sj0array66>>3] = $3149;
                $3150 = +HEAPF64[$j0array64>>3];
                $3151 = (+__Z5IKcosd($3150));
                HEAPF64[$cj0array65>>3] = $3151;
                $3152 = +HEAPF64[$j0array64>>3];
                $3153 = $3152 > 3.14159265358979;
                if ($3153) {
                 $3154 = +HEAPF64[$j0array64>>3];
                 $3155 = $3154 - 6.2831853071795898;
                 HEAPF64[$j0array64>>3] = $3155;
                } else {
                 $3156 = +HEAPF64[$j0array64>>3];
                 $3157 = $3156 < -3.14159265358979;
                 if ($3157) {
                  $3158 = +HEAPF64[$j0array64>>3];
                  $3159 = $3158 + 6.2831853071795898;
                  HEAPF64[$j0array64>>3] = $3159;
                 }
                }
                HEAP8[$j0valid67>>0] = 1;
                $ij068 = 0;
                while(1) {
                 $3160 = $ij068;
                 $3161 = ($3160|0)<(1);
                 if (!($3161)) {
                  break;
                 }
                 $3162 = $ij068;
                 $3163 = (($j0valid67) + ($3162)|0);
                 $3164 = HEAP8[$3163>>0]|0;
                 $3165 = $3164&1;
                 L284: do {
                  if ($3165) {
                   $3166 = $ij068;
                   $3167 = $3166&255;
                   $3168 = (($5) + 536|0);
                   HEAP8[$3168>>0] = $3167;
                   $3169 = (($5) + 536|0);
                   $3170 = (($3169) + 1|0);
                   HEAP8[$3170>>0] = -1;
                   $3171 = $ij068;
                   $3172 = (($3171) + 1)|0;
                   $iij069 = $3172;
                   L287: while(1) {
                    $3173 = $iij069;
                    $3174 = ($3173|0)<(1);
                    if (!($3174)) {
                     break;
                    }
                    $3175 = $iij069;
                    $3176 = (($j0valid67) + ($3175)|0);
                    $3177 = HEAP8[$3176>>0]|0;
                    $3178 = $3177&1;
                    do {
                     if ($3178) {
                      $3179 = $ij068;
                      $3180 = (($cj0array65) + ($3179<<3)|0);
                      $3181 = +HEAPF64[$3180>>3];
                      $3182 = $iij069;
                      $3183 = (($cj0array65) + ($3182<<3)|0);
                      $3184 = +HEAPF64[$3183>>3];
                      $3185 = $3181 - $3184;
                      $3186 = (+__Z5IKabsd($3185));
                      $3187 = $3186 < 9.9999999999999995E-7;
                      if (!($3187)) {
                       break;
                      }
                      $3188 = $ij068;
                      $3189 = (($sj0array66) + ($3188<<3)|0);
                      $3190 = +HEAPF64[$3189>>3];
                      $3191 = $iij069;
                      $3192 = (($sj0array66) + ($3191<<3)|0);
                      $3193 = +HEAPF64[$3192>>3];
                      $3194 = $3190 - $3193;
                      $3195 = (+__Z5IKabsd($3194));
                      $3196 = $3195 < 9.9999999999999995E-7;
                      if ($3196) {
                       label = 379;
                       break L287;
                      }
                     }
                    } while(0);
                    $3203 = $iij069;
                    $3204 = (($3203) + 1)|0;
                    $iij069 = $3204;
                   }
                   if ((label|0) == 379) {
                    label = 0;
                    $3197 = $iij069;
                    $3198 = (($j0valid67) + ($3197)|0);
                    HEAP8[$3198>>0] = 0;
                    $3199 = $iij069;
                    $3200 = $3199&255;
                    $3201 = (($5) + 536|0);
                    $3202 = (($3201) + 1|0);
                    HEAP8[$3202>>0] = $3200;
                   }
                   $3205 = $ij068;
                   $3206 = (($j0array64) + ($3205<<3)|0);
                   $3207 = +HEAPF64[$3206>>3];
                   HEAPF64[$5>>3] = $3207;
                   $3208 = $ij068;
                   $3209 = (($cj0array65) + ($3208<<3)|0);
                   $3210 = +HEAPF64[$3209>>3];
                   $3211 = (($5) + 8|0);
                   HEAPF64[$3211>>3] = $3210;
                   $3212 = $ij068;
                   $3213 = (($sj0array66) + ($3212<<3)|0);
                   $3214 = +HEAPF64[$3213>>3];
                   $3215 = (($5) + 16|0);
                   HEAPF64[$3215>>3] = $3214;
                   $3216 = +HEAPF64[$5>>3];
                   $3217 = (+__Z5IKcosd($3216));
                   $x434 = $3217;
                   $3218 = +HEAPF64[$5>>3];
                   $3219 = (+__Z5IKsind($3218));
                   $x435 = $3219;
                   $3220 = (($5) + 48|0);
                   $3221 = +HEAPF64[$3220>>3];
                   $3222 = 0.81000000000000005 * $3221;
                   $x436 = $3222;
                   $3223 = (($5) + 96|0);
                   $3224 = +HEAPF64[$3223>>3];
                   $3225 = 0.33100000000000002 * $3224;
                   $x437 = $3225;
                   $3226 = (($5) + 512|0);
                   $3227 = +HEAPF64[$3226>>3];
                   $3228 = (($5) + 56|0);
                   $3229 = +HEAPF64[$3228>>3];
                   $3230 = $3227 * $3229;
                   $x438 = $3230;
                   $3231 = (($5) + 88|0);
                   $3232 = +HEAPF64[$3231>>3];
                   $3233 = 0.33100000000000002 * $3232;
                   $x439 = $3233;
                   $3234 = (($5) + 464|0);
                   $3235 = +HEAPF64[$3234>>3];
                   $3236 = $x435;
                   $3237 = $3235 * $3236;
                   $x440 = $3237;
                   $3238 = (($5) + 488|0);
                   $3239 = +HEAPF64[$3238>>3];
                   $3240 = $x434;
                   $3241 = $3239 * $3240;
                   $x441 = $3241;
                   $3242 = $x441;
                   $3243 = 1.0 * $3242;
                   $x442 = $3243;
                   $3244 = (($5) + 464|0);
                   $3245 = +HEAPF64[$3244>>3];
                   $3246 = $x434;
                   $3247 = $3245 * $3246;
                   $3248 = 0.10015 + $3247;
                   $3249 = (($5) + 488|0);
                   $3250 = +HEAPF64[$3249>>3];
                   $3251 = $x435;
                   $3252 = $3250 * $3251;
                   $3253 = $3248 + $3252;
                   HEAPF64[$evalcond70>>3] = $3253;
                   $3254 = (($5) + 56|0);
                   $3255 = +HEAPF64[$3254>>3];
                   $3256 = $x441;
                   $3257 = $3255 * $3256;
                   $3258 = (($5) + 56|0);
                   $3259 = +HEAPF64[$3258>>3];
                   $3260 = -1.0 * $3259;
                   $3261 = $x440;
                   $3262 = $3260 * $3261;
                   $3263 = $3257 + $3262;
                   $3264 = (($5) + 48|0);
                   $3265 = +HEAPF64[$3264>>3];
                   $3266 = (($5) + 512|0);
                   $3267 = +HEAPF64[$3266>>3];
                   $3268 = $3265 * $3267;
                   $3269 = $3263 + $3268;
                   $3270 = $x437;
                   $3271 = $3269 + $3270;
                   $3272 = (($evalcond70) + 8|0);
                   HEAPF64[$3272>>3] = $3271;
                   $3273 = (($5) + 48|0);
                   $3274 = +HEAPF64[$3273>>3];
                   $3275 = $x440;
                   $3276 = $3274 * $3275;
                   $3277 = 0.40500000000000003 + $3276;
                   $3278 = (($5) + 48|0);
                   $3279 = +HEAPF64[$3278>>3];
                   $3280 = -1.0 * $3279;
                   $3281 = $x442;
                   $3282 = $3280 * $3281;
                   $3283 = $3277 + $3282;
                   $3284 = $x438;
                   $3285 = $3283 + $3284;
                   $3286 = $x439;
                   $3287 = $3285 + $3286;
                   $3288 = (($evalcond70) + 16|0);
                   HEAPF64[$3288>>3] = $3287;
                   $3289 = $x438;
                   $3290 = -0.81000000000000005 * $3289;
                   $3291 = -0.044433977499999999 + $3290;
                   $3292 = $x436;
                   $3293 = -1.0 * $3292;
                   $3294 = $x440;
                   $3295 = $3293 * $3294;
                   $3296 = $3291 + $3295;
                   $3297 = (($5) + 528|0);
                   $3298 = +HEAPF64[$3297>>3];
                   $3299 = -1.0 * $3298;
                   $3300 = $3296 + $3299;
                   $3301 = $x436;
                   $3302 = $x441;
                   $3303 = $3301 * $3302;
                   $3304 = $3300 + $3303;
                   $3305 = (($evalcond70) + 24|0);
                   HEAPF64[$3305>>3] = $3304;
                   $3306 = $x442;
                   $3307 = -1.0 * $3306;
                   $3308 = (($5) + 56|0);
                   $3309 = +HEAPF64[$3308>>3];
                   $3310 = -1.0 * $3309;
                   $3311 = $x437;
                   $3312 = $3310 * $3311;
                   $3313 = $3307 + $3312;
                   $3314 = (($5) + 48|0);
                   $3315 = +HEAPF64[$3314>>3];
                   $3316 = $x439;
                   $3317 = $3315 * $3316;
                   $3318 = $3313 + $3317;
                   $3319 = (($5) + 48|0);
                   $3320 = +HEAPF64[$3319>>3];
                   $3321 = 0.40500000000000003 * $3320;
                   $3322 = $3318 + $3321;
                   $3323 = $x440;
                   $3324 = $3322 + $3323;
                   $3325 = (($evalcond70) + 32|0);
                   HEAPF64[$3325>>3] = $3324;
                   $3326 = +HEAPF64[$evalcond70>>3];
                   $3327 = (+__Z5IKabsd($3326));
                   $3328 = $3327 > 5.0000000000000004E-6;
                   do {
                    if (!($3328)) {
                     $3329 = (($evalcond70) + 8|0);
                     $3330 = +HEAPF64[$3329>>3];
                     $3331 = (+__Z5IKabsd($3330));
                     $3332 = $3331 > 5.0000000000000004E-6;
                     if ($3332) {
                      break;
                     }
                     $3333 = (($evalcond70) + 16|0);
                     $3334 = +HEAPF64[$3333>>3];
                     $3335 = (+__Z5IKabsd($3334));
                     $3336 = $3335 > 5.0000000000000004E-6;
                     if ($3336) {
                      break;
                     }
                     $3337 = (($evalcond70) + 24|0);
                     $3338 = +HEAPF64[$3337>>3];
                     $3339 = (+__Z5IKabsd($3338));
                     $3340 = $3339 > 5.0000000000000004E-6;
                     if ($3340) {
                      break;
                     }
                     $3341 = (($evalcond70) + 32|0);
                     $3342 = +HEAPF64[$3341>>3];
                     $3343 = (+__Z5IKabsd($3342));
                     $3344 = $3343 > 5.0000000000000004E-6;
                     if ($3344) {
                      break;
                     }
                     $3345 = $4;
                     __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$3345);
                     break L284;
                    }
                   } while(0);
                  } else {
                  }
                 } while(0);
                 $3346 = $ij068;
                 $3347 = (($3346) + 1)|0;
                 $ij068 = $3347;
                }
               }
              } while(0);
              if ((label|0) == 60) {
               label = 0;
               $743 = (($5) + 512|0);
               $744 = +HEAPF64[$743>>3];
               $745 = (($5) + 512|0);
               $746 = +HEAPF64[$745>>3];
               $747 = $744 * $746;
               $x57 = $747;
               $748 = (($5) + 48|0);
               $749 = +HEAPF64[$748>>3];
               $750 = (($5) + 528|0);
               $751 = +HEAPF64[$750>>3];
               $752 = $749 * $751;
               $x58 = $752;
               $753 = (($5) + 48|0);
               $754 = +HEAPF64[$753>>3];
               $755 = 2003.0 * $754;
               $x59 = $755;
               $756 = (($5) + 88|0);
               $757 = +HEAPF64[$756>>3];
               $758 = 6620.0 * $757;
               $x60 = $758;
               $759 = (($5) + 512|0);
               $760 = +HEAPF64[$759>>3];
               $761 = 2.0E+4 * $760;
               $762 = (($5) + 56|0);
               $763 = +HEAPF64[$762>>3];
               $764 = $761 * $763;
               $x61 = $764;
               $765 = (($5) + 48|0);
               $766 = +HEAPF64[$765>>3];
               $767 = $x57;
               $768 = $766 * $767;
               $x62 = $768;
               $769 = $x58;
               $770 = $x62;
               $771 = -1.0 * $770;
               $772 = $769 + $771;
               HEAPF64[$j0eval2>>3] = $772;
               $773 = (($5) + 464|0);
               $774 = +HEAPF64[$773>>3];
               $775 = -1.0 * $774;
               $776 = $x59;
               $777 = $775 * $776;
               $778 = (($5) + 488|0);
               $779 = +HEAPF64[$778>>3];
               $780 = 8100.0 * $779;
               $781 = $777 + $780;
               $782 = (($5) + 488|0);
               $783 = +HEAPF64[$782>>3];
               $784 = $x61;
               $785 = $783 * $784;
               $786 = $781 + $785;
               $787 = (($5) + 488|0);
               $788 = +HEAPF64[$787>>3];
               $789 = $x60;
               $790 = $788 * $789;
               $791 = $786 + $790;
               $792 = (+__Z5IKabsd($791));
               $793 = (($5) + 464|0);
               $794 = +HEAPF64[$793>>3];
               $795 = -1.0 * $794;
               $796 = $x61;
               $797 = $795 * $796;
               $798 = (($5) + 464|0);
               $799 = +HEAPF64[$798>>3];
               $800 = -1.0 * $799;
               $801 = $x60;
               $802 = $800 * $801;
               $803 = $797 + $802;
               $804 = (($5) + 464|0);
               $805 = +HEAPF64[$804>>3];
               $806 = -8100.0 * $805;
               $807 = $803 + $806;
               $808 = (($5) + 488|0);
               $809 = +HEAPF64[$808>>3];
               $810 = -1.0 * $809;
               $811 = $x59;
               $812 = $810 * $811;
               $813 = $807 + $812;
               $814 = (+__Z5IKabsd($813));
               $815 = $792 + $814;
               $816 = (($j0eval2) + 8|0);
               HEAPF64[$816>>3] = $815;
               $817 = $x58;
               $818 = 2.0E+4 * $817;
               $819 = $x62;
               $820 = -2.0E+4 * $819;
               $821 = $818 + $820;
               $822 = (+__Z6IKsignd($821));
               $823 = (($j0eval2) + 16|0);
               HEAPF64[$823>>3] = $822;
               $824 = +HEAPF64[$j0eval2>>3];
               $825 = (+__Z5IKabsd($824));
               $826 = $825 < 9.9999999999999995E-7;
               do {
                if ($826) {
                 label = 63;
                } else {
                 $827 = (($j0eval2) + 8|0);
                 $828 = +HEAPF64[$827>>3];
                 $829 = (+__Z5IKabsd($828));
                 $830 = $829 < 9.9999999999999995E-7;
                 if ($830) {
                  label = 63;
                  break;
                 }
                 $831 = (($j0eval2) + 16|0);
                 $832 = +HEAPF64[$831>>3];
                 $833 = (+__Z5IKabsd($832));
                 $834 = $833 < 9.9999999999999995E-7;
                 if ($834) {
                  label = 63;
                  break;
                 }
                 ;HEAP8[$j0valid60+0>>0]=0|0;
                 $2794 = (($5) + 538|0);
                 HEAP8[$2794>>0] = 1;
                 $2795 = (($5) + 48|0);
                 $2796 = +HEAPF64[$2795>>3];
                 $2797 = 2003.0 * $2796;
                 $x413 = $2797;
                 $2798 = (($5) + 88|0);
                 $2799 = +HEAPF64[$2798>>3];
                 $2800 = 6620.0 * $2799;
                 $x414 = $2800;
                 $2801 = (($5) + 48|0);
                 $2802 = +HEAPF64[$2801>>3];
                 $2803 = 2.0E+4 * $2802;
                 $x415 = $2803;
                 $2804 = (($5) + 512|0);
                 $2805 = +HEAPF64[$2804>>3];
                 $2806 = 2.0E+4 * $2805;
                 $2807 = (($5) + 56|0);
                 $2808 = +HEAPF64[$2807>>3];
                 $2809 = $2806 * $2808;
                 $x416 = $2809;
                 $2810 = (($5) + 464|0);
                 $2811 = +HEAPF64[$2810>>3];
                 $2812 = -1.0 * $2811;
                 $2813 = $x414;
                 $2814 = $2812 * $2813;
                 $2815 = (($5) + 464|0);
                 $2816 = +HEAPF64[$2815>>3];
                 $2817 = -1.0 * $2816;
                 $2818 = $x416;
                 $2819 = $2817 * $2818;
                 $2820 = $2814 + $2819;
                 $2821 = (($5) + 464|0);
                 $2822 = +HEAPF64[$2821>>3];
                 $2823 = -8100.0 * $2822;
                 $2824 = $2820 + $2823;
                 $2825 = (($5) + 488|0);
                 $2826 = +HEAPF64[$2825>>3];
                 $2827 = -1.0 * $2826;
                 $2828 = $x413;
                 $2829 = $2827 * $2828;
                 $2830 = $2824 + $2829;
                 $2831 = (($5) + 488|0);
                 $2832 = +HEAPF64[$2831>>3];
                 $2833 = $x414;
                 $2834 = $2832 * $2833;
                 $2835 = (($5) + 488|0);
                 $2836 = +HEAPF64[$2835>>3];
                 $2837 = $x416;
                 $2838 = $2836 * $2837;
                 $2839 = $2834 + $2838;
                 $2840 = (($5) + 464|0);
                 $2841 = +HEAPF64[$2840>>3];
                 $2842 = -1.0 * $2841;
                 $2843 = $x413;
                 $2844 = $2842 * $2843;
                 $2845 = $2839 + $2844;
                 $2846 = (($5) + 488|0);
                 $2847 = +HEAPF64[$2846>>3];
                 $2848 = 8100.0 * $2847;
                 $2849 = $2845 + $2848;
                 __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x417,$2830,$2849,1.9999999999999999E-6);
                 $2850 = (($x417) + 8|0);
                 $2851 = HEAP8[$2850>>0]|0;
                 $2852 = $2851&1;
                 if (!($2852)) {
                  break L250;
                 }
                 $2853 = $x415;
                 $2854 = -1.0 * $2853;
                 $2855 = (($5) + 512|0);
                 $2856 = +HEAPF64[$2855>>3];
                 $2857 = (($5) + 512|0);
                 $2858 = +HEAPF64[$2857>>3];
                 $2859 = $2856 * $2858;
                 $2860 = $2854 * $2859;
                 $2861 = (($5) + 528|0);
                 $2862 = +HEAPF64[$2861>>3];
                 $2863 = $x415;
                 $2864 = $2862 * $2863;
                 $2865 = $2860 + $2864;
                 $2866 = (+__Z6IKsignd($2865));
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x418,$2866,-1);
                 $2867 = (($x418) + 8|0);
                 $2868 = HEAP8[$2867>>0]|0;
                 $2869 = $2868&1;
                 if (!($2869)) {
                  break L250;
                 }
                 $2870 = +HEAPF64[$x417>>3];
                 $2871 = -1.5707963267949001 + $2870;
                 $2872 = +HEAPF64[$x418>>3];
                 $2873 = 1.5707963267949001 * $2872;
                 $2874 = $2871 + $2873;
                 HEAPF64[$j0array57>>3] = $2874;
                 $2875 = +HEAPF64[$j0array57>>3];
                 $2876 = (+__Z5IKsind($2875));
                 HEAPF64[$sj0array59>>3] = $2876;
                 $2877 = +HEAPF64[$j0array57>>3];
                 $2878 = (+__Z5IKcosd($2877));
                 HEAPF64[$cj0array58>>3] = $2878;
                 $2879 = +HEAPF64[$j0array57>>3];
                 $2880 = $2879 > 3.14159265358979;
                 if ($2880) {
                  $2881 = +HEAPF64[$j0array57>>3];
                  $2882 = $2881 - 6.2831853071795898;
                  HEAPF64[$j0array57>>3] = $2882;
                 } else {
                  $2883 = +HEAPF64[$j0array57>>3];
                  $2884 = $2883 < -3.14159265358979;
                  if ($2884) {
                   $2885 = +HEAPF64[$j0array57>>3];
                   $2886 = $2885 + 6.2831853071795898;
                   HEAPF64[$j0array57>>3] = $2886;
                  }
                 }
                 HEAP8[$j0valid60>>0] = 1;
                 $ij061 = 0;
                 while(1) {
                  $2887 = $ij061;
                  $2888 = ($2887|0)<(1);
                  if (!($2888)) {
                   break;
                  }
                  $2889 = $ij061;
                  $2890 = (($j0valid60) + ($2889)|0);
                  $2891 = HEAP8[$2890>>0]|0;
                  $2892 = $2891&1;
                  L329: do {
                   if ($2892) {
                    $2893 = $ij061;
                    $2894 = $2893&255;
                    $2895 = (($5) + 536|0);
                    HEAP8[$2895>>0] = $2894;
                    $2896 = (($5) + 536|0);
                    $2897 = (($2896) + 1|0);
                    HEAP8[$2897>>0] = -1;
                    $2898 = $ij061;
                    $2899 = (($2898) + 1)|0;
                    $iij062 = $2899;
                    L332: while(1) {
                     $2900 = $iij062;
                     $2901 = ($2900|0)<(1);
                     if (!($2901)) {
                      break;
                     }
                     $2902 = $iij062;
                     $2903 = (($j0valid60) + ($2902)|0);
                     $2904 = HEAP8[$2903>>0]|0;
                     $2905 = $2904&1;
                     do {
                      if ($2905) {
                       $2906 = $ij061;
                       $2907 = (($cj0array58) + ($2906<<3)|0);
                       $2908 = +HEAPF64[$2907>>3];
                       $2909 = $iij062;
                       $2910 = (($cj0array58) + ($2909<<3)|0);
                       $2911 = +HEAPF64[$2910>>3];
                       $2912 = $2908 - $2911;
                       $2913 = (+__Z5IKabsd($2912));
                       $2914 = $2913 < 9.9999999999999995E-7;
                       if (!($2914)) {
                        break;
                       }
                       $2915 = $ij061;
                       $2916 = (($sj0array59) + ($2915<<3)|0);
                       $2917 = +HEAPF64[$2916>>3];
                       $2918 = $iij062;
                       $2919 = (($sj0array59) + ($2918<<3)|0);
                       $2920 = +HEAPF64[$2919>>3];
                       $2921 = $2917 - $2920;
                       $2922 = (+__Z5IKabsd($2921));
                       $2923 = $2922 < 9.9999999999999995E-7;
                       if ($2923) {
                        label = 348;
                        break L332;
                       }
                      }
                     } while(0);
                     $2930 = $iij062;
                     $2931 = (($2930) + 1)|0;
                     $iij062 = $2931;
                    }
                    if ((label|0) == 348) {
                     label = 0;
                     $2924 = $iij062;
                     $2925 = (($j0valid60) + ($2924)|0);
                     HEAP8[$2925>>0] = 0;
                     $2926 = $iij062;
                     $2927 = $2926&255;
                     $2928 = (($5) + 536|0);
                     $2929 = (($2928) + 1|0);
                     HEAP8[$2929>>0] = $2927;
                    }
                    $2932 = $ij061;
                    $2933 = (($j0array57) + ($2932<<3)|0);
                    $2934 = +HEAPF64[$2933>>3];
                    HEAPF64[$5>>3] = $2934;
                    $2935 = $ij061;
                    $2936 = (($cj0array58) + ($2935<<3)|0);
                    $2937 = +HEAPF64[$2936>>3];
                    $2938 = (($5) + 8|0);
                    HEAPF64[$2938>>3] = $2937;
                    $2939 = $ij061;
                    $2940 = (($sj0array59) + ($2939<<3)|0);
                    $2941 = +HEAPF64[$2940>>3];
                    $2942 = (($5) + 16|0);
                    HEAPF64[$2942>>3] = $2941;
                    $2943 = +HEAPF64[$5>>3];
                    $2944 = (+__Z5IKcosd($2943));
                    $x419 = $2944;
                    $2945 = +HEAPF64[$5>>3];
                    $2946 = (+__Z5IKsind($2945));
                    $x420 = $2946;
                    $2947 = (($5) + 48|0);
                    $2948 = +HEAPF64[$2947>>3];
                    $2949 = 0.81000000000000005 * $2948;
                    $x421 = $2949;
                    $2950 = (($5) + 96|0);
                    $2951 = +HEAPF64[$2950>>3];
                    $2952 = 0.33100000000000002 * $2951;
                    $x422 = $2952;
                    $2953 = (($5) + 512|0);
                    $2954 = +HEAPF64[$2953>>3];
                    $2955 = (($5) + 56|0);
                    $2956 = +HEAPF64[$2955>>3];
                    $2957 = $2954 * $2956;
                    $x423 = $2957;
                    $2958 = (($5) + 88|0);
                    $2959 = +HEAPF64[$2958>>3];
                    $2960 = 0.33100000000000002 * $2959;
                    $x424 = $2960;
                    $2961 = (($5) + 464|0);
                    $2962 = +HEAPF64[$2961>>3];
                    $2963 = $x420;
                    $2964 = $2962 * $2963;
                    $x425 = $2964;
                    $2965 = (($5) + 488|0);
                    $2966 = +HEAPF64[$2965>>3];
                    $2967 = $x419;
                    $2968 = $2966 * $2967;
                    $x426 = $2968;
                    $2969 = $x426;
                    $2970 = 1.0 * $2969;
                    $x427 = $2970;
                    $2971 = (($5) + 464|0);
                    $2972 = +HEAPF64[$2971>>3];
                    $2973 = $x419;
                    $2974 = $2972 * $2973;
                    $2975 = 0.10015 + $2974;
                    $2976 = (($5) + 488|0);
                    $2977 = +HEAPF64[$2976>>3];
                    $2978 = $x420;
                    $2979 = $2977 * $2978;
                    $2980 = $2975 + $2979;
                    HEAPF64[$evalcond63>>3] = $2980;
                    $2981 = (($5) + 48|0);
                    $2982 = +HEAPF64[$2981>>3];
                    $2983 = (($5) + 512|0);
                    $2984 = +HEAPF64[$2983>>3];
                    $2985 = $2982 * $2984;
                    $2986 = (($5) + 56|0);
                    $2987 = +HEAPF64[$2986>>3];
                    $2988 = -1.0 * $2987;
                    $2989 = $x425;
                    $2990 = $2988 * $2989;
                    $2991 = $2985 + $2990;
                    $2992 = $x422;
                    $2993 = $2991 + $2992;
                    $2994 = (($5) + 56|0);
                    $2995 = +HEAPF64[$2994>>3];
                    $2996 = $x426;
                    $2997 = $2995 * $2996;
                    $2998 = $2993 + $2997;
                    $2999 = (($evalcond63) + 8|0);
                    HEAPF64[$2999>>3] = $2998;
                    $3000 = (($5) + 48|0);
                    $3001 = +HEAPF64[$3000>>3];
                    $3002 = -1.0 * $3001;
                    $3003 = $x427;
                    $3004 = $3002 * $3003;
                    $3005 = 0.40500000000000003 + $3004;
                    $3006 = $x424;
                    $3007 = $3005 + $3006;
                    $3008 = $x423;
                    $3009 = $3007 + $3008;
                    $3010 = (($5) + 48|0);
                    $3011 = +HEAPF64[$3010>>3];
                    $3012 = $x425;
                    $3013 = $3011 * $3012;
                    $3014 = $3009 + $3013;
                    $3015 = (($evalcond63) + 16|0);
                    HEAPF64[$3015>>3] = $3014;
                    $3016 = $x421;
                    $3017 = -1.0 * $3016;
                    $3018 = $x425;
                    $3019 = $3017 * $3018;
                    $3020 = -0.044433977499999999 + $3019;
                    $3021 = (($5) + 528|0);
                    $3022 = +HEAPF64[$3021>>3];
                    $3023 = -1.0 * $3022;
                    $3024 = $3020 + $3023;
                    $3025 = $x421;
                    $3026 = $x426;
                    $3027 = $3025 * $3026;
                    $3028 = $3024 + $3027;
                    $3029 = $x423;
                    $3030 = -0.81000000000000005 * $3029;
                    $3031 = $3028 + $3030;
                    $3032 = (($evalcond63) + 24|0);
                    HEAPF64[$3032>>3] = $3031;
                    $3033 = (($5) + 56|0);
                    $3034 = +HEAPF64[$3033>>3];
                    $3035 = -1.0 * $3034;
                    $3036 = $x422;
                    $3037 = $3035 * $3036;
                    $3038 = (($5) + 48|0);
                    $3039 = +HEAPF64[$3038>>3];
                    $3040 = 0.40500000000000003 * $3039;
                    $3041 = $3037 + $3040;
                    $3042 = $x427;
                    $3043 = -1.0 * $3042;
                    $3044 = $3041 + $3043;
                    $3045 = $x425;
                    $3046 = $3044 + $3045;
                    $3047 = (($5) + 48|0);
                    $3048 = +HEAPF64[$3047>>3];
                    $3049 = $x424;
                    $3050 = $3048 * $3049;
                    $3051 = $3046 + $3050;
                    $3052 = (($evalcond63) + 32|0);
                    HEAPF64[$3052>>3] = $3051;
                    $3053 = +HEAPF64[$evalcond63>>3];
                    $3054 = (+__Z5IKabsd($3053));
                    $3055 = $3054 > 5.0000000000000004E-6;
                    do {
                     if (!($3055)) {
                      $3056 = (($evalcond63) + 8|0);
                      $3057 = +HEAPF64[$3056>>3];
                      $3058 = (+__Z5IKabsd($3057));
                      $3059 = $3058 > 5.0000000000000004E-6;
                      if ($3059) {
                       break;
                      }
                      $3060 = (($evalcond63) + 16|0);
                      $3061 = +HEAPF64[$3060>>3];
                      $3062 = (+__Z5IKabsd($3061));
                      $3063 = $3062 > 5.0000000000000004E-6;
                      if ($3063) {
                       break;
                      }
                      $3064 = (($evalcond63) + 24|0);
                      $3065 = +HEAPF64[$3064>>3];
                      $3066 = (+__Z5IKabsd($3065));
                      $3067 = $3066 > 5.0000000000000004E-6;
                      if ($3067) {
                       break;
                      }
                      $3068 = (($evalcond63) + 32|0);
                      $3069 = +HEAPF64[$3068>>3];
                      $3070 = (+__Z5IKabsd($3069));
                      $3071 = $3070 > 5.0000000000000004E-6;
                      if ($3071) {
                       break;
                      }
                      $3072 = $4;
                      __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$3072);
                      break L329;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $3073 = $ij061;
                  $3074 = (($3073) + 1)|0;
                  $ij061 = $3074;
                 }
                }
               } while(0);
               if ((label|0) == 63) {
                label = 0;
                $835 = (($5) + 512|0);
                $836 = +HEAPF64[$835>>3];
                $837 = (($5) + 512|0);
                $838 = +HEAPF64[$837>>3];
                $839 = $836 * $838;
                $x63 = $839;
                $840 = (($5) + 528|0);
                $841 = +HEAPF64[$840>>3];
                $842 = 2.0E+6 * $841;
                $x64 = $842;
                $843 = (($5) + 48|0);
                $844 = +HEAPF64[$843>>3];
                $845 = 162243.0 * $844;
                $x65 = $845;
                $846 = (($5) + 48|0);
                $847 = +HEAPF64[$846>>3];
                $848 = (($5) + 528|0);
                $849 = +HEAPF64[$848>>3];
                $850 = $847 * $849;
                $x66 = $850;
                $851 = (($5) + 512|0);
                $852 = +HEAPF64[$851>>3];
                $853 = 1.62E+6 * $852;
                $854 = (($5) + 56|0);
                $855 = +HEAPF64[$854>>3];
                $856 = $853 * $855;
                $x67 = $856;
                $857 = (($5) + 48|0);
                $858 = +HEAPF64[$857>>3];
                $859 = $x63;
                $860 = $858 * $859;
                $x68 = $860;
                $861 = $x66;
                $862 = $x68;
                $863 = -1.0 * $862;
                $864 = $861 + $863;
                HEAPF64[$j0eval3>>3] = $864;
                $865 = (($5) + 464|0);
                $866 = +HEAPF64[$865>>3];
                $867 = -88867.955000000001 * $866;
                $868 = (($5) + 464|0);
                $869 = +HEAPF64[$868>>3];
                $870 = -1.0 * $869;
                $871 = $x67;
                $872 = $870 * $871;
                $873 = $867 + $872;
                $874 = (($5) + 464|0);
                $875 = +HEAPF64[$874>>3];
                $876 = -1.0 * $875;
                $877 = $x64;
                $878 = $876 * $877;
                $879 = $873 + $878;
                $880 = (($5) + 488|0);
                $881 = +HEAPF64[$880>>3];
                $882 = -1.0 * $881;
                $883 = $x65;
                $884 = $882 * $883;
                $885 = $879 + $884;
                $886 = (+__Z5IKabsd($885));
                $887 = (($5) + 464|0);
                $888 = +HEAPF64[$887>>3];
                $889 = -1.0 * $888;
                $890 = $x65;
                $891 = $889 * $890;
                $892 = (($5) + 488|0);
                $893 = +HEAPF64[$892>>3];
                $894 = $x67;
                $895 = $893 * $894;
                $896 = $891 + $895;
                $897 = (($5) + 488|0);
                $898 = +HEAPF64[$897>>3];
                $899 = $x64;
                $900 = $898 * $899;
                $901 = $896 + $900;
                $902 = (($5) + 488|0);
                $903 = +HEAPF64[$902>>3];
                $904 = 88867.955000000001 * $903;
                $905 = $901 + $904;
                $906 = (+__Z5IKabsd($905));
                $907 = $886 + $906;
                $908 = (($j0eval3) + 8|0);
                HEAPF64[$908>>3] = $907;
                $909 = $x66;
                $910 = 1.62E+6 * $909;
                $911 = $x68;
                $912 = -1.62E+6 * $911;
                $913 = $910 + $912;
                $914 = (+__Z6IKsignd($913));
                $915 = (($j0eval3) + 16|0);
                HEAPF64[$915>>3] = $914;
                $916 = +HEAPF64[$j0eval3>>3];
                $917 = (+__Z5IKabsd($916));
                $918 = $917 < 9.9999999999999995E-7;
                do {
                 if ($918) {
                  label = 66;
                 } else {
                  $919 = (($j0eval3) + 8|0);
                  $920 = +HEAPF64[$919>>3];
                  $921 = (+__Z5IKabsd($920));
                  $922 = $921 < 9.9999999999999995E-7;
                  if ($922) {
                   label = 66;
                   break;
                  }
                  $923 = (($j0eval3) + 16|0);
                  $924 = +HEAPF64[$923>>3];
                  $925 = (+__Z5IKabsd($924));
                  $926 = $925 < 9.9999999999999995E-7;
                  if ($926) {
                   label = 66;
                   break;
                  }
                  ;HEAP8[$j0valid53+0>>0]=0|0;
                  $2513 = (($5) + 538|0);
                  HEAP8[$2513>>0] = 1;
                  $2514 = (($5) + 528|0);
                  $2515 = +HEAPF64[$2514>>3];
                  $2516 = 2.0E+6 * $2515;
                  $x398 = $2516;
                  $2517 = (($5) + 48|0);
                  $2518 = +HEAPF64[$2517>>3];
                  $2519 = 1.62E+6 * $2518;
                  $x399 = $2519;
                  $2520 = (($5) + 48|0);
                  $2521 = +HEAPF64[$2520>>3];
                  $2522 = 162243.0 * $2521;
                  $x400 = $2522;
                  $2523 = (($5) + 512|0);
                  $2524 = +HEAPF64[$2523>>3];
                  $2525 = 1.62E+6 * $2524;
                  $2526 = (($5) + 56|0);
                  $2527 = +HEAPF64[$2526>>3];
                  $2528 = $2525 * $2527;
                  $x401 = $2528;
                  $2529 = (($5) + 464|0);
                  $2530 = +HEAPF64[$2529>>3];
                  $2531 = -88867.955000000001 * $2530;
                  $2532 = (($5) + 464|0);
                  $2533 = +HEAPF64[$2532>>3];
                  $2534 = -1.0 * $2533;
                  $2535 = $x401;
                  $2536 = $2534 * $2535;
                  $2537 = $2531 + $2536;
                  $2538 = (($5) + 464|0);
                  $2539 = +HEAPF64[$2538>>3];
                  $2540 = -1.0 * $2539;
                  $2541 = $x398;
                  $2542 = $2540 * $2541;
                  $2543 = $2537 + $2542;
                  $2544 = (($5) + 488|0);
                  $2545 = +HEAPF64[$2544>>3];
                  $2546 = -1.0 * $2545;
                  $2547 = $x400;
                  $2548 = $2546 * $2547;
                  $2549 = $2543 + $2548;
                  $2550 = (($5) + 488|0);
                  $2551 = +HEAPF64[$2550>>3];
                  $2552 = $x401;
                  $2553 = $2551 * $2552;
                  $2554 = (($5) + 464|0);
                  $2555 = +HEAPF64[$2554>>3];
                  $2556 = -1.0 * $2555;
                  $2557 = $x400;
                  $2558 = $2556 * $2557;
                  $2559 = $2553 + $2558;
                  $2560 = (($5) + 488|0);
                  $2561 = +HEAPF64[$2560>>3];
                  $2562 = $x398;
                  $2563 = $2561 * $2562;
                  $2564 = $2559 + $2563;
                  $2565 = (($5) + 488|0);
                  $2566 = +HEAPF64[$2565>>3];
                  $2567 = 88867.955000000001 * $2566;
                  $2568 = $2564 + $2567;
                  __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x402,$2549,$2568,1.9999999999999999E-6);
                  $2569 = (($x402) + 8|0);
                  $2570 = HEAP8[$2569>>0]|0;
                  $2571 = $2570&1;
                  if (!($2571)) {
                   break L250;
                  }
                  $2572 = $x399;
                  $2573 = -1.0 * $2572;
                  $2574 = (($5) + 512|0);
                  $2575 = +HEAPF64[$2574>>3];
                  $2576 = (($5) + 512|0);
                  $2577 = +HEAPF64[$2576>>3];
                  $2578 = $2575 * $2577;
                  $2579 = $2573 * $2578;
                  $2580 = (($5) + 528|0);
                  $2581 = +HEAPF64[$2580>>3];
                  $2582 = $x399;
                  $2583 = $2581 * $2582;
                  $2584 = $2579 + $2583;
                  $2585 = (+__Z6IKsignd($2584));
                  __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x403,$2585,-1);
                  $2586 = (($x403) + 8|0);
                  $2587 = HEAP8[$2586>>0]|0;
                  $2588 = $2587&1;
                  if (!($2588)) {
                   break L250;
                  }
                  $2589 = +HEAPF64[$x402>>3];
                  $2590 = -1.5707963267949001 + $2589;
                  $2591 = +HEAPF64[$x403>>3];
                  $2592 = 1.5707963267949001 * $2591;
                  $2593 = $2590 + $2592;
                  HEAPF64[$j0array50>>3] = $2593;
                  $2594 = +HEAPF64[$j0array50>>3];
                  $2595 = (+__Z5IKsind($2594));
                  HEAPF64[$sj0array52>>3] = $2595;
                  $2596 = +HEAPF64[$j0array50>>3];
                  $2597 = (+__Z5IKcosd($2596));
                  HEAPF64[$cj0array51>>3] = $2597;
                  $2598 = +HEAPF64[$j0array50>>3];
                  $2599 = $2598 > 3.14159265358979;
                  if ($2599) {
                   $2600 = +HEAPF64[$j0array50>>3];
                   $2601 = $2600 - 6.2831853071795898;
                   HEAPF64[$j0array50>>3] = $2601;
                  } else {
                   $2602 = +HEAPF64[$j0array50>>3];
                   $2603 = $2602 < -3.14159265358979;
                   if ($2603) {
                    $2604 = +HEAPF64[$j0array50>>3];
                    $2605 = $2604 + 6.2831853071795898;
                    HEAPF64[$j0array50>>3] = $2605;
                   }
                  }
                  HEAP8[$j0valid53>>0] = 1;
                  $ij054 = 0;
                  while(1) {
                   $2606 = $ij054;
                   $2607 = ($2606|0)<(1);
                   if (!($2607)) {
                    break;
                   }
                   $2608 = $ij054;
                   $2609 = (($j0valid53) + ($2608)|0);
                   $2610 = HEAP8[$2609>>0]|0;
                   $2611 = $2610&1;
                   L374: do {
                    if ($2611) {
                     $2612 = $ij054;
                     $2613 = $2612&255;
                     $2614 = (($5) + 536|0);
                     HEAP8[$2614>>0] = $2613;
                     $2615 = (($5) + 536|0);
                     $2616 = (($2615) + 1|0);
                     HEAP8[$2616>>0] = -1;
                     $2617 = $ij054;
                     $2618 = (($2617) + 1)|0;
                     $iij055 = $2618;
                     L377: while(1) {
                      $2619 = $iij055;
                      $2620 = ($2619|0)<(1);
                      if (!($2620)) {
                       break;
                      }
                      $2621 = $iij055;
                      $2622 = (($j0valid53) + ($2621)|0);
                      $2623 = HEAP8[$2622>>0]|0;
                      $2624 = $2623&1;
                      do {
                       if ($2624) {
                        $2625 = $ij054;
                        $2626 = (($cj0array51) + ($2625<<3)|0);
                        $2627 = +HEAPF64[$2626>>3];
                        $2628 = $iij055;
                        $2629 = (($cj0array51) + ($2628<<3)|0);
                        $2630 = +HEAPF64[$2629>>3];
                        $2631 = $2627 - $2630;
                        $2632 = (+__Z5IKabsd($2631));
                        $2633 = $2632 < 9.9999999999999995E-7;
                        if (!($2633)) {
                         break;
                        }
                        $2634 = $ij054;
                        $2635 = (($sj0array52) + ($2634<<3)|0);
                        $2636 = +HEAPF64[$2635>>3];
                        $2637 = $iij055;
                        $2638 = (($sj0array52) + ($2637<<3)|0);
                        $2639 = +HEAPF64[$2638>>3];
                        $2640 = $2636 - $2639;
                        $2641 = (+__Z5IKabsd($2640));
                        $2642 = $2641 < 9.9999999999999995E-7;
                        if ($2642) {
                         label = 317;
                         break L377;
                        }
                       }
                      } while(0);
                      $2649 = $iij055;
                      $2650 = (($2649) + 1)|0;
                      $iij055 = $2650;
                     }
                     if ((label|0) == 317) {
                      label = 0;
                      $2643 = $iij055;
                      $2644 = (($j0valid53) + ($2643)|0);
                      HEAP8[$2644>>0] = 0;
                      $2645 = $iij055;
                      $2646 = $2645&255;
                      $2647 = (($5) + 536|0);
                      $2648 = (($2647) + 1|0);
                      HEAP8[$2648>>0] = $2646;
                     }
                     $2651 = $ij054;
                     $2652 = (($j0array50) + ($2651<<3)|0);
                     $2653 = +HEAPF64[$2652>>3];
                     HEAPF64[$5>>3] = $2653;
                     $2654 = $ij054;
                     $2655 = (($cj0array51) + ($2654<<3)|0);
                     $2656 = +HEAPF64[$2655>>3];
                     $2657 = (($5) + 8|0);
                     HEAPF64[$2657>>3] = $2656;
                     $2658 = $ij054;
                     $2659 = (($sj0array52) + ($2658<<3)|0);
                     $2660 = +HEAPF64[$2659>>3];
                     $2661 = (($5) + 16|0);
                     HEAPF64[$2661>>3] = $2660;
                     $2662 = +HEAPF64[$5>>3];
                     $2663 = (+__Z5IKcosd($2662));
                     $x404 = $2663;
                     $2664 = +HEAPF64[$5>>3];
                     $2665 = (+__Z5IKsind($2664));
                     $x405 = $2665;
                     $2666 = (($5) + 48|0);
                     $2667 = +HEAPF64[$2666>>3];
                     $2668 = 0.81000000000000005 * $2667;
                     $x406 = $2668;
                     $2669 = (($5) + 96|0);
                     $2670 = +HEAPF64[$2669>>3];
                     $2671 = 0.33100000000000002 * $2670;
                     $x407 = $2671;
                     $2672 = (($5) + 512|0);
                     $2673 = +HEAPF64[$2672>>3];
                     $2674 = (($5) + 56|0);
                     $2675 = +HEAPF64[$2674>>3];
                     $2676 = $2673 * $2675;
                     $x408 = $2676;
                     $2677 = (($5) + 88|0);
                     $2678 = +HEAPF64[$2677>>3];
                     $2679 = 0.33100000000000002 * $2678;
                     $x409 = $2679;
                     $2680 = (($5) + 464|0);
                     $2681 = +HEAPF64[$2680>>3];
                     $2682 = $x405;
                     $2683 = $2681 * $2682;
                     $x410 = $2683;
                     $2684 = (($5) + 488|0);
                     $2685 = +HEAPF64[$2684>>3];
                     $2686 = $x404;
                     $2687 = $2685 * $2686;
                     $x411 = $2687;
                     $2688 = $x411;
                     $2689 = 1.0 * $2688;
                     $x412 = $2689;
                     $2690 = (($5) + 488|0);
                     $2691 = +HEAPF64[$2690>>3];
                     $2692 = $x405;
                     $2693 = $2691 * $2692;
                     $2694 = 0.10015 + $2693;
                     $2695 = (($5) + 464|0);
                     $2696 = +HEAPF64[$2695>>3];
                     $2697 = $x404;
                     $2698 = $2696 * $2697;
                     $2699 = $2694 + $2698;
                     HEAPF64[$evalcond56>>3] = $2699;
                     $2700 = (($5) + 56|0);
                     $2701 = +HEAPF64[$2700>>3];
                     $2702 = -1.0 * $2701;
                     $2703 = $x410;
                     $2704 = $2702 * $2703;
                     $2705 = (($5) + 56|0);
                     $2706 = +HEAPF64[$2705>>3];
                     $2707 = $x411;
                     $2708 = $2706 * $2707;
                     $2709 = $2704 + $2708;
                     $2710 = (($5) + 48|0);
                     $2711 = +HEAPF64[$2710>>3];
                     $2712 = (($5) + 512|0);
                     $2713 = +HEAPF64[$2712>>3];
                     $2714 = $2711 * $2713;
                     $2715 = $2709 + $2714;
                     $2716 = $x407;
                     $2717 = $2715 + $2716;
                     $2718 = (($evalcond56) + 8|0);
                     HEAPF64[$2718>>3] = $2717;
                     $2719 = (($5) + 48|0);
                     $2720 = +HEAPF64[$2719>>3];
                     $2721 = -1.0 * $2720;
                     $2722 = $x412;
                     $2723 = $2721 * $2722;
                     $2724 = 0.40500000000000003 + $2723;
                     $2725 = $x409;
                     $2726 = $2724 + $2725;
                     $2727 = $x408;
                     $2728 = $2726 + $2727;
                     $2729 = (($5) + 48|0);
                     $2730 = +HEAPF64[$2729>>3];
                     $2731 = $x410;
                     $2732 = $2730 * $2731;
                     $2733 = $2728 + $2732;
                     $2734 = (($evalcond56) + 16|0);
                     HEAPF64[$2734>>3] = $2733;
                     $2735 = $x406;
                     $2736 = -1.0 * $2735;
                     $2737 = $x410;
                     $2738 = $2736 * $2737;
                     $2739 = -0.044433977499999999 + $2738;
                     $2740 = $x408;
                     $2741 = -0.81000000000000005 * $2740;
                     $2742 = $2739 + $2741;
                     $2743 = $x406;
                     $2744 = $x411;
                     $2745 = $2743 * $2744;
                     $2746 = $2742 + $2745;
                     $2747 = (($5) + 528|0);
                     $2748 = +HEAPF64[$2747>>3];
                     $2749 = -1.0 * $2748;
                     $2750 = $2746 + $2749;
                     $2751 = (($evalcond56) + 24|0);
                     HEAPF64[$2751>>3] = $2750;
                     $2752 = (($5) + 48|0);
                     $2753 = +HEAPF64[$2752>>3];
                     $2754 = 0.40500000000000003 * $2753;
                     $2755 = $x410;
                     $2756 = $2754 + $2755;
                     $2757 = (($5) + 48|0);
                     $2758 = +HEAPF64[$2757>>3];
                     $2759 = $x409;
                     $2760 = $2758 * $2759;
                     $2761 = $2756 + $2760;
                     $2762 = $x412;
                     $2763 = -1.0 * $2762;
                     $2764 = $2761 + $2763;
                     $2765 = (($5) + 56|0);
                     $2766 = +HEAPF64[$2765>>3];
                     $2767 = -1.0 * $2766;
                     $2768 = $x407;
                     $2769 = $2767 * $2768;
                     $2770 = $2764 + $2769;
                     $2771 = (($evalcond56) + 32|0);
                     HEAPF64[$2771>>3] = $2770;
                     $2772 = +HEAPF64[$evalcond56>>3];
                     $2773 = (+__Z5IKabsd($2772));
                     $2774 = $2773 > 5.0000000000000004E-6;
                     do {
                      if (!($2774)) {
                       $2775 = (($evalcond56) + 8|0);
                       $2776 = +HEAPF64[$2775>>3];
                       $2777 = (+__Z5IKabsd($2776));
                       $2778 = $2777 > 5.0000000000000004E-6;
                       if ($2778) {
                        break;
                       }
                       $2779 = (($evalcond56) + 16|0);
                       $2780 = +HEAPF64[$2779>>3];
                       $2781 = (+__Z5IKabsd($2780));
                       $2782 = $2781 > 5.0000000000000004E-6;
                       if ($2782) {
                        break;
                       }
                       $2783 = (($evalcond56) + 24|0);
                       $2784 = +HEAPF64[$2783>>3];
                       $2785 = (+__Z5IKabsd($2784));
                       $2786 = $2785 > 5.0000000000000004E-6;
                       if ($2786) {
                        break;
                       }
                       $2787 = (($evalcond56) + 32|0);
                       $2788 = +HEAPF64[$2787>>3];
                       $2789 = (+__Z5IKabsd($2788));
                       $2790 = $2789 > 5.0000000000000004E-6;
                       if ($2790) {
                        break;
                       }
                       $2791 = $4;
                       __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$2791);
                       break L374;
                      }
                     } while(0);
                    } else {
                    }
                   } while(0);
                   $2792 = $ij054;
                   $2793 = (($2792) + 1)|0;
                   $ij054 = $2793;
                  }
                 }
                } while(0);
                if ((label|0) == 66) {
                 label = 0;
                 $bgotonextstatement = 1;
                 $927 = (($5) + 528|0);
                 $928 = +HEAPF64[$927>>3];
                 $929 = 1.0 * $928;
                 $x69 = $929;
                 $930 = (($5) + 88|0);
                 $931 = +HEAPF64[$930>>3];
                 $932 = 0.33100000000000002 * $931;
                 $933 = 0.40500000000000003 + $932;
                 $934 = (($5) + 512|0);
                 $935 = +HEAPF64[$934>>3];
                 $936 = $933 + $935;
                 $x70 = $936;
                 $937 = (($5) + 40|0);
                 $938 = +HEAPF64[$937>>3];
                 $939 = -1.5707963267949001 + $938;
                 $940 = (+__Z5IKabsd($939));
                 $941 = 3.14159265358979 + $940;
                 $942 = (+__Z6IKfmoddd($941,6.2831853071795898));
                 $943 = -3.14159265358979 + $942;
                 HEAPF64[$evalcond>>3] = $943;
                 $944 = $x69;
                 $945 = -1.0 * $944;
                 $946 = 0.28361602250000001 + $945;
                 $947 = (($5) + 88|0);
                 $948 = +HEAPF64[$947>>3];
                 $949 = 0.26811000000000001 * $948;
                 $950 = $946 + $949;
                 $951 = (($evalcond) + 8|0);
                 HEAPF64[$951>>3] = $950;
                 $952 = $x70;
                 $953 = (($evalcond) + 16|0);
                 HEAPF64[$953>>3] = $952;
                 $954 = $x70;
                 $955 = (($evalcond) + 24|0);
                 HEAPF64[$955>>3] = $954;
                 $956 = (($5) + 512|0);
                 $957 = +HEAPF64[$956>>3];
                 $958 = -0.81000000000000005 * $957;
                 $959 = -0.044433977499999999 + $958;
                 $960 = $x69;
                 $961 = -1.0 * $960;
                 $962 = $959 + $961;
                 $963 = (($evalcond) + 32|0);
                 HEAPF64[$963>>3] = $962;
                 $964 = +HEAPF64[$evalcond>>3];
                 $965 = (+__Z5IKabsd($964));
                 $966 = $965 < 9.9999999999999995E-7;
                 L400: do {
                  if ($966) {
                   $967 = (($evalcond) + 8|0);
                   $968 = +HEAPF64[$967>>3];
                   $969 = (+__Z5IKabsd($968));
                   $970 = $969 < 9.9999999999999995E-7;
                   if (!($970)) {
                    label = 104;
                    break;
                   }
                   $971 = (($evalcond) + 16|0);
                   $972 = +HEAPF64[$971>>3];
                   $973 = (+__Z5IKabsd($972));
                   $974 = $973 < 9.9999999999999995E-7;
                   if (!($974)) {
                    label = 104;
                    break;
                   }
                   $975 = (($evalcond) + 24|0);
                   $976 = +HEAPF64[$975>>3];
                   $977 = (+__Z5IKabsd($976));
                   $978 = $977 < 9.9999999999999995E-7;
                   if (!($978)) {
                    label = 104;
                    break;
                   }
                   $979 = (($evalcond) + 32|0);
                   $980 = +HEAPF64[$979>>3];
                   $981 = (+__Z5IKabsd($980));
                   $982 = $981 < 9.9999999999999995E-7;
                   if (!($982)) {
                    label = 104;
                    break;
                   }
                   $bgotonextstatement = 0;
                   $983 = (($5) + 56|0);
                   HEAPF64[$983>>3] = 1.0;
                   $984 = (($5) + 48|0);
                   HEAPF64[$984>>3] = 0.0;
                   $985 = (($5) + 40|0);
                   HEAPF64[$985>>3] = 1.5707963267949001;
                   $986 = (($5) + 512|0);
                   $987 = +HEAPF64[$986>>3];
                   $988 = (($5) + 512|0);
                   $989 = +HEAPF64[$988>>3];
                   $990 = $987 * $989;
                   $x71 = $990;
                   $991 = (($5) + 96|0);
                   $992 = +HEAPF64[$991>>3];
                   $993 = 6620.0 * $992;
                   $x72 = $993;
                   $994 = (($5) + 528|0);
                   $995 = +HEAPF64[$994>>3];
                   $996 = $x71;
                   $997 = -1.0 * $996;
                   $998 = $995 + $997;
                   HEAPF64[$j0eval4>>3] = $998;
                   $999 = $x71;
                   $1000 = -2.0E+4 * $999;
                   $1001 = (($5) + 528|0);
                   $1002 = +HEAPF64[$1001>>3];
                   $1003 = 2.0E+4 * $1002;
                   $1004 = $1000 + $1003;
                   $1005 = (+__Z6IKsignd($1004));
                   $1006 = (($j0eval4) + 8|0);
                   HEAPF64[$1006>>3] = $1005;
                   $1007 = (($5) + 488|0);
                   $1008 = +HEAPF64[$1007>>3];
                   $1009 = -1.0 * $1008;
                   $1010 = $x72;
                   $1011 = $1009 * $1010;
                   $1012 = (($5) + 464|0);
                   $1013 = +HEAPF64[$1012>>3];
                   $1014 = -2003.0 * $1013;
                   $1015 = $1011 + $1014;
                   $1016 = (+__Z5IKabsd($1015));
                   $1017 = (($5) + 464|0);
                   $1018 = +HEAPF64[$1017>>3];
                   $1019 = $x72;
                   $1020 = $1018 * $1019;
                   $1021 = (($5) + 488|0);
                   $1022 = +HEAPF64[$1021>>3];
                   $1023 = -2003.0 * $1022;
                   $1024 = $1020 + $1023;
                   $1025 = (+__Z5IKabsd($1024));
                   $1026 = $1016 + $1025;
                   $1027 = (($j0eval4) + 16|0);
                   HEAPF64[$1027>>3] = $1026;
                   $1028 = +HEAPF64[$j0eval4>>3];
                   $1029 = (+__Z5IKabsd($1028));
                   $1030 = $1029 < 9.9999999999999995E-7;
                   do {
                    if (!($1030)) {
                     $1031 = (($j0eval4) + 8|0);
                     $1032 = +HEAPF64[$1031>>3];
                     $1033 = (+__Z5IKabsd($1032));
                     $1034 = $1033 < 9.9999999999999995E-7;
                     if ($1034) {
                      break;
                     }
                     $1035 = (($j0eval4) + 16|0);
                     $1036 = +HEAPF64[$1035>>3];
                     $1037 = (+__Z5IKabsd($1036));
                     $1038 = $1037 < 9.9999999999999995E-7;
                     if ($1038) {
                      break;
                     }
                     ;HEAP8[$j0valid+0>>0]=0|0;
                     $1039 = (($5) + 538|0);
                     HEAP8[$1039>>0] = 1;
                     $1040 = (($5) + 96|0);
                     $1041 = +HEAPF64[$1040>>3];
                     $1042 = 6620.0 * $1041;
                     $x73 = $1042;
                     $1043 = (($5) + 464|0);
                     $1044 = +HEAPF64[$1043>>3];
                     $1045 = $x73;
                     $1046 = $1044 * $1045;
                     $1047 = (($5) + 488|0);
                     $1048 = +HEAPF64[$1047>>3];
                     $1049 = -2003.0 * $1048;
                     $1050 = $1046 + $1049;
                     $1051 = (($5) + 488|0);
                     $1052 = +HEAPF64[$1051>>3];
                     $1053 = -1.0 * $1052;
                     $1054 = $x73;
                     $1055 = $1053 * $1054;
                     $1056 = (($5) + 464|0);
                     $1057 = +HEAPF64[$1056>>3];
                     $1058 = -2003.0 * $1057;
                     $1059 = $1055 + $1058;
                     __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x74,$1050,$1059,1.9999999999999999E-6);
                     $1060 = (($x74) + 8|0);
                     $1061 = HEAP8[$1060>>0]|0;
                     $1062 = $1061&1;
                     if (!($1062)) {
                      break L400;
                     }
                     $1063 = (($5) + 512|0);
                     $1064 = +HEAPF64[$1063>>3];
                     $1065 = (($5) + 512|0);
                     $1066 = +HEAPF64[$1065>>3];
                     $1067 = $1064 * $1066;
                     $1068 = -2.0E+4 * $1067;
                     $1069 = (($5) + 528|0);
                     $1070 = +HEAPF64[$1069>>3];
                     $1071 = 2.0E+4 * $1070;
                     $1072 = $1068 + $1071;
                     $1073 = (+__Z6IKsignd($1072));
                     __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x75,$1073,-1);
                     $1074 = (($x75) + 8|0);
                     $1075 = HEAP8[$1074>>0]|0;
                     $1076 = $1075&1;
                     if (!($1076)) {
                      break L400;
                     }
                     $1077 = +HEAPF64[$x74>>3];
                     $1078 = -1.5707963267949001 + $1077;
                     $1079 = +HEAPF64[$x75>>3];
                     $1080 = 1.5707963267949001 * $1079;
                     $1081 = $1078 + $1080;
                     HEAPF64[$j0array>>3] = $1081;
                     $1082 = +HEAPF64[$j0array>>3];
                     $1083 = (+__Z5IKsind($1082));
                     HEAPF64[$sj0array>>3] = $1083;
                     $1084 = +HEAPF64[$j0array>>3];
                     $1085 = (+__Z5IKcosd($1084));
                     HEAPF64[$cj0array>>3] = $1085;
                     $1086 = +HEAPF64[$j0array>>3];
                     $1087 = $1086 > 3.14159265358979;
                     if ($1087) {
                      $1088 = +HEAPF64[$j0array>>3];
                      $1089 = $1088 - 6.2831853071795898;
                      HEAPF64[$j0array>>3] = $1089;
                     } else {
                      $1090 = +HEAPF64[$j0array>>3];
                      $1091 = $1090 < -3.14159265358979;
                      if ($1091) {
                       $1092 = +HEAPF64[$j0array>>3];
                       $1093 = $1092 + 6.2831853071795898;
                       HEAPF64[$j0array>>3] = $1093;
                      }
                     }
                     HEAP8[$j0valid>>0] = 1;
                     $ij0 = 0;
                     while(1) {
                      $1094 = $ij0;
                      $1095 = ($1094|0)<(1);
                      if (!($1095)) {
                       break;
                      }
                      $1096 = $ij0;
                      $1097 = (($j0valid) + ($1096)|0);
                      $1098 = HEAP8[$1097>>0]|0;
                      $1099 = $1098&1;
                      L426: do {
                       if ($1099) {
                        $1100 = $ij0;
                        $1101 = $1100&255;
                        $1102 = (($5) + 536|0);
                        HEAP8[$1102>>0] = $1101;
                        $1103 = (($5) + 536|0);
                        $1104 = (($1103) + 1|0);
                        HEAP8[$1104>>0] = -1;
                        $1105 = $ij0;
                        $1106 = (($1105) + 1)|0;
                        $iij0 = $1106;
                        L429: while(1) {
                         $1107 = $iij0;
                         $1108 = ($1107|0)<(1);
                         if (!($1108)) {
                          break;
                         }
                         $1109 = $iij0;
                         $1110 = (($j0valid) + ($1109)|0);
                         $1111 = HEAP8[$1110>>0]|0;
                         $1112 = $1111&1;
                         do {
                          if ($1112) {
                           $1113 = $ij0;
                           $1114 = (($cj0array) + ($1113<<3)|0);
                           $1115 = +HEAPF64[$1114>>3];
                           $1116 = $iij0;
                           $1117 = (($cj0array) + ($1116<<3)|0);
                           $1118 = +HEAPF64[$1117>>3];
                           $1119 = $1115 - $1118;
                           $1120 = (+__Z5IKabsd($1119));
                           $1121 = $1120 < 9.9999999999999995E-7;
                           if (!($1121)) {
                            break;
                           }
                           $1122 = $ij0;
                           $1123 = (($sj0array) + ($1122<<3)|0);
                           $1124 = +HEAPF64[$1123>>3];
                           $1125 = $iij0;
                           $1126 = (($sj0array) + ($1125<<3)|0);
                           $1127 = +HEAPF64[$1126>>3];
                           $1128 = $1124 - $1127;
                           $1129 = (+__Z5IKabsd($1128));
                           $1130 = $1129 < 9.9999999999999995E-7;
                           if ($1130) {
                            label = 94;
                            break L429;
                           }
                          }
                         } while(0);
                         $1137 = $iij0;
                         $1138 = (($1137) + 1)|0;
                         $iij0 = $1138;
                        }
                        if ((label|0) == 94) {
                         label = 0;
                         $1131 = $iij0;
                         $1132 = (($j0valid) + ($1131)|0);
                         HEAP8[$1132>>0] = 0;
                         $1133 = $iij0;
                         $1134 = $1133&255;
                         $1135 = (($5) + 536|0);
                         $1136 = (($1135) + 1|0);
                         HEAP8[$1136>>0] = $1134;
                        }
                        $1139 = $ij0;
                        $1140 = (($j0array) + ($1139<<3)|0);
                        $1141 = +HEAPF64[$1140>>3];
                        HEAPF64[$5>>3] = $1141;
                        $1142 = $ij0;
                        $1143 = (($cj0array) + ($1142<<3)|0);
                        $1144 = +HEAPF64[$1143>>3];
                        $1145 = (($5) + 8|0);
                        HEAPF64[$1145>>3] = $1144;
                        $1146 = $ij0;
                        $1147 = (($sj0array) + ($1146<<3)|0);
                        $1148 = +HEAPF64[$1147>>3];
                        $1149 = (($5) + 16|0);
                        HEAPF64[$1149>>3] = $1148;
                        $1150 = +HEAPF64[$5>>3];
                        $1151 = (+__Z5IKcosd($1150));
                        $x76 = $1151;
                        $1152 = +HEAPF64[$5>>3];
                        $1153 = (+__Z5IKsind($1152));
                        $x77 = $1153;
                        $1154 = (($5) + 488|0);
                        $1155 = +HEAPF64[$1154>>3];
                        $1156 = $x77;
                        $1157 = $1155 * $1156;
                        $1158 = 0.10015 + $1157;
                        $1159 = (($5) + 464|0);
                        $1160 = +HEAPF64[$1159>>3];
                        $1161 = $x76;
                        $1162 = $1160 * $1161;
                        $1163 = $1158 + $1162;
                        HEAPF64[$evalcond5>>3] = $1163;
                        $1164 = (($5) + 488|0);
                        $1165 = +HEAPF64[$1164>>3];
                        $1166 = $x76;
                        $1167 = $1165 * $1166;
                        $1168 = (($5) + 464|0);
                        $1169 = +HEAPF64[$1168>>3];
                        $1170 = -1.0 * $1169;
                        $1171 = $x77;
                        $1172 = $1170 * $1171;
                        $1173 = $1167 + $1172;
                        $1174 = (($5) + 96|0);
                        $1175 = +HEAPF64[$1174>>3];
                        $1176 = 0.33100000000000002 * $1175;
                        $1177 = $1173 + $1176;
                        $1178 = (($evalcond5) + 8|0);
                        HEAPF64[$1178>>3] = $1177;
                        $1179 = +HEAPF64[$evalcond5>>3];
                        $1180 = (+__Z5IKabsd($1179));
                        $1181 = $1180 > 5.0000000000000004E-6;
                        do {
                         if (!($1181)) {
                          $1182 = (($evalcond5) + 8|0);
                          $1183 = +HEAPF64[$1182>>3];
                          $1184 = (+__Z5IKabsd($1183));
                          $1185 = $1184 > 5.0000000000000004E-6;
                          if ($1185) {
                           break;
                          }
                          $1186 = $4;
                          __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$1186);
                          break L426;
                         }
                        } while(0);
                       } else {
                       }
                      } while(0);
                      $1187 = $ij0;
                      $1188 = (($1187) + 1)|0;
                      $ij0 = $1188;
                     }
                     label = 104;
                     break L400;
                    }
                   } while(0);
                  } else {
                   label = 104;
                  }
                 } while(0);
                 if ((label|0) == 104) {
                  label = 0;
                 }
                 $1189 = $bgotonextstatement;
                 $1190 = $1189&1;
                 if ($1190) {
                  $bgotonextstatement6 = 1;
                  $1191 = (($5) + 88|0);
                  $1192 = +HEAPF64[$1191>>3];
                  $1193 = 0.33100000000000002 * $1192;
                  $x351 = $1193;
                  $1194 = (($5) + 528|0);
                  $1195 = +HEAPF64[$1194>>3];
                  $1196 = 1.0 * $1195;
                  $x352 = $1196;
                  $1197 = (($5) + 40|0);
                  $1198 = +HEAPF64[$1197>>3];
                  $1199 = 1.5707963267949001 + $1198;
                  $1200 = (+__Z5IKabsd($1199));
                  $1201 = 3.14159265358979 + $1200;
                  $1202 = (+__Z6IKfmoddd($1201,6.2831853071795898));
                  $1203 = -3.14159265358979 + $1202;
                  HEAPF64[$evalcond>>3] = $1203;
                  $1204 = $x352;
                  $1205 = -1.0 * $1204;
                  $1206 = 0.28361602250000001 + $1205;
                  $1207 = (($5) + 88|0);
                  $1208 = +HEAPF64[$1207>>3];
                  $1209 = 0.26811000000000001 * $1208;
                  $1210 = $1206 + $1209;
                  $1211 = (($evalcond) + 8|0);
                  HEAPF64[$1211>>3] = $1210;
                  $1212 = $x351;
                  $1213 = -1.0 * $1212;
                  $1214 = -0.40500000000000003 + $1213;
                  $1215 = (($5) + 512|0);
                  $1216 = +HEAPF64[$1215>>3];
                  $1217 = $1214 + $1216;
                  $1218 = (($evalcond) + 16|0);
                  HEAPF64[$1218>>3] = $1217;
                  $1219 = $x351;
                  $1220 = 0.40500000000000003 + $1219;
                  $1221 = (($5) + 512|0);
                  $1222 = +HEAPF64[$1221>>3];
                  $1223 = -1.0 * $1222;
                  $1224 = $1220 + $1223;
                  $1225 = (($evalcond) + 24|0);
                  HEAPF64[$1225>>3] = $1224;
                  $1226 = $x352;
                  $1227 = -1.0 * $1226;
                  $1228 = -0.044433977499999999 + $1227;
                  $1229 = (($5) + 512|0);
                  $1230 = +HEAPF64[$1229>>3];
                  $1231 = 0.81000000000000005 * $1230;
                  $1232 = $1228 + $1231;
                  $1233 = (($evalcond) + 32|0);
                  HEAPF64[$1233>>3] = $1232;
                  $1234 = +HEAPF64[$evalcond>>3];
                  $1235 = (+__Z5IKabsd($1234));
                  $1236 = $1235 < 9.9999999999999995E-7;
                  L454: do {
                   if ($1236) {
                    $1237 = (($evalcond) + 8|0);
                    $1238 = +HEAPF64[$1237>>3];
                    $1239 = (+__Z5IKabsd($1238));
                    $1240 = $1239 < 9.9999999999999995E-7;
                    if (!($1240)) {
                     label = 144;
                     break;
                    }
                    $1241 = (($evalcond) + 16|0);
                    $1242 = +HEAPF64[$1241>>3];
                    $1243 = (+__Z5IKabsd($1242));
                    $1244 = $1243 < 9.9999999999999995E-7;
                    if (!($1244)) {
                     label = 144;
                     break;
                    }
                    $1245 = (($evalcond) + 24|0);
                    $1246 = +HEAPF64[$1245>>3];
                    $1247 = (+__Z5IKabsd($1246));
                    $1248 = $1247 < 9.9999999999999995E-7;
                    if (!($1248)) {
                     label = 144;
                     break;
                    }
                    $1249 = (($evalcond) + 32|0);
                    $1250 = +HEAPF64[$1249>>3];
                    $1251 = (+__Z5IKabsd($1250));
                    $1252 = $1251 < 9.9999999999999995E-7;
                    if (!($1252)) {
                     label = 144;
                     break;
                    }
                    $bgotonextstatement6 = 0;
                    $1253 = (($5) + 56|0);
                    HEAPF64[$1253>>3] = -1.0;
                    $1254 = (($5) + 48|0);
                    HEAPF64[$1254>>3] = 0.0;
                    $1255 = (($5) + 40|0);
                    HEAPF64[$1255>>3] = -1.5707963267949001;
                    $1256 = (($5) + 512|0);
                    $1257 = +HEAPF64[$1256>>3];
                    $1258 = (($5) + 512|0);
                    $1259 = +HEAPF64[$1258>>3];
                    $1260 = $1257 * $1259;
                    $x353 = $1260;
                    $1261 = (($5) + 96|0);
                    $1262 = +HEAPF64[$1261>>3];
                    $1263 = 6620.0 * $1262;
                    $x354 = $1263;
                    $1264 = $x353;
                    $1265 = (($5) + 528|0);
                    $1266 = +HEAPF64[$1265>>3];
                    $1267 = -1.0 * $1266;
                    $1268 = $1264 + $1267;
                    HEAPF64[$j0eval7>>3] = $1268;
                    $1269 = (($5) + 528|0);
                    $1270 = +HEAPF64[$1269>>3];
                    $1271 = -2.0E+4 * $1270;
                    $1272 = $x353;
                    $1273 = 2.0E+4 * $1272;
                    $1274 = $1271 + $1273;
                    $1275 = (+__Z6IKsignd($1274));
                    $1276 = (($j0eval7) + 8|0);
                    HEAPF64[$1276>>3] = $1275;
                    $1277 = (($5) + 464|0);
                    $1278 = +HEAPF64[$1277>>3];
                    $1279 = $x354;
                    $1280 = $1278 * $1279;
                    $1281 = (($5) + 488|0);
                    $1282 = +HEAPF64[$1281>>3];
                    $1283 = 2003.0 * $1282;
                    $1284 = $1280 + $1283;
                    $1285 = (+__Z5IKabsd($1284));
                    $1286 = (($5) + 488|0);
                    $1287 = +HEAPF64[$1286>>3];
                    $1288 = -1.0 * $1287;
                    $1289 = $x354;
                    $1290 = $1288 * $1289;
                    $1291 = (($5) + 464|0);
                    $1292 = +HEAPF64[$1291>>3];
                    $1293 = 2003.0 * $1292;
                    $1294 = $1290 + $1293;
                    $1295 = (+__Z5IKabsd($1294));
                    $1296 = $1285 + $1295;
                    $1297 = (($j0eval7) + 16|0);
                    HEAPF64[$1297>>3] = $1296;
                    $1298 = +HEAPF64[$j0eval7>>3];
                    $1299 = (+__Z5IKabsd($1298));
                    $1300 = $1299 < 9.9999999999999995E-7;
                    do {
                     if (!($1300)) {
                      $1301 = (($j0eval7) + 8|0);
                      $1302 = +HEAPF64[$1301>>3];
                      $1303 = (+__Z5IKabsd($1302));
                      $1304 = $1303 < 9.9999999999999995E-7;
                      if ($1304) {
                       break;
                      }
                      $1305 = (($j0eval7) + 16|0);
                      $1306 = +HEAPF64[$1305>>3];
                      $1307 = (+__Z5IKabsd($1306));
                      $1308 = $1307 < 9.9999999999999995E-7;
                      if ($1308) {
                       break;
                      }
                      ;HEAP8[$j0valid11+0>>0]=0|0;
                      $1309 = (($5) + 538|0);
                      HEAP8[$1309>>0] = 1;
                      $1310 = (($5) + 96|0);
                      $1311 = +HEAPF64[$1310>>3];
                      $1312 = 6620.0 * $1311;
                      $x355 = $1312;
                      $1313 = (($5) + 464|0);
                      $1314 = +HEAPF64[$1313>>3];
                      $1315 = $x355;
                      $1316 = $1314 * $1315;
                      $1317 = (($5) + 488|0);
                      $1318 = +HEAPF64[$1317>>3];
                      $1319 = 2003.0 * $1318;
                      $1320 = $1316 + $1319;
                      $1321 = (($5) + 488|0);
                      $1322 = +HEAPF64[$1321>>3];
                      $1323 = -1.0 * $1322;
                      $1324 = $x355;
                      $1325 = $1323 * $1324;
                      $1326 = (($5) + 464|0);
                      $1327 = +HEAPF64[$1326>>3];
                      $1328 = 2003.0 * $1327;
                      $1329 = $1325 + $1328;
                      __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x356,$1320,$1329,1.9999999999999999E-6);
                      $1330 = (($x356) + 8|0);
                      $1331 = HEAP8[$1330>>0]|0;
                      $1332 = $1331&1;
                      if (!($1332)) {
                       break L454;
                      }
                      $1333 = (($5) + 528|0);
                      $1334 = +HEAPF64[$1333>>3];
                      $1335 = -2.0E+4 * $1334;
                      $1336 = (($5) + 512|0);
                      $1337 = +HEAPF64[$1336>>3];
                      $1338 = (($5) + 512|0);
                      $1339 = +HEAPF64[$1338>>3];
                      $1340 = $1337 * $1339;
                      $1341 = 2.0E+4 * $1340;
                      $1342 = $1335 + $1341;
                      $1343 = (+__Z6IKsignd($1342));
                      __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x357,$1343,-1);
                      $1344 = (($x357) + 8|0);
                      $1345 = HEAP8[$1344>>0]|0;
                      $1346 = $1345&1;
                      if (!($1346)) {
                       break L454;
                      }
                      $1347 = +HEAPF64[$x356>>3];
                      $1348 = -1.5707963267949001 + $1347;
                      $1349 = +HEAPF64[$x357>>3];
                      $1350 = 1.5707963267949001 * $1349;
                      $1351 = $1348 + $1350;
                      HEAPF64[$j0array8>>3] = $1351;
                      $1352 = +HEAPF64[$j0array8>>3];
                      $1353 = (+__Z5IKsind($1352));
                      HEAPF64[$sj0array10>>3] = $1353;
                      $1354 = +HEAPF64[$j0array8>>3];
                      $1355 = (+__Z5IKcosd($1354));
                      HEAPF64[$cj0array9>>3] = $1355;
                      $1356 = +HEAPF64[$j0array8>>3];
                      $1357 = $1356 > 3.14159265358979;
                      if ($1357) {
                       $1358 = +HEAPF64[$j0array8>>3];
                       $1359 = $1358 - 6.2831853071795898;
                       HEAPF64[$j0array8>>3] = $1359;
                      } else {
                       $1360 = +HEAPF64[$j0array8>>3];
                       $1361 = $1360 < -3.14159265358979;
                       if ($1361) {
                        $1362 = +HEAPF64[$j0array8>>3];
                        $1363 = $1362 + 6.2831853071795898;
                        HEAPF64[$j0array8>>3] = $1363;
                       }
                      }
                      HEAP8[$j0valid11>>0] = 1;
                      $ij012 = 0;
                      while(1) {
                       $1364 = $ij012;
                       $1365 = ($1364|0)<(1);
                       if (!($1365)) {
                        break;
                       }
                       $1366 = $ij012;
                       $1367 = (($j0valid11) + ($1366)|0);
                       $1368 = HEAP8[$1367>>0]|0;
                       $1369 = $1368&1;
                       L480: do {
                        if ($1369) {
                         $1370 = $ij012;
                         $1371 = $1370&255;
                         $1372 = (($5) + 536|0);
                         HEAP8[$1372>>0] = $1371;
                         $1373 = (($5) + 536|0);
                         $1374 = (($1373) + 1|0);
                         HEAP8[$1374>>0] = -1;
                         $1375 = $ij012;
                         $1376 = (($1375) + 1)|0;
                         $iij013 = $1376;
                         L483: while(1) {
                          $1377 = $iij013;
                          $1378 = ($1377|0)<(1);
                          if (!($1378)) {
                           break;
                          }
                          $1379 = $iij013;
                          $1380 = (($j0valid11) + ($1379)|0);
                          $1381 = HEAP8[$1380>>0]|0;
                          $1382 = $1381&1;
                          do {
                           if ($1382) {
                            $1383 = $ij012;
                            $1384 = (($cj0array9) + ($1383<<3)|0);
                            $1385 = +HEAPF64[$1384>>3];
                            $1386 = $iij013;
                            $1387 = (($cj0array9) + ($1386<<3)|0);
                            $1388 = +HEAPF64[$1387>>3];
                            $1389 = $1385 - $1388;
                            $1390 = (+__Z5IKabsd($1389));
                            $1391 = $1390 < 9.9999999999999995E-7;
                            if (!($1391)) {
                             break;
                            }
                            $1392 = $ij012;
                            $1393 = (($sj0array10) + ($1392<<3)|0);
                            $1394 = +HEAPF64[$1393>>3];
                            $1395 = $iij013;
                            $1396 = (($sj0array10) + ($1395<<3)|0);
                            $1397 = +HEAPF64[$1396>>3];
                            $1398 = $1394 - $1397;
                            $1399 = (+__Z5IKabsd($1398));
                            $1400 = $1399 < 9.9999999999999995E-7;
                            if ($1400) {
                             label = 134;
                             break L483;
                            }
                           }
                          } while(0);
                          $1407 = $iij013;
                          $1408 = (($1407) + 1)|0;
                          $iij013 = $1408;
                         }
                         if ((label|0) == 134) {
                          label = 0;
                          $1401 = $iij013;
                          $1402 = (($j0valid11) + ($1401)|0);
                          HEAP8[$1402>>0] = 0;
                          $1403 = $iij013;
                          $1404 = $1403&255;
                          $1405 = (($5) + 536|0);
                          $1406 = (($1405) + 1|0);
                          HEAP8[$1406>>0] = $1404;
                         }
                         $1409 = $ij012;
                         $1410 = (($j0array8) + ($1409<<3)|0);
                         $1411 = +HEAPF64[$1410>>3];
                         HEAPF64[$5>>3] = $1411;
                         $1412 = $ij012;
                         $1413 = (($cj0array9) + ($1412<<3)|0);
                         $1414 = +HEAPF64[$1413>>3];
                         $1415 = (($5) + 8|0);
                         HEAPF64[$1415>>3] = $1414;
                         $1416 = $ij012;
                         $1417 = (($sj0array10) + ($1416<<3)|0);
                         $1418 = +HEAPF64[$1417>>3];
                         $1419 = (($5) + 16|0);
                         HEAPF64[$1419>>3] = $1418;
                         $1420 = +HEAPF64[$5>>3];
                         $1421 = (+__Z5IKsind($1420));
                         $x358 = $1421;
                         $1422 = +HEAPF64[$5>>3];
                         $1423 = (+__Z5IKcosd($1422));
                         $x359 = $1423;
                         $1424 = (($5) + 464|0);
                         $1425 = +HEAPF64[$1424>>3];
                         $1426 = $x359;
                         $1427 = $1425 * $1426;
                         $1428 = 0.10015 + $1427;
                         $1429 = (($5) + 488|0);
                         $1430 = +HEAPF64[$1429>>3];
                         $1431 = $x358;
                         $1432 = $1430 * $1431;
                         $1433 = $1428 + $1432;
                         HEAPF64[$evalcond14>>3] = $1433;
                         $1434 = (($5) + 464|0);
                         $1435 = +HEAPF64[$1434>>3];
                         $1436 = $x358;
                         $1437 = $1435 * $1436;
                         $1438 = (($5) + 488|0);
                         $1439 = +HEAPF64[$1438>>3];
                         $1440 = -1.0 * $1439;
                         $1441 = $x359;
                         $1442 = $1440 * $1441;
                         $1443 = $1437 + $1442;
                         $1444 = (($5) + 96|0);
                         $1445 = +HEAPF64[$1444>>3];
                         $1446 = 0.33100000000000002 * $1445;
                         $1447 = $1443 + $1446;
                         $1448 = (($evalcond14) + 8|0);
                         HEAPF64[$1448>>3] = $1447;
                         $1449 = +HEAPF64[$evalcond14>>3];
                         $1450 = (+__Z5IKabsd($1449));
                         $1451 = $1450 > 5.0000000000000004E-6;
                         do {
                          if (!($1451)) {
                           $1452 = (($evalcond14) + 8|0);
                           $1453 = +HEAPF64[$1452>>3];
                           $1454 = (+__Z5IKabsd($1453));
                           $1455 = $1454 > 5.0000000000000004E-6;
                           if ($1455) {
                            break;
                           }
                           $1456 = $4;
                           __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$1456);
                           break L480;
                          }
                         } while(0);
                        } else {
                        }
                       } while(0);
                       $1457 = $ij012;
                       $1458 = (($1457) + 1)|0;
                       $ij012 = $1458;
                      }
                      label = 144;
                      break L454;
                     }
                    } while(0);
                   } else {
                    label = 144;
                   }
                  } while(0);
                  if ((label|0) == 144) {
                   label = 0;
                  }
                  $1459 = $bgotonextstatement6;
                  $1460 = $1459&1;
                  if ($1460) {
                   $bgotonextstatement15 = 1;
                   $1461 = (($5) + 512|0);
                   $1462 = +HEAPF64[$1461>>3];
                   $1463 = (($5) + 96|0);
                   $1464 = +HEAPF64[$1463>>3];
                   $1465 = 0.33100000000000002 * $1464;
                   $1466 = $1462 + $1465;
                   $x360 = $1466;
                   $1467 = (($5) + 40|0);
                   $1468 = +HEAPF64[$1467>>3];
                   $1469 = (+__Z5IKabsd($1468));
                   $1470 = 3.14159265358979 + $1469;
                   $1471 = (+__Z6IKfmoddd($1470,6.2831853071795898));
                   $1472 = -3.14159265358979 + $1471;
                   HEAPF64[$evalcond>>3] = $1472;
                   $1473 = (($5) + 528|0);
                   $1474 = +HEAPF64[$1473>>3];
                   $1475 = -1.0 * $1474;
                   $1476 = 0.28361602250000001 + $1475;
                   $1477 = (($5) + 88|0);
                   $1478 = +HEAPF64[$1477>>3];
                   $1479 = 0.26811000000000001 * $1478;
                   $1480 = $1476 + $1479;
                   $1481 = (($evalcond) + 8|0);
                   HEAPF64[$1481>>3] = $1480;
                   $1482 = $x360;
                   $1483 = (($evalcond) + 16|0);
                   HEAPF64[$1483>>3] = $1482;
                   $1484 = $x360;
                   $1485 = (($evalcond) + 24|0);
                   HEAPF64[$1485>>3] = $1484;
                   $1486 = +HEAPF64[$evalcond>>3];
                   $1487 = (+__Z5IKabsd($1486));
                   $1488 = $1487 < 9.9999999999999995E-7;
                   L508: do {
                    if ($1488) {
                     $1489 = (($evalcond) + 8|0);
                     $1490 = +HEAPF64[$1489>>3];
                     $1491 = (+__Z5IKabsd($1490));
                     $1492 = $1491 < 9.9999999999999995E-7;
                     if (!($1492)) {
                      label = 216;
                      break;
                     }
                     $1493 = (($evalcond) + 16|0);
                     $1494 = +HEAPF64[$1493>>3];
                     $1495 = (+__Z5IKabsd($1494));
                     $1496 = $1495 < 9.9999999999999995E-7;
                     if (!($1496)) {
                      label = 216;
                      break;
                     }
                     $1497 = (($evalcond) + 24|0);
                     $1498 = +HEAPF64[$1497>>3];
                     $1499 = (+__Z5IKabsd($1498));
                     $1500 = $1499 < 9.9999999999999995E-7;
                     if (!($1500)) {
                      label = 216;
                      break;
                     }
                     $bgotonextstatement15 = 0;
                     $1501 = (($5) + 56|0);
                     HEAPF64[$1501>>3] = 0.0;
                     $1502 = (($5) + 48|0);
                     HEAPF64[$1502>>3] = 1.0;
                     $1503 = (($5) + 40|0);
                     HEAPF64[$1503>>3] = 0.0;
                     $1504 = (($5) + 512|0);
                     $1505 = +HEAPF64[$1504>>3];
                     $1506 = (($5) + 512|0);
                     $1507 = +HEAPF64[$1506>>3];
                     $1508 = $1505 * $1507;
                     $x361 = $1508;
                     $1509 = (($5) + 528|0);
                     $1510 = +HEAPF64[$1509>>3];
                     $1511 = 24691.358024691399 * $1510;
                     $x362 = $1511;
                     $1512 = $x361;
                     $1513 = (($5) + 528|0);
                     $1514 = +HEAPF64[$1513>>3];
                     $1515 = -1.0 * $1514;
                     $1516 = $1512 + $1515;
                     HEAPF64[$j0eval16>>3] = $1516;
                     $1517 = (($5) + 528|0);
                     $1518 = +HEAPF64[$1517>>3];
                     $1519 = -2.0E+4 * $1518;
                     $1520 = $x361;
                     $1521 = 2.0E+4 * $1520;
                     $1522 = $1519 + $1521;
                     $1523 = (+__Z6IKsignd($1522));
                     $1524 = (($j0eval16) + 8|0);
                     HEAPF64[$1524>>3] = $1523;
                     $1525 = (($5) + 488|0);
                     $1526 = +HEAPF64[$1525>>3];
                     $1527 = -1097.13524691358 * $1526;
                     $1528 = (($5) + 488|0);
                     $1529 = +HEAPF64[$1528>>3];
                     $1530 = -1.0 * $1529;
                     $1531 = $x362;
                     $1532 = $1530 * $1531;
                     $1533 = $1527 + $1532;
                     $1534 = (($5) + 464|0);
                     $1535 = +HEAPF64[$1534>>3];
                     $1536 = 2003.0 * $1535;
                     $1537 = $1533 + $1536;
                     $1538 = (+__Z5IKabsd($1537));
                     $1539 = (($5) + 464|0);
                     $1540 = +HEAPF64[$1539>>3];
                     $1541 = 1097.13524691358 * $1540;
                     $1542 = (($5) + 464|0);
                     $1543 = +HEAPF64[$1542>>3];
                     $1544 = $x362;
                     $1545 = $1543 * $1544;
                     $1546 = $1541 + $1545;
                     $1547 = (($5) + 488|0);
                     $1548 = +HEAPF64[$1547>>3];
                     $1549 = 2003.0 * $1548;
                     $1550 = $1546 + $1549;
                     $1551 = (+__Z5IKabsd($1550));
                     $1552 = $1538 + $1551;
                     $1553 = (($j0eval16) + 16|0);
                     HEAPF64[$1553>>3] = $1552;
                     $1554 = +HEAPF64[$j0eval16>>3];
                     $1555 = (+__Z5IKabsd($1554));
                     $1556 = $1555 < 9.9999999999999995E-7;
                     do {
                      if ($1556) {
                       label = 154;
                      } else {
                       $1557 = (($j0eval16) + 8|0);
                       $1558 = +HEAPF64[$1557>>3];
                       $1559 = (+__Z5IKabsd($1558));
                       $1560 = $1559 < 9.9999999999999995E-7;
                       if ($1560) {
                        label = 154;
                        break;
                       }
                       $1561 = (($j0eval16) + 16|0);
                       $1562 = +HEAPF64[$1561>>3];
                       $1563 = (+__Z5IKabsd($1562));
                       $1564 = $1563 < 9.9999999999999995E-7;
                       if ($1564) {
                        label = 154;
                        break;
                       }
                       ;HEAP8[$j0valid28+0>>0]=0|0;
                       $1805 = (($5) + 538|0);
                       HEAP8[$1805>>0] = 1;
                       $1806 = (($5) + 528|0);
                       $1807 = +HEAPF64[$1806>>3];
                       $1808 = 24691.358024691399 * $1807;
                       $x372 = $1808;
                       $1809 = (($5) + 464|0);
                       $1810 = +HEAPF64[$1809>>3];
                       $1811 = 1097.13524691358 * $1810;
                       $1812 = (($5) + 464|0);
                       $1813 = +HEAPF64[$1812>>3];
                       $1814 = $x372;
                       $1815 = $1813 * $1814;
                       $1816 = $1811 + $1815;
                       $1817 = (($5) + 488|0);
                       $1818 = +HEAPF64[$1817>>3];
                       $1819 = 2003.0 * $1818;
                       $1820 = $1816 + $1819;
                       $1821 = (($5) + 488|0);
                       $1822 = +HEAPF64[$1821>>3];
                       $1823 = -1097.13524691358 * $1822;
                       $1824 = (($5) + 488|0);
                       $1825 = +HEAPF64[$1824>>3];
                       $1826 = -1.0 * $1825;
                       $1827 = $x372;
                       $1828 = $1826 * $1827;
                       $1829 = $1823 + $1828;
                       $1830 = (($5) + 464|0);
                       $1831 = +HEAPF64[$1830>>3];
                       $1832 = 2003.0 * $1831;
                       $1833 = $1829 + $1832;
                       __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x373,$1820,$1833,1.9999999999999999E-6);
                       $1834 = (($x373) + 8|0);
                       $1835 = HEAP8[$1834>>0]|0;
                       $1836 = $1835&1;
                       if (!($1836)) {
                        break L508;
                       }
                       $1837 = (($5) + 528|0);
                       $1838 = +HEAPF64[$1837>>3];
                       $1839 = -2.0E+4 * $1838;
                       $1840 = (($5) + 512|0);
                       $1841 = +HEAPF64[$1840>>3];
                       $1842 = (($5) + 512|0);
                       $1843 = +HEAPF64[$1842>>3];
                       $1844 = $1841 * $1843;
                       $1845 = 2.0E+4 * $1844;
                       $1846 = $1839 + $1845;
                       $1847 = (+__Z6IKsignd($1846));
                       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x374,$1847,-1);
                       $1848 = (($x374) + 8|0);
                       $1849 = HEAP8[$1848>>0]|0;
                       $1850 = $1849&1;
                       if (!($1850)) {
                        break L508;
                       }
                       $1851 = +HEAPF64[$x373>>3];
                       $1852 = -1.5707963267949001 + $1851;
                       $1853 = +HEAPF64[$x374>>3];
                       $1854 = 1.5707963267949001 * $1853;
                       $1855 = $1852 + $1854;
                       HEAPF64[$j0array25>>3] = $1855;
                       $1856 = +HEAPF64[$j0array25>>3];
                       $1857 = (+__Z5IKsind($1856));
                       HEAPF64[$sj0array27>>3] = $1857;
                       $1858 = +HEAPF64[$j0array25>>3];
                       $1859 = (+__Z5IKcosd($1858));
                       HEAPF64[$cj0array26>>3] = $1859;
                       $1860 = +HEAPF64[$j0array25>>3];
                       $1861 = $1860 > 3.14159265358979;
                       if ($1861) {
                        $1862 = +HEAPF64[$j0array25>>3];
                        $1863 = $1862 - 6.2831853071795898;
                        HEAPF64[$j0array25>>3] = $1863;
                       } else {
                        $1864 = +HEAPF64[$j0array25>>3];
                        $1865 = $1864 < -3.14159265358979;
                        if ($1865) {
                         $1866 = +HEAPF64[$j0array25>>3];
                         $1867 = $1866 + 6.2831853071795898;
                         HEAPF64[$j0array25>>3] = $1867;
                        }
                       }
                       HEAP8[$j0valid28>>0] = 1;
                       $ij029 = 0;
                       while(1) {
                        $1868 = $ij029;
                        $1869 = ($1868|0)<(1);
                        if (!($1869)) {
                         break;
                        }
                        $1870 = $ij029;
                        $1871 = (($j0valid28) + ($1870)|0);
                        $1872 = HEAP8[$1871>>0]|0;
                        $1873 = $1872&1;
                        L533: do {
                         if ($1873) {
                          $1874 = $ij029;
                          $1875 = $1874&255;
                          $1876 = (($5) + 536|0);
                          HEAP8[$1876>>0] = $1875;
                          $1877 = (($5) + 536|0);
                          $1878 = (($1877) + 1|0);
                          HEAP8[$1878>>0] = -1;
                          $1879 = $ij029;
                          $1880 = (($1879) + 1)|0;
                          $iij030 = $1880;
                          L536: while(1) {
                           $1881 = $iij030;
                           $1882 = ($1881|0)<(1);
                           if (!($1882)) {
                            break;
                           }
                           $1883 = $iij030;
                           $1884 = (($j0valid28) + ($1883)|0);
                           $1885 = HEAP8[$1884>>0]|0;
                           $1886 = $1885&1;
                           do {
                            if ($1886) {
                             $1887 = $ij029;
                             $1888 = (($cj0array26) + ($1887<<3)|0);
                             $1889 = +HEAPF64[$1888>>3];
                             $1890 = $iij030;
                             $1891 = (($cj0array26) + ($1890<<3)|0);
                             $1892 = +HEAPF64[$1891>>3];
                             $1893 = $1889 - $1892;
                             $1894 = (+__Z5IKabsd($1893));
                             $1895 = $1894 < 9.9999999999999995E-7;
                             if (!($1895)) {
                              break;
                             }
                             $1896 = $ij029;
                             $1897 = (($sj0array27) + ($1896<<3)|0);
                             $1898 = +HEAPF64[$1897>>3];
                             $1899 = $iij030;
                             $1900 = (($sj0array27) + ($1899<<3)|0);
                             $1901 = +HEAPF64[$1900>>3];
                             $1902 = $1898 - $1901;
                             $1903 = (+__Z5IKabsd($1902));
                             $1904 = $1903 < 9.9999999999999995E-7;
                             if ($1904) {
                              label = 205;
                              break L536;
                             }
                            }
                           } while(0);
                           $1911 = $iij030;
                           $1912 = (($1911) + 1)|0;
                           $iij030 = $1912;
                          }
                          if ((label|0) == 205) {
                           label = 0;
                           $1905 = $iij030;
                           $1906 = (($j0valid28) + ($1905)|0);
                           HEAP8[$1906>>0] = 0;
                           $1907 = $iij030;
                           $1908 = $1907&255;
                           $1909 = (($5) + 536|0);
                           $1910 = (($1909) + 1|0);
                           HEAP8[$1910>>0] = $1908;
                          }
                          $1913 = $ij029;
                          $1914 = (($j0array25) + ($1913<<3)|0);
                          $1915 = +HEAPF64[$1914>>3];
                          HEAPF64[$5>>3] = $1915;
                          $1916 = $ij029;
                          $1917 = (($cj0array26) + ($1916<<3)|0);
                          $1918 = +HEAPF64[$1917>>3];
                          $1919 = (($5) + 8|0);
                          HEAPF64[$1919>>3] = $1918;
                          $1920 = $ij029;
                          $1921 = (($sj0array27) + ($1920<<3)|0);
                          $1922 = +HEAPF64[$1921>>3];
                          $1923 = (($5) + 16|0);
                          HEAPF64[$1923>>3] = $1922;
                          $1924 = +HEAPF64[$5>>3];
                          $1925 = (+__Z5IKsind($1924));
                          $x375 = $1925;
                          $1926 = +HEAPF64[$5>>3];
                          $1927 = (+__Z5IKcosd($1926));
                          $x376 = $1927;
                          $1928 = (($5) + 464|0);
                          $1929 = +HEAPF64[$1928>>3];
                          $1930 = $x375;
                          $1931 = $1929 * $1930;
                          $x377 = $1931;
                          $1932 = (($5) + 488|0);
                          $1933 = +HEAPF64[$1932>>3];
                          $1934 = $x376;
                          $1935 = $1933 * $1934;
                          $x378 = $1935;
                          $1936 = (($5) + 464|0);
                          $1937 = +HEAPF64[$1936>>3];
                          $1938 = $x376;
                          $1939 = $1937 * $1938;
                          $1940 = 0.10015 + $1939;
                          $1941 = (($5) + 488|0);
                          $1942 = +HEAPF64[$1941>>3];
                          $1943 = $x375;
                          $1944 = $1942 * $1943;
                          $1945 = $1940 + $1944;
                          HEAPF64[$evalcond31>>3] = $1945;
                          $1946 = $x378;
                          $1947 = -1.0 * $1946;
                          $1948 = 0.054856762345679003 + $1947;
                          $1949 = $x377;
                          $1950 = $1948 + $1949;
                          $1951 = (($5) + 528|0);
                          $1952 = +HEAPF64[$1951>>3];
                          $1953 = 1.2345679012345701 * $1952;
                          $1954 = $1950 + $1953;
                          $1955 = (($evalcond31) + 8|0);
                          HEAPF64[$1955>>3] = $1954;
                          $1956 = $x377;
                          $1957 = -0.81000000000000005 * $1956;
                          $1958 = -0.044433977499999999 + $1957;
                          $1959 = (($5) + 528|0);
                          $1960 = +HEAPF64[$1959>>3];
                          $1961 = -1.0 * $1960;
                          $1962 = $1958 + $1961;
                          $1963 = $x378;
                          $1964 = 0.81000000000000005 * $1963;
                          $1965 = $1962 + $1964;
                          $1966 = (($evalcond31) + 16|0);
                          HEAPF64[$1966>>3] = $1965;
                          $1967 = +HEAPF64[$evalcond31>>3];
                          $1968 = (+__Z5IKabsd($1967));
                          $1969 = $1968 > 5.0000000000000004E-6;
                          do {
                           if (!($1969)) {
                            $1970 = (($evalcond31) + 8|0);
                            $1971 = +HEAPF64[$1970>>3];
                            $1972 = (+__Z5IKabsd($1971));
                            $1973 = $1972 > 5.0000000000000004E-6;
                            if ($1973) {
                             break;
                            }
                            $1974 = (($evalcond31) + 16|0);
                            $1975 = +HEAPF64[$1974>>3];
                            $1976 = (+__Z5IKabsd($1975));
                            $1977 = $1976 > 5.0000000000000004E-6;
                            if ($1977) {
                             break;
                            }
                            $1978 = $4;
                            __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$1978);
                            break L533;
                           }
                          } while(0);
                         } else {
                         }
                        } while(0);
                        $1979 = $ij029;
                        $1980 = (($1979) + 1)|0;
                        $ij029 = $1980;
                       }
                      }
                     } while(0);
                     L554: do {
                      if ((label|0) == 154) {
                       label = 0;
                       $1565 = (($5) + 56|0);
                       HEAPF64[$1565>>3] = 0.0;
                       $1566 = (($5) + 48|0);
                       HEAPF64[$1566>>3] = 1.0;
                       $1567 = (($5) + 40|0);
                       HEAPF64[$1567>>3] = 0.0;
                       $1568 = (($5) + 512|0);
                       $1569 = +HEAPF64[$1568>>3];
                       $1570 = (($5) + 512|0);
                       $1571 = +HEAPF64[$1570>>3];
                       $1572 = $1569 * $1571;
                       $x363 = $1572;
                       $1573 = (($5) + 528|0);
                       $1574 = +HEAPF64[$1573>>3];
                       $1575 = 2.0E+6 * $1574;
                       $x364 = $1575;
                       $1576 = $x363;
                       $1577 = -1.0 * $1576;
                       $1578 = (($5) + 528|0);
                       $1579 = +HEAPF64[$1578>>3];
                       $1580 = $1577 + $1579;
                       HEAPF64[$j0eval17>>3] = $1580;
                       $1581 = $x363;
                       $1582 = -1.62E+6 * $1581;
                       $1583 = (($5) + 528|0);
                       $1584 = +HEAPF64[$1583>>3];
                       $1585 = 1.62E+6 * $1584;
                       $1586 = $1582 + $1585;
                       $1587 = (+__Z6IKsignd($1586));
                       $1588 = (($j0eval17) + 8|0);
                       HEAPF64[$1588>>3] = $1587;
                       $1589 = (($5) + 464|0);
                       $1590 = +HEAPF64[$1589>>3];
                       $1591 = -88867.955000000001 * $1590;
                       $1592 = (($5) + 488|0);
                       $1593 = +HEAPF64[$1592>>3];
                       $1594 = -162243.0 * $1593;
                       $1595 = $1591 + $1594;
                       $1596 = (($5) + 464|0);
                       $1597 = +HEAPF64[$1596>>3];
                       $1598 = -1.0 * $1597;
                       $1599 = $x364;
                       $1600 = $1598 * $1599;
                       $1601 = $1595 + $1600;
                       $1602 = (+__Z5IKabsd($1601));
                       $1603 = (($5) + 488|0);
                       $1604 = +HEAPF64[$1603>>3];
                       $1605 = $x364;
                       $1606 = $1604 * $1605;
                       $1607 = (($5) + 464|0);
                       $1608 = +HEAPF64[$1607>>3];
                       $1609 = -162243.0 * $1608;
                       $1610 = $1606 + $1609;
                       $1611 = (($5) + 488|0);
                       $1612 = +HEAPF64[$1611>>3];
                       $1613 = 88867.955000000001 * $1612;
                       $1614 = $1610 + $1613;
                       $1615 = (+__Z5IKabsd($1614));
                       $1616 = $1602 + $1615;
                       $1617 = (($j0eval17) + 16|0);
                       HEAPF64[$1617>>3] = $1616;
                       $1618 = +HEAPF64[$j0eval17>>3];
                       $1619 = (+__Z5IKabsd($1618));
                       $1620 = $1619 < 9.9999999999999995E-7;
                       do {
                        if (!($1620)) {
                         $1621 = (($j0eval17) + 8|0);
                         $1622 = +HEAPF64[$1621>>3];
                         $1623 = (+__Z5IKabsd($1622));
                         $1624 = $1623 < 9.9999999999999995E-7;
                         if ($1624) {
                          break;
                         }
                         $1625 = (($j0eval17) + 16|0);
                         $1626 = +HEAPF64[$1625>>3];
                         $1627 = (+__Z5IKabsd($1626));
                         $1628 = $1627 < 9.9999999999999995E-7;
                         if ($1628) {
                          break;
                         }
                         ;HEAP8[$j0valid21+0>>0]=0|0;
                         $1629 = (($5) + 538|0);
                         HEAP8[$1629>>0] = 1;
                         $1630 = (($5) + 528|0);
                         $1631 = +HEAPF64[$1630>>3];
                         $1632 = 2.0E+6 * $1631;
                         $x365 = $1632;
                         $1633 = (($5) + 512|0);
                         $1634 = +HEAPF64[$1633>>3];
                         $1635 = (($5) + 512|0);
                         $1636 = +HEAPF64[$1635>>3];
                         $1637 = $1634 * $1636;
                         $1638 = -1.62E+6 * $1637;
                         $1639 = (($5) + 528|0);
                         $1640 = +HEAPF64[$1639>>3];
                         $1641 = 1.62E+6 * $1640;
                         $1642 = $1638 + $1641;
                         $1643 = (+__Z6IKsignd($1642));
                         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x366,$1643,-1);
                         $1644 = (($x366) + 8|0);
                         $1645 = HEAP8[$1644>>0]|0;
                         $1646 = $1645&1;
                         if (!($1646)) {
                          break L508;
                         }
                         $1647 = (($5) + 464|0);
                         $1648 = +HEAPF64[$1647>>3];
                         $1649 = -88867.955000000001 * $1648;
                         $1650 = (($5) + 488|0);
                         $1651 = +HEAPF64[$1650>>3];
                         $1652 = -162243.0 * $1651;
                         $1653 = $1649 + $1652;
                         $1654 = (($5) + 464|0);
                         $1655 = +HEAPF64[$1654>>3];
                         $1656 = -1.0 * $1655;
                         $1657 = $x365;
                         $1658 = $1656 * $1657;
                         $1659 = $1653 + $1658;
                         $1660 = (($5) + 488|0);
                         $1661 = +HEAPF64[$1660>>3];
                         $1662 = $x365;
                         $1663 = $1661 * $1662;
                         $1664 = (($5) + 464|0);
                         $1665 = +HEAPF64[$1664>>3];
                         $1666 = -162243.0 * $1665;
                         $1667 = $1663 + $1666;
                         $1668 = (($5) + 488|0);
                         $1669 = +HEAPF64[$1668>>3];
                         $1670 = 88867.955000000001 * $1669;
                         $1671 = $1667 + $1670;
                         __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x367,$1659,$1671,1.9999999999999999E-6);
                         $1672 = (($x367) + 8|0);
                         $1673 = HEAP8[$1672>>0]|0;
                         $1674 = $1673&1;
                         if (!($1674)) {
                          break L508;
                         }
                         $1675 = +HEAPF64[$x366>>3];
                         $1676 = 1.5707963267949001 * $1675;
                         $1677 = -1.5707963267949001 + $1676;
                         $1678 = +HEAPF64[$x367>>3];
                         $1679 = $1677 + $1678;
                         HEAPF64[$j0array18>>3] = $1679;
                         $1680 = +HEAPF64[$j0array18>>3];
                         $1681 = (+__Z5IKsind($1680));
                         HEAPF64[$sj0array20>>3] = $1681;
                         $1682 = +HEAPF64[$j0array18>>3];
                         $1683 = (+__Z5IKcosd($1682));
                         HEAPF64[$cj0array19>>3] = $1683;
                         $1684 = +HEAPF64[$j0array18>>3];
                         $1685 = $1684 > 3.14159265358979;
                         if ($1685) {
                          $1686 = +HEAPF64[$j0array18>>3];
                          $1687 = $1686 - 6.2831853071795898;
                          HEAPF64[$j0array18>>3] = $1687;
                         } else {
                          $1688 = +HEAPF64[$j0array18>>3];
                          $1689 = $1688 < -3.14159265358979;
                          if ($1689) {
                           $1690 = +HEAPF64[$j0array18>>3];
                           $1691 = $1690 + 6.2831853071795898;
                           HEAPF64[$j0array18>>3] = $1691;
                          }
                         }
                         HEAP8[$j0valid21>>0] = 1;
                         $ij022 = 0;
                         while(1) {
                          $1692 = $ij022;
                          $1693 = ($1692|0)<(1);
                          if (!($1693)) {
                           break;
                          }
                          $1694 = $ij022;
                          $1695 = (($j0valid21) + ($1694)|0);
                          $1696 = HEAP8[$1695>>0]|0;
                          $1697 = $1696&1;
                          L576: do {
                           if ($1697) {
                            $1698 = $ij022;
                            $1699 = $1698&255;
                            $1700 = (($5) + 536|0);
                            HEAP8[$1700>>0] = $1699;
                            $1701 = (($5) + 536|0);
                            $1702 = (($1701) + 1|0);
                            HEAP8[$1702>>0] = -1;
                            $1703 = $ij022;
                            $1704 = (($1703) + 1)|0;
                            $iij023 = $1704;
                            L579: while(1) {
                             $1705 = $iij023;
                             $1706 = ($1705|0)<(1);
                             if (!($1706)) {
                              break;
                             }
                             $1707 = $iij023;
                             $1708 = (($j0valid21) + ($1707)|0);
                             $1709 = HEAP8[$1708>>0]|0;
                             $1710 = $1709&1;
                             do {
                              if ($1710) {
                               $1711 = $ij022;
                               $1712 = (($cj0array19) + ($1711<<3)|0);
                               $1713 = +HEAPF64[$1712>>3];
                               $1714 = $iij023;
                               $1715 = (($cj0array19) + ($1714<<3)|0);
                               $1716 = +HEAPF64[$1715>>3];
                               $1717 = $1713 - $1716;
                               $1718 = (+__Z5IKabsd($1717));
                               $1719 = $1718 < 9.9999999999999995E-7;
                               if (!($1719)) {
                                break;
                               }
                               $1720 = $ij022;
                               $1721 = (($sj0array20) + ($1720<<3)|0);
                               $1722 = +HEAPF64[$1721>>3];
                               $1723 = $iij023;
                               $1724 = (($sj0array20) + ($1723<<3)|0);
                               $1725 = +HEAPF64[$1724>>3];
                               $1726 = $1722 - $1725;
                               $1727 = (+__Z5IKabsd($1726));
                               $1728 = $1727 < 9.9999999999999995E-7;
                               if ($1728) {
                                label = 176;
                                break L579;
                               }
                              }
                             } while(0);
                             $1735 = $iij023;
                             $1736 = (($1735) + 1)|0;
                             $iij023 = $1736;
                            }
                            if ((label|0) == 176) {
                             label = 0;
                             $1729 = $iij023;
                             $1730 = (($j0valid21) + ($1729)|0);
                             HEAP8[$1730>>0] = 0;
                             $1731 = $iij023;
                             $1732 = $1731&255;
                             $1733 = (($5) + 536|0);
                             $1734 = (($1733) + 1|0);
                             HEAP8[$1734>>0] = $1732;
                            }
                            $1737 = $ij022;
                            $1738 = (($j0array18) + ($1737<<3)|0);
                            $1739 = +HEAPF64[$1738>>3];
                            HEAPF64[$5>>3] = $1739;
                            $1740 = $ij022;
                            $1741 = (($cj0array19) + ($1740<<3)|0);
                            $1742 = +HEAPF64[$1741>>3];
                            $1743 = (($5) + 8|0);
                            HEAPF64[$1743>>3] = $1742;
                            $1744 = $ij022;
                            $1745 = (($sj0array20) + ($1744<<3)|0);
                            $1746 = +HEAPF64[$1745>>3];
                            $1747 = (($5) + 16|0);
                            HEAPF64[$1747>>3] = $1746;
                            $1748 = +HEAPF64[$5>>3];
                            $1749 = (+__Z5IKsind($1748));
                            $x368 = $1749;
                            $1750 = +HEAPF64[$5>>3];
                            $1751 = (+__Z5IKcosd($1750));
                            $x369 = $1751;
                            $1752 = (($5) + 464|0);
                            $1753 = +HEAPF64[$1752>>3];
                            $1754 = $x368;
                            $1755 = $1753 * $1754;
                            $x370 = $1755;
                            $1756 = (($5) + 488|0);
                            $1757 = +HEAPF64[$1756>>3];
                            $1758 = $x369;
                            $1759 = $1757 * $1758;
                            $x371 = $1759;
                            $1760 = (($5) + 488|0);
                            $1761 = +HEAPF64[$1760>>3];
                            $1762 = $x368;
                            $1763 = $1761 * $1762;
                            $1764 = 0.10015 + $1763;
                            $1765 = (($5) + 464|0);
                            $1766 = +HEAPF64[$1765>>3];
                            $1767 = $x369;
                            $1768 = $1766 * $1767;
                            $1769 = $1764 + $1768;
                            HEAPF64[$evalcond24>>3] = $1769;
                            $1770 = $x371;
                            $1771 = -1.0 * $1770;
                            $1772 = 0.054856762345679003 + $1771;
                            $1773 = $x370;
                            $1774 = $1772 + $1773;
                            $1775 = (($5) + 528|0);
                            $1776 = +HEAPF64[$1775>>3];
                            $1777 = 1.2345679012345701 * $1776;
                            $1778 = $1774 + $1777;
                            $1779 = (($evalcond24) + 8|0);
                            HEAPF64[$1779>>3] = $1778;
                            $1780 = $x370;
                            $1781 = -0.81000000000000005 * $1780;
                            $1782 = -0.044433977499999999 + $1781;
                            $1783 = (($5) + 528|0);
                            $1784 = +HEAPF64[$1783>>3];
                            $1785 = -1.0 * $1784;
                            $1786 = $1782 + $1785;
                            $1787 = $x371;
                            $1788 = 0.81000000000000005 * $1787;
                            $1789 = $1786 + $1788;
                            $1790 = (($evalcond24) + 16|0);
                            HEAPF64[$1790>>3] = $1789;
                            $1791 = +HEAPF64[$evalcond24>>3];
                            $1792 = (+__Z5IKabsd($1791));
                            $1793 = $1792 > 5.0000000000000004E-6;
                            do {
                             if (!($1793)) {
                              $1794 = (($evalcond24) + 8|0);
                              $1795 = +HEAPF64[$1794>>3];
                              $1796 = (+__Z5IKabsd($1795));
                              $1797 = $1796 > 5.0000000000000004E-6;
                              if ($1797) {
                               break;
                              }
                              $1798 = (($evalcond24) + 16|0);
                              $1799 = +HEAPF64[$1798>>3];
                              $1800 = (+__Z5IKabsd($1799));
                              $1801 = $1800 > 5.0000000000000004E-6;
                              if ($1801) {
                               break;
                              }
                              $1802 = $4;
                              __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$1802);
                              break L576;
                             }
                            } while(0);
                           } else {
                           }
                          } while(0);
                          $1803 = $ij022;
                          $1804 = (($1803) + 1)|0;
                          $ij022 = $1804;
                         }
                         break L554;
                        }
                       } while(0);
                       break L508;
                      }
                     } while(0);
                     label = 216;
                    } else {
                     label = 216;
                    }
                   } while(0);
                   if ((label|0) == 216) {
                    label = 0;
                   }
                   $1981 = $bgotonextstatement15;
                   $1982 = $1981&1;
                   if ($1982) {
                    $bgotonextstatement32 = 1;
                    $1983 = (($5) + 96|0);
                    $1984 = +HEAPF64[$1983>>3];
                    $1985 = 0.33100000000000002 * $1984;
                    $x379 = $1985;
                    $1986 = (($5) + 40|0);
                    $1987 = +HEAPF64[$1986>>3];
                    $1988 = -3.14159265358979 + $1987;
                    $1989 = (+__Z5IKabsd($1988));
                    $1990 = 3.14159265358979 + $1989;
                    $1991 = (+__Z6IKfmoddd($1990,6.2831853071795898));
                    $1992 = -3.14159265358979 + $1991;
                    HEAPF64[$evalcond>>3] = $1992;
                    $1993 = (($5) + 528|0);
                    $1994 = +HEAPF64[$1993>>3];
                    $1995 = -1.0 * $1994;
                    $1996 = 0.28361602250000001 + $1995;
                    $1997 = (($5) + 88|0);
                    $1998 = +HEAPF64[$1997>>3];
                    $1999 = 0.26811000000000001 * $1998;
                    $2000 = $1996 + $1999;
                    $2001 = (($evalcond) + 8|0);
                    HEAPF64[$2001>>3] = $2000;
                    $2002 = $x379;
                    $2003 = -1.0 * $2002;
                    $2004 = (($5) + 512|0);
                    $2005 = +HEAPF64[$2004>>3];
                    $2006 = $2003 + $2005;
                    $2007 = (($evalcond) + 16|0);
                    HEAPF64[$2007>>3] = $2006;
                    $2008 = $x379;
                    $2009 = (($5) + 512|0);
                    $2010 = +HEAPF64[$2009>>3];
                    $2011 = -1.0 * $2010;
                    $2012 = $2008 + $2011;
                    $2013 = (($evalcond) + 24|0);
                    HEAPF64[$2013>>3] = $2012;
                    $2014 = +HEAPF64[$evalcond>>3];
                    $2015 = (+__Z5IKabsd($2014));
                    $2016 = $2015 < 9.9999999999999995E-7;
                    L606: do {
                     if ($2016) {
                      $2017 = (($evalcond) + 8|0);
                      $2018 = +HEAPF64[$2017>>3];
                      $2019 = (+__Z5IKabsd($2018));
                      $2020 = $2019 < 9.9999999999999995E-7;
                      if (!($2020)) {
                       label = 288;
                       break;
                      }
                      $2021 = (($evalcond) + 16|0);
                      $2022 = +HEAPF64[$2021>>3];
                      $2023 = (+__Z5IKabsd($2022));
                      $2024 = $2023 < 9.9999999999999995E-7;
                      if (!($2024)) {
                       label = 288;
                       break;
                      }
                      $2025 = (($evalcond) + 24|0);
                      $2026 = +HEAPF64[$2025>>3];
                      $2027 = (+__Z5IKabsd($2026));
                      $2028 = $2027 < 9.9999999999999995E-7;
                      if (!($2028)) {
                       label = 288;
                       break;
                      }
                      $bgotonextstatement32 = 0;
                      $2029 = (($5) + 56|0);
                      HEAPF64[$2029>>3] = 0.0;
                      $2030 = (($5) + 48|0);
                      HEAPF64[$2030>>3] = -1.0;
                      $2031 = (($5) + 40|0);
                      HEAPF64[$2031>>3] = 3.14159265358979;
                      $2032 = (($5) + 512|0);
                      $2033 = +HEAPF64[$2032>>3];
                      $2034 = (($5) + 512|0);
                      $2035 = +HEAPF64[$2034>>3];
                      $2036 = $2033 * $2035;
                      $x380 = $2036;
                      $2037 = (($5) + 528|0);
                      $2038 = +HEAPF64[$2037>>3];
                      $2039 = 24691.358024691399 * $2038;
                      $x381 = $2039;
                      $2040 = $x380;
                      $2041 = -1.0 * $2040;
                      $2042 = (($5) + 528|0);
                      $2043 = +HEAPF64[$2042>>3];
                      $2044 = $2041 + $2043;
                      HEAPF64[$j0eval33>>3] = $2044;
                      $2045 = $x380;
                      $2046 = -2.0E+4 * $2045;
                      $2047 = (($5) + 528|0);
                      $2048 = +HEAPF64[$2047>>3];
                      $2049 = 2.0E+4 * $2048;
                      $2050 = $2046 + $2049;
                      $2051 = (+__Z6IKsignd($2050));
                      $2052 = (($j0eval33) + 8|0);
                      HEAPF64[$2052>>3] = $2051;
                      $2053 = (($5) + 488|0);
                      $2054 = +HEAPF64[$2053>>3];
                      $2055 = -1097.13524691358 * $2054;
                      $2056 = (($5) + 488|0);
                      $2057 = +HEAPF64[$2056>>3];
                      $2058 = -1.0 * $2057;
                      $2059 = $x381;
                      $2060 = $2058 * $2059;
                      $2061 = $2055 + $2060;
                      $2062 = (($5) + 464|0);
                      $2063 = +HEAPF64[$2062>>3];
                      $2064 = -2003.0 * $2063;
                      $2065 = $2061 + $2064;
                      $2066 = (+__Z5IKabsd($2065));
                      $2067 = (($5) + 464|0);
                      $2068 = +HEAPF64[$2067>>3];
                      $2069 = $x381;
                      $2070 = $2068 * $2069;
                      $2071 = (($5) + 464|0);
                      $2072 = +HEAPF64[$2071>>3];
                      $2073 = 1097.13524691358 * $2072;
                      $2074 = $2070 + $2073;
                      $2075 = (($5) + 488|0);
                      $2076 = +HEAPF64[$2075>>3];
                      $2077 = -2003.0 * $2076;
                      $2078 = $2074 + $2077;
                      $2079 = (+__Z5IKabsd($2078));
                      $2080 = $2066 + $2079;
                      $2081 = (($j0eval33) + 16|0);
                      HEAPF64[$2081>>3] = $2080;
                      $2082 = +HEAPF64[$j0eval33>>3];
                      $2083 = (+__Z5IKabsd($2082));
                      $2084 = $2083 < 9.9999999999999995E-7;
                      do {
                       if ($2084) {
                        label = 226;
                       } else {
                        $2085 = (($j0eval33) + 8|0);
                        $2086 = +HEAPF64[$2085>>3];
                        $2087 = (+__Z5IKabsd($2086));
                        $2088 = $2087 < 9.9999999999999995E-7;
                        if ($2088) {
                         label = 226;
                         break;
                        }
                        $2089 = (($j0eval33) + 16|0);
                        $2090 = +HEAPF64[$2089>>3];
                        $2091 = (+__Z5IKabsd($2090));
                        $2092 = $2091 < 9.9999999999999995E-7;
                        if ($2092) {
                         label = 226;
                         break;
                        }
                        ;HEAP8[$j0valid45+0>>0]=0|0;
                        $2333 = (($5) + 538|0);
                        HEAP8[$2333>>0] = 1;
                        $2334 = (($5) + 528|0);
                        $2335 = +HEAPF64[$2334>>3];
                        $2336 = 24691.358024691399 * $2335;
                        $x391 = $2336;
                        $2337 = (($5) + 512|0);
                        $2338 = +HEAPF64[$2337>>3];
                        $2339 = (($5) + 512|0);
                        $2340 = +HEAPF64[$2339>>3];
                        $2341 = $2338 * $2340;
                        $2342 = -2.0E+4 * $2341;
                        $2343 = (($5) + 528|0);
                        $2344 = +HEAPF64[$2343>>3];
                        $2345 = 2.0E+4 * $2344;
                        $2346 = $2342 + $2345;
                        $2347 = (+__Z6IKsignd($2346));
                        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x392,$2347,-1);
                        $2348 = (($x392) + 8|0);
                        $2349 = HEAP8[$2348>>0]|0;
                        $2350 = $2349&1;
                        if (!($2350)) {
                         break L606;
                        }
                        $2351 = (($5) + 464|0);
                        $2352 = +HEAPF64[$2351>>3];
                        $2353 = 1097.13524691358 * $2352;
                        $2354 = (($5) + 464|0);
                        $2355 = +HEAPF64[$2354>>3];
                        $2356 = $x391;
                        $2357 = $2355 * $2356;
                        $2358 = $2353 + $2357;
                        $2359 = (($5) + 488|0);
                        $2360 = +HEAPF64[$2359>>3];
                        $2361 = -2003.0 * $2360;
                        $2362 = $2358 + $2361;
                        $2363 = (($5) + 488|0);
                        $2364 = +HEAPF64[$2363>>3];
                        $2365 = -1097.13524691358 * $2364;
                        $2366 = (($5) + 488|0);
                        $2367 = +HEAPF64[$2366>>3];
                        $2368 = -1.0 * $2367;
                        $2369 = $x391;
                        $2370 = $2368 * $2369;
                        $2371 = $2365 + $2370;
                        $2372 = (($5) + 464|0);
                        $2373 = +HEAPF64[$2372>>3];
                        $2374 = -2003.0 * $2373;
                        $2375 = $2371 + $2374;
                        __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x393,$2362,$2375,1.9999999999999999E-6);
                        $2376 = (($x393) + 8|0);
                        $2377 = HEAP8[$2376>>0]|0;
                        $2378 = $2377&1;
                        if (!($2378)) {
                         break L606;
                        }
                        $2379 = +HEAPF64[$x392>>3];
                        $2380 = 1.5707963267949001 * $2379;
                        $2381 = -1.5707963267949001 + $2380;
                        $2382 = +HEAPF64[$x393>>3];
                        $2383 = $2381 + $2382;
                        HEAPF64[$j0array42>>3] = $2383;
                        $2384 = +HEAPF64[$j0array42>>3];
                        $2385 = (+__Z5IKsind($2384));
                        HEAPF64[$sj0array44>>3] = $2385;
                        $2386 = +HEAPF64[$j0array42>>3];
                        $2387 = (+__Z5IKcosd($2386));
                        HEAPF64[$cj0array43>>3] = $2387;
                        $2388 = +HEAPF64[$j0array42>>3];
                        $2389 = $2388 > 3.14159265358979;
                        if ($2389) {
                         $2390 = +HEAPF64[$j0array42>>3];
                         $2391 = $2390 - 6.2831853071795898;
                         HEAPF64[$j0array42>>3] = $2391;
                        } else {
                         $2392 = +HEAPF64[$j0array42>>3];
                         $2393 = $2392 < -3.14159265358979;
                         if ($2393) {
                          $2394 = +HEAPF64[$j0array42>>3];
                          $2395 = $2394 + 6.2831853071795898;
                          HEAPF64[$j0array42>>3] = $2395;
                         }
                        }
                        HEAP8[$j0valid45>>0] = 1;
                        $ij046 = 0;
                        while(1) {
                         $2396 = $ij046;
                         $2397 = ($2396|0)<(1);
                         if (!($2397)) {
                          break;
                         }
                         $2398 = $ij046;
                         $2399 = (($j0valid45) + ($2398)|0);
                         $2400 = HEAP8[$2399>>0]|0;
                         $2401 = $2400&1;
                         L631: do {
                          if ($2401) {
                           $2402 = $ij046;
                           $2403 = $2402&255;
                           $2404 = (($5) + 536|0);
                           HEAP8[$2404>>0] = $2403;
                           $2405 = (($5) + 536|0);
                           $2406 = (($2405) + 1|0);
                           HEAP8[$2406>>0] = -1;
                           $2407 = $ij046;
                           $2408 = (($2407) + 1)|0;
                           $iij047 = $2408;
                           L634: while(1) {
                            $2409 = $iij047;
                            $2410 = ($2409|0)<(1);
                            if (!($2410)) {
                             break;
                            }
                            $2411 = $iij047;
                            $2412 = (($j0valid45) + ($2411)|0);
                            $2413 = HEAP8[$2412>>0]|0;
                            $2414 = $2413&1;
                            do {
                             if ($2414) {
                              $2415 = $ij046;
                              $2416 = (($cj0array43) + ($2415<<3)|0);
                              $2417 = +HEAPF64[$2416>>3];
                              $2418 = $iij047;
                              $2419 = (($cj0array43) + ($2418<<3)|0);
                              $2420 = +HEAPF64[$2419>>3];
                              $2421 = $2417 - $2420;
                              $2422 = (+__Z5IKabsd($2421));
                              $2423 = $2422 < 9.9999999999999995E-7;
                              if (!($2423)) {
                               break;
                              }
                              $2424 = $ij046;
                              $2425 = (($sj0array44) + ($2424<<3)|0);
                              $2426 = +HEAPF64[$2425>>3];
                              $2427 = $iij047;
                              $2428 = (($sj0array44) + ($2427<<3)|0);
                              $2429 = +HEAPF64[$2428>>3];
                              $2430 = $2426 - $2429;
                              $2431 = (+__Z5IKabsd($2430));
                              $2432 = $2431 < 9.9999999999999995E-7;
                              if ($2432) {
                               label = 277;
                               break L634;
                              }
                             }
                            } while(0);
                            $2439 = $iij047;
                            $2440 = (($2439) + 1)|0;
                            $iij047 = $2440;
                           }
                           if ((label|0) == 277) {
                            label = 0;
                            $2433 = $iij047;
                            $2434 = (($j0valid45) + ($2433)|0);
                            HEAP8[$2434>>0] = 0;
                            $2435 = $iij047;
                            $2436 = $2435&255;
                            $2437 = (($5) + 536|0);
                            $2438 = (($2437) + 1|0);
                            HEAP8[$2438>>0] = $2436;
                           }
                           $2441 = $ij046;
                           $2442 = (($j0array42) + ($2441<<3)|0);
                           $2443 = +HEAPF64[$2442>>3];
                           HEAPF64[$5>>3] = $2443;
                           $2444 = $ij046;
                           $2445 = (($cj0array43) + ($2444<<3)|0);
                           $2446 = +HEAPF64[$2445>>3];
                           $2447 = (($5) + 8|0);
                           HEAPF64[$2447>>3] = $2446;
                           $2448 = $ij046;
                           $2449 = (($sj0array44) + ($2448<<3)|0);
                           $2450 = +HEAPF64[$2449>>3];
                           $2451 = (($5) + 16|0);
                           HEAPF64[$2451>>3] = $2450;
                           $2452 = +HEAPF64[$5>>3];
                           $2453 = (+__Z5IKcosd($2452));
                           $x394 = $2453;
                           $2454 = +HEAPF64[$5>>3];
                           $2455 = (+__Z5IKsind($2454));
                           $x395 = $2455;
                           $2456 = (($5) + 464|0);
                           $2457 = +HEAPF64[$2456>>3];
                           $2458 = $x395;
                           $2459 = $2457 * $2458;
                           $x396 = $2459;
                           $2460 = (($5) + 488|0);
                           $2461 = +HEAPF64[$2460>>3];
                           $2462 = $x394;
                           $2463 = $2461 * $2462;
                           $x397 = $2463;
                           $2464 = (($5) + 488|0);
                           $2465 = +HEAPF64[$2464>>3];
                           $2466 = $x395;
                           $2467 = $2465 * $2466;
                           $2468 = 0.10015 + $2467;
                           $2469 = (($5) + 464|0);
                           $2470 = +HEAPF64[$2469>>3];
                           $2471 = $x394;
                           $2472 = $2470 * $2471;
                           $2473 = $2468 + $2472;
                           HEAPF64[$evalcond48>>3] = $2473;
                           $2474 = $x396;
                           $2475 = -1.0 * $2474;
                           $2476 = 0.054856762345679003 + $2475;
                           $2477 = $x397;
                           $2478 = $2476 + $2477;
                           $2479 = (($5) + 528|0);
                           $2480 = +HEAPF64[$2479>>3];
                           $2481 = 1.2345679012345701 * $2480;
                           $2482 = $2478 + $2481;
                           $2483 = (($evalcond48) + 8|0);
                           HEAPF64[$2483>>3] = $2482;
                           $2484 = $x397;
                           $2485 = -0.81000000000000005 * $2484;
                           $2486 = -0.044433977499999999 + $2485;
                           $2487 = (($5) + 528|0);
                           $2488 = +HEAPF64[$2487>>3];
                           $2489 = -1.0 * $2488;
                           $2490 = $2486 + $2489;
                           $2491 = $x396;
                           $2492 = 0.81000000000000005 * $2491;
                           $2493 = $2490 + $2492;
                           $2494 = (($evalcond48) + 16|0);
                           HEAPF64[$2494>>3] = $2493;
                           $2495 = +HEAPF64[$evalcond48>>3];
                           $2496 = (+__Z5IKabsd($2495));
                           $2497 = $2496 > 5.0000000000000004E-6;
                           do {
                            if (!($2497)) {
                             $2498 = (($evalcond48) + 8|0);
                             $2499 = +HEAPF64[$2498>>3];
                             $2500 = (+__Z5IKabsd($2499));
                             $2501 = $2500 > 5.0000000000000004E-6;
                             if ($2501) {
                              break;
                             }
                             $2502 = (($evalcond48) + 16|0);
                             $2503 = +HEAPF64[$2502>>3];
                             $2504 = (+__Z5IKabsd($2503));
                             $2505 = $2504 > 5.0000000000000004E-6;
                             if ($2505) {
                              break;
                             }
                             $2506 = $4;
                             __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$2506);
                             break L631;
                            }
                           } while(0);
                          } else {
                          }
                         } while(0);
                         $2507 = $ij046;
                         $2508 = (($2507) + 1)|0;
                         $ij046 = $2508;
                        }
                       }
                      } while(0);
                      L652: do {
                       if ((label|0) == 226) {
                        label = 0;
                        $2093 = (($5) + 56|0);
                        HEAPF64[$2093>>3] = 0.0;
                        $2094 = (($5) + 48|0);
                        HEAPF64[$2094>>3] = -1.0;
                        $2095 = (($5) + 40|0);
                        HEAPF64[$2095>>3] = 3.14159265358979;
                        $2096 = (($5) + 512|0);
                        $2097 = +HEAPF64[$2096>>3];
                        $2098 = (($5) + 512|0);
                        $2099 = +HEAPF64[$2098>>3];
                        $2100 = $2097 * $2099;
                        $x382 = $2100;
                        $2101 = (($5) + 528|0);
                        $2102 = +HEAPF64[$2101>>3];
                        $2103 = 2.0E+6 * $2102;
                        $x383 = $2103;
                        $2104 = $x382;
                        $2105 = (($5) + 528|0);
                        $2106 = +HEAPF64[$2105>>3];
                        $2107 = -1.0 * $2106;
                        $2108 = $2104 + $2107;
                        HEAPF64[$j0eval34>>3] = $2108;
                        $2109 = (($5) + 464|0);
                        $2110 = +HEAPF64[$2109>>3];
                        $2111 = 162243.0 * $2110;
                        $2112 = (($5) + 488|0);
                        $2113 = +HEAPF64[$2112>>3];
                        $2114 = $x383;
                        $2115 = $2113 * $2114;
                        $2116 = $2111 + $2115;
                        $2117 = (($5) + 488|0);
                        $2118 = +HEAPF64[$2117>>3];
                        $2119 = 88867.955000000001 * $2118;
                        $2120 = $2116 + $2119;
                        $2121 = (+__Z5IKabsd($2120));
                        $2122 = (($5) + 464|0);
                        $2123 = +HEAPF64[$2122>>3];
                        $2124 = -88867.955000000001 * $2123;
                        $2125 = (($5) + 488|0);
                        $2126 = +HEAPF64[$2125>>3];
                        $2127 = 162243.0 * $2126;
                        $2128 = $2124 + $2127;
                        $2129 = (($5) + 464|0);
                        $2130 = +HEAPF64[$2129>>3];
                        $2131 = -1.0 * $2130;
                        $2132 = $x383;
                        $2133 = $2131 * $2132;
                        $2134 = $2128 + $2133;
                        $2135 = (+__Z5IKabsd($2134));
                        $2136 = $2121 + $2135;
                        $2137 = (($j0eval34) + 8|0);
                        HEAPF64[$2137>>3] = $2136;
                        $2138 = (($5) + 528|0);
                        $2139 = +HEAPF64[$2138>>3];
                        $2140 = -1.62E+6 * $2139;
                        $2141 = $x382;
                        $2142 = 1.62E+6 * $2141;
                        $2143 = $2140 + $2142;
                        $2144 = (+__Z6IKsignd($2143));
                        $2145 = (($j0eval34) + 16|0);
                        HEAPF64[$2145>>3] = $2144;
                        $2146 = +HEAPF64[$j0eval34>>3];
                        $2147 = (+__Z5IKabsd($2146));
                        $2148 = $2147 < 9.9999999999999995E-7;
                        do {
                         if (!($2148)) {
                          $2149 = (($j0eval34) + 8|0);
                          $2150 = +HEAPF64[$2149>>3];
                          $2151 = (+__Z5IKabsd($2150));
                          $2152 = $2151 < 9.9999999999999995E-7;
                          if ($2152) {
                           break;
                          }
                          $2153 = (($j0eval34) + 16|0);
                          $2154 = +HEAPF64[$2153>>3];
                          $2155 = (+__Z5IKabsd($2154));
                          $2156 = $2155 < 9.9999999999999995E-7;
                          if ($2156) {
                           break;
                          }
                          ;HEAP8[$j0valid38+0>>0]=0|0;
                          $2157 = (($5) + 538|0);
                          HEAP8[$2157>>0] = 1;
                          $2158 = (($5) + 528|0);
                          $2159 = +HEAPF64[$2158>>3];
                          $2160 = 2.0E+6 * $2159;
                          $x384 = $2160;
                          $2161 = (($5) + 512|0);
                          $2162 = +HEAPF64[$2161>>3];
                          $2163 = (($5) + 512|0);
                          $2164 = +HEAPF64[$2163>>3];
                          $2165 = $2162 * $2164;
                          $2166 = 1.62E+6 * $2165;
                          $2167 = (($5) + 528|0);
                          $2168 = +HEAPF64[$2167>>3];
                          $2169 = -1.62E+6 * $2168;
                          $2170 = $2166 + $2169;
                          $2171 = (+__Z6IKsignd($2170));
                          __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x385,$2171,-1);
                          $2172 = (($x385) + 8|0);
                          $2173 = HEAP8[$2172>>0]|0;
                          $2174 = $2173&1;
                          if (!($2174)) {
                           break L606;
                          }
                          $2175 = (($5) + 464|0);
                          $2176 = +HEAPF64[$2175>>3];
                          $2177 = -88867.955000000001 * $2176;
                          $2178 = (($5) + 488|0);
                          $2179 = +HEAPF64[$2178>>3];
                          $2180 = 162243.0 * $2179;
                          $2181 = $2177 + $2180;
                          $2182 = (($5) + 464|0);
                          $2183 = +HEAPF64[$2182>>3];
                          $2184 = -1.0 * $2183;
                          $2185 = $x384;
                          $2186 = $2184 * $2185;
                          $2187 = $2181 + $2186;
                          $2188 = (($5) + 464|0);
                          $2189 = +HEAPF64[$2188>>3];
                          $2190 = 162243.0 * $2189;
                          $2191 = (($5) + 488|0);
                          $2192 = +HEAPF64[$2191>>3];
                          $2193 = $x384;
                          $2194 = $2192 * $2193;
                          $2195 = $2190 + $2194;
                          $2196 = (($5) + 488|0);
                          $2197 = +HEAPF64[$2196>>3];
                          $2198 = 88867.955000000001 * $2197;
                          $2199 = $2195 + $2198;
                          __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x386,$2187,$2199,1.9999999999999999E-6);
                          $2200 = (($x386) + 8|0);
                          $2201 = HEAP8[$2200>>0]|0;
                          $2202 = $2201&1;
                          if (!($2202)) {
                           break L606;
                          }
                          $2203 = +HEAPF64[$x385>>3];
                          $2204 = 1.5707963267949001 * $2203;
                          $2205 = -1.5707963267949001 + $2204;
                          $2206 = +HEAPF64[$x386>>3];
                          $2207 = $2205 + $2206;
                          HEAPF64[$j0array35>>3] = $2207;
                          $2208 = +HEAPF64[$j0array35>>3];
                          $2209 = (+__Z5IKsind($2208));
                          HEAPF64[$sj0array37>>3] = $2209;
                          $2210 = +HEAPF64[$j0array35>>3];
                          $2211 = (+__Z5IKcosd($2210));
                          HEAPF64[$cj0array36>>3] = $2211;
                          $2212 = +HEAPF64[$j0array35>>3];
                          $2213 = $2212 > 3.14159265358979;
                          if ($2213) {
                           $2214 = +HEAPF64[$j0array35>>3];
                           $2215 = $2214 - 6.2831853071795898;
                           HEAPF64[$j0array35>>3] = $2215;
                          } else {
                           $2216 = +HEAPF64[$j0array35>>3];
                           $2217 = $2216 < -3.14159265358979;
                           if ($2217) {
                            $2218 = +HEAPF64[$j0array35>>3];
                            $2219 = $2218 + 6.2831853071795898;
                            HEAPF64[$j0array35>>3] = $2219;
                           }
                          }
                          HEAP8[$j0valid38>>0] = 1;
                          $ij039 = 0;
                          while(1) {
                           $2220 = $ij039;
                           $2221 = ($2220|0)<(1);
                           if (!($2221)) {
                            break;
                           }
                           $2222 = $ij039;
                           $2223 = (($j0valid38) + ($2222)|0);
                           $2224 = HEAP8[$2223>>0]|0;
                           $2225 = $2224&1;
                           L674: do {
                            if ($2225) {
                             $2226 = $ij039;
                             $2227 = $2226&255;
                             $2228 = (($5) + 536|0);
                             HEAP8[$2228>>0] = $2227;
                             $2229 = (($5) + 536|0);
                             $2230 = (($2229) + 1|0);
                             HEAP8[$2230>>0] = -1;
                             $2231 = $ij039;
                             $2232 = (($2231) + 1)|0;
                             $iij040 = $2232;
                             L677: while(1) {
                              $2233 = $iij040;
                              $2234 = ($2233|0)<(1);
                              if (!($2234)) {
                               break;
                              }
                              $2235 = $iij040;
                              $2236 = (($j0valid38) + ($2235)|0);
                              $2237 = HEAP8[$2236>>0]|0;
                              $2238 = $2237&1;
                              do {
                               if ($2238) {
                                $2239 = $ij039;
                                $2240 = (($cj0array36) + ($2239<<3)|0);
                                $2241 = +HEAPF64[$2240>>3];
                                $2242 = $iij040;
                                $2243 = (($cj0array36) + ($2242<<3)|0);
                                $2244 = +HEAPF64[$2243>>3];
                                $2245 = $2241 - $2244;
                                $2246 = (+__Z5IKabsd($2245));
                                $2247 = $2246 < 9.9999999999999995E-7;
                                if (!($2247)) {
                                 break;
                                }
                                $2248 = $ij039;
                                $2249 = (($sj0array37) + ($2248<<3)|0);
                                $2250 = +HEAPF64[$2249>>3];
                                $2251 = $iij040;
                                $2252 = (($sj0array37) + ($2251<<3)|0);
                                $2253 = +HEAPF64[$2252>>3];
                                $2254 = $2250 - $2253;
                                $2255 = (+__Z5IKabsd($2254));
                                $2256 = $2255 < 9.9999999999999995E-7;
                                if ($2256) {
                                 label = 248;
                                 break L677;
                                }
                               }
                              } while(0);
                              $2263 = $iij040;
                              $2264 = (($2263) + 1)|0;
                              $iij040 = $2264;
                             }
                             if ((label|0) == 248) {
                              label = 0;
                              $2257 = $iij040;
                              $2258 = (($j0valid38) + ($2257)|0);
                              HEAP8[$2258>>0] = 0;
                              $2259 = $iij040;
                              $2260 = $2259&255;
                              $2261 = (($5) + 536|0);
                              $2262 = (($2261) + 1|0);
                              HEAP8[$2262>>0] = $2260;
                             }
                             $2265 = $ij039;
                             $2266 = (($j0array35) + ($2265<<3)|0);
                             $2267 = +HEAPF64[$2266>>3];
                             HEAPF64[$5>>3] = $2267;
                             $2268 = $ij039;
                             $2269 = (($cj0array36) + ($2268<<3)|0);
                             $2270 = +HEAPF64[$2269>>3];
                             $2271 = (($5) + 8|0);
                             HEAPF64[$2271>>3] = $2270;
                             $2272 = $ij039;
                             $2273 = (($sj0array37) + ($2272<<3)|0);
                             $2274 = +HEAPF64[$2273>>3];
                             $2275 = (($5) + 16|0);
                             HEAPF64[$2275>>3] = $2274;
                             $2276 = +HEAPF64[$5>>3];
                             $2277 = (+__Z5IKcosd($2276));
                             $x387 = $2277;
                             $2278 = +HEAPF64[$5>>3];
                             $2279 = (+__Z5IKsind($2278));
                             $x388 = $2279;
                             $2280 = (($5) + 464|0);
                             $2281 = +HEAPF64[$2280>>3];
                             $2282 = $x388;
                             $2283 = $2281 * $2282;
                             $x389 = $2283;
                             $2284 = (($5) + 488|0);
                             $2285 = +HEAPF64[$2284>>3];
                             $2286 = $x387;
                             $2287 = $2285 * $2286;
                             $x390 = $2287;
                             $2288 = (($5) + 464|0);
                             $2289 = +HEAPF64[$2288>>3];
                             $2290 = $x387;
                             $2291 = $2289 * $2290;
                             $2292 = 0.10015 + $2291;
                             $2293 = (($5) + 488|0);
                             $2294 = +HEAPF64[$2293>>3];
                             $2295 = $x388;
                             $2296 = $2294 * $2295;
                             $2297 = $2292 + $2296;
                             HEAPF64[$evalcond41>>3] = $2297;
                             $2298 = $x390;
                             $2299 = 0.054856762345679003 + $2298;
                             $2300 = $x389;
                             $2301 = -1.0 * $2300;
                             $2302 = $2299 + $2301;
                             $2303 = (($5) + 528|0);
                             $2304 = +HEAPF64[$2303>>3];
                             $2305 = 1.2345679012345701 * $2304;
                             $2306 = $2302 + $2305;
                             $2307 = (($evalcond41) + 8|0);
                             HEAPF64[$2307>>3] = $2306;
                             $2308 = $x390;
                             $2309 = -0.81000000000000005 * $2308;
                             $2310 = -0.044433977499999999 + $2309;
                             $2311 = $x389;
                             $2312 = 0.81000000000000005 * $2311;
                             $2313 = $2310 + $2312;
                             $2314 = (($5) + 528|0);
                             $2315 = +HEAPF64[$2314>>3];
                             $2316 = -1.0 * $2315;
                             $2317 = $2313 + $2316;
                             $2318 = (($evalcond41) + 16|0);
                             HEAPF64[$2318>>3] = $2317;
                             $2319 = +HEAPF64[$evalcond41>>3];
                             $2320 = (+__Z5IKabsd($2319));
                             $2321 = $2320 > 5.0000000000000004E-6;
                             do {
                              if (!($2321)) {
                               $2322 = (($evalcond41) + 8|0);
                               $2323 = +HEAPF64[$2322>>3];
                               $2324 = (+__Z5IKabsd($2323));
                               $2325 = $2324 > 5.0000000000000004E-6;
                               if ($2325) {
                                break;
                               }
                               $2326 = (($evalcond41) + 16|0);
                               $2327 = +HEAPF64[$2326>>3];
                               $2328 = (+__Z5IKabsd($2327));
                               $2329 = $2328 > 5.0000000000000004E-6;
                               if ($2329) {
                                break;
                               }
                               $2330 = $4;
                               __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$2330);
                               break L674;
                              }
                             } while(0);
                            } else {
                            }
                           } while(0);
                           $2331 = $ij039;
                           $2332 = (($2331) + 1)|0;
                           $ij039 = $2332;
                          }
                          break L652;
                         }
                        } while(0);
                        break L606;
                       }
                      } while(0);
                      label = 288;
                     } else {
                      label = 288;
                     }
                    } while(0);
                    if ((label|0) == 288) {
                     label = 0;
                    }
                    $2509 = $bgotonextstatement32;
                    $2510 = $2509&1;
                    if ($2510) {
                     $bgotonextstatement49 = 1;
                     $bgotonextstatement49 = 0;
                     $2511 = $bgotonextstatement49;
                     $2512 = $2511&1;
                     if ($2512) {
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             } else {
             }
            } while(0);
            $3348 = $ij1;
            $3349 = (($3348) + 1)|0;
            $ij1 = $3349;
           }
           break;
          }
         }
         break L16;
        }
       }
       break L16;
      }
     } while(0);
    } else {
    }
   } while(0);
   $4633 = $ij2;
   $4634 = (($4633) + 1)|0;
   $ij2 = $4634;
  }
  $4635 = $dummyiter;
  $4636 = (($4635) + 1)|0;
  $dummyiter = $4636;
 }
 $4637 = $4;
 $4638 = HEAP32[$4637>>2]|0;
 $4639 = (($4638) + 16|0);
 $4640 = HEAP32[$4639>>2]|0;
 $4641 = (FUNCTION_TABLE_ii[$4640 & 1023]($4637)|0);
 $4642 = ($4641>>>0)>(0);
 STACKTOP = sp;return ($4642|0);
}
function __ZN6ikfast14IkSolutionListIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __ZN6ikfast18IkSolutionListBaseIdEC2Ev($3);
 $4 = (400 + 8|0);
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 4|0);
 __THREW__ = 0;
 invoke_vi(359,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $1 = $8;
 $2 = $9;
 __THREW__ = 0;
 invoke_vi(19,($3|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $12 = $1;
 $13 = $2;
 ___resumeException($12|0);
 // unreachable;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEEC2Ev($4);
 $5 = $1;
 $6 = ($5>>>0)>(0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $1;
 __THREW__ = 0;
 invoke_vii(360,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  $10 = $1;
  __THREW__ = 0;
  invoke_vii(361,($4|0),($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 __THREW__ = 0;
 invoke_vi(362,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 }
 $17 = $2;
 $18 = $3;
 ___resumeException($17|0);
 // unreachable;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 8)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + ($3<<3)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = (__ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK6ikfast14IkSolutionListIdE11GetSolutionEj($this,$index) {
 $this = $this|0;
 $index = $index|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $it = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $it = sp;
 $0 = $this;
 $1 = $index;
 $4 = $0;
 $5 = $1;
 $6 = (($4) + 4|0);
 $7 = (__ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($6)|0);
 $8 = ($5>>>0)>=($7>>>0);
 if (!($8)) {
  $14 = (($4) + 4|0);
  __ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($it,$14);
  $15 = $1;
  __ZNSt3__17advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeE($it,$15);
  $16 = (__ZNKSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEdeEv($it)|0);
  STACKTOP = sp;return ($16|0);
 }
 $9 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(363,($9|0),(368|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  ___cxa_throw(($9|0),(2576|0),(62|0));
  // unreachable;
 }
 $12 = ___cxa_find_matching_catch()|0;
 $13 = tempRet0;
 $2 = $12;
 $3 = $13;
 ___cxa_free_exception(($9|0));
 $17 = $2;
 $18 = $3;
 ___resumeException($17|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionListIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (400 + 8|0);
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 4|0);
 __THREW__ = 0;
 invoke_vi(364,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN6ikfast18IkSolutionListBaseIdED2Ev($3);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $1 = $8;
 $2 = $9;
 __THREW__ = 0;
 invoke_vi(19,($3|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $12 = $1;
 $13 = $2;
 ___resumeException($12|0);
 // unreachable;
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZN6ikfast14IkSolutionListIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(1,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $index = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 8|0;
 $0 = $this;
 $1 = $vinfos;
 $2 = $vfree;
 $6 = $0;
 $7 = (($6) + 4|0);
 $8 = (__ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($7)|0);
 $index = $8;
 $9 = (($6) + 4|0);
 $10 = $1;
 $11 = $2;
 __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($3,$10,$11);
 __THREW__ = 0;
 invoke_vii(365,($9|0),($3|0));
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if (!($13)) {
  __ZN6ikfast10IkSolutionIdED2Ev($3);
  $14 = $index;
  STACKTOP = sp;return ($14|0);
 }
 $15 = ___cxa_find_matching_catch()|0;
 $16 = tempRet0;
 $4 = $15;
 $5 = $16;
 __THREW__ = 0;
 invoke_vi(7,($3|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 }
 $19 = $4;
 $20 = $5;
 ___resumeException($19|0);
 // unreachable;
 return (0)|0;
}
function __ZN6ikfast14IkSolutionListIdE5ClearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($2);
 STACKTOP = sp;return;
}
function __ZN6ikfast10IkSolutionIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (528 + 8|0);
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 16|0);
 __THREW__ = 0;
 invoke_vi(366,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $11 = ___cxa_find_matching_catch()|0;
   $12 = tempRet0;
   $1 = $11;
   $2 = $12;
   $13 = (($3) + 4|0);
   __THREW__ = 0;
   invoke_vi(367,($13|0));
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $22 = ___cxa_find_matching_catch(0|0)|0;
    $23 = tempRet0;
    ___clang_call_terminate($22);
    // unreachable;
   } else {
    break;
   }
  } else {
   $8 = (($3) + 4|0);
   __THREW__ = 0;
   invoke_vi(367,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $16 = ___cxa_find_matching_catch()|0;
    $17 = tempRet0;
    $1 = $16;
    $2 = $17;
    break;
   } else {
    __ZN6ikfast14IkSolutionBaseIdED2Ev($3);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(15,($3|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 }
 $20 = $1;
 $21 = $2;
 ___resumeException($20|0);
 // unreachable;
}
function __ZN6ikfast10IkSolutionIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(7,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $solution;
 $2 = $freevalues;
 $3 = $0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = (($3) + 4|0);
  $6 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($5)|0);
  $7 = ($4>>>0)<($6>>>0);
  if (!($7)) {
   break;
  }
  $8 = (($3) + 4|0);
  $9 = $i;
  $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($8,$9)|0);
  $11 = (($10) + 16|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12 << 24 >> 24;
  $14 = ($13|0)<(0);
  if ($14) {
   $15 = (($3) + 4|0);
   $16 = $i;
   $17 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($15,$16)|0);
   $18 = (($17) + 8|0);
   $19 = +HEAPF64[$18>>3];
   $20 = $i;
   $21 = $1;
   $22 = (($21) + ($20<<3)|0);
   HEAPF64[$22>>3] = $19;
  } else {
   $23 = (($3) + 4|0);
   $24 = $i;
   $25 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($23,$24)|0);
   $26 = (($25) + 16|0);
   $27 = HEAP8[$26>>0]|0;
   $28 = $27 << 24 >> 24;
   $29 = $2;
   $30 = (($29) + ($28<<3)|0);
   $31 = +HEAPF64[$30>>3];
   $32 = (($3) + 4|0);
   $33 = $i;
   $34 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($32,$33)|0);
   $35 = +HEAPF64[$34>>3];
   $36 = $31 * $35;
   $37 = (($3) + 4|0);
   $38 = $i;
   $39 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($37,$38)|0);
   $40 = (($39) + 8|0);
   $41 = +HEAPF64[$40>>3];
   $42 = $36 + $41;
   $43 = $i;
   $44 = $1;
   $45 = (($44) + ($43<<3)|0);
   HEAPF64[$45>>3] = $42;
   $46 = $i;
   $47 = $1;
   $48 = (($47) + ($46<<3)|0);
   $49 = +HEAPF64[$48>>3];
   $50 = $49 > 3.14159265358979;
   if ($50) {
    $51 = $i;
    $52 = $1;
    $53 = (($52) + ($51<<3)|0);
    $54 = +HEAPF64[$53>>3];
    $55 = $54 - 6.2831853071795898;
    HEAPF64[$53>>3] = $55;
   } else {
    $56 = $i;
    $57 = $1;
    $58 = (($57) + ($56<<3)|0);
    $59 = +HEAPF64[$58>>3];
    $60 = $59 < -3.14159265358979;
    if ($60) {
     $61 = $i;
     $62 = $1;
     $63 = (($62) + ($61<<3)|0);
     $64 = +HEAPF64[$63>>3];
     $65 = $64 + 6.2831853071795898;
     HEAPF64[$63>>3] = $65;
    }
   }
  }
  $66 = $i;
  $67 = (($66) + 1)|0;
  $i = $67;
 }
 STACKTOP = sp;return;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $solution;
 $2 = $freevalues;
 $3 = $0;
 $4 = $1;
 $5 = HEAP32[$3>>2]|0;
 $6 = (($5) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($3)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($4,$8);
 $9 = HEAP32[$3>>2]|0;
 $10 = (($9) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $1;
 $13 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($12,0)|0);
 $14 = $2;
 $15 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($14)|0);
 $16 = ($15>>>0)>(0);
 if ($16) {
  $17 = $2;
  $18 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($17,0)|0);
  $19 = $18;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 } else {
  $19 = 0;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 }
}
function __ZNK6ikfast10IkSolutionIdE7GetFreeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 16|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK6ikfast10IkSolutionIdE6GetDOFEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK6ikfast10IkSolutionIdE8ValidateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = (($3) + 4|0);
  $6 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($5)|0);
  $7 = ($4>>>0)<($6>>>0);
  if (!($7)) {
   label = 24;
   break;
  }
  $8 = (($3) + 4|0);
  $9 = $i;
  $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($8,$9)|0);
  $11 = (($10) + 18|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12&255;
  $14 = ($13|0)==(255);
  if ($14) {
   label = 4;
   break;
  }
  $20 = (($3) + 4|0);
  $21 = $i;
  $22 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($20,$21)|0);
  $23 = (($22) + 18|0);
  $24 = HEAP8[$23>>0]|0;
  $25 = $24&255;
  $26 = ($25|0)>(0);
  if ($26) {
   $27 = (($3) + 4|0);
   $28 = $i;
   $29 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($27,$28)|0);
   $30 = (($29) + 19|0);
   $31 = HEAP8[$30>>0]|0;
   $32 = $31&255;
   $33 = (($3) + 4|0);
   $34 = $i;
   $35 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($33,$34)|0);
   $36 = (($35) + 18|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37&255;
   $39 = ($32|0)>=($38|0);
   if ($39) {
    label = 9;
    break;
   }
   $45 = (($3) + 4|0);
   $46 = $i;
   $47 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($45,$46)|0);
   $48 = (($47) + 19|0);
   $49 = (($48) + 1|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50&255;
   $52 = ($51|0)!=(255);
   if ($52) {
    $53 = (($3) + 4|0);
    $54 = $i;
    $55 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($53,$54)|0);
    $56 = (($55) + 19|0);
    $57 = (($56) + 1|0);
    $58 = HEAP8[$57>>0]|0;
    $59 = $58&255;
    $60 = (($3) + 4|0);
    $61 = $i;
    $62 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($60,$61)|0);
    $63 = (($62) + 18|0);
    $64 = HEAP8[$63>>0]|0;
    $65 = $64&255;
    $66 = ($59|0)>=($65|0);
    if ($66) {
     label = 14;
     break;
    }
   }
  }
  $72 = (($3) + 4|0);
  $73 = $i;
  $74 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($72,$73)|0);
  $75 = (($74) + 8|0);
  $76 = +HEAPF64[$75>>3];
  $77 = (__Z8isfiniteIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($76)|0);
  if (!($77)) {
   label = 19;
   break;
  }
  $83 = $i;
  $84 = (($83) + 1)|0;
  $i = $84;
 }
 if ((label|0) == 4) {
  $15 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(363,($15|0),(656|0));
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if (!($17)) {
   ___cxa_throw(($15|0),(2576|0),(62|0));
   // unreachable;
  }
  $18 = ___cxa_find_matching_catch()|0;
  $19 = tempRet0;
  $1 = $18;
  $2 = $19;
  ___cxa_free_exception(($15|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 9) {
  $40 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(363,($40|0),(696|0));
  $41 = __THREW__; __THREW__ = 0;
  $42 = $41&1;
  if (!($42)) {
   ___cxa_throw(($40|0),(2576|0),(62|0));
   // unreachable;
  }
  $43 = ___cxa_find_matching_catch()|0;
  $44 = tempRet0;
  $1 = $43;
  $2 = $44;
  ___cxa_free_exception(($40|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 14) {
  $67 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(363,($67|0),(736|0));
  $68 = __THREW__; __THREW__ = 0;
  $69 = $68&1;
  if (!($69)) {
   ___cxa_throw(($67|0),(2576|0),(62|0));
   // unreachable;
  }
  $70 = ___cxa_find_matching_catch()|0;
  $71 = tempRet0;
  $1 = $70;
  $2 = $71;
  ___cxa_free_exception(($67|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 19) {
  $78 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(363,($78|0),(776|0));
  $79 = __THREW__; __THREW__ = 0;
  $80 = $79&1;
  if (!($80)) {
   ___cxa_throw(($78|0),(2576|0),(62|0));
   // unreachable;
  }
  $81 = ___cxa_find_matching_catch()|0;
  $82 = tempRet0;
  $1 = $81;
  $2 = $82;
  ___cxa_free_exception(($78|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 24) {
  STACKTOP = sp;return;
 }
}
function __ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE($this,$v) {
 $this = $this|0;
 $v = $v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $i = 0, $j = 0, $j1 = 0, $j2 = 0;
 var $orgsize = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 24|0;
 $3 = sp + 4|0;
 $0 = $this;
 $1 = $v;
 $4 = $0;
 $5 = $1;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($5,0);
 $6 = $1;
 HEAP32[$2>>2] = 0;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE9push_backERKj($6,$2);
 $7 = (($4) + 4|0);
 $8 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($7)|0);
 $9 = (($8) - 1)|0;
 $i = $9;
 while(1) {
  $10 = $i;
  $11 = ($10|0)>=(0);
  if (!($11)) {
   break;
  }
  $12 = (($4) + 4|0);
  $13 = $i;
  $14 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($12,$13)|0);
  $15 = (($14) + 18|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = $16&255;
  $18 = ($17|0)!=(255);
  if ($18) {
   $19 = (($4) + 4|0);
   $20 = $i;
   $21 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($19,$20)|0);
   $22 = (($21) + 18|0);
   $23 = HEAP8[$22>>0]|0;
   $24 = $23&255;
   $25 = ($24|0)>(1);
   if ($25) {
    $j = 0;
    while(1) {
     $26 = $j;
     $27 = $1;
     $28 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($27)|0);
     $29 = ($26>>>0)<($28>>>0);
     if (!($29)) {
      break;
     }
     $30 = (($4) + 4|0);
     $31 = $i;
     $32 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($30,$31)|0);
     $33 = (($32) + 18|0);
     $34 = HEAP8[$33>>0]|0;
     $35 = $34&255;
     $36 = $1;
     $37 = $j;
     $38 = (__ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($36,$37)|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = Math_imul($39, $35)|0;
     HEAP32[$38>>2] = $40;
     $41 = $j;
     $42 = (($41) + 1)|0;
     $j = $42;
    }
    $43 = $1;
    $44 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($43)|0);
    $orgsize = $44;
    $45 = (($4) + 4|0);
    $46 = $i;
    $47 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($45,$46)|0);
    $48 = (($47) + 19|0);
    $49 = (($48) + 1|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = $50&255;
    $52 = ($51|0)!=(255);
    if ($52) {
     $j1 = 0;
     while(1) {
      $53 = $j1;
      $54 = $orgsize;
      $55 = ($53>>>0)<($54>>>0);
      if (!($55)) {
       break;
      }
      $56 = $1;
      $57 = $1;
      $58 = $j1;
      $59 = (__ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($57,$58)|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = (($4) + 4|0);
      $62 = $i;
      $63 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($61,$62)|0);
      $64 = (($63) + 19|0);
      $65 = (($64) + 1|0);
      $66 = HEAP8[$65>>0]|0;
      $67 = $66&255;
      $68 = (($60) + ($67))|0;
      HEAP32[$3>>2] = $68;
      __ZNSt3__16vectorIjNS_9allocatorIjEEE9push_backERKj($56,$3);
      $69 = $j1;
      $70 = (($69) + 1)|0;
      $j1 = $70;
     }
    }
    $71 = (($4) + 4|0);
    $72 = $i;
    $73 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($71,$72)|0);
    $74 = (($73) + 19|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = $75&255;
    $77 = ($76|0)!=(255);
    if ($77) {
     $j2 = 0;
     while(1) {
      $78 = $j2;
      $79 = $orgsize;
      $80 = ($78>>>0)<($79>>>0);
      if (!($80)) {
       break;
      }
      $81 = (($4) + 4|0);
      $82 = $i;
      $83 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($81,$82)|0);
      $84 = (($83) + 19|0);
      $85 = HEAP8[$84>>0]|0;
      $86 = $85&255;
      $87 = $1;
      $88 = $j2;
      $89 = (__ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($87,$88)|0);
      $90 = HEAP32[$89>>2]|0;
      $91 = (($90) + ($86))|0;
      HEAP32[$89>>2] = $91;
      $92 = $j2;
      $93 = (($92) + 1)|0;
      $j2 = $93;
     }
    }
   }
  }
  $94 = $i;
  $95 = (($94) + -1)|0;
  $i = $95;
 }
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionBaseIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionBaseIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(15,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $solution;
 $2 = $freevalues;
 $3 = $0;
 $4 = $1;
 $5 = HEAP32[$3>>2]|0;
 $6 = (($5) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($3)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($4,$8);
 $9 = HEAP32[$3>>2]|0;
 $10 = (($9) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $1;
 $13 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($12,0)|0);
 $14 = $2;
 $15 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($14)|0);
 $16 = ($15>>>0)>(0);
 if ($16) {
  $17 = $2;
  $18 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($17,0)|0);
  $19 = $18;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 } else {
  $19 = 0;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 }
}
function __ZN6ikfast18IkSolutionListBaseIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZN6ikfast18IkSolutionListBaseIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(19,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vii(368,($3|0),(1056|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  $6 = (($3) + 64|0);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  STACKTOP = sp;return;
 }
 $7 = ___cxa_find_matching_catch()|0;
 $8 = tempRet0;
 $1 = $7;
 $2 = $8;
 $9 = (($3) + 64|0);
 __THREW__ = 0;
 invoke_vi(87,($9|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $12 = $1;
 $13 = $2;
 ___resumeException($12|0);
 // unreachable;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(21,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
 STACKTOP = sp;return;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($2);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($1) + ($4)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($1) + ($4)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($5);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (1328 + 8|0);
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 32|0);
 __THREW__ = 0;
 invoke_vi(369,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $1 = $8;
 $2 = $9;
 __THREW__ = 0;
 invoke_vi(89,($3|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $12 = $1;
 $13 = $2;
 ___resumeException($12|0);
 // unreachable;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(41,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$__way,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $__way = $__way|0;
 $__wch = $__wch|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__noff = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 8|0;
 $__noff = sp;
 $2 = $this;
 $6 = $3;
 $7 = $6;
 HEAP32[$7>>2] = $0;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = $1;
 $4 = $__way;
 $5 = $__wch;
 $10 = $2;
 $11 = (($10) + 44|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
 $14 = ($12>>>0)<($13>>>0);
 if ($14) {
  $15 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
  $16 = (($10) + 44|0);
  HEAP32[$16>>2] = $15;
 }
 $17 = $5;
 $18 = $17 & 24;
 $19 = ($18|0)==(0);
 if ($19) {
  __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
  STACKTOP = sp;return;
 }
 $20 = $5;
 $21 = $20 & 24;
 $22 = ($21|0)==(24);
 if ($22) {
  $23 = $4;
  $24 = ($23|0)==(1);
  if ($24) {
   __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
   STACKTOP = sp;return;
  }
 }
 $25 = $4;
 if ((($25|0) == 0)) {
  $26 = $__noff;
  $27 = $26;
  HEAP32[$27>>2] = 0;
  $28 = (($26) + 4)|0;
  $29 = $28;
  HEAP32[$29>>2] = 0;
 } else if ((($25|0) == 1)) {
  $30 = $5;
  $31 = $30 & 8;
  $32 = ($31|0)!=(0);
  if ($32) {
   $33 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($10)|0);
   $34 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($10)|0);
   $35 = $33;
   $36 = $34;
   $37 = (($35) - ($36))|0;
   $38 = ($37|0)<(0);
   $39 = $38 << 31 >> 31;
   $40 = $__noff;
   $41 = $40;
   HEAP32[$41>>2] = $37;
   $42 = (($40) + 4)|0;
   $43 = $42;
   HEAP32[$43>>2] = $39;
  } else {
   $44 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
   $45 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($10)|0);
   $46 = $44;
   $47 = $45;
   $48 = (($46) - ($47))|0;
   $49 = ($48|0)<(0);
   $50 = $49 << 31 >> 31;
   $51 = $__noff;
   $52 = $51;
   HEAP32[$52>>2] = $48;
   $53 = (($51) + 4)|0;
   $54 = $53;
   HEAP32[$54>>2] = $50;
  }
 } else if ((($25|0) == 2)) {
  $55 = (($10) + 44|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = (($10) + 32|0);
  $58 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($57)|0);
  $59 = $56;
  $60 = $58;
  $61 = (($59) - ($60))|0;
  $62 = ($61|0)<(0);
  $63 = $62 << 31 >> 31;
  $64 = $__noff;
  $65 = $64;
  HEAP32[$65>>2] = $61;
  $66 = (($64) + 4)|0;
  $67 = $66;
  HEAP32[$67>>2] = $63;
 } else {
  __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
  STACKTOP = sp;return;
 }
 $68 = $3;
 $69 = $68;
 $70 = HEAP32[$69>>2]|0;
 $71 = (($68) + 4)|0;
 $72 = $71;
 $73 = HEAP32[$72>>2]|0;
 $74 = $__noff;
 $75 = $74;
 $76 = HEAP32[$75>>2]|0;
 $77 = (($74) + 4)|0;
 $78 = $77;
 $79 = HEAP32[$78>>2]|0;
 $80 = (_i64Add(($76|0),($79|0),($70|0),($73|0))|0);
 $81 = tempRet0;
 $82 = $__noff;
 $83 = $82;
 HEAP32[$83>>2] = $80;
 $84 = (($82) + 4)|0;
 $85 = $84;
 HEAP32[$85>>2] = $81;
 $86 = $__noff;
 $87 = $86;
 $88 = HEAP32[$87>>2]|0;
 $89 = (($86) + 4)|0;
 $90 = $89;
 $91 = HEAP32[$90>>2]|0;
 $92 = ($91|0)<(0);
 if (!($92)) {
  $93 = (($10) + 44|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = (($10) + 32|0);
  $96 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($95)|0);
  $97 = $94;
  $98 = $96;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(0);
  $101 = $100 << 31 >> 31;
  $102 = $__noff;
  $103 = $102;
  $104 = HEAP32[$103>>2]|0;
  $105 = (($102) + 4)|0;
  $106 = $105;
  $107 = HEAP32[$106>>2]|0;
  $108 = ($101|0)<($107|0);
  $109 = ($99>>>0)<($104>>>0);
  $110 = ($101|0)==($107|0);
  $111 = $110 & $109;
  $112 = $108 | $111;
  if (!($112)) {
   $113 = $__noff;
   $114 = $113;
   $115 = HEAP32[$114>>2]|0;
   $116 = (($113) + 4)|0;
   $117 = $116;
   $118 = HEAP32[$117>>2]|0;
   $119 = ($115|0)!=(0);
   $120 = ($118|0)!=(0);
   $121 = $119 | $120;
   if ($121) {
    $122 = $5;
    $123 = $122 & 8;
    $124 = ($123|0)!=(0);
    if ($124) {
     $125 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($10)|0);
     $126 = ($125|0)==(0|0);
     if ($126) {
      __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
      STACKTOP = sp;return;
     }
    }
    $127 = $5;
    $128 = $127 & 16;
    $129 = ($128|0)!=(0);
    if ($129) {
     $130 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
     $131 = ($130|0)==(0|0);
     if ($131) {
      __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
      STACKTOP = sp;return;
     }
    }
   }
   $132 = $5;
   $133 = $132 & 8;
   $134 = ($133|0)!=(0);
   if ($134) {
    $135 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($10)|0);
    $136 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($10)|0);
    $137 = $__noff;
    $138 = $137;
    $139 = HEAP32[$138>>2]|0;
    $140 = (($137) + 4)|0;
    $141 = $140;
    $142 = HEAP32[$141>>2]|0;
    $143 = (($136) + ($139)|0);
    $144 = (($10) + 44|0);
    $145 = HEAP32[$144>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($10,$135,$143,$145);
   }
   $146 = $5;
   $147 = $146 & 16;
   $148 = ($147|0)!=(0);
   if ($148) {
    $149 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($10)|0);
    $150 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5epptrEv($10)|0);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_($10,$149,$150);
    $151 = $__noff;
    $152 = $151;
    $153 = HEAP32[$152>>2]|0;
    $154 = (($151) + 4)|0;
    $155 = $154;
    $156 = HEAP32[$155>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi($10,$153);
   }
   $157 = $__noff;
   $158 = $157;
   $159 = HEAP32[$158>>2]|0;
   $160 = (($157) + 4)|0;
   $161 = $160;
   $162 = HEAP32[$161>>2]|0;
   __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,$159,$162);
   STACKTOP = sp;return;
  }
 }
 __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$__sp,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__sp = $__sp|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__wch;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNKSt3__14fposI11__mbstate_tEcvxEv($__sp)|0);
 $7 = tempRet0;
 $8 = $1;
 FUNCTION_TABLE_viiiiii[$5 & 511]($agg$result,$2,$6,$7,0,$8);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $1;
 $3 = (($2) + 44|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($2)|0);
 $6 = ($4>>>0)<($5>>>0);
 if ($6) {
  $7 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($2)|0);
  $8 = (($2) + 44|0);
  HEAP32[$8>>2] = $7;
 }
 $9 = (($2) + 48|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10 & 8;
 $12 = ($11|0)!=(0);
 do {
  if ($12) {
   $13 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($2)|0);
   $14 = (($2) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($13>>>0)<($15>>>0);
   if ($16) {
    $17 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($2)|0);
    $18 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($2)|0);
    $19 = (($2) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($2,$17,$18,$20);
   }
   $21 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($2)|0);
   $22 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($2)|0);
   $23 = ($21>>>0)<($22>>>0);
   if (!($23)) {
    break;
   }
   $24 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($2)|0);
   $25 = HEAP8[$24>>0]|0;
   $26 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($25)|0);
   $0 = $26;
   $28 = $0;
   STACKTOP = sp;return ($28|0);
  }
 } while(0);
 $27 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $0 = $27;
 $28 = $0;
 STACKTOP = sp;return ($28|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__c;
 $3 = $1;
 $4 = (($3) + 44|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($3)|0);
 $7 = ($5>>>0)<($6>>>0);
 if ($7) {
  $8 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($3)|0);
  $9 = (($3) + 44|0);
  HEAP32[$9>>2] = $8;
 }
 $10 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($3)|0);
 $11 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
 $12 = ($10>>>0)<($11>>>0);
 do {
  if ($12) {
   $13 = $2;
   $14 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
   $15 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($13,$14)|0);
   if ($15) {
    $16 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($3)|0);
    $17 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
    $18 = (($17) + -1|0);
    $19 = (($3) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($3,$16,$18,$20);
    $21 = $2;
    $22 = (__ZNSt3__111char_traitsIcE7not_eofEi($21)|0);
    $0 = $22;
    $43 = $0;
    STACKTOP = sp;return ($43|0);
   }
   $23 = (($3) + 48|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = $24 & 16;
   $26 = ($25|0)!=(0);
   if (!($26)) {
    $27 = $2;
    $28 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($27)|0);
    $29 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
    $30 = (($29) + -1|0);
    $31 = HEAP8[$30>>0]|0;
    $32 = (__ZNSt3__111char_traitsIcE2eqEcc($28,$31)|0);
    if (!($32)) {
     break;
    }
   }
   $33 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($3)|0);
   $34 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
   $35 = (($34) + -1|0);
   $36 = (($3) + 44|0);
   $37 = HEAP32[$36>>2]|0;
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($3,$33,$35,$37);
   $38 = $2;
   $39 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($38)|0);
   $40 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
   HEAP8[$40>>0] = $39;
   $41 = $2;
   $0 = $41;
   $43 = $0;
   STACKTOP = sp;return ($43|0);
  }
 } while(0);
 $42 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $0 = $42;
 $43 = $0;
 STACKTOP = sp;return ($43|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $__hm = 0, $__ninp = 0, $__nout = 0, $__p = 0, $__p1 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $6 = sp + 4|0;
 $1 = $this;
 $2 = $__c;
 $7 = $1;
 $8 = $2;
 $9 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $10 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($8,$9)|0);
 if ($10) {
  $92 = $2;
  $93 = (__ZNSt3__111char_traitsIcE7not_eofEi($92)|0);
  $0 = $93;
  $94 = $0;
  STACKTOP = sp;return ($94|0);
 }
 $11 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($7)|0);
 $12 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($7)|0);
 $13 = $11;
 $14 = $12;
 $15 = (($13) - ($14))|0;
 $__ninp = $15;
 $16 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($7)|0);
 $17 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5epptrEv($7)|0);
 $18 = ($16|0)==($17|0);
 do {
  if ($18) {
   $19 = (($7) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = $20 & 16;
   $22 = ($21|0)!=(0);
   if (!($22)) {
    $23 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
    $0 = $23;
    $94 = $0;
    STACKTOP = sp;return ($94|0);
   }
   __THREW__ = 0;
   $24 = (invoke_ii(370,($7|0))|0);
   $25 = __THREW__; __THREW__ = 0;
   $26 = $25&1;
   if (!($26)) {
    __THREW__ = 0;
    $27 = (invoke_ii(371,($7|0))|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     $30 = $24;
     $31 = $27;
     $32 = (($30) - ($31))|0;
     $__nout = $32;
     $33 = (($7) + 44|0);
     $34 = HEAP32[$33>>2]|0;
     __THREW__ = 0;
     $35 = (invoke_ii(371,($7|0))|0);
     $36 = __THREW__; __THREW__ = 0;
     $37 = $36&1;
     if (!($37)) {
      $38 = $34;
      $39 = $35;
      $40 = (($38) - ($39))|0;
      $__hm = $40;
      $41 = (($7) + 32|0);
      __THREW__ = 0;
      invoke_vii(372,($41|0),0);
      $42 = __THREW__; __THREW__ = 0;
      $43 = $42&1;
      if (!($43)) {
       $44 = (($7) + 32|0);
       $45 = (($7) + 32|0);
       $46 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8capacityEv($45)|0);
       __THREW__ = 0;
       invoke_vii(373,($44|0),($46|0));
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if (!($48)) {
        $49 = (($7) + 32|0);
        $50 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($49)|0);
        $__p = $50;
        $51 = $__p;
        $52 = $__p;
        $53 = (($7) + 32|0);
        $54 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($53)|0);
        $55 = (($52) + ($54)|0);
        __THREW__ = 0;
        invoke_viii(374,($7|0),($51|0),($55|0));
        $56 = __THREW__; __THREW__ = 0;
        $57 = $56&1;
        if (!($57)) {
         $58 = $__nout;
         __THREW__ = 0;
         invoke_vii(375,($7|0),($58|0));
         $59 = __THREW__; __THREW__ = 0;
         $60 = $59&1;
         if (!($60)) {
          __THREW__ = 0;
          $61 = (invoke_ii(371,($7|0))|0);
          $62 = __THREW__; __THREW__ = 0;
          $63 = $62&1;
          if (!($63)) {
           $64 = $__hm;
           $65 = (($61) + ($64)|0);
           $66 = (($7) + 44|0);
           HEAP32[$66>>2] = $65;
           break;
          }
         }
        }
       }
      }
     }
    }
   }
   $67 = ___cxa_find_matching_catch(0|0)|0;
   $68 = tempRet0;
   $3 = $67;
   $4 = $68;
   $69 = $3;
   (___cxa_begin_catch(($69|0))|0);
   $70 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
   $0 = $70;
   $5 = 1;
   ___cxa_end_catch();
   $94 = $0;
   STACKTOP = sp;return ($94|0);
  }
 } while(0);
 $71 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($7)|0);
 $72 = (($71) + 1|0);
 HEAP32[$6>>2] = $72;
 $73 = (($7) + 44|0);
 $74 = (__ZNSt3__13maxIPcEERKT_S4_S4_($6,$73)|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = (($7) + 44|0);
 HEAP32[$76>>2] = $75;
 $77 = (($7) + 48|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = $78 & 8;
 $80 = ($79|0)!=(0);
 if ($80) {
  $81 = (($7) + 32|0);
  $82 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($81)|0);
  $__p1 = $82;
  $83 = $__p1;
  $84 = $__p1;
  $85 = $__ninp;
  $86 = (($84) + ($85)|0);
  $87 = (($7) + 44|0);
  $88 = HEAP32[$87>>2]|0;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($7,$83,$86,$88);
 }
 $89 = $2;
 $90 = $89&255;
 $91 = (__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputcEc($7,$90)|0);
 $0 = $91;
 $94 = $0;
 STACKTOP = sp;return ($94|0);
}
function __ZNSt3__114numeric_limitsIdE9quiet_NaNEv() {
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+__ZNSt3__123__libcpp_numeric_limitsIdLb1EE9quiet_NaNEv());
 return (+$0);
}
function __Z6IKacosd($f) {
 $f = +$f;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0, $59 = 0.0, $6 = 0.0;
 var $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0.0, $9 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ss = sp + 40|0;
 $4 = sp + 16|0;
 $5 = sp + 184|0;
 $1 = $f;
 $6 = $1;
 $7 = $6 > -1.0000020000000001;
 if ($7) {
  $8 = $1;
  $9 = $8 < 1.0000020000000001;
  if ($9) {
   $55 = $1;
   $56 = $55 <= -1.0;
   if ($56) {
    $0 = 3.14159265358979;
    $61 = $0;
    STACKTOP = sp;return (+$61);
   }
   $57 = $1;
   $58 = $57 >= 1.0;
   if ($58) {
    $0 = 0.0;
    $61 = $0;
    STACKTOP = sp;return (+$61);
   }
   $59 = $1;
   $60 = (+Math_acos((+$59)));
   $0 = $60;
   $61 = $0;
   STACKTOP = sp;return (+$61);
  }
 }
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($ss,24);
 $10 = (($ss) + 8|0);
 __THREW__ = 0;
 $11 = (invoke_iii(376,($10|0),(864|0))|0);
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if ($13) {
  label = 15;
 } else {
  __THREW__ = 0;
  $14 = (invoke_iii(376,($11|0),(888|0))|0);
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   label = 15;
  } else {
   __THREW__ = 0;
   $17 = (invoke_iii(376,($14|0),(928|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 15;
   } else {
    __THREW__ = 0;
    $20 = (invoke_iii(377,($17|0),163)|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     label = 15;
    } else {
     __THREW__ = 0;
     $23 = (invoke_iii(376,($20|0),(14728|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 15;
     } else {
      __THREW__ = 0;
      $26 = (invoke_iii(376,($23|0),(1552|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       label = 15;
      } else {
       __THREW__ = 0;
       $29 = (invoke_iii(376,($26|0),(944|0))|0);
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if ($31) {
        label = 15;
       } else {
        __THREW__ = 0;
        $32 = (invoke_iii(376,($29|0),(1488|0))|0);
        $33 = __THREW__; __THREW__ = 0;
        $34 = $33&1;
        if ($34) {
         label = 15;
        } else {
         __THREW__ = 0;
         (invoke_iii(376,($32|0),(976|0))|0);
         $35 = __THREW__; __THREW__ = 0;
         $36 = $35&1;
         if ($36) {
          label = 15;
         } else {
          $37 = (___cxa_allocate_exception(8)|0);
          $$expand_i1_val = 1;
          HEAP8[$5>>0] = $$expand_i1_val;
          __THREW__ = 0;
          invoke_vii(378,($4|0),($ss|0));
          $38 = __THREW__; __THREW__ = 0;
          $39 = $38&1;
          do {
           if ($39) {
            $46 = ___cxa_find_matching_catch()|0;
            $47 = tempRet0;
            $2 = $46;
            $3 = $47;
           } else {
            __THREW__ = 0;
            invoke_vii(379,($37|0),($4|0));
            $40 = __THREW__; __THREW__ = 0;
            $41 = $40&1;
            if (!($41)) {
             $$expand_i1_val2 = 0;
             HEAP8[$5>>0] = $$expand_i1_val2;
             __THREW__ = 0;
             invoke_viii(380,($37|0),(2576|0),(62|0));
             $42 = __THREW__; __THREW__ = 0;
             $43 = $42&1;
             if (!($43)) {
              // unreachable;
             }
            }
            $48 = ___cxa_find_matching_catch()|0;
            $49 = tempRet0;
            $2 = $48;
            $3 = $49;
            __THREW__ = 0;
            invoke_vi(369,($4|0));
            $50 = __THREW__; __THREW__ = 0;
            $51 = $50&1;
            if ($51) {
             $64 = ___cxa_find_matching_catch(0|0)|0;
             $65 = tempRet0;
             ___clang_call_terminate($64);
             // unreachable;
            } else {
             break;
            }
           }
          } while(0);
          $$pre_trunc = HEAP8[$5>>0]|0;
          $52 = $$pre_trunc&1;
          if ($52) {
           ___cxa_free_exception(($37|0));
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 if ((label|0) == 15) {
  $44 = ___cxa_find_matching_catch()|0;
  $45 = tempRet0;
  $2 = $44;
  $3 = $45;
 }
 __THREW__ = 0;
 invoke_vi(21,($ss|0));
 $53 = __THREW__; __THREW__ = 0;
 $54 = $53&1;
 if ($54) {
  $64 = ___cxa_find_matching_catch(0|0)|0;
  $65 = tempRet0;
  ___clang_call_terminate($64);
  // unreachable;
 }
 $62 = $2;
 $63 = $3;
 ___resumeException($62|0);
 // unreachable;
 return +(0.0);
}
function __Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0.0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $1 = $0;
 $2 = (__Z14__libcpp_isnanIdEbT_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __Z5IKabsd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = (+Math_abs((+$1)));
 STACKTOP = sp;return (+$2);
}
function __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($agg$result,$fy,$fx,$epsilon) {
 $agg$result = $agg$result|0;
 $fy = +$fy;
 $fx = +$fx;
 $epsilon = +$epsilon;
 var $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $fy;
 $1 = $fx;
 $2 = $epsilon;
 $3 = (($agg$result) + 8|0);
 HEAP8[$3>>0] = 0;
 HEAPF64[$agg$result>>3] = 0.0;
 $4 = $0;
 $5 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($4)|0);
 if ($5) {
  STACKTOP = sp;return;
 }
 $6 = $1;
 $7 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($6)|0);
 if ($7) {
  STACKTOP = sp;return;
 }
 $8 = $0;
 $9 = (+__Z5IKabsd($8));
 $10 = $9 >= 1.9999999999999999E-6;
 if ($10) {
  label = 5;
 } else {
  $11 = $1;
  $12 = (+__Z5IKabsd($11));
  $13 = $12 > 1.9999999999999999E-6;
  if ($13) {
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $14 = $0;
  $15 = $1;
  $16 = (+__Z13IKatan2Simpledd($14,$15));
  HEAPF64[$agg$result>>3] = $16;
  $17 = (($agg$result) + 8|0);
  HEAP8[$17>>0] = 1;
 }
 STACKTOP = sp;return;
}
function __Z6IKsqrtd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $f;
 $2 = $1;
 $3 = $2 <= 0.0;
 if ($3) {
  $0 = 0.0;
 } else {
  $4 = $1;
  $5 = (+Math_sqrt((+$4)));
  $0 = $5;
 }
 $6 = $0;
 STACKTOP = sp;return (+$6);
}
function __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($agg$result,$f,$n) {
 $agg$result = $agg$result|0;
 $f = +$f;
 $n = $n|0;
 var $0 = 0.0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0;
 var $27 = 0.0, $28 = 0, $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0;
 var $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0.0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0, $num = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $n;
 $2 = (($agg$result) + 8|0);
 HEAP8[$2>>0] = 1;
 $3 = $1;
 $4 = ($3|0)==(0);
 if ($4) {
  HEAPF64[$agg$result>>3] = 1.0;
  STACKTOP = sp;return;
 }
 $5 = $1;
 $6 = ($5|0)==(1);
 if ($6) {
  $7 = $0;
  HEAPF64[$agg$result>>3] = $7;
  STACKTOP = sp;return;
 }
 $8 = $1;
 $9 = ($8|0)<(0);
 do {
  if ($9) {
   $10 = $0;
   $11 = $10 == 0.0;
   if ($11) {
    $12 = (($agg$result) + 8|0);
    HEAP8[$12>>0] = 0;
    HEAPF64[$agg$result>>3] = 1.0E+30;
    STACKTOP = sp;return;
   }
   $13 = $1;
   $14 = ($13|0)==(-1);
   if (!($14)) {
    break;
   }
   $15 = $0;
   $16 = 1.0 / $15;
   HEAPF64[$agg$result>>3] = $16;
   STACKTOP = sp;return;
  }
 } while(0);
 $17 = $1;
 $18 = ($17|0)>(0);
 if ($18) {
  $19 = $1;
  $22 = $19;
 } else {
  $20 = $1;
  $21 = (0 - ($20))|0;
  $22 = $21;
 }
 $num = $22;
 $23 = $num;
 $24 = ($23|0)==(2);
 if ($24) {
  $25 = $0;
  $26 = $0;
  $27 = $25 * $26;
  HEAPF64[$agg$result>>3] = $27;
 } else {
  $28 = $num;
  $29 = ($28|0)==(3);
  if ($29) {
   $30 = $0;
   $31 = $0;
   $32 = $30 * $31;
   $33 = $0;
   $34 = $32 * $33;
   HEAPF64[$agg$result>>3] = $34;
  } else {
   HEAPF64[$agg$result>>3] = 1.0;
   while(1) {
    $35 = $num;
    $36 = ($35|0)>(0);
    if (!($36)) {
     break;
    }
    $37 = $num;
    $38 = $37 & 1;
    $39 = ($38|0)!=(0);
    if ($39) {
     $40 = $0;
     $41 = +HEAPF64[$agg$result>>3];
     $42 = $41 * $40;
     HEAPF64[$agg$result>>3] = $42;
    }
    $43 = $num;
    $44 = $43 >> 1;
    $num = $44;
    $45 = $0;
    $46 = $0;
    $47 = $46 * $45;
    $0 = $47;
   }
  }
 }
 $48 = $1;
 $49 = ($48|0)<(0);
 if ($49) {
  $50 = +HEAPF64[$agg$result>>3];
  $51 = 1.0 / $50;
  HEAPF64[$agg$result>>3] = $51;
 }
 STACKTOP = sp;return;
}
function __Z6IKasind($f) {
 $f = +$f;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0, $59 = 0.0, $6 = 0.0;
 var $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0.0, $9 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ss = sp + 40|0;
 $4 = sp + 16|0;
 $5 = sp + 184|0;
 $1 = $f;
 $6 = $1;
 $7 = $6 > -1.0000020000000001;
 if ($7) {
  $8 = $1;
  $9 = $8 < 1.0000020000000001;
  if ($9) {
   $55 = $1;
   $56 = $55 <= -1.0;
   if ($56) {
    $0 = -1.5707963267949001;
    $61 = $0;
    STACKTOP = sp;return (+$61);
   }
   $57 = $1;
   $58 = $57 >= 1.0;
   if ($58) {
    $0 = 1.5707963267949001;
    $61 = $0;
    STACKTOP = sp;return (+$61);
   }
   $59 = $1;
   $60 = (+Math_asin((+$59)));
   $0 = $60;
   $61 = $0;
   STACKTOP = sp;return (+$61);
  }
 }
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($ss,24);
 $10 = (($ss) + 8|0);
 __THREW__ = 0;
 $11 = (invoke_iii(376,($10|0),(864|0))|0);
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if ($13) {
  label = 15;
 } else {
  __THREW__ = 0;
  $14 = (invoke_iii(376,($11|0),(888|0))|0);
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   label = 15;
  } else {
   __THREW__ = 0;
   $17 = (invoke_iii(376,($14|0),(928|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 15;
   } else {
    __THREW__ = 0;
    $20 = (invoke_iii(377,($17|0),130)|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     label = 15;
    } else {
     __THREW__ = 0;
     $23 = (invoke_iii(376,($20|0),(14728|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 15;
     } else {
      __THREW__ = 0;
      $26 = (invoke_iii(376,($23|0),(1480|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       label = 15;
      } else {
       __THREW__ = 0;
       $29 = (invoke_iii(376,($26|0),(944|0))|0);
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if ($31) {
        label = 15;
       } else {
        __THREW__ = 0;
        $32 = (invoke_iii(376,($29|0),(1488|0))|0);
        $33 = __THREW__; __THREW__ = 0;
        $34 = $33&1;
        if ($34) {
         label = 15;
        } else {
         __THREW__ = 0;
         (invoke_iii(376,($32|0),(976|0))|0);
         $35 = __THREW__; __THREW__ = 0;
         $36 = $35&1;
         if ($36) {
          label = 15;
         } else {
          $37 = (___cxa_allocate_exception(8)|0);
          $$expand_i1_val = 1;
          HEAP8[$5>>0] = $$expand_i1_val;
          __THREW__ = 0;
          invoke_vii(378,($4|0),($ss|0));
          $38 = __THREW__; __THREW__ = 0;
          $39 = $38&1;
          do {
           if ($39) {
            $46 = ___cxa_find_matching_catch()|0;
            $47 = tempRet0;
            $2 = $46;
            $3 = $47;
           } else {
            __THREW__ = 0;
            invoke_vii(379,($37|0),($4|0));
            $40 = __THREW__; __THREW__ = 0;
            $41 = $40&1;
            if (!($41)) {
             $$expand_i1_val2 = 0;
             HEAP8[$5>>0] = $$expand_i1_val2;
             __THREW__ = 0;
             invoke_viii(380,($37|0),(2576|0),(62|0));
             $42 = __THREW__; __THREW__ = 0;
             $43 = $42&1;
             if (!($43)) {
              // unreachable;
             }
            }
            $48 = ___cxa_find_matching_catch()|0;
            $49 = tempRet0;
            $2 = $48;
            $3 = $49;
            __THREW__ = 0;
            invoke_vi(369,($4|0));
            $50 = __THREW__; __THREW__ = 0;
            $51 = $50&1;
            if ($51) {
             $64 = ___cxa_find_matching_catch(0|0)|0;
             $65 = tempRet0;
             ___clang_call_terminate($64);
             // unreachable;
            } else {
             break;
            }
           }
          } while(0);
          $$pre_trunc = HEAP8[$5>>0]|0;
          $52 = $$pre_trunc&1;
          if ($52) {
           ___cxa_free_exception(($37|0));
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 if ((label|0) == 15) {
  $44 = ___cxa_find_matching_catch()|0;
  $45 = tempRet0;
  $2 = $44;
  $3 = $45;
 }
 __THREW__ = 0;
 invoke_vi(21,($ss|0));
 $53 = __THREW__; __THREW__ = 0;
 $54 = $53&1;
 if ($54) {
  $64 = ___cxa_find_matching_catch(0|0)|0;
  $65 = tempRet0;
  ___clang_call_terminate($64);
  // unreachable;
 }
 $62 = $2;
 $63 = $3;
 ___resumeException($62|0);
 // unreachable;
 return +(0.0);
}
function __Z6IKsignd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $f;
 $2 = $1;
 $3 = $2 > 0.0;
 do {
  if ($3) {
   $0 = 1.0;
  } else {
   $4 = $1;
   $5 = $4 < 0.0;
   if ($5) {
    $0 = -1.0;
    break;
   }
   $0 = 0.0;
  }
 } while(0);
 $6 = $0;
 STACKTOP = sp;return (+$6);
}
function __Z6IKfmoddd($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $x;
 $1 = $y;
 while(1) {
  $2 = $0;
  $3 = $2 < 0.0;
  if (!($3)) {
   break;
  }
  $4 = $1;
  $5 = $0;
  $6 = $5 + $4;
  $0 = $6;
 }
 $7 = $0;
 $8 = $1;
 $9 = (+_fmod($7,$8));
 STACKTOP = sp;return (+$9);
}
function __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions) {
 $this = $this|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $10 = 0.0, $100 = 0.0, $1000 = 0.0, $10000 = 0.0, $10001 = 0.0, $10002 = 0.0, $10003 = 0.0, $10004 = 0, $10005 = 0.0, $10006 = 0.0, $10007 = 0.0, $10008 = 0, $10009 = 0.0, $1001 = 0, $10010 = 0.0, $10011 = 0, $10012 = 0, $10013 = 0;
 var $10014 = 0, $10015 = 0, $10016 = 0, $10017 = 0, $10018 = 0, $10019 = 0, $1002 = 0.0, $10020 = 0, $10021 = 0, $10022 = 0, $10023 = 0, $10024 = 0, $10025 = 0, $10026 = 0, $10027 = 0, $10028 = 0, $10029 = 0, $1003 = 0, $10030 = 0, $10031 = 0;
 var $10032 = 0.0, $10033 = 0, $10034 = 0, $10035 = 0.0, $10036 = 0.0, $10037 = 0.0, $10038 = 0, $10039 = 0, $1004 = 0.0, $10040 = 0, $10041 = 0.0, $10042 = 0, $10043 = 0, $10044 = 0.0, $10045 = 0.0, $10046 = 0.0, $10047 = 0, $10048 = 0, $10049 = 0, $1005 = 0.0;
 var $10050 = 0, $10051 = 0, $10052 = 0, $10053 = 0, $10054 = 0, $10055 = 0, $10056 = 0, $10057 = 0, $10058 = 0.0, $10059 = 0, $1006 = 0.0, $10060 = 0, $10061 = 0, $10062 = 0.0, $10063 = 0, $10064 = 0, $10065 = 0, $10066 = 0.0, $10067 = 0, $10068 = 0;
 var $10069 = 0.0, $1007 = 0, $10070 = 0.0, $10071 = 0, $10072 = 0.0, $10073 = 0.0, $10074 = 0, $10075 = 0.0, $10076 = 0, $10077 = 0.0, $10078 = 0.0, $10079 = 0, $1008 = 0.0, $10080 = 0.0, $10081 = 0, $10082 = 0.0, $10083 = 0.0, $10084 = 0, $10085 = 0.0, $10086 = 0.0;
 var $10087 = 0, $10088 = 0.0, $10089 = 0.0, $1009 = 0, $10090 = 0, $10091 = 0.0, $10092 = 0.0, $10093 = 0, $10094 = 0.0, $10095 = 0, $10096 = 0.0, $10097 = 0.0, $10098 = 0, $10099 = 0.0, $101 = 0.0, $1010 = 0.0, $10100 = 0.0, $10101 = 0.0, $10102 = 0, $10103 = 0.0;
 var $10104 = 0.0, $10105 = 0.0, $10106 = 0.0, $10107 = 0.0, $10108 = 0, $10109 = 0.0, $1011 = 0.0, $10110 = 0.0, $10111 = 0.0, $10112 = 0, $10113 = 0.0, $10114 = 0.0, $10115 = 0, $10116 = 0.0, $10117 = 0, $10118 = 0.0, $10119 = 0.0, $1012 = 0.0, $10120 = 0.0, $10121 = 0.0;
 var $10122 = 0.0, $10123 = 0, $10124 = 0, $10125 = 0.0, $10126 = 0, $10127 = 0.0, $10128 = 0.0, $10129 = 0.0, $1013 = 0.0, $10130 = 0.0, $10131 = 0, $10132 = 0.0, $10133 = 0, $10134 = 0.0, $10135 = 0.0, $10136 = 0.0, $10137 = 0, $10138 = 0, $10139 = 0.0, $1014 = 0;
 var $10140 = 0, $10141 = 0.0, $10142 = 0.0, $10143 = 0.0, $10144 = 0.0, $10145 = 0, $10146 = 0.0, $10147 = 0, $10148 = 0.0, $10149 = 0.0, $1015 = 0.0, $10150 = 0.0, $10151 = 0, $10152 = 0.0, $10153 = 0, $10154 = 0.0, $10155 = 0.0, $10156 = 0.0, $10157 = 0.0, $10158 = 0.0;
 var $10159 = 0.0, $1016 = 0, $10160 = 0, $10161 = 0, $10162 = 0.0, $10163 = 0.0, $10164 = 0.0, $10165 = 0, $10166 = 0.0, $10167 = 0.0, $10168 = 0, $10169 = 0.0, $1017 = 0.0, $10170 = 0.0, $10171 = 0.0, $10172 = 0.0, $10173 = 0, $10174 = 0, $10175 = 0.0, $10176 = 0.0;
 var $10177 = 0.0, $10178 = 0, $10179 = 0.0, $1018 = 0.0, $10180 = 0.0, $10181 = 0.0, $10182 = 0.0, $10183 = 0.0, $10184 = 0.0, $10185 = 0.0, $10186 = 0, $10187 = 0.0, $10188 = 0, $10189 = 0.0, $1019 = 0.0, $10190 = 0.0, $10191 = 0.0, $10192 = 0.0, $10193 = 0.0, $10194 = 0.0;
 var $10195 = 0.0, $10196 = 0, $10197 = 0.0, $10198 = 0.0, $10199 = 0.0, $102 = 0.0, $1020 = 0, $10200 = 0.0, $10201 = 0, $10202 = 0.0, $10203 = 0.0, $10204 = 0, $10205 = 0.0, $10206 = 0.0, $10207 = 0.0, $10208 = 0.0, $10209 = 0, $1021 = 0, $10210 = 0.0, $10211 = 0.0;
 var $10212 = 0.0, $10213 = 0.0, $10214 = 0.0, $10215 = 0.0, $10216 = 0, $10217 = 0.0, $10218 = 0.0, $10219 = 0.0, $1022 = 0.0, $10220 = 0.0, $10221 = 0.0, $10222 = 0, $10223 = 0.0, $10224 = 0, $10225 = 0.0, $10226 = 0.0, $10227 = 0.0, $10228 = 0.0, $10229 = 0, $1023 = 0.0;
 var $10230 = 0.0, $10231 = 0, $10232 = 0.0, $10233 = 0.0, $10234 = 0.0, $10235 = 0.0, $10236 = 0.0, $10237 = 0.0, $10238 = 0.0, $10239 = 0.0, $1024 = 0.0, $10240 = 0, $10241 = 0, $10242 = 0.0, $10243 = 0, $10244 = 0.0, $10245 = 0.0, $10246 = 0, $10247 = 0.0, $10248 = 0.0;
 var $10249 = 0.0, $1025 = 0.0, $10250 = 0.0, $10251 = 0.0, $10252 = 0.0, $10253 = 0.0, $10254 = 0.0, $10255 = 0.0, $10256 = 0.0, $10257 = 0.0, $10258 = 0.0, $10259 = 0, $1026 = 0.0, $10260 = 0.0, $10261 = 0.0, $10262 = 0, $10263 = 0, $10264 = 0.0, $10265 = 0.0, $10266 = 0;
 var $10267 = 0, $10268 = 0.0, $10269 = 0.0, $1027 = 0.0, $10270 = 0, $10271 = 0, $10272 = 0.0, $10273 = 0.0, $10274 = 0, $10275 = 0, $10276 = 0.0, $10277 = 0.0, $10278 = 0, $10279 = 0, $1028 = 0, $10280 = 0.0, $10281 = 0.0, $10282 = 0, $10283 = 0, $10284 = 0.0;
 var $10285 = 0.0, $10286 = 0, $10287 = 0, $10288 = 0.0, $10289 = 0.0, $1029 = 0.0, $10290 = 0, $10291 = 0, $10292 = 0.0, $10293 = 0.0, $10294 = 0, $10295 = 0, $10296 = 0.0, $10297 = 0.0, $10298 = 0, $10299 = 0, $103 = 0.0, $1030 = 0, $10300 = 0.0, $10301 = 0.0;
 var $10302 = 0, $10303 = 0, $10304 = 0.0, $10305 = 0.0, $10306 = 0, $10307 = 0, $10308 = 0, $10309 = 0, $1031 = 0.0, $10310 = 0, $10311 = 0.0, $10312 = 0, $10313 = 0, $10314 = 0, $10315 = 0, $10316 = 0, $10317 = 0, $10318 = 0, $10319 = 0, $1032 = 0.0;
 var $10320 = 0, $10321 = 0, $10322 = 0, $10323 = 0, $10324 = 0, $10325 = 0, $10326 = 0, $10327 = 0, $10328 = 0, $10329 = 0, $1033 = 0.0, $10330 = 0, $10331 = 0, $10332 = 0, $10333 = 0, $10334 = 0, $10335 = 0, $10336 = 0, $10337 = 0, $10338 = 0;
 var $10339 = 0, $1034 = 0, $10340 = 0, $10341 = 0.0, $10342 = 0, $10343 = 0, $10344 = 0, $10345 = 0, $10346 = 0, $10347 = 0, $10348 = 0, $10349 = 0, $1035 = 0.0, $10350 = 0, $10351 = 0, $10352 = 0, $10353 = 0, $10354 = 0, $10355 = 0, $10356 = 0;
 var $10357 = 0, $10358 = 0, $10359 = 0, $1036 = 0, $10360 = 0, $10361 = 0, $10362 = 0, $10363 = 0, $10364 = 0, $10365 = 0, $10366 = 0, $10367 = 0, $10368 = 0, $10369 = 0, $1037 = 0.0, $10370 = 0, $10371 = 0.0, $10372 = 0, $10373 = 0, $10374 = 0;
 var $10375 = 0, $10376 = 0, $10377 = 0, $10378 = 0, $10379 = 0, $1038 = 0.0, $10380 = 0, $10381 = 0, $10382 = 0, $10383 = 0, $10384 = 0, $10385 = 0, $10386 = 0, $10387 = 0, $10388 = 0, $10389 = 0, $1039 = 0, $10390 = 0, $10391 = 0, $10392 = 0;
 var $10393 = 0, $10394 = 0, $10395 = 0, $10396 = 0, $10397 = 0, $10398 = 0, $10399 = 0, $104 = 0.0, $1040 = 0.0, $10400 = 0, $10401 = 0.0, $10402 = 0, $10403 = 0, $10404 = 0, $10405 = 0, $10406 = 0, $10407 = 0, $10408 = 0, $10409 = 0, $1041 = 0;
 var $10410 = 0, $10411 = 0, $10412 = 0, $10413 = 0, $10414 = 0, $10415 = 0, $10416 = 0, $10417 = 0, $10418 = 0, $10419 = 0, $1042 = 0.0, $10420 = 0, $10421 = 0, $10422 = 0, $10423 = 0, $10424 = 0, $10425 = 0, $10426 = 0, $10427 = 0, $10428 = 0;
 var $10429 = 0, $1043 = 0.0, $10430 = 0, $10431 = 0.0, $10432 = 0, $10433 = 0, $10434 = 0, $10435 = 0, $10436 = 0, $10437 = 0, $10438 = 0, $10439 = 0, $1044 = 0, $10440 = 0, $10441 = 0, $10442 = 0, $10443 = 0, $10444 = 0, $10445 = 0, $10446 = 0;
 var $10447 = 0, $10448 = 0, $10449 = 0, $1045 = 0.0, $10450 = 0, $10451 = 0, $10452 = 0, $10453 = 0, $10454 = 0, $10455 = 0, $10456 = 0, $10457 = 0, $10458 = 0, $10459 = 0, $1046 = 0.0, $10460 = 0, $10461 = 0.0, $10462 = 0, $10463 = 0, $10464 = 0;
 var $10465 = 0, $10466 = 0, $10467 = 0, $10468 = 0, $10469 = 0, $1047 = 0.0, $10470 = 0, $10471 = 0, $10472 = 0, $10473 = 0, $10474 = 0, $10475 = 0, $10476 = 0, $10477 = 0, $10478 = 0, $10479 = 0, $1048 = 0.0, $10480 = 0, $10481 = 0, $10482 = 0;
 var $10483 = 0, $10484 = 0, $10485 = 0, $10486 = 0, $10487 = 0, $10488 = 0, $10489 = 0, $1049 = 0, $10490 = 0, $10491 = 0, $10492 = 0, $10493 = 0, $10494 = 0, $10495 = 0, $10496 = 0, $10497 = 0, $10498 = 0, $10499 = 0, $105 = 0.0, $1050 = 0.0;
 var $10500 = 0, $10501 = 0, $10502 = 0, $10503 = 0, $10504 = 0, $10505 = 0, $10506 = 0, $10507 = 0, $10508 = 0.0, $10509 = 0, $1051 = 0.0, $10510 = 0, $10511 = 0, $10512 = 0, $10513 = 0.0, $10514 = 0.0, $10515 = 0.0, $10516 = 0.0, $10517 = 0.0, $10518 = 0;
 var $10519 = 0, $1052 = 0.0, $10520 = 0.0, $10521 = 0.0, $10522 = 0, $10523 = 0.0, $10524 = 0.0, $10525 = 0, $10526 = 0.0, $10527 = 0.0, $10528 = 0, $10529 = 0.0, $1053 = 0.0, $10530 = 0.0, $10531 = 0.0, $10532 = 0.0, $10533 = 0, $10534 = 0, $10535 = 0.0, $10536 = 0.0;
 var $10537 = 0.0, $10538 = 0.0, $10539 = 0.0, $1054 = 0, $10540 = 0, $10541 = 0.0, $10542 = 0.0, $10543 = 0, $10544 = 0.0, $10545 = 0.0, $10546 = 0, $10547 = 0.0, $10548 = 0.0, $10549 = 0, $1055 = 0.0, $10550 = 0.0, $10551 = 0.0, $10552 = 0.0, $10553 = 0.0, $10554 = 0.0;
 var $10555 = 0.0, $10556 = 0.0, $10557 = 0, $10558 = 0, $10559 = 0.0, $1056 = 0.0, $10560 = 0.0, $10561 = 0.0, $10562 = 0.0, $10563 = 0, $10564 = 0.0, $10565 = 0.0, $10566 = 0, $10567 = 0.0, $10568 = 0.0, $10569 = 0, $1057 = 0, $10570 = 0.0, $10571 = 0.0, $10572 = 0;
 var $10573 = 0.0, $10574 = 0.0, $10575 = 0.0, $10576 = 0.0, $10577 = 0.0, $10578 = 0.0, $10579 = 0.0, $1058 = 0, $10580 = 0.0, $10581 = 0.0, $10582 = 0, $10583 = 0.0, $10584 = 0.0, $10585 = 0.0, $10586 = 0, $10587 = 0.0, $10588 = 0.0, $10589 = 0, $1059 = 0.0, $10590 = 0;
 var $10591 = 0, $10592 = 0, $10593 = 0, $10594 = 0, $10595 = 0, $10596 = 0, $10597 = 0, $10598 = 0, $10599 = 0, $106 = 0.0, $1060 = 0.0, $10600 = 0, $10601 = 0, $10602 = 0, $10603 = 0, $10604 = 0, $10605 = 0, $10606 = 0, $10607 = 0, $10608 = 0;
 var $10609 = 0, $1061 = 0.0, $10610 = 0.0, $10611 = 0, $10612 = 0, $10613 = 0.0, $10614 = 0.0, $10615 = 0.0, $10616 = 0, $10617 = 0, $10618 = 0, $10619 = 0.0, $1062 = 0, $10620 = 0, $10621 = 0, $10622 = 0.0, $10623 = 0.0, $10624 = 0.0, $10625 = 0, $10626 = 0;
 var $10627 = 0, $10628 = 0, $10629 = 0, $1063 = 0.0, $10630 = 0, $10631 = 0, $10632 = 0, $10633 = 0, $10634 = 0, $10635 = 0, $10636 = 0.0, $10637 = 0, $10638 = 0, $10639 = 0, $1064 = 0.0, $10640 = 0.0, $10641 = 0, $10642 = 0, $10643 = 0, $10644 = 0.0;
 var $10645 = 0, $10646 = 0, $10647 = 0.0, $10648 = 0.0, $10649 = 0, $1065 = 0.0, $10650 = 0.0, $10651 = 0.0, $10652 = 0, $10653 = 0.0, $10654 = 0, $10655 = 0.0, $10656 = 0.0, $10657 = 0, $10658 = 0.0, $10659 = 0, $1066 = 0.0, $10660 = 0.0, $10661 = 0.0, $10662 = 0;
 var $10663 = 0.0, $10664 = 0.0, $10665 = 0, $10666 = 0.0, $10667 = 0.0, $10668 = 0, $10669 = 0.0, $1067 = 0.0, $10670 = 0.0, $10671 = 0, $10672 = 0.0, $10673 = 0, $10674 = 0.0, $10675 = 0.0, $10676 = 0, $10677 = 0.0, $10678 = 0.0, $10679 = 0.0, $1068 = 0, $10680 = 0;
 var $10681 = 0.0, $10682 = 0.0, $10683 = 0.0, $10684 = 0.0, $10685 = 0.0, $10686 = 0, $10687 = 0.0, $10688 = 0.0, $10689 = 0.0, $1069 = 0.0, $10690 = 0, $10691 = 0.0, $10692 = 0.0, $10693 = 0, $10694 = 0.0, $10695 = 0.0, $10696 = 0.0, $10697 = 0.0, $10698 = 0, $10699 = 0.0;
 var $107 = 0.0, $1070 = 0.0, $10700 = 0.0, $10701 = 0, $10702 = 0, $10703 = 0.0, $10704 = 0, $10705 = 0.0, $10706 = 0.0, $10707 = 0.0, $10708 = 0.0, $10709 = 0, $1071 = 0, $10710 = 0.0, $10711 = 0, $10712 = 0.0, $10713 = 0.0, $10714 = 0.0, $10715 = 0, $10716 = 0;
 var $10717 = 0.0, $10718 = 0, $10719 = 0.0, $1072 = 0, $10720 = 0.0, $10721 = 0.0, $10722 = 0.0, $10723 = 0, $10724 = 0.0, $10725 = 0, $10726 = 0.0, $10727 = 0.0, $10728 = 0.0, $10729 = 0, $1073 = 0.0, $10730 = 0.0, $10731 = 0.0, $10732 = 0.0, $10733 = 0.0, $10734 = 0.0;
 var $10735 = 0, $10736 = 0.0, $10737 = 0.0, $10738 = 0, $10739 = 0, $1074 = 0.0, $10740 = 0.0, $10741 = 0.0, $10742 = 0.0, $10743 = 0, $10744 = 0.0, $10745 = 0.0, $10746 = 0.0, $10747 = 0.0, $10748 = 0, $10749 = 0.0, $1075 = 0.0, $10750 = 0.0, $10751 = 0, $10752 = 0;
 var $10753 = 0.0, $10754 = 0.0, $10755 = 0.0, $10756 = 0.0, $10757 = 0.0, $10758 = 0.0, $10759 = 0, $1076 = 0.0, $10760 = 0.0, $10761 = 0.0, $10762 = 0.0, $10763 = 0.0, $10764 = 0, $10765 = 0.0, $10766 = 0.0, $10767 = 0.0, $10768 = 0.0, $10769 = 0.0, $1077 = 0.0, $10770 = 0.0;
 var $10771 = 0, $10772 = 0.0, $10773 = 0.0, $10774 = 0, $10775 = 0, $10776 = 0.0, $10777 = 0.0, $10778 = 0.0, $10779 = 0.0, $1078 = 0.0, $10780 = 0.0, $10781 = 0.0, $10782 = 0.0, $10783 = 0.0, $10784 = 0, $10785 = 0.0, $10786 = 0.0, $10787 = 0, $10788 = 0, $10789 = 0.0;
 var $1079 = 0.0, $10790 = 0.0, $10791 = 0.0, $10792 = 0.0, $10793 = 0.0, $10794 = 0.0, $10795 = 0.0, $10796 = 0.0, $10797 = 0.0, $10798 = 0.0, $10799 = 0.0, $108 = 0, $1080 = 0, $10800 = 0, $10801 = 0.0, $10802 = 0.0, $10803 = 0.0, $10804 = 0.0, $10805 = 0.0, $10806 = 0.0;
 var $10807 = 0, $10808 = 0.0, $10809 = 0.0, $1081 = 0.0, $10810 = 0.0, $10811 = 0.0, $10812 = 0, $10813 = 0.0, $10814 = 0, $10815 = 0.0, $10816 = 0.0, $10817 = 0.0, $10818 = 0, $10819 = 0, $1082 = 0, $10820 = 0.0, $10821 = 0, $10822 = 0.0, $10823 = 0.0, $10824 = 0.0;
 var $10825 = 0.0, $10826 = 0.0, $10827 = 0.0, $10828 = 0.0, $10829 = 0.0, $1083 = 0.0, $10830 = 0.0, $10831 = 0.0, $10832 = 0, $10833 = 0.0, $10834 = 0.0, $10835 = 0.0, $10836 = 0.0, $10837 = 0, $10838 = 0.0, $10839 = 0.0, $1084 = 0.0, $10840 = 0, $10841 = 0, $10842 = 0.0;
 var $10843 = 0.0, $10844 = 0, $10845 = 0, $10846 = 0.0, $10847 = 0.0, $10848 = 0, $10849 = 0, $1085 = 0.0, $10850 = 0.0, $10851 = 0.0, $10852 = 0, $10853 = 0, $10854 = 0.0, $10855 = 0.0, $10856 = 0, $10857 = 0, $10858 = 0.0, $10859 = 0.0, $1086 = 0, $10860 = 0;
 var $10861 = 0, $10862 = 0.0, $10863 = 0.0, $10864 = 0, $10865 = 0, $10866 = 0.0, $10867 = 0.0, $10868 = 0, $10869 = 0, $1087 = 0.0, $10870 = 0.0, $10871 = 0.0, $10872 = 0, $10873 = 0, $10874 = 0.0, $10875 = 0.0, $10876 = 0, $10877 = 0, $10878 = 0.0, $10879 = 0.0;
 var $1088 = 0.0, $10880 = 0, $10881 = 0, $10882 = 0.0, $10883 = 0.0, $10884 = 0, $10885 = 0, $10886 = 0, $10887 = 0, $10888 = 0, $10889 = 0.0, $1089 = 0, $10890 = 0, $10891 = 0, $10892 = 0, $10893 = 0, $10894 = 0, $10895 = 0, $10896 = 0, $10897 = 0;
 var $10898 = 0, $10899 = 0, $109 = 0.0, $1090 = 0, $10900 = 0, $10901 = 0, $10902 = 0, $10903 = 0, $10904 = 0, $10905 = 0, $10906 = 0, $10907 = 0, $10908 = 0, $10909 = 0, $1091 = 0.0, $10910 = 0, $10911 = 0, $10912 = 0, $10913 = 0, $10914 = 0;
 var $10915 = 0, $10916 = 0, $10917 = 0, $10918 = 0, $10919 = 0.0, $1092 = 0.0, $10920 = 0, $10921 = 0, $10922 = 0, $10923 = 0, $10924 = 0, $10925 = 0, $10926 = 0, $10927 = 0, $10928 = 0, $10929 = 0, $1093 = 0, $10930 = 0, $10931 = 0, $10932 = 0;
 var $10933 = 0, $10934 = 0, $10935 = 0, $10936 = 0, $10937 = 0, $10938 = 0, $10939 = 0, $1094 = 0, $10940 = 0, $10941 = 0, $10942 = 0, $10943 = 0, $10944 = 0, $10945 = 0, $10946 = 0, $10947 = 0, $10948 = 0, $10949 = 0.0, $1095 = 0.0, $10950 = 0;
 var $10951 = 0, $10952 = 0, $10953 = 0, $10954 = 0, $10955 = 0, $10956 = 0, $10957 = 0, $10958 = 0, $10959 = 0, $1096 = 0.0, $10960 = 0, $10961 = 0, $10962 = 0, $10963 = 0, $10964 = 0, $10965 = 0, $10966 = 0, $10967 = 0, $10968 = 0, $10969 = 0;
 var $1097 = 0, $10970 = 0, $10971 = 0, $10972 = 0, $10973 = 0, $10974 = 0, $10975 = 0, $10976 = 0, $10977 = 0, $10978 = 0, $10979 = 0.0, $1098 = 0, $10980 = 0, $10981 = 0, $10982 = 0, $10983 = 0, $10984 = 0, $10985 = 0, $10986 = 0, $10987 = 0;
 var $10988 = 0, $10989 = 0, $1099 = 0.0, $10990 = 0, $10991 = 0, $10992 = 0, $10993 = 0, $10994 = 0, $10995 = 0, $10996 = 0, $10997 = 0, $10998 = 0, $10999 = 0, $11 = 0.0, $110 = 0.0, $1100 = 0.0, $11000 = 0, $11001 = 0, $11002 = 0, $11003 = 0;
 var $11004 = 0, $11005 = 0, $11006 = 0, $11007 = 0, $11008 = 0, $11009 = 0.0, $1101 = 0, $11010 = 0, $11011 = 0, $11012 = 0, $11013 = 0, $11014 = 0, $11015 = 0, $11016 = 0, $11017 = 0, $11018 = 0, $11019 = 0, $1102 = 0, $11020 = 0, $11021 = 0;
 var $11022 = 0, $11023 = 0, $11024 = 0, $11025 = 0, $11026 = 0, $11027 = 0, $11028 = 0, $11029 = 0, $1103 = 0.0, $11030 = 0, $11031 = 0, $11032 = 0, $11033 = 0, $11034 = 0, $11035 = 0, $11036 = 0, $11037 = 0, $11038 = 0, $11039 = 0.0, $1104 = 0.0;
 var $11040 = 0, $11041 = 0, $11042 = 0, $11043 = 0, $11044 = 0, $11045 = 0, $11046 = 0, $11047 = 0, $11048 = 0, $11049 = 0, $1105 = 0, $11050 = 0, $11051 = 0, $11052 = 0, $11053 = 0, $11054 = 0, $11055 = 0, $11056 = 0, $11057 = 0, $11058 = 0;
 var $11059 = 0, $1106 = 0, $11060 = 0, $11061 = 0, $11062 = 0, $11063 = 0, $11064 = 0, $11065 = 0, $11066 = 0, $11067 = 0, $11068 = 0, $11069 = 0, $1107 = 0.0, $11070 = 0, $11071 = 0, $11072 = 0, $11073 = 0, $11074 = 0, $11075 = 0, $11076 = 0;
 var $11077 = 0, $11078 = 0, $11079 = 0, $1108 = 0.0, $11080 = 0, $11081 = 0, $11082 = 0, $11083 = 0, $11084 = 0, $11085 = 0, $11086 = 0.0, $11087 = 0.0, $11088 = 0, $11089 = 0.0, $1109 = 0, $11090 = 0, $11091 = 0, $11092 = 0, $11093 = 0, $11094 = 0.0;
 var $11095 = 0.0, $11096 = 0, $11097 = 0, $11098 = 0, $11099 = 0.0, $111 = 0.0, $1110 = 0, $11100 = 0.0, $11101 = 0.0, $11102 = 0.0, $11103 = 0.0, $11104 = 0.0, $11105 = 0.0, $11106 = 0.0, $11107 = 0.0, $11108 = 0.0, $11109 = 0, $1111 = 0.0, $11110 = 0.0, $11111 = 0.0;
 var $11112 = 0.0, $11113 = 0, $11114 = 0.0, $11115 = 0.0, $11116 = 0, $11117 = 0, $11118 = 0, $11119 = 0, $1112 = 0.0, $11120 = 0, $11121 = 0, $11122 = 0, $11123 = 0, $11124 = 0, $11125 = 0, $11126 = 0, $11127 = 0, $11128 = 0, $11129 = 0, $1113 = 0;
 var $11130 = 0, $11131 = 0, $11132 = 0, $11133 = 0, $11134 = 0, $11135 = 0, $11136 = 0, $11137 = 0.0, $11138 = 0, $11139 = 0, $1114 = 0, $11140 = 0.0, $11141 = 0.0, $11142 = 0.0, $11143 = 0, $11144 = 0, $11145 = 0, $11146 = 0.0, $11147 = 0, $11148 = 0;
 var $11149 = 0.0, $1115 = 0.0, $11150 = 0.0, $11151 = 0.0, $11152 = 0, $11153 = 0, $11154 = 0, $11155 = 0, $11156 = 0, $11157 = 0, $11158 = 0, $11159 = 0, $1116 = 0.0, $11160 = 0, $11161 = 0, $11162 = 0, $11163 = 0.0, $11164 = 0, $11165 = 0, $11166 = 0;
 var $11167 = 0.0, $11168 = 0, $11169 = 0, $1117 = 0, $11170 = 0, $11171 = 0.0, $11172 = 0, $11173 = 0, $11174 = 0.0, $11175 = 0.0, $11176 = 0, $11177 = 0.0, $11178 = 0.0, $11179 = 0, $1118 = 0, $11180 = 0.0, $11181 = 0, $11182 = 0.0, $11183 = 0.0, $11184 = 0;
 var $11185 = 0.0, $11186 = 0, $11187 = 0.0, $11188 = 0.0, $11189 = 0, $1119 = 0, $11190 = 0.0, $11191 = 0.0, $11192 = 0, $11193 = 0.0, $11194 = 0.0, $11195 = 0, $11196 = 0.0, $11197 = 0.0, $11198 = 0, $11199 = 0.0, $112 = 0.0, $1120 = 0, $11200 = 0, $11201 = 0.0;
 var $11202 = 0.0, $11203 = 0, $11204 = 0.0, $11205 = 0.0, $11206 = 0.0, $11207 = 0, $11208 = 0.0, $11209 = 0.0, $1121 = 0, $11210 = 0.0, $11211 = 0.0, $11212 = 0.0, $11213 = 0, $11214 = 0.0, $11215 = 0.0, $11216 = 0.0, $11217 = 0, $11218 = 0.0, $11219 = 0.0, $1122 = 0.0;
 var $11220 = 0, $11221 = 0.0, $11222 = 0, $11223 = 0.0, $11224 = 0.0, $11225 = 0.0, $11226 = 0.0, $11227 = 0.0, $11228 = 0, $11229 = 0, $1123 = 0, $11230 = 0.0, $11231 = 0, $11232 = 0.0, $11233 = 0.0, $11234 = 0.0, $11235 = 0.0, $11236 = 0, $11237 = 0.0, $11238 = 0;
 var $11239 = 0.0, $1124 = 0, $11240 = 0.0, $11241 = 0.0, $11242 = 0, $11243 = 0, $11244 = 0.0, $11245 = 0, $11246 = 0.0, $11247 = 0.0, $11248 = 0.0, $11249 = 0.0, $1125 = 0, $11250 = 0, $11251 = 0.0, $11252 = 0, $11253 = 0.0, $11254 = 0.0, $11255 = 0.0, $11256 = 0;
 var $11257 = 0.0, $11258 = 0.0, $11259 = 0.0, $1126 = 0, $11260 = 0.0, $11261 = 0.0, $11262 = 0, $11263 = 0.0, $11264 = 0.0, $11265 = 0, $11266 = 0, $11267 = 0.0, $11268 = 0.0, $11269 = 0.0, $1127 = 0, $11270 = 0, $11271 = 0.0, $11272 = 0.0, $11273 = 0.0, $11274 = 0.0;
 var $11275 = 0, $11276 = 0.0, $11277 = 0.0, $11278 = 0, $11279 = 0.0, $1128 = 0, $11280 = 0, $11281 = 0.0, $11282 = 0.0, $11283 = 0.0, $11284 = 0.0, $11285 = 0, $11286 = 0.0, $11287 = 0.0, $11288 = 0.0, $11289 = 0.0, $1129 = 0, $11290 = 0.0, $11291 = 0, $11292 = 0.0;
 var $11293 = 0.0, $11294 = 0.0, $11295 = 0.0, $11296 = 0.0, $11297 = 0.0, $11298 = 0, $11299 = 0.0, $113 = 0, $1130 = 0, $11300 = 0.0, $11301 = 0, $11302 = 0, $11303 = 0.0, $11304 = 0.0, $11305 = 0.0, $11306 = 0.0, $11307 = 0.0, $11308 = 0.0, $11309 = 0.0, $1131 = 0;
 var $11310 = 0.0, $11311 = 0, $11312 = 0.0, $11313 = 0.0, $11314 = 0, $11315 = 0.0, $11316 = 0.0, $11317 = 0.0, $11318 = 0.0, $11319 = 0.0, $1132 = 0, $11320 = 0.0, $11321 = 0, $11322 = 0.0, $11323 = 0.0, $11324 = 0.0, $11325 = 0.0, $11326 = 0.0, $11327 = 0, $11328 = 0.0;
 var $11329 = 0, $1133 = 0, $11330 = 0.0, $11331 = 0.0, $11332 = 0.0, $11333 = 0.0, $11334 = 0, $11335 = 0.0, $11336 = 0, $11337 = 0.0, $11338 = 0.0, $11339 = 0.0, $1134 = 0, $11340 = 0.0, $11341 = 0.0, $11342 = 0.0, $11343 = 0.0, $11344 = 0.0, $11345 = 0, $11346 = 0;
 var $11347 = 0.0, $11348 = 0, $11349 = 0.0, $1135 = 0, $11350 = 0.0, $11351 = 0.0, $11352 = 0.0, $11353 = 0.0, $11354 = 0, $11355 = 0.0, $11356 = 0.0, $11357 = 0.0, $11358 = 0.0, $11359 = 0.0, $1136 = 0, $11360 = 0.0, $11361 = 0.0, $11362 = 0.0, $11363 = 0.0, $11364 = 0;
 var $11365 = 0.0, $11366 = 0.0, $11367 = 0, $11368 = 0, $11369 = 0.0, $1137 = 0, $11370 = 0.0, $11371 = 0, $11372 = 0, $11373 = 0.0, $11374 = 0.0, $11375 = 0, $11376 = 0, $11377 = 0.0, $11378 = 0.0, $11379 = 0, $1138 = 0, $11380 = 0, $11381 = 0.0, $11382 = 0.0;
 var $11383 = 0, $11384 = 0, $11385 = 0.0, $11386 = 0.0, $11387 = 0, $11388 = 0, $11389 = 0.0, $1139 = 0, $11390 = 0.0, $11391 = 0, $11392 = 0, $11393 = 0.0, $11394 = 0.0, $11395 = 0, $11396 = 0, $11397 = 0.0, $11398 = 0.0, $11399 = 0, $114 = 0, $1140 = 0;
 var $11400 = 0, $11401 = 0.0, $11402 = 0.0, $11403 = 0, $11404 = 0, $11405 = 0.0, $11406 = 0.0, $11407 = 0, $11408 = 0, $11409 = 0.0, $1141 = 0, $11410 = 0.0, $11411 = 0, $11412 = 0, $11413 = 0, $11414 = 0, $11415 = 0, $11416 = 0.0, $11417 = 0, $11418 = 0;
 var $11419 = 0, $1142 = 0, $11420 = 0, $11421 = 0, $11422 = 0, $11423 = 0, $11424 = 0, $11425 = 0, $11426 = 0, $11427 = 0, $11428 = 0, $11429 = 0, $1143 = 0, $11430 = 0, $11431 = 0, $11432 = 0, $11433 = 0, $11434 = 0, $11435 = 0, $11436 = 0;
 var $11437 = 0, $11438 = 0, $11439 = 0, $1144 = 0, $11440 = 0, $11441 = 0, $11442 = 0, $11443 = 0, $11444 = 0, $11445 = 0, $11446 = 0.0, $11447 = 0, $11448 = 0, $11449 = 0, $1145 = 0, $11450 = 0, $11451 = 0, $11452 = 0, $11453 = 0, $11454 = 0;
 var $11455 = 0, $11456 = 0, $11457 = 0, $11458 = 0, $11459 = 0, $1146 = 0, $11460 = 0, $11461 = 0, $11462 = 0, $11463 = 0, $11464 = 0, $11465 = 0, $11466 = 0, $11467 = 0, $11468 = 0, $11469 = 0, $1147 = 0, $11470 = 0, $11471 = 0, $11472 = 0;
 var $11473 = 0, $11474 = 0, $11475 = 0, $11476 = 0.0, $11477 = 0, $11478 = 0, $11479 = 0, $1148 = 0, $11480 = 0, $11481 = 0, $11482 = 0, $11483 = 0, $11484 = 0, $11485 = 0, $11486 = 0, $11487 = 0, $11488 = 0, $11489 = 0, $1149 = 0, $11490 = 0;
 var $11491 = 0, $11492 = 0, $11493 = 0, $11494 = 0, $11495 = 0, $11496 = 0, $11497 = 0, $11498 = 0, $11499 = 0, $115 = 0.0, $1150 = 0, $11500 = 0, $11501 = 0, $11502 = 0, $11503 = 0, $11504 = 0, $11505 = 0, $11506 = 0.0, $11507 = 0, $11508 = 0;
 var $11509 = 0, $1151 = 0, $11510 = 0, $11511 = 0, $11512 = 0, $11513 = 0, $11514 = 0, $11515 = 0, $11516 = 0, $11517 = 0, $11518 = 0, $11519 = 0, $1152 = 0.0, $11520 = 0, $11521 = 0, $11522 = 0, $11523 = 0, $11524 = 0, $11525 = 0, $11526 = 0;
 var $11527 = 0, $11528 = 0, $11529 = 0, $1153 = 0, $11530 = 0, $11531 = 0, $11532 = 0, $11533 = 0, $11534 = 0, $11535 = 0, $11536 = 0.0, $11537 = 0, $11538 = 0, $11539 = 0, $1154 = 0, $11540 = 0, $11541 = 0, $11542 = 0, $11543 = 0, $11544 = 0;
 var $11545 = 0, $11546 = 0, $11547 = 0, $11548 = 0, $11549 = 0, $1155 = 0, $11550 = 0, $11551 = 0, $11552 = 0, $11553 = 0, $11554 = 0, $11555 = 0, $11556 = 0, $11557 = 0, $11558 = 0, $11559 = 0, $1156 = 0, $11560 = 0, $11561 = 0, $11562 = 0;
 var $11563 = 0, $11564 = 0, $11565 = 0, $11566 = 0.0, $11567 = 0, $11568 = 0, $11569 = 0, $1157 = 0, $11570 = 0, $11571 = 0, $11572 = 0, $11573 = 0, $11574 = 0, $11575 = 0, $11576 = 0, $11577 = 0, $11578 = 0, $11579 = 0, $1158 = 0, $11580 = 0;
 var $11581 = 0, $11582 = 0, $11583 = 0, $11584 = 0, $11585 = 0, $11586 = 0, $11587 = 0, $11588 = 0, $11589 = 0, $1159 = 0, $11590 = 0, $11591 = 0, $11592 = 0, $11593 = 0, $11594 = 0, $11595 = 0, $11596 = 0, $11597 = 0, $11598 = 0, $11599 = 0;
 var $116 = 0, $1160 = 0, $11600 = 0, $11601 = 0, $11602 = 0, $11603 = 0, $11604 = 0, $11605 = 0, $11606 = 0, $11607 = 0, $11608 = 0, $11609 = 0, $1161 = 0, $11610 = 0, $11611 = 0, $11612 = 0, $11613 = 0, $11614 = 0, $11615 = 0, $11616 = 0;
 var $11617 = 0, $11618 = 0, $11619 = 0, $1162 = 0, $11620 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0.0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0;
 var $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0.0, $1180 = 0, $1181 = 0, $1182 = 0.0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0;
 var $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0.0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0;
 var $1212 = 0.0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0.0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0.0;
 var $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0.0, $1240 = 0, $1241 = 0, $1242 = 0.0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0;
 var $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0;
 var $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0.0, $1270 = 0, $1271 = 0, $1272 = 0.0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0;
 var $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0.0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0.0, $130 = 0.0, $1300 = 0, $1301 = 0;
 var $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0.0;
 var $1320 = 0, $1321 = 0, $1322 = 0.0, $1323 = 0.0, $1324 = 0.0, $1325 = 0.0, $1326 = 0.0, $1327 = 0.0, $1328 = 0, $1329 = 0.0, $133 = 0, $1330 = 0.0, $1331 = 0, $1332 = 0, $1333 = 0.0, $1334 = 0, $1335 = 0, $1336 = 0.0, $1337 = 0, $1338 = 0;
 var $1339 = 0.0, $134 = 0.0, $1340 = 0, $1341 = 0, $1342 = 0.0, $1343 = 0, $1344 = 0.0, $1345 = 0.0, $1346 = 0, $1347 = 0, $1348 = 0.0, $1349 = 0.0, $135 = 0.0, $1350 = 0, $1351 = 0, $1352 = 0.0, $1353 = 0.0, $1354 = 0, $1355 = 0, $1356 = 0.0;
 var $1357 = 0.0, $1358 = 0, $1359 = 0, $136 = 0.0, $1360 = 0.0, $1361 = 0.0, $1362 = 0, $1363 = 0, $1364 = 0.0, $1365 = 0.0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0.0, $137 = 0, $1370 = 0, $1371 = 0.0, $1372 = 0, $1373 = 0, $1374 = 0;
 var $1375 = 0.0, $1376 = 0.0, $1377 = 0.0, $1378 = 0.0, $1379 = 0.0, $138 = 0, $1380 = 0.0, $1381 = 0.0, $1382 = 0.0, $1383 = 0.0, $1384 = 0.0, $1385 = 0, $1386 = 0, $1387 = 0.0, $1388 = 0.0, $1389 = 0, $139 = 0.0, $1390 = 0, $1391 = 0.0, $1392 = 0.0;
 var $1393 = 0, $1394 = 0.0, $1395 = 0, $1396 = 0.0, $1397 = 0.0, $1398 = 0.0, $1399 = 0, $14 = 0.0, $140 = 0, $1400 = 0.0, $1401 = 0.0, $1402 = 0, $1403 = 0.0, $1404 = 0, $1405 = 0, $1406 = 0.0, $1407 = 0.0, $1408 = 0, $1409 = 0.0, $141 = 0.0;
 var $1410 = 0, $1411 = 0, $1412 = 0.0, $1413 = 0.0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0.0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0;
 var $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0.0, $1437 = 0, $1438 = 0, $1439 = 0.0, $144 = 0.0, $1440 = 0.0, $1441 = 0.0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0.0, $1446 = 0;
 var $1447 = 0, $1448 = 0.0, $1449 = 0.0, $145 = 0, $1450 = 0.0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0.0, $1460 = 0, $1461 = 0, $1462 = 0.0, $1463 = 0, $1464 = 0;
 var $1465 = 0, $1466 = 0.0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0.0, $1470 = 0.0, $1471 = 0, $1472 = 0, $1473 = 0.0, $1474 = 0.0, $1475 = 0, $1476 = 0.0, $1477 = 0.0, $1478 = 0.0, $1479 = 0, $148 = 0.0, $1480 = 0.0, $1481 = 0, $1482 = 0.0;
 var $1483 = 0.0, $1484 = 0.0, $1485 = 0.0, $1486 = 0.0, $1487 = 0.0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0.0, $1492 = 0.0, $1493 = 0, $1494 = 0.0, $1495 = 0.0, $1496 = 0.0, $1497 = 0.0, $1498 = 0, $1499 = 0.0, $15 = 0, $150 = 0;
 var $1500 = 0.0, $1501 = 0, $1502 = 0.0, $1503 = 0.0, $1504 = 0.0, $1505 = 0.0, $1506 = 0, $1507 = 0, $1508 = 0.0, $1509 = 0, $151 = 0.0, $1510 = 0.0, $1511 = 0.0, $1512 = 0, $1513 = 0.0, $1514 = 0.0, $1515 = 0.0, $1516 = 0.0, $1517 = 0.0, $1518 = 0.0;
 var $1519 = 0, $152 = 0.0, $1520 = 0, $1521 = 0.0, $1522 = 0.0, $1523 = 0.0, $1524 = 0.0, $1525 = 0, $1526 = 0.0, $1527 = 0.0, $1528 = 0, $1529 = 0.0, $153 = 0.0, $1530 = 0.0, $1531 = 0.0, $1532 = 0.0, $1533 = 0, $1534 = 0.0, $1535 = 0, $1536 = 0.0;
 var $1537 = 0.0, $1538 = 0, $1539 = 0.0, $154 = 0.0, $1540 = 0.0, $1541 = 0.0, $1542 = 0.0, $1543 = 0.0, $1544 = 0.0, $1545 = 0.0, $1546 = 0.0, $1547 = 0.0, $1548 = 0, $1549 = 0, $155 = 0.0, $1550 = 0.0, $1551 = 0.0, $1552 = 0.0, $1553 = 0.0, $1554 = 0;
 var $1555 = 0.0, $1556 = 0.0, $1557 = 0, $1558 = 0.0, $1559 = 0.0, $156 = 0.0, $1560 = 0.0, $1561 = 0, $1562 = 0.0, $1563 = 0, $1564 = 0.0, $1565 = 0.0, $1566 = 0, $1567 = 0.0, $1568 = 0.0, $1569 = 0.0, $157 = 0.0, $1570 = 0.0, $1571 = 0.0, $1572 = 0.0;
 var $1573 = 0.0, $1574 = 0.0, $1575 = 0.0, $1576 = 0.0, $1577 = 0.0, $1578 = 0, $1579 = 0.0, $158 = 0.0, $1580 = 0.0, $1581 = 0.0, $1582 = 0, $1583 = 0.0, $1584 = 0.0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0.0, $1590 = 0;
 var $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0.0, $160 = 0.0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0.0, $1607 = 0, $1608 = 0;
 var $1609 = 0.0, $161 = 0, $1610 = 0.0, $1611 = 0.0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0.0, $1616 = 0, $1617 = 0, $1618 = 0.0, $1619 = 0.0, $162 = 0.0, $1620 = 0.0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0;
 var $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0.0, $1630 = 0, $1631 = 0, $1632 = 0.0, $1633 = 0, $1634 = 0, $1635 = 0, $1636 = 0.0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0.0, $1640 = 0.0, $1641 = 0, $1642 = 0, $1643 = 0.0, $1644 = 0.0;
 var $1645 = 0, $1646 = 0.0, $1647 = 0.0, $1648 = 0, $1649 = 0.0, $165 = 0.0, $1650 = 0.0, $1651 = 0, $1652 = 0.0, $1653 = 0.0, $1654 = 0.0, $1655 = 0, $1656 = 0.0, $1657 = 0.0, $1658 = 0.0, $1659 = 0.0, $166 = 0, $1660 = 0.0, $1661 = 0.0, $1662 = 0.0;
 var $1663 = 0.0, $1664 = 0, $1665 = 0.0, $1666 = 0, $1667 = 0.0, $1668 = 0.0, $1669 = 0.0, $167 = 0, $1670 = 0.0, $1671 = 0, $1672 = 0.0, $1673 = 0, $1674 = 0.0, $1675 = 0.0, $1676 = 0.0, $1677 = 0, $1678 = 0.0, $1679 = 0, $168 = 0.0, $1680 = 0.0;
 var $1681 = 0.0, $1682 = 0.0, $1683 = 0.0, $1684 = 0, $1685 = 0.0, $1686 = 0, $1687 = 0.0, $1688 = 0.0, $1689 = 0.0, $169 = 0.0, $1690 = 0, $1691 = 0, $1692 = 0.0, $1693 = 0.0, $1694 = 0.0, $1695 = 0.0, $1696 = 0.0, $1697 = 0.0, $1698 = 0, $1699 = 0.0;
 var $17 = 0, $170 = 0.0, $1700 = 0, $1701 = 0.0, $1702 = 0.0, $1703 = 0.0, $1704 = 0, $1705 = 0.0, $1706 = 0, $1707 = 0.0, $1708 = 0.0, $1709 = 0, $171 = 0.0, $1710 = 0.0, $1711 = 0, $1712 = 0.0, $1713 = 0.0, $1714 = 0, $1715 = 0, $1716 = 0.0;
 var $1717 = 0.0, $1718 = 0.0, $1719 = 0.0, $172 = 0.0, $1720 = 0.0, $1721 = 0.0, $1722 = 0.0, $1723 = 0.0, $1724 = 0, $1725 = 0.0, $1726 = 0.0, $1727 = 0, $1728 = 0, $1729 = 0.0, $173 = 0.0, $1730 = 0.0, $1731 = 0.0, $1732 = 0, $1733 = 0.0, $1734 = 0.0;
 var $1735 = 0.0, $1736 = 0.0, $1737 = 0.0, $1738 = 0, $1739 = 0.0, $174 = 0.0, $1740 = 0.0, $1741 = 0, $1742 = 0, $1743 = 0.0, $1744 = 0.0, $1745 = 0.0, $1746 = 0.0, $1747 = 0.0, $1748 = 0.0, $1749 = 0.0, $175 = 0, $1750 = 0, $1751 = 0.0, $1752 = 0;
 var $1753 = 0.0, $1754 = 0.0, $1755 = 0.0, $1756 = 0, $1757 = 0.0, $1758 = 0.0, $1759 = 0, $176 = 0.0, $1760 = 0, $1761 = 0.0, $1762 = 0.0, $1763 = 0, $1764 = 0, $1765 = 0.0, $1766 = 0.0, $1767 = 0, $1768 = 0, $1769 = 0.0, $177 = 0.0, $1770 = 0.0;
 var $1771 = 0, $1772 = 0, $1773 = 0.0, $1774 = 0.0, $1775 = 0, $1776 = 0, $1777 = 0.0, $1778 = 0.0, $1779 = 0, $178 = 0.0, $1780 = 0, $1781 = 0.0, $1782 = 0.0, $1783 = 0, $1784 = 0, $1785 = 0.0, $1786 = 0.0, $1787 = 0, $1788 = 0, $1789 = 0;
 var $179 = 0.0, $1790 = 0, $1791 = 0, $1792 = 0.0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0.0, $180 = 0.0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0;
 var $1807 = 0, $1808 = 0, $1809 = 0, $181 = 0.0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0.0, $1820 = 0, $1821 = 0, $1822 = 0.0, $1823 = 0, $1824 = 0;
 var $1825 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0;
 var $1843 = 0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0.0, $1850 = 0, $1851 = 0, $1852 = 0.0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0.0, $1860 = 0;
 var $1861 = 0, $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0.0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0;
 var $188 = 0.0, $1880 = 0, $1881 = 0, $1882 = 0.0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0.0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0;
 var $1898 = 0, $1899 = 0, $19 = 0.0, $190 = 0.0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0.0, $1910 = 0, $1911 = 0, $1912 = 0.0, $1913 = 0, $1914 = 0;
 var $1915 = 0, $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0.0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0.0, $1930 = 0, $1931 = 0, $1932 = 0;
 var $1933 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0.0, $1940 = 0, $1941 = 0, $1942 = 0.0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0;
 var $1951 = 0, $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0.0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0;
 var $197 = 0.0, $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0.0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0;
 var $1988 = 0, $1989 = 0, $199 = 0.0, $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0.0, $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0.0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0.0, $2002 = 0, $2003 = 0;
 var $2004 = 0, $2005 = 0.0, $2006 = 0.0, $2007 = 0.0, $2008 = 0, $2009 = 0.0, $201 = 0, $2010 = 0, $2011 = 0.0, $2012 = 0.0, $2013 = 0.0, $2014 = 0.0, $2015 = 0, $2016 = 0.0, $2017 = 0, $2018 = 0.0, $2019 = 0.0, $202 = 0, $2020 = 0.0, $2021 = 0.0;
 var $2022 = 0.0, $2023 = 0.0, $2024 = 0, $2025 = 0, $2026 = 0.0, $2027 = 0.0, $2028 = 0.0, $2029 = 0.0, $203 = 0.0, $2030 = 0.0, $2031 = 0, $2032 = 0.0, $2033 = 0.0, $2034 = 0.0, $2035 = 0, $2036 = 0.0, $2037 = 0, $2038 = 0.0, $2039 = 0.0, $204 = 0.0;
 var $2040 = 0.0, $2041 = 0.0, $2042 = 0, $2043 = 0.0, $2044 = 0, $2045 = 0.0, $2046 = 0.0, $2047 = 0.0, $2048 = 0.0, $2049 = 0.0, $205 = 0, $2050 = 0.0, $2051 = 0, $2052 = 0.0, $2053 = 0.0, $2054 = 0.0, $2055 = 0.0, $2056 = 0.0, $2057 = 0.0, $2058 = 0.0;
 var $2059 = 0.0, $206 = 0.0, $2060 = 0, $2061 = 0.0, $2062 = 0.0, $2063 = 0.0, $2064 = 0, $2065 = 0.0, $2066 = 0, $2067 = 0.0, $2068 = 0.0, $2069 = 0.0, $207 = 0, $2070 = 0.0, $2071 = 0, $2072 = 0.0, $2073 = 0, $2074 = 0.0, $2075 = 0.0, $2076 = 0.0;
 var $2077 = 0.0, $2078 = 0.0, $2079 = 0, $208 = 0, $2080 = 0.0, $2081 = 0.0, $2082 = 0.0, $2083 = 0.0, $2084 = 0.0, $2085 = 0.0, $2086 = 0.0, $2087 = 0.0, $2088 = 0.0, $2089 = 0.0, $209 = 0.0, $2090 = 0, $2091 = 0.0, $2092 = 0.0, $2093 = 0.0, $2094 = 0;
 var $2095 = 0.0, $2096 = 0.0, $2097 = 0, $2098 = 0, $2099 = 0, $21 = 0.0, $210 = 0.0, $2100 = 0, $2101 = 0, $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0.0, $2110 = 0, $2111 = 0;
 var $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0.0, $2119 = 0, $212 = 0.0, $2120 = 0, $2121 = 0.0, $2122 = 0.0, $2123 = 0.0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0.0, $2128 = 0, $2129 = 0, $213 = 0.0;
 var $2130 = 0.0, $2131 = 0.0, $2132 = 0.0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0.0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0.0;
 var $2149 = 0, $215 = 0.0, $2150 = 0, $2151 = 0, $2152 = 0.0, $2153 = 0, $2154 = 0, $2155 = 0.0, $2156 = 0.0, $2157 = 0, $2158 = 0.0, $2159 = 0.0, $216 = 0.0, $2160 = 0, $2161 = 0.0, $2162 = 0.0, $2163 = 0, $2164 = 0.0, $2165 = 0.0, $2166 = 0.0;
 var $2167 = 0, $2168 = 0.0, $2169 = 0.0, $217 = 0, $2170 = 0.0, $2171 = 0, $2172 = 0.0, $2173 = 0.0, $2174 = 0.0, $2175 = 0.0, $2176 = 0, $2177 = 0.0, $2178 = 0.0, $2179 = 0.0, $218 = 0.0, $2180 = 0, $2181 = 0.0, $2182 = 0.0, $2183 = 0, $2184 = 0.0;
 var $2185 = 0.0, $2186 = 0.0, $2187 = 0.0, $2188 = 0.0, $2189 = 0.0, $219 = 0.0, $2190 = 0, $2191 = 0, $2192 = 0.0, $2193 = 0.0, $2194 = 0.0, $2195 = 0, $2196 = 0.0, $2197 = 0.0, $2198 = 0.0, $2199 = 0.0, $22 = 0.0, $220 = 0, $2200 = 0, $2201 = 0;
 var $2202 = 0.0, $2203 = 0.0, $2204 = 0.0, $2205 = 0.0, $2206 = 0.0, $2207 = 0.0, $2208 = 0, $2209 = 0, $221 = 0.0, $2210 = 0.0, $2211 = 0, $2212 = 0.0, $2213 = 0.0, $2214 = 0, $2215 = 0.0, $2216 = 0.0, $2217 = 0.0, $2218 = 0.0, $2219 = 0.0, $222 = 0;
 var $2220 = 0, $2221 = 0.0, $2222 = 0.0, $2223 = 0.0, $2224 = 0.0, $2225 = 0, $2226 = 0, $2227 = 0.0, $2228 = 0, $2229 = 0.0, $223 = 0, $2230 = 0.0, $2231 = 0, $2232 = 0.0, $2233 = 0.0, $2234 = 0.0, $2235 = 0.0, $2236 = 0, $2237 = 0.0, $2238 = 0.0;
 var $2239 = 0.0, $224 = 0, $2240 = 0.0, $2241 = 0.0, $2242 = 0.0, $2243 = 0.0, $2244 = 0, $2245 = 0, $2246 = 0.0, $2247 = 0.0, $2248 = 0.0, $2249 = 0, $225 = 0, $2250 = 0.0, $2251 = 0.0, $2252 = 0.0, $2253 = 0.0, $2254 = 0.0, $2255 = 0.0, $2256 = 0.0;
 var $2257 = 0, $2258 = 0.0, $2259 = 0, $226 = 0, $2260 = 0.0, $2261 = 0.0, $2262 = 0.0, $2263 = 0, $2264 = 0, $2265 = 0.0, $2266 = 0, $2267 = 0.0, $2268 = 0.0, $2269 = 0.0, $227 = 0, $2270 = 0.0, $2271 = 0.0, $2272 = 0.0, $2273 = 0.0, $2274 = 0.0;
 var $2275 = 0, $2276 = 0.0, $2277 = 0.0, $2278 = 0.0, $2279 = 0.0, $228 = 0, $2280 = 0, $2281 = 0.0, $2282 = 0.0, $2283 = 0, $2284 = 0, $2285 = 0.0, $2286 = 0.0, $2287 = 0, $2288 = 0, $2289 = 0.0, $229 = 0, $2290 = 0.0, $2291 = 0, $2292 = 0;
 var $2293 = 0.0, $2294 = 0.0, $2295 = 0, $2296 = 0, $2297 = 0.0, $2298 = 0.0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0, $2301 = 0.0, $2302 = 0.0, $2303 = 0, $2304 = 0, $2305 = 0.0, $2306 = 0.0, $2307 = 0, $2308 = 0, $2309 = 0.0, $231 = 0;
 var $2310 = 0.0, $2311 = 0, $2312 = 0, $2313 = 0.0, $2314 = 0, $2315 = 0.0, $2316 = 0.0, $2317 = 0, $2318 = 0.0, $2319 = 0.0, $232 = 0, $2320 = 0, $2321 = 0.0, $2322 = 0, $2323 = 0.0, $2324 = 0.0, $2325 = 0, $2326 = 0.0, $2327 = 0.0, $2328 = 0;
 var $2329 = 0.0, $233 = 0, $2330 = 0, $2331 = 0.0, $2332 = 0.0, $2333 = 0, $2334 = 0.0, $2335 = 0, $2336 = 0.0, $2337 = 0.0, $2338 = 0.0, $2339 = 0, $234 = 0, $2340 = 0.0, $2341 = 0, $2342 = 0.0, $2343 = 0.0, $2344 = 0.0, $2345 = 0.0, $2346 = 0;
 var $2347 = 0.0, $2348 = 0.0, $2349 = 0.0, $235 = 0, $2350 = 0.0, $2351 = 0, $2352 = 0.0, $2353 = 0.0, $2354 = 0.0, $2355 = 0.0, $2356 = 0.0, $2357 = 0.0, $2358 = 0.0, $2359 = 0, $236 = 0, $2360 = 0.0, $2361 = 0.0, $2362 = 0.0, $2363 = 0.0, $2364 = 0.0;
 var $2365 = 0.0, $2366 = 0.0, $2367 = 0, $2368 = 0, $2369 = 0.0, $237 = 0, $2370 = 0.0, $2371 = 0.0, $2372 = 0, $2373 = 0.0, $2374 = 0.0, $2375 = 0.0, $2376 = 0.0, $2377 = 0.0, $2378 = 0.0, $2379 = 0.0, $238 = 0, $2380 = 0.0, $2381 = 0.0, $2382 = 0.0;
 var $2383 = 0.0, $2384 = 0, $2385 = 0.0, $2386 = 0.0, $2387 = 0.0, $2388 = 0, $2389 = 0.0, $239 = 0, $2390 = 0.0, $2391 = 0.0, $2392 = 0.0, $2393 = 0, $2394 = 0.0, $2395 = 0.0, $2396 = 0.0, $2397 = 0.0, $2398 = 0.0, $2399 = 0.0, $24 = 0.0, $240 = 0;
 var $2400 = 0.0, $2401 = 0, $2402 = 0, $2403 = 0.0, $2404 = 0, $2405 = 0.0, $2406 = 0.0, $2407 = 0, $2408 = 0.0, $2409 = 0, $241 = 0, $2410 = 0.0, $2411 = 0.0, $2412 = 0.0, $2413 = 0, $2414 = 0, $2415 = 0.0, $2416 = 0, $2417 = 0.0, $2418 = 0.0;
 var $2419 = 0, $242 = 0, $2420 = 0.0, $2421 = 0, $2422 = 0.0, $2423 = 0.0, $2424 = 0.0, $2425 = 0, $2426 = 0, $2427 = 0.0, $2428 = 0, $2429 = 0.0, $243 = 0, $2430 = 0.0, $2431 = 0, $2432 = 0.0, $2433 = 0, $2434 = 0.0, $2435 = 0.0, $2436 = 0.0;
 var $2437 = 0, $2438 = 0, $2439 = 0.0, $244 = 0.0, $2440 = 0.0, $2441 = 0.0, $2442 = 0.0, $2443 = 0.0, $2444 = 0.0, $2445 = 0.0, $2446 = 0, $2447 = 0.0, $2448 = 0.0, $2449 = 0.0, $245 = 0, $2450 = 0.0, $2451 = 0.0, $2452 = 0.0, $2453 = 0.0, $2454 = 0;
 var $2455 = 0, $2456 = 0.0, $2457 = 0.0, $2458 = 0.0, $2459 = 0, $246 = 0, $2460 = 0.0, $2461 = 0.0, $2462 = 0.0, $2463 = 0.0, $2464 = 0.0, $2465 = 0.0, $2466 = 0.0, $2467 = 0.0, $2468 = 0.0, $2469 = 0.0, $247 = 0.0, $2470 = 0.0, $2471 = 0, $2472 = 0.0;
 var $2473 = 0.0, $2474 = 0.0, $2475 = 0, $2476 = 0.0, $2477 = 0.0, $2478 = 0.0, $2479 = 0.0, $248 = 0.0, $2480 = 0, $2481 = 0.0, $2482 = 0.0, $2483 = 0.0, $2484 = 0.0, $2485 = 0.0, $2486 = 0.0, $2487 = 0.0, $2488 = 0, $2489 = 0, $249 = 0.0, $2490 = 0.0;
 var $2491 = 0, $2492 = 0.0, $2493 = 0.0, $2494 = 0, $2495 = 0.0, $2496 = 0.0, $2497 = 0, $2498 = 0, $2499 = 0.0, $25 = 0, $250 = 0, $2500 = 0.0, $2501 = 0, $2502 = 0, $2503 = 0.0, $2504 = 0, $2505 = 0.0, $2506 = 0.0, $2507 = 0, $2508 = 0.0;
 var $2509 = 0.0, $251 = 0, $2510 = 0, $2511 = 0.0, $2512 = 0, $2513 = 0.0, $2514 = 0.0, $2515 = 0, $2516 = 0.0, $2517 = 0.0, $2518 = 0, $2519 = 0.0, $252 = 0, $2520 = 0, $2521 = 0.0, $2522 = 0.0, $2523 = 0, $2524 = 0.0, $2525 = 0, $2526 = 0.0;
 var $2527 = 0.0, $2528 = 0.0, $2529 = 0, $253 = 0.0, $2530 = 0.0, $2531 = 0, $2532 = 0.0, $2533 = 0.0, $2534 = 0.0, $2535 = 0.0, $2536 = 0, $2537 = 0.0, $2538 = 0.0, $2539 = 0.0, $254 = 0, $2540 = 0.0, $2541 = 0, $2542 = 0.0, $2543 = 0.0, $2544 = 0.0;
 var $2545 = 0.0, $2546 = 0.0, $2547 = 0.0, $2548 = 0, $2549 = 0.0, $255 = 0, $2550 = 0.0, $2551 = 0.0, $2552 = 0.0, $2553 = 0.0, $2554 = 0.0, $2555 = 0.0, $2556 = 0.0, $2557 = 0, $2558 = 0.0, $2559 = 0.0, $256 = 0.0, $2560 = 0.0, $2561 = 0, $2562 = 0.0;
 var $2563 = 0.0, $2564 = 0.0, $2565 = 0.0, $2566 = 0.0, $2567 = 0.0, $2568 = 0.0, $2569 = 0, $257 = 0.0, $2570 = 0.0, $2571 = 0.0, $2572 = 0.0, $2573 = 0.0, $2574 = 0, $2575 = 0, $2576 = 0.0, $2577 = 0.0, $2578 = 0.0, $2579 = 0.0, $258 = 0.0, $2580 = 0.0;
 var $2581 = 0.0, $2582 = 0.0, $2583 = 0.0, $2584 = 0.0, $2585 = 0.0, $2586 = 0, $2587 = 0.0, $2588 = 0.0, $2589 = 0.0, $259 = 0, $2590 = 0.0, $2591 = 0, $2592 = 0, $2593 = 0.0, $2594 = 0, $2595 = 0.0, $2596 = 0.0, $2597 = 0, $2598 = 0.0, $2599 = 0;
 var $26 = 0.0, $260 = 0, $2600 = 0.0, $2601 = 0.0, $2602 = 0.0, $2603 = 0, $2604 = 0, $2605 = 0.0, $2606 = 0, $2607 = 0.0, $2608 = 0.0, $2609 = 0, $261 = 0, $2610 = 0.0, $2611 = 0, $2612 = 0.0, $2613 = 0.0, $2614 = 0.0, $2615 = 0, $2616 = 0;
 var $2617 = 0.0, $2618 = 0, $2619 = 0.0, $262 = 0, $2620 = 0.0, $2621 = 0, $2622 = 0.0, $2623 = 0, $2624 = 0.0, $2625 = 0.0, $2626 = 0.0, $2627 = 0, $2628 = 0, $2629 = 0.0, $263 = 0, $2630 = 0.0, $2631 = 0.0, $2632 = 0.0, $2633 = 0.0, $2634 = 0.0;
 var $2635 = 0, $2636 = 0.0, $2637 = 0.0, $2638 = 0.0, $2639 = 0.0, $264 = 0, $2640 = 0.0, $2641 = 0.0, $2642 = 0.0, $2643 = 0.0, $2644 = 0, $2645 = 0.0, $2646 = 0.0, $2647 = 0.0, $2648 = 0, $2649 = 0.0, $265 = 0, $2650 = 0.0, $2651 = 0.0, $2652 = 0.0;
 var $2653 = 0.0, $2654 = 0.0, $2655 = 0.0, $2656 = 0, $2657 = 0.0, $2658 = 0.0, $2659 = 0.0, $266 = 0, $2660 = 0.0, $2661 = 0, $2662 = 0, $2663 = 0.0, $2664 = 0.0, $2665 = 0.0, $2666 = 0.0, $2667 = 0.0, $2668 = 0.0, $2669 = 0.0, $267 = 0, $2670 = 0.0;
 var $2671 = 0.0, $2672 = 0.0, $2673 = 0, $2674 = 0.0, $2675 = 0.0, $2676 = 0.0, $2677 = 0.0, $2678 = 0, $2679 = 0, $268 = 0, $2680 = 0.0, $2681 = 0.0, $2682 = 0.0, $2683 = 0, $2684 = 0, $2685 = 0.0, $2686 = 0, $2687 = 0.0, $2688 = 0.0, $2689 = 0;
 var $269 = 0, $2690 = 0.0, $2691 = 0.0, $2692 = 0, $2693 = 0.0, $2694 = 0, $2695 = 0.0, $2696 = 0.0, $2697 = 0, $2698 = 0.0, $2699 = 0.0, $27 = 0.0, $270 = 0.0, $2700 = 0, $2701 = 0.0, $2702 = 0, $2703 = 0.0, $2704 = 0.0, $2705 = 0, $2706 = 0.0;
 var $2707 = 0, $2708 = 0.0, $2709 = 0.0, $271 = 0, $2710 = 0.0, $2711 = 0, $2712 = 0.0, $2713 = 0, $2714 = 0.0, $2715 = 0.0, $2716 = 0.0, $2717 = 0.0, $2718 = 0, $2719 = 0.0, $272 = 0, $2720 = 0.0, $2721 = 0.0, $2722 = 0.0, $2723 = 0.0, $2724 = 0.0;
 var $2725 = 0.0, $2726 = 0, $2727 = 0.0, $2728 = 0.0, $2729 = 0.0, $273 = 0, $2730 = 0.0, $2731 = 0, $2732 = 0.0, $2733 = 0.0, $2734 = 0.0, $2735 = 0.0, $2736 = 0.0, $2737 = 0.0, $2738 = 0.0, $2739 = 0, $274 = 0.0, $2740 = 0, $2741 = 0.0, $2742 = 0.0;
 var $2743 = 0.0, $2744 = 0, $2745 = 0.0, $2746 = 0.0, $2747 = 0.0, $2748 = 0.0, $2749 = 0.0, $275 = 0, $2750 = 0.0, $2751 = 0.0, $2752 = 0.0, $2753 = 0.0, $2754 = 0.0, $2755 = 0.0, $2756 = 0, $2757 = 0, $2758 = 0.0, $2759 = 0.0, $276 = 0, $2760 = 0.0;
 var $2761 = 0.0, $2762 = 0.0, $2763 = 0.0, $2764 = 0.0, $2765 = 0, $2766 = 0.0, $2767 = 0.0, $2768 = 0.0, $2769 = 0.0, $277 = 0, $2770 = 0.0, $2771 = 0.0, $2772 = 0.0, $2773 = 0, $2774 = 0, $2775 = 0.0, $2776 = 0, $2777 = 0.0, $2778 = 0.0, $2779 = 0;
 var $278 = 0.0, $2780 = 0.0, $2781 = 0, $2782 = 0.0, $2783 = 0.0, $2784 = 0.0, $2785 = 0, $2786 = 0, $2787 = 0.0, $2788 = 0, $2789 = 0.0, $279 = 0, $2790 = 0.0, $2791 = 0, $2792 = 0.0, $2793 = 0, $2794 = 0.0, $2795 = 0.0, $2796 = 0.0, $2797 = 0;
 var $2798 = 0, $2799 = 0.0, $28 = 0, $280 = 0, $2800 = 0, $2801 = 0.0, $2802 = 0.0, $2803 = 0, $2804 = 0.0, $2805 = 0, $2806 = 0.0, $2807 = 0.0, $2808 = 0.0, $2809 = 0, $281 = 0.0, $2810 = 0.0, $2811 = 0.0, $2812 = 0.0, $2813 = 0, $2814 = 0.0;
 var $2815 = 0.0, $2816 = 0.0, $2817 = 0.0, $2818 = 0, $2819 = 0.0, $282 = 0, $2820 = 0.0, $2821 = 0.0, $2822 = 0.0, $2823 = 0.0, $2824 = 0.0, $2825 = 0.0, $2826 = 0, $2827 = 0, $2828 = 0.0, $2829 = 0.0, $283 = 0.0, $2830 = 0.0, $2831 = 0, $2832 = 0.0;
 var $2833 = 0.0, $2834 = 0.0, $2835 = 0.0, $2836 = 0.0, $2837 = 0.0, $2838 = 0.0, $2839 = 0.0, $284 = 0.0, $2840 = 0.0, $2841 = 0.0, $2842 = 0.0, $2843 = 0, $2844 = 0, $2845 = 0.0, $2846 = 0.0, $2847 = 0.0, $2848 = 0.0, $2849 = 0.0, $285 = 0, $2850 = 0.0;
 var $2851 = 0.0, $2852 = 0, $2853 = 0.0, $2854 = 0.0, $2855 = 0.0, $2856 = 0.0, $2857 = 0.0, $2858 = 0.0, $2859 = 0.0, $286 = 0.0, $2860 = 0, $2861 = 0, $2862 = 0.0, $2863 = 0, $2864 = 0.0, $2865 = 0, $2866 = 0.0, $2867 = 0.0, $2868 = 0, $2869 = 0;
 var $287 = 0.0, $2870 = 0.0, $2871 = 0.0, $2872 = 0, $2873 = 0, $2874 = 0.0, $2875 = 0, $2876 = 0.0, $2877 = 0.0, $2878 = 0, $2879 = 0.0, $288 = 0, $2880 = 0, $2881 = 0.0, $2882 = 0.0, $2883 = 0.0, $2884 = 0, $2885 = 0.0, $2886 = 0.0, $2887 = 0;
 var $2888 = 0.0, $2889 = 0.0, $289 = 0.0, $2890 = 0, $2891 = 0.0, $2892 = 0, $2893 = 0.0, $2894 = 0.0, $2895 = 0.0, $2896 = 0, $2897 = 0.0, $2898 = 0.0, $2899 = 0.0, $29 = 0.0, $290 = 0, $2900 = 0.0, $2901 = 0.0, $2902 = 0, $2903 = 0.0, $2904 = 0.0;
 var $2905 = 0, $2906 = 0, $2907 = 0.0, $2908 = 0, $2909 = 0, $291 = 0.0, $2910 = 0.0, $2911 = 0, $2912 = 0, $2913 = 0.0, $2914 = 0, $2915 = 0, $2916 = 0.0, $2917 = 0, $2918 = 0.0, $2919 = 0, $292 = 0.0, $2920 = 0.0, $2921 = 0, $2922 = 0.0;
 var $2923 = 0, $2924 = 0.0, $2925 = 0, $2926 = 0.0, $2927 = 0.0, $2928 = 0, $2929 = 0, $293 = 0, $2930 = 0.0, $2931 = 0.0, $2932 = 0, $2933 = 0, $2934 = 0.0, $2935 = 0.0, $2936 = 0, $2937 = 0, $2938 = 0.0, $2939 = 0.0, $294 = 0.0, $2940 = 0;
 var $2941 = 0, $2942 = 0.0, $2943 = 0.0, $2944 = 0, $2945 = 0, $2946 = 0.0, $2947 = 0.0, $2948 = 0, $2949 = 0, $295 = 0.0, $2950 = 0.0, $2951 = 0.0, $2952 = 0, $2953 = 0, $2954 = 0.0, $2955 = 0.0, $2956 = 0, $2957 = 0, $2958 = 0.0, $2959 = 0.0;
 var $296 = 0, $2960 = 0, $2961 = 0, $2962 = 0.0, $2963 = 0.0, $2964 = 0, $2965 = 0, $2966 = 0, $2967 = 0.0, $2968 = 0.0, $2969 = 0, $297 = 0.0, $2970 = 0.0, $2971 = 0.0, $2972 = 0.0, $2973 = 0.0, $2974 = 0, $2975 = 0.0, $2976 = 0, $2977 = 0.0;
 var $2978 = 0.0, $2979 = 0.0, $298 = 0, $2980 = 0.0, $2981 = 0, $2982 = 0, $2983 = 0.0, $2984 = 0.0, $2985 = 0, $2986 = 0.0, $2987 = 0.0, $2988 = 0, $2989 = 0.0, $299 = 0.0, $2990 = 0.0, $2991 = 0.0, $2992 = 0.0, $2993 = 0.0, $2994 = 0.0, $2995 = 0;
 var $2996 = 0, $2997 = 0.0, $2998 = 0.0, $2999 = 0.0, $3 = 0, $30 = 0, $300 = 0.0, $3000 = 0.0, $3001 = 0, $3002 = 0.0, $3003 = 0, $3004 = 0.0, $3005 = 0.0, $3006 = 0.0, $3007 = 0.0, $3008 = 0, $3009 = 0.0, $301 = 0, $3010 = 0.0, $3011 = 0;
 var $3012 = 0.0, $3013 = 0.0, $3014 = 0, $3015 = 0.0, $3016 = 0.0, $3017 = 0.0, $3018 = 0.0, $3019 = 0.0, $302 = 0.0, $3020 = 0.0, $3021 = 0.0, $3022 = 0.0, $3023 = 0.0, $3024 = 0, $3025 = 0, $3026 = 0.0, $3027 = 0.0, $3028 = 0.0, $3029 = 0.0, $303 = 0;
 var $3030 = 0, $3031 = 0.0, $3032 = 0, $3033 = 0.0, $3034 = 0.0, $3035 = 0.0, $3036 = 0, $3037 = 0.0, $3038 = 0.0, $3039 = 0, $304 = 0.0, $3040 = 0.0, $3041 = 0.0, $3042 = 0, $3043 = 0.0, $3044 = 0.0, $3045 = 0.0, $3046 = 0.0, $3047 = 0.0, $3048 = 0.0;
 var $3049 = 0.0, $305 = 0.0, $3050 = 0.0, $3051 = 0.0, $3052 = 0.0, $3053 = 0.0, $3054 = 0, $3055 = 0.0, $3056 = 0.0, $3057 = 0.0, $3058 = 0, $3059 = 0.0, $306 = 0.0, $3060 = 0.0, $3061 = 0, $3062 = 0, $3063 = 0, $3064 = 0, $3065 = 0, $3066 = 0;
 var $3067 = 0, $3068 = 0, $3069 = 0, $307 = 0, $3070 = 0, $3071 = 0, $3072 = 0, $3073 = 0, $3074 = 0, $3075 = 0, $3076 = 0, $3077 = 0, $3078 = 0, $3079 = 0, $308 = 0.0, $3080 = 0, $3081 = 0, $3082 = 0.0, $3083 = 0, $3084 = 0;
 var $3085 = 0.0, $3086 = 0.0, $3087 = 0.0, $3088 = 0, $3089 = 0, $309 = 0, $3090 = 0, $3091 = 0.0, $3092 = 0, $3093 = 0, $3094 = 0.0, $3095 = 0.0, $3096 = 0.0, $3097 = 0, $3098 = 0, $3099 = 0, $31 = 0.0, $310 = 0.0, $3100 = 0, $3101 = 0;
 var $3102 = 0, $3103 = 0, $3104 = 0, $3105 = 0, $3106 = 0, $3107 = 0, $3108 = 0.0, $3109 = 0, $311 = 0.0, $3110 = 0, $3111 = 0, $3112 = 0.0, $3113 = 0, $3114 = 0, $3115 = 0, $3116 = 0.0, $3117 = 0, $3118 = 0, $3119 = 0.0, $312 = 0.0;
 var $3120 = 0.0, $3121 = 0, $3122 = 0.0, $3123 = 0.0, $3124 = 0, $3125 = 0.0, $3126 = 0.0, $3127 = 0, $3128 = 0.0, $3129 = 0.0, $313 = 0.0, $3130 = 0.0, $3131 = 0, $3132 = 0.0, $3133 = 0.0, $3134 = 0.0, $3135 = 0.0, $3136 = 0.0, $3137 = 0.0, $3138 = 0.0;
 var $3139 = 0.0, $314 = 0, $3140 = 0, $3141 = 0.0, $3142 = 0, $3143 = 0.0, $3144 = 0.0, $3145 = 0.0, $3146 = 0.0, $3147 = 0, $3148 = 0.0, $3149 = 0, $315 = 0.0, $3150 = 0.0, $3151 = 0.0, $3152 = 0.0, $3153 = 0, $3154 = 0.0, $3155 = 0, $3156 = 0.0;
 var $3157 = 0.0, $3158 = 0.0, $3159 = 0.0, $316 = 0.0, $3160 = 0, $3161 = 0.0, $3162 = 0, $3163 = 0.0, $3164 = 0.0, $3165 = 0.0, $3166 = 0, $3167 = 0.0, $3168 = 0, $3169 = 0.0, $317 = 0.0, $3170 = 0, $3171 = 0.0, $3172 = 0.0, $3173 = 0.0, $3174 = 0;
 var $3175 = 0.0, $3176 = 0.0, $3177 = 0.0, $3178 = 0.0, $3179 = 0.0, $318 = 0.0, $3180 = 0, $3181 = 0.0, $3182 = 0, $3183 = 0.0, $3184 = 0.0, $3185 = 0, $3186 = 0.0, $3187 = 0, $3188 = 0.0, $3189 = 0.0, $319 = 0, $3190 = 0, $3191 = 0, $3192 = 0.0;
 var $3193 = 0.0, $3194 = 0.0, $3195 = 0.0, $3196 = 0.0, $3197 = 0.0, $3198 = 0.0, $3199 = 0.0, $32 = 0.0, $320 = 0.0, $3200 = 0, $3201 = 0.0, $3202 = 0.0, $3203 = 0, $3204 = 0, $3205 = 0.0, $3206 = 0.0, $3207 = 0.0, $3208 = 0.0, $3209 = 0, $321 = 0.0;
 var $3210 = 0.0, $3211 = 0.0, $3212 = 0, $3213 = 0.0, $3214 = 0.0, $3215 = 0.0, $3216 = 0.0, $3217 = 0, $3218 = 0.0, $3219 = 0.0, $322 = 0.0, $3220 = 0, $3221 = 0.0, $3222 = 0, $3223 = 0.0, $3224 = 0.0, $3225 = 0.0, $3226 = 0, $3227 = 0.0, $3228 = 0.0;
 var $3229 = 0.0, $323 = 0.0, $3230 = 0.0, $3231 = 0.0, $3232 = 0, $3233 = 0.0, $3234 = 0.0, $3235 = 0, $3236 = 0, $3237 = 0.0, $3238 = 0.0, $3239 = 0, $324 = 0.0, $3240 = 0, $3241 = 0.0, $3242 = 0.0, $3243 = 0, $3244 = 0, $3245 = 0.0, $3246 = 0.0;
 var $3247 = 0, $3248 = 0, $3249 = 0.0, $325 = 0.0, $3250 = 0.0, $3251 = 0, $3252 = 0, $3253 = 0.0, $3254 = 0.0, $3255 = 0, $3256 = 0, $3257 = 0.0, $3258 = 0.0, $3259 = 0, $326 = 0.0, $3260 = 0, $3261 = 0.0, $3262 = 0.0, $3263 = 0, $3264 = 0;
 var $3265 = 0, $3266 = 0, $3267 = 0, $3268 = 0.0, $3269 = 0, $327 = 0, $3270 = 0, $3271 = 0, $3272 = 0, $3273 = 0, $3274 = 0, $3275 = 0, $3276 = 0, $3277 = 0, $3278 = 0, $3279 = 0, $328 = 0.0, $3280 = 0, $3281 = 0, $3282 = 0;
 var $3283 = 0, $3284 = 0, $3285 = 0, $3286 = 0, $3287 = 0, $3288 = 0, $3289 = 0, $329 = 0.0, $3290 = 0, $3291 = 0, $3292 = 0, $3293 = 0, $3294 = 0, $3295 = 0, $3296 = 0, $3297 = 0, $3298 = 0.0, $3299 = 0, $33 = 0, $330 = 0.0;
 var $3300 = 0, $3301 = 0, $3302 = 0, $3303 = 0, $3304 = 0, $3305 = 0, $3306 = 0, $3307 = 0, $3308 = 0, $3309 = 0, $331 = 0.0, $3310 = 0, $3311 = 0, $3312 = 0, $3313 = 0, $3314 = 0, $3315 = 0, $3316 = 0, $3317 = 0, $3318 = 0;
 var $3319 = 0, $332 = 0.0, $3320 = 0, $3321 = 0, $3322 = 0, $3323 = 0, $3324 = 0, $3325 = 0, $3326 = 0, $3327 = 0, $3328 = 0.0, $3329 = 0, $333 = 0.0, $3330 = 0, $3331 = 0, $3332 = 0, $3333 = 0, $3334 = 0, $3335 = 0, $3336 = 0;
 var $3337 = 0, $3338 = 0, $3339 = 0, $334 = 0.0, $3340 = 0, $3341 = 0, $3342 = 0, $3343 = 0, $3344 = 0, $3345 = 0, $3346 = 0, $3347 = 0, $3348 = 0, $3349 = 0, $335 = 0, $3350 = 0, $3351 = 0, $3352 = 0, $3353 = 0, $3354 = 0;
 var $3355 = 0, $3356 = 0, $3357 = 0, $3358 = 0.0, $3359 = 0, $336 = 0, $3360 = 0, $3361 = 0, $3362 = 0, $3363 = 0, $3364 = 0, $3365 = 0, $3366 = 0, $3367 = 0, $3368 = 0, $3369 = 0, $337 = 0.0, $3370 = 0, $3371 = 0, $3372 = 0;
 var $3373 = 0, $3374 = 0, $3375 = 0, $3376 = 0, $3377 = 0, $3378 = 0, $3379 = 0, $338 = 0.0, $3380 = 0, $3381 = 0, $3382 = 0, $3383 = 0, $3384 = 0, $3385 = 0, $3386 = 0, $3387 = 0, $3388 = 0.0, $3389 = 0, $339 = 0.0, $3390 = 0;
 var $3391 = 0, $3392 = 0, $3393 = 0, $3394 = 0, $3395 = 0, $3396 = 0, $3397 = 0, $3398 = 0, $3399 = 0, $34 = 0.0, $340 = 0.0, $3400 = 0, $3401 = 0, $3402 = 0, $3403 = 0, $3404 = 0, $3405 = 0, $3406 = 0, $3407 = 0, $3408 = 0;
 var $3409 = 0, $341 = 0.0, $3410 = 0, $3411 = 0, $3412 = 0, $3413 = 0, $3414 = 0, $3415 = 0, $3416 = 0, $3417 = 0, $3418 = 0.0, $3419 = 0, $342 = 0.0, $3420 = 0, $3421 = 0, $3422 = 0, $3423 = 0, $3424 = 0, $3425 = 0, $3426 = 0;
 var $3427 = 0, $3428 = 0, $3429 = 0, $343 = 0.0, $3430 = 0, $3431 = 0, $3432 = 0, $3433 = 0, $3434 = 0, $3435 = 0, $3436 = 0, $3437 = 0, $3438 = 0, $3439 = 0, $344 = 0, $3440 = 0, $3441 = 0, $3442 = 0, $3443 = 0, $3444 = 0;
 var $3445 = 0, $3446 = 0, $3447 = 0, $3448 = 0, $3449 = 0, $345 = 0.0, $3450 = 0, $3451 = 0, $3452 = 0, $3453 = 0, $3454 = 0, $3455 = 0, $3456 = 0, $3457 = 0, $3458 = 0, $3459 = 0, $346 = 0.0, $3460 = 0, $3461 = 0, $3462 = 0;
 var $3463 = 0, $3464 = 0, $3465 = 0, $3466 = 0.0, $3467 = 0, $3468 = 0.0, $3469 = 0.0, $347 = 0.0, $3470 = 0, $3471 = 0.0, $3472 = 0, $3473 = 0.0, $3474 = 0.0, $3475 = 0, $3476 = 0.0, $3477 = 0, $3478 = 0.0, $3479 = 0.0, $348 = 0.0, $3480 = 0;
 var $3481 = 0.0, $3482 = 0, $3483 = 0.0, $3484 = 0.0, $3485 = 0.0, $3486 = 0, $3487 = 0.0, $3488 = 0.0, $3489 = 0.0, $349 = 0.0, $3490 = 0.0, $3491 = 0.0, $3492 = 0.0, $3493 = 0, $3494 = 0.0, $3495 = 0.0, $3496 = 0, $3497 = 0, $3498 = 0.0, $3499 = 0;
 var $35 = 0, $350 = 0.0, $3500 = 0, $3501 = 0.0, $3502 = 0, $3503 = 0, $3504 = 0.0, $3505 = 0, $3506 = 0, $3507 = 0.0, $3508 = 0, $3509 = 0.0, $351 = 0.0, $3510 = 0, $3511 = 0.0, $3512 = 0, $3513 = 0.0, $3514 = 0.0, $3515 = 0.0, $3516 = 0.0;
 var $3517 = 0, $3518 = 0.0, $3519 = 0.0, $352 = 0, $3520 = 0.0, $3521 = 0.0, $3522 = 0, $3523 = 0.0, $3524 = 0.0, $3525 = 0, $3526 = 0, $3527 = 0.0, $3528 = 0.0, $3529 = 0, $353 = 0, $3530 = 0, $3531 = 0.0, $3532 = 0.0, $3533 = 0, $3534 = 0;
 var $3535 = 0.0, $3536 = 0.0, $3537 = 0, $3538 = 0, $3539 = 0.0, $354 = 0.0, $3540 = 0.0, $3541 = 0, $3542 = 0, $3543 = 0.0, $3544 = 0.0, $3545 = 0, $3546 = 0, $3547 = 0.0, $3548 = 0.0, $3549 = 0, $355 = 0.0, $3550 = 0, $3551 = 0.0, $3552 = 0.0;
 var $3553 = 0, $3554 = 0, $3555 = 0.0, $3556 = 0.0, $3557 = 0, $3558 = 0, $3559 = 0.0, $356 = 0.0, $3560 = 0.0, $3561 = 0, $3562 = 0, $3563 = 0, $3564 = 0.0, $3565 = 0.0, $3566 = 0, $3567 = 0.0, $3568 = 0.0, $3569 = 0, $357 = 0.0, $3570 = 0.0;
 var $3571 = 0.0, $3572 = 0, $3573 = 0.0, $3574 = 0.0, $3575 = 0.0, $3576 = 0.0, $3577 = 0.0, $3578 = 0.0, $3579 = 0, $358 = 0.0, $3580 = 0, $3581 = 0.0, $3582 = 0, $3583 = 0.0, $3584 = 0.0, $3585 = 0, $3586 = 0.0, $3587 = 0.0, $3588 = 0.0, $3589 = 0.0;
 var $359 = 0.0, $3590 = 0.0, $3591 = 0.0, $3592 = 0, $3593 = 0, $3594 = 0.0, $3595 = 0.0, $3596 = 0, $3597 = 0.0, $3598 = 0.0, $3599 = 0, $36 = 0.0, $360 = 0.0, $3600 = 0.0, $3601 = 0.0, $3602 = 0.0, $3603 = 0.0, $3604 = 0.0, $3605 = 0.0, $3606 = 0;
 var $3607 = 0.0, $3608 = 0, $3609 = 0.0, $361 = 0.0, $3610 = 0.0, $3611 = 0, $3612 = 0.0, $3613 = 0.0, $3614 = 0.0, $3615 = 0.0, $3616 = 0.0, $3617 = 0.0, $3618 = 0.0, $3619 = 0.0, $362 = 0.0, $3620 = 0.0, $3621 = 0, $3622 = 0, $3623 = 0.0, $3624 = 0.0;
 var $3625 = 0, $3626 = 0.0, $3627 = 0.0, $3628 = 0, $3629 = 0.0, $363 = 0.0, $3630 = 0.0, $3631 = 0.0, $3632 = 0.0, $3633 = 0.0, $3634 = 0, $3635 = 0.0, $3636 = 0, $3637 = 0.0, $3638 = 0.0, $3639 = 0, $364 = 0, $3640 = 0.0, $3641 = 0.0, $3642 = 0.0;
 var $3643 = 0.0, $3644 = 0.0, $3645 = 0.0, $3646 = 0.0, $3647 = 0.0, $3648 = 0.0, $3649 = 0.0, $365 = 0.0, $3650 = 0.0, $3651 = 0, $3652 = 0.0, $3653 = 0.0, $3654 = 0.0, $3655 = 0, $3656 = 0.0, $3657 = 0.0, $3658 = 0, $3659 = 0, $366 = 0.0, $3660 = 0;
 var $3661 = 0, $3662 = 0, $3663 = 0, $3664 = 0, $3665 = 0, $3666 = 0, $3667 = 0, $3668 = 0, $3669 = 0, $367 = 0.0, $3670 = 0, $3671 = 0, $3672 = 0, $3673 = 0, $3674 = 0, $3675 = 0, $3676 = 0, $3677 = 0, $3678 = 0, $3679 = 0.0;
 var $368 = 0.0, $3680 = 0, $3681 = 0, $3682 = 0.0, $3683 = 0.0, $3684 = 0.0, $3685 = 0, $3686 = 0, $3687 = 0, $3688 = 0.0, $3689 = 0, $369 = 0, $3690 = 0, $3691 = 0.0, $3692 = 0.0, $3693 = 0.0, $3694 = 0, $3695 = 0, $3696 = 0, $3697 = 0;
 var $3698 = 0, $3699 = 0, $37 = 0.0, $370 = 0, $3700 = 0, $3701 = 0, $3702 = 0, $3703 = 0, $3704 = 0, $3705 = 0.0, $3706 = 0, $3707 = 0, $3708 = 0, $3709 = 0.0, $371 = 0.0, $3710 = 0, $3711 = 0, $3712 = 0, $3713 = 0.0, $3714 = 0;
 var $3715 = 0, $3716 = 0.0, $3717 = 0.0, $3718 = 0, $3719 = 0.0, $372 = 0, $3720 = 0.0, $3721 = 0, $3722 = 0.0, $3723 = 0.0, $3724 = 0, $3725 = 0.0, $3726 = 0.0, $3727 = 0.0, $3728 = 0, $3729 = 0.0, $373 = 0.0, $3730 = 0.0, $3731 = 0.0, $3732 = 0.0;
 var $3733 = 0.0, $3734 = 0.0, $3735 = 0.0, $3736 = 0.0, $3737 = 0, $3738 = 0.0, $3739 = 0, $374 = 0.0, $3740 = 0.0, $3741 = 0.0, $3742 = 0.0, $3743 = 0.0, $3744 = 0, $3745 = 0.0, $3746 = 0, $3747 = 0.0, $3748 = 0.0, $3749 = 0.0, $375 = 0, $3750 = 0;
 var $3751 = 0.0, $3752 = 0, $3753 = 0.0, $3754 = 0.0, $3755 = 0.0, $3756 = 0.0, $3757 = 0, $3758 = 0.0, $3759 = 0, $376 = 0.0, $3760 = 0.0, $3761 = 0.0, $3762 = 0.0, $3763 = 0, $3764 = 0.0, $3765 = 0, $3766 = 0.0, $3767 = 0, $3768 = 0.0, $3769 = 0.0;
 var $377 = 0, $3770 = 0.0, $3771 = 0, $3772 = 0.0, $3773 = 0.0, $3774 = 0.0, $3775 = 0.0, $3776 = 0.0, $3777 = 0, $3778 = 0.0, $3779 = 0, $378 = 0.0, $3780 = 0.0, $3781 = 0.0, $3782 = 0, $3783 = 0.0, $3784 = 0, $3785 = 0.0, $3786 = 0.0, $3787 = 0;
 var $3788 = 0, $3789 = 0.0, $379 = 0.0, $3790 = 0.0, $3791 = 0.0, $3792 = 0, $3793 = 0.0, $3794 = 0.0, $3795 = 0.0, $3796 = 0.0, $3797 = 0.0, $3798 = 0.0, $3799 = 0.0, $38 = 0, $380 = 0.0, $3800 = 0, $3801 = 0, $3802 = 0.0, $3803 = 0.0, $3804 = 0.0;
 var $3805 = 0, $3806 = 0.0, $3807 = 0.0, $3808 = 0, $3809 = 0.0, $381 = 0, $3810 = 0.0, $3811 = 0.0, $3812 = 0.0, $3813 = 0.0, $3814 = 0, $3815 = 0.0, $3816 = 0.0, $3817 = 0, $3818 = 0.0, $3819 = 0.0, $382 = 0, $3820 = 0.0, $3821 = 0.0, $3822 = 0.0;
 var $3823 = 0, $3824 = 0.0, $3825 = 0, $3826 = 0.0, $3827 = 0.0, $3828 = 0.0, $3829 = 0, $383 = 0.0, $3830 = 0.0, $3831 = 0.0, $3832 = 0, $3833 = 0, $3834 = 0.0, $3835 = 0.0, $3836 = 0, $3837 = 0, $3838 = 0.0, $3839 = 0.0, $384 = 0, $3840 = 0;
 var $3841 = 0, $3842 = 0.0, $3843 = 0.0, $3844 = 0, $3845 = 0, $3846 = 0.0, $3847 = 0.0, $3848 = 0, $3849 = 0, $385 = 0.0, $3850 = 0.0, $3851 = 0.0, $3852 = 0, $3853 = 0, $3854 = 0.0, $3855 = 0.0, $3856 = 0, $3857 = 0, $3858 = 0.0, $3859 = 0.0;
 var $386 = 0.0, $3860 = 0, $3861 = 0, $3862 = 0, $3863 = 0, $3864 = 0, $3865 = 0.0, $3866 = 0, $3867 = 0, $3868 = 0, $3869 = 0, $387 = 0, $3870 = 0, $3871 = 0, $3872 = 0, $3873 = 0, $3874 = 0, $3875 = 0, $3876 = 0, $3877 = 0;
 var $3878 = 0, $3879 = 0, $388 = 0.0, $3880 = 0, $3881 = 0, $3882 = 0, $3883 = 0, $3884 = 0, $3885 = 0, $3886 = 0, $3887 = 0, $3888 = 0, $3889 = 0, $389 = 0, $3890 = 0, $3891 = 0, $3892 = 0, $3893 = 0, $3894 = 0, $3895 = 0.0;
 var $3896 = 0, $3897 = 0, $3898 = 0, $3899 = 0, $39 = 0.0, $390 = 0.0, $3900 = 0, $3901 = 0, $3902 = 0, $3903 = 0, $3904 = 0, $3905 = 0, $3906 = 0, $3907 = 0, $3908 = 0, $3909 = 0, $391 = 0.0, $3910 = 0, $3911 = 0, $3912 = 0;
 var $3913 = 0, $3914 = 0, $3915 = 0, $3916 = 0, $3917 = 0, $3918 = 0, $3919 = 0, $392 = 0.0, $3920 = 0, $3921 = 0, $3922 = 0, $3923 = 0, $3924 = 0, $3925 = 0.0, $3926 = 0, $3927 = 0, $3928 = 0, $3929 = 0, $393 = 0, $3930 = 0;
 var $3931 = 0, $3932 = 0, $3933 = 0, $3934 = 0, $3935 = 0, $3936 = 0, $3937 = 0, $3938 = 0, $3939 = 0, $394 = 0, $3940 = 0, $3941 = 0, $3942 = 0, $3943 = 0, $3944 = 0, $3945 = 0, $3946 = 0, $3947 = 0, $3948 = 0, $3949 = 0;
 var $395 = 0.0, $3950 = 0, $3951 = 0, $3952 = 0, $3953 = 0, $3954 = 0, $3955 = 0.0, $3956 = 0, $3957 = 0, $3958 = 0, $3959 = 0, $396 = 0, $3960 = 0, $3961 = 0, $3962 = 0, $3963 = 0, $3964 = 0, $3965 = 0, $3966 = 0, $3967 = 0;
 var $3968 = 0, $3969 = 0, $397 = 0.0, $3970 = 0, $3971 = 0, $3972 = 0, $3973 = 0, $3974 = 0, $3975 = 0, $3976 = 0, $3977 = 0, $3978 = 0, $3979 = 0, $398 = 0.0, $3980 = 0, $3981 = 0, $3982 = 0, $3983 = 0, $3984 = 0, $3985 = 0.0;
 var $3986 = 0, $3987 = 0, $3988 = 0, $3989 = 0, $399 = 0, $3990 = 0, $3991 = 0, $3992 = 0, $3993 = 0, $3994 = 0, $3995 = 0, $3996 = 0, $3997 = 0, $3998 = 0, $3999 = 0, $4 = 0, $40 = 0.0, $400 = 0.0, $4000 = 0, $4001 = 0;
 var $4002 = 0, $4003 = 0, $4004 = 0, $4005 = 0, $4006 = 0, $4007 = 0, $4008 = 0, $4009 = 0, $401 = 0, $4010 = 0, $4011 = 0, $4012 = 0, $4013 = 0, $4014 = 0, $4015 = 0.0, $4016 = 0, $4017 = 0, $4018 = 0, $4019 = 0, $402 = 0.0;
 var $4020 = 0, $4021 = 0, $4022 = 0, $4023 = 0, $4024 = 0, $4025 = 0, $4026 = 0, $4027 = 0, $4028 = 0, $4029 = 0, $403 = 0.0, $4030 = 0, $4031 = 0, $4032 = 0, $4033 = 0, $4034 = 0, $4035 = 0, $4036 = 0, $4037 = 0, $4038 = 0;
 var $4039 = 0, $404 = 0.0, $4040 = 0, $4041 = 0, $4042 = 0, $4043 = 0, $4044 = 0, $4045 = 0, $4046 = 0, $4047 = 0, $4048 = 0, $4049 = 0, $405 = 0, $4050 = 0, $4051 = 0, $4052 = 0, $4053 = 0, $4054 = 0, $4055 = 0, $4056 = 0;
 var $4057 = 0, $4058 = 0, $4059 = 0, $406 = 0, $4060 = 0, $4061 = 0, $4062 = 0, $4063 = 0.0, $4064 = 0, $4065 = 0.0, $4066 = 0.0, $4067 = 0.0, $4068 = 0, $4069 = 0.0, $407 = 0.0, $4070 = 0, $4071 = 0.0, $4072 = 0.0, $4073 = 0, $4074 = 0.0;
 var $4075 = 0.0, $4076 = 0, $4077 = 0.0, $4078 = 0.0, $4079 = 0.0, $408 = 0.0, $4080 = 0.0, $4081 = 0.0, $4082 = 0.0, $4083 = 0, $4084 = 0.0, $4085 = 0, $4086 = 0.0, $4087 = 0, $4088 = 0, $4089 = 0.0, $409 = 0.0, $4090 = 0, $4091 = 0.0, $4092 = 0;
 var $4093 = 0, $4094 = 0.0, $4095 = 0, $4096 = 0.0, $4097 = 0.0, $4098 = 0, $4099 = 0.0, $41 = 0.0, $410 = 0.0, $4100 = 0, $4101 = 0.0, $4102 = 0.0, $4103 = 0.0, $4104 = 0, $4105 = 0, $4106 = 0.0, $4107 = 0, $4108 = 0.0, $4109 = 0.0, $411 = 0.0;
 var $4110 = 0, $4111 = 0.0, $4112 = 0.0, $4113 = 0.0, $4114 = 0.0, $4115 = 0.0, $4116 = 0, $4117 = 0, $4118 = 0.0, $4119 = 0, $412 = 0.0, $4120 = 0.0, $4121 = 0.0, $4122 = 0, $4123 = 0.0, $4124 = 0.0, $4125 = 0.0, $4126 = 0.0, $4127 = 0.0, $4128 = 0;
 var $4129 = 0, $413 = 0.0, $4130 = 0.0, $4131 = 0, $4132 = 0.0, $4133 = 0.0, $4134 = 0.0, $4135 = 0, $4136 = 0.0, $4137 = 0.0, $4138 = 0.0, $4139 = 0.0, $414 = 0, $4140 = 0.0, $4141 = 0, $4142 = 0.0, $4143 = 0.0, $4144 = 0, $4145 = 0, $4146 = 0.0;
 var $4147 = 0.0, $4148 = 0, $4149 = 0, $415 = 0.0, $4150 = 0.0, $4151 = 0.0, $4152 = 0, $4153 = 0, $4154 = 0.0, $4155 = 0.0, $4156 = 0, $4157 = 0, $4158 = 0.0, $4159 = 0.0, $416 = 0.0, $4160 = 0, $4161 = 0, $4162 = 0.0, $4163 = 0.0, $4164 = 0;
 var $4165 = 0, $4166 = 0.0, $4167 = 0.0, $4168 = 0, $4169 = 0, $417 = 0.0, $4170 = 0.0, $4171 = 0.0, $4172 = 0, $4173 = 0, $4174 = 0.0, $4175 = 0.0, $4176 = 0, $4177 = 0, $4178 = 0.0, $4179 = 0.0, $418 = 0.0, $4180 = 0, $4181 = 0, $4182 = 0;
 var $4183 = 0.0, $4184 = 0.0, $4185 = 0.0, $4186 = 0, $4187 = 0, $4188 = 0.0, $4189 = 0.0, $419 = 0.0, $4190 = 0.0, $4191 = 0, $4192 = 0, $4193 = 0.0, $4194 = 0.0, $4195 = 0.0, $4196 = 0, $4197 = 0.0, $4198 = 0.0, $4199 = 0.0, $42 = 0.0, $420 = 0.0;
 var $4200 = 0.0, $4201 = 0.0, $4202 = 0.0, $4203 = 0, $4204 = 0, $4205 = 0.0, $4206 = 0.0, $4207 = 0, $4208 = 0.0, $4209 = 0.0, $421 = 0.0, $4210 = 0.0, $4211 = 0.0, $4212 = 0.0, $4213 = 0.0, $4214 = 0.0, $4215 = 0.0, $4216 = 0, $4217 = 0.0, $4218 = 0.0;
 var $4219 = 0.0, $422 = 0, $4220 = 0, $4221 = 0.0, $4222 = 0.0, $4223 = 0, $4224 = 0, $4225 = 0, $4226 = 0, $4227 = 0, $4228 = 0, $4229 = 0, $423 = 0, $4230 = 0, $4231 = 0, $4232 = 0, $4233 = 0, $4234 = 0, $4235 = 0, $4236 = 0;
 var $4237 = 0, $4238 = 0, $4239 = 0, $424 = 0.0, $4240 = 0, $4241 = 0, $4242 = 0, $4243 = 0, $4244 = 0.0, $4245 = 0, $4246 = 0, $4247 = 0.0, $4248 = 0.0, $4249 = 0.0, $425 = 0.0, $4250 = 0, $4251 = 0, $4252 = 0, $4253 = 0.0, $4254 = 0;
 var $4255 = 0, $4256 = 0.0, $4257 = 0.0, $4258 = 0.0, $4259 = 0, $426 = 0.0, $4260 = 0, $4261 = 0, $4262 = 0, $4263 = 0, $4264 = 0, $4265 = 0, $4266 = 0, $4267 = 0, $4268 = 0, $4269 = 0, $427 = 0.0, $4270 = 0.0, $4271 = 0, $4272 = 0;
 var $4273 = 0, $4274 = 0.0, $4275 = 0, $4276 = 0, $4277 = 0, $4278 = 0.0, $4279 = 0, $428 = 0.0, $4280 = 0, $4281 = 0.0, $4282 = 0.0, $4283 = 0, $4284 = 0.0, $4285 = 0.0, $4286 = 0, $4287 = 0.0, $4288 = 0.0, $4289 = 0.0, $429 = 0.0, $4290 = 0.0;
 var $4291 = 0.0, $4292 = 0, $4293 = 0.0, $4294 = 0.0, $4295 = 0.0, $4296 = 0, $4297 = 0.0, $4298 = 0.0, $4299 = 0, $43 = 0.0, $430 = 0.0, $4300 = 0, $4301 = 0.0, $4302 = 0.0, $4303 = 0.0, $4304 = 0, $4305 = 0.0, $4306 = 0.0, $4307 = 0, $4308 = 0;
 var $4309 = 0.0, $431 = 0, $4310 = 0.0, $4311 = 0.0, $4312 = 0, $4313 = 0.0, $4314 = 0.0, $4315 = 0, $4316 = 0.0, $4317 = 0.0, $4318 = 0.0, $4319 = 0.0, $432 = 0.0, $4320 = 0, $4321 = 0.0, $4322 = 0.0, $4323 = 0, $4324 = 0, $4325 = 0.0, $4326 = 0.0;
 var $4327 = 0.0, $4328 = 0.0, $4329 = 0, $433 = 0.0, $4330 = 0.0, $4331 = 0.0, $4332 = 0, $4333 = 0, $4334 = 0.0, $4335 = 0.0, $4336 = 0.0, $4337 = 0.0, $4338 = 0.0, $4339 = 0.0, $434 = 0.0, $4340 = 0, $4341 = 0.0, $4342 = 0, $4343 = 0.0, $4344 = 0.0;
 var $4345 = 0.0, $4346 = 0, $4347 = 0.0, $4348 = 0.0, $4349 = 0, $435 = 0.0, $4350 = 0.0, $4351 = 0.0, $4352 = 0.0, $4353 = 0.0, $4354 = 0.0, $4355 = 0, $4356 = 0.0, $4357 = 0, $4358 = 0.0, $4359 = 0.0, $436 = 0.0, $4360 = 0.0, $4361 = 0, $4362 = 0.0;
 var $4363 = 0.0, $4364 = 0, $4365 = 0, $4366 = 0.0, $4367 = 0.0, $4368 = 0, $4369 = 0, $437 = 0.0, $4370 = 0.0, $4371 = 0.0, $4372 = 0, $4373 = 0, $4374 = 0.0, $4375 = 0.0, $4376 = 0, $4377 = 0, $4378 = 0.0, $4379 = 0.0, $438 = 0.0, $4380 = 0;
 var $4381 = 0, $4382 = 0.0, $4383 = 0.0, $4384 = 0, $4385 = 0, $4386 = 0.0, $4387 = 0.0, $4388 = 0, $4389 = 0, $439 = 0, $4390 = 0.0, $4391 = 0.0, $4392 = 0, $4393 = 0, $4394 = 0, $4395 = 0, $4396 = 0, $4397 = 0.0, $4398 = 0, $4399 = 0;
 var $44 = 0, $440 = 0, $4400 = 0, $4401 = 0, $4402 = 0, $4403 = 0, $4404 = 0, $4405 = 0, $4406 = 0, $4407 = 0, $4408 = 0, $4409 = 0, $441 = 0.0, $4410 = 0, $4411 = 0, $4412 = 0, $4413 = 0, $4414 = 0, $4415 = 0, $4416 = 0;
 var $4417 = 0, $4418 = 0, $4419 = 0, $442 = 0.0, $4420 = 0, $4421 = 0, $4422 = 0, $4423 = 0, $4424 = 0, $4425 = 0, $4426 = 0, $4427 = 0.0, $4428 = 0, $4429 = 0, $443 = 0.0, $4430 = 0, $4431 = 0, $4432 = 0, $4433 = 0, $4434 = 0;
 var $4435 = 0, $4436 = 0, $4437 = 0, $4438 = 0, $4439 = 0, $444 = 0.0, $4440 = 0, $4441 = 0, $4442 = 0, $4443 = 0, $4444 = 0, $4445 = 0, $4446 = 0, $4447 = 0, $4448 = 0, $4449 = 0, $445 = 0.0, $4450 = 0, $4451 = 0, $4452 = 0;
 var $4453 = 0, $4454 = 0, $4455 = 0, $4456 = 0, $4457 = 0.0, $4458 = 0, $4459 = 0, $446 = 0.0, $4460 = 0, $4461 = 0, $4462 = 0, $4463 = 0, $4464 = 0, $4465 = 0, $4466 = 0, $4467 = 0, $4468 = 0, $4469 = 0, $447 = 0.0, $4470 = 0;
 var $4471 = 0, $4472 = 0, $4473 = 0, $4474 = 0, $4475 = 0, $4476 = 0, $4477 = 0, $4478 = 0, $4479 = 0, $448 = 0.0, $4480 = 0, $4481 = 0, $4482 = 0, $4483 = 0, $4484 = 0, $4485 = 0, $4486 = 0, $4487 = 0.0, $4488 = 0, $4489 = 0;
 var $449 = 0.0, $4490 = 0, $4491 = 0, $4492 = 0, $4493 = 0, $4494 = 0, $4495 = 0, $4496 = 0, $4497 = 0, $4498 = 0, $4499 = 0, $45 = 0.0, $450 = 0.0, $4500 = 0, $4501 = 0, $4502 = 0, $4503 = 0, $4504 = 0, $4505 = 0, $4506 = 0;
 var $4507 = 0, $4508 = 0, $4509 = 0, $451 = 0, $4510 = 0, $4511 = 0, $4512 = 0, $4513 = 0, $4514 = 0, $4515 = 0, $4516 = 0, $4517 = 0.0, $4518 = 0, $4519 = 0, $452 = 0.0, $4520 = 0, $4521 = 0, $4522 = 0, $4523 = 0, $4524 = 0;
 var $4525 = 0, $4526 = 0, $4527 = 0, $4528 = 0, $4529 = 0, $453 = 0.0, $4530 = 0, $4531 = 0, $4532 = 0, $4533 = 0, $4534 = 0, $4535 = 0, $4536 = 0, $4537 = 0, $4538 = 0, $4539 = 0, $454 = 0.0, $4540 = 0, $4541 = 0, $4542 = 0;
 var $4543 = 0, $4544 = 0, $4545 = 0, $4546 = 0, $4547 = 0.0, $4548 = 0, $4549 = 0, $455 = 0.0, $4550 = 0, $4551 = 0, $4552 = 0, $4553 = 0, $4554 = 0, $4555 = 0, $4556 = 0, $4557 = 0, $4558 = 0, $4559 = 0, $456 = 0, $4560 = 0;
 var $4561 = 0, $4562 = 0, $4563 = 0, $4564 = 0, $4565 = 0, $4566 = 0, $4567 = 0, $4568 = 0, $4569 = 0, $457 = 0, $4570 = 0, $4571 = 0, $4572 = 0, $4573 = 0, $4574 = 0, $4575 = 0, $4576 = 0, $4577 = 0, $4578 = 0, $4579 = 0;
 var $458 = 0.0, $4580 = 0, $4581 = 0, $4582 = 0, $4583 = 0, $4584 = 0, $4585 = 0, $4586 = 0, $4587 = 0, $4588 = 0, $4589 = 0, $459 = 0, $4590 = 0, $4591 = 0, $4592 = 0, $4593 = 0, $4594 = 0, $4595 = 0.0, $4596 = 0, $4597 = 0.0;
 var $4598 = 0.0, $4599 = 0.0, $46 = 0, $460 = 0.0, $4600 = 0, $4601 = 0.0, $4602 = 0.0, $4603 = 0, $4604 = 0.0, $4605 = 0.0, $4606 = 0.0, $4607 = 0.0, $4608 = 0.0, $4609 = 0.0, $461 = 0.0, $4610 = 0.0, $4611 = 0, $4612 = 0.0, $4613 = 0, $4614 = 0;
 var $4615 = 0.0, $4616 = 0.0, $4617 = 0, $4618 = 0.0, $4619 = 0.0, $462 = 0, $4620 = 0, $4621 = 0, $4622 = 0.0, $4623 = 0, $4624 = 0, $4625 = 0.0, $4626 = 0, $4627 = 0.0, $4628 = 0.0, $4629 = 0.0, $463 = 0.0, $4630 = 0, $4631 = 0, $4632 = 0.0;
 var $4633 = 0, $4634 = 0.0, $4635 = 0.0, $4636 = 0, $4637 = 0.0, $4638 = 0.0, $4639 = 0.0, $464 = 0.0, $4640 = 0.0, $4641 = 0.0, $4642 = 0, $4643 = 0, $4644 = 0.0, $4645 = 0, $4646 = 0.0, $4647 = 0.0, $4648 = 0, $4649 = 0.0, $465 = 0, $4650 = 0;
 var $4651 = 0.0, $4652 = 0.0, $4653 = 0.0, $4654 = 0, $4655 = 0, $4656 = 0.0, $4657 = 0, $4658 = 0.0, $4659 = 0.0, $466 = 0, $4660 = 0, $4661 = 0.0, $4662 = 0, $4663 = 0.0, $4664 = 0.0, $4665 = 0.0, $4666 = 0, $4667 = 0, $4668 = 0.0, $4669 = 0;
 var $467 = 0.0, $4670 = 0.0, $4671 = 0.0, $4672 = 0.0, $4673 = 0, $4674 = 0.0, $4675 = 0, $4676 = 0.0, $4677 = 0.0, $4678 = 0.0, $4679 = 0, $468 = 0.0, $4680 = 0.0, $4681 = 0.0, $4682 = 0, $4683 = 0, $4684 = 0.0, $4685 = 0.0, $4686 = 0, $4687 = 0;
 var $4688 = 0.0, $4689 = 0.0, $469 = 0, $4690 = 0, $4691 = 0, $4692 = 0.0, $4693 = 0.0, $4694 = 0, $4695 = 0, $4696 = 0.0, $4697 = 0.0, $4698 = 0, $4699 = 0, $47 = 0.0, $470 = 0, $4700 = 0.0, $4701 = 0.0, $4702 = 0, $4703 = 0, $4704 = 0.0;
 var $4705 = 0.0, $4706 = 0, $4707 = 0, $4708 = 0.0, $4709 = 0.0, $471 = 0.0, $4710 = 0, $4711 = 0, $4712 = 0.0, $4713 = 0.0, $4714 = 0, $4715 = 0, $4716 = 0.0, $4717 = 0.0, $4718 = 0, $4719 = 0, $472 = 0, $4720 = 0, $4721 = 0.0, $4722 = 0.0;
 var $4723 = 0, $4724 = 0, $4725 = 0.0, $4726 = 0.0, $4727 = 0, $4728 = 0, $4729 = 0.0, $473 = 0.0, $4730 = 0.0, $4731 = 0, $4732 = 0.0, $4733 = 0.0, $4734 = 0.0, $4735 = 0.0, $4736 = 0.0, $4737 = 0, $4738 = 0, $4739 = 0.0, $474 = 0.0, $4740 = 0;
 var $4741 = 0.0, $4742 = 0.0, $4743 = 0.0, $4744 = 0.0, $4745 = 0.0, $4746 = 0.0, $4747 = 0.0, $4748 = 0, $4749 = 0.0, $475 = 0, $4750 = 0.0, $4751 = 0.0, $4752 = 0, $4753 = 0.0, $4754 = 0.0, $4755 = 0, $4756 = 0, $4757 = 0, $4758 = 0, $4759 = 0;
 var $476 = 0.0, $4760 = 0, $4761 = 0, $4762 = 0, $4763 = 0, $4764 = 0, $4765 = 0, $4766 = 0, $4767 = 0, $4768 = 0, $4769 = 0, $477 = 0.0, $4770 = 0, $4771 = 0, $4772 = 0, $4773 = 0, $4774 = 0, $4775 = 0, $4776 = 0.0, $4777 = 0;
 var $4778 = 0, $4779 = 0.0, $478 = 0, $4780 = 0.0, $4781 = 0.0, $4782 = 0, $4783 = 0, $4784 = 0, $4785 = 0.0, $4786 = 0, $4787 = 0, $4788 = 0.0, $4789 = 0.0, $479 = 0.0, $4790 = 0.0, $4791 = 0, $4792 = 0, $4793 = 0, $4794 = 0, $4795 = 0;
 var $4796 = 0, $4797 = 0, $4798 = 0, $4799 = 0, $48 = 0.0, $480 = 0, $4800 = 0, $4801 = 0, $4802 = 0.0, $4803 = 0, $4804 = 0, $4805 = 0, $4806 = 0.0, $4807 = 0, $4808 = 0, $4809 = 0, $481 = 0.0, $4810 = 0.0, $4811 = 0, $4812 = 0;
 var $4813 = 0.0, $4814 = 0.0, $4815 = 0, $4816 = 0.0, $4817 = 0.0, $4818 = 0, $4819 = 0.0, $482 = 0.0, $4820 = 0.0, $4821 = 0.0, $4822 = 0.0, $4823 = 0, $4824 = 0.0, $4825 = 0.0, $4826 = 0.0, $4827 = 0, $4828 = 0.0, $4829 = 0.0, $483 = 0, $4830 = 0.0;
 var $4831 = 0, $4832 = 0.0, $4833 = 0.0, $4834 = 0.0, $4835 = 0, $4836 = 0.0, $4837 = 0, $4838 = 0.0, $4839 = 0.0, $484 = 0.0, $4840 = 0.0, $4841 = 0, $4842 = 0, $4843 = 0.0, $4844 = 0.0, $4845 = 0.0, $4846 = 0, $4847 = 0.0, $4848 = 0.0, $4849 = 0;
 var $485 = 0.0, $4850 = 0, $4851 = 0.0, $4852 = 0.0, $4853 = 0.0, $4854 = 0.0, $4855 = 0, $4856 = 0.0, $4857 = 0.0, $4858 = 0, $4859 = 0.0, $486 = 0, $4860 = 0.0, $4861 = 0.0, $4862 = 0.0, $4863 = 0, $4864 = 0.0, $4865 = 0.0, $4866 = 0, $4867 = 0.0;
 var $4868 = 0, $4869 = 0.0, $487 = 0.0, $4870 = 0, $4871 = 0.0, $4872 = 0.0, $4873 = 0.0, $4874 = 0, $4875 = 0.0, $4876 = 0.0, $4877 = 0.0, $4878 = 0.0, $4879 = 0.0, $488 = 0, $4880 = 0, $4881 = 0.0, $4882 = 0.0, $4883 = 0, $4884 = 0.0, $4885 = 0;
 var $4886 = 0.0, $4887 = 0.0, $4888 = 0.0, $4889 = 0, $489 = 0.0, $4890 = 0.0, $4891 = 0.0, $4892 = 0.0, $4893 = 0.0, $4894 = 0.0, $4895 = 0, $4896 = 0.0, $4897 = 0.0, $4898 = 0, $4899 = 0, $49 = 0.0, $490 = 0.0, $4900 = 0.0, $4901 = 0.0, $4902 = 0;
 var $4903 = 0, $4904 = 0.0, $4905 = 0.0, $4906 = 0, $4907 = 0, $4908 = 0.0, $4909 = 0.0, $491 = 0, $4910 = 0, $4911 = 0, $4912 = 0.0, $4913 = 0.0, $4914 = 0, $4915 = 0, $4916 = 0.0, $4917 = 0.0, $4918 = 0, $4919 = 0, $492 = 0.0, $4920 = 0.0;
 var $4921 = 0.0, $4922 = 0, $4923 = 0, $4924 = 0.0, $4925 = 0.0, $4926 = 0, $4927 = 0, $4928 = 0, $4929 = 0, $493 = 0, $4930 = 0, $4931 = 0.0, $4932 = 0, $4933 = 0, $4934 = 0, $4935 = 0, $4936 = 0, $4937 = 0, $4938 = 0, $4939 = 0;
 var $494 = 0.0, $4940 = 0, $4941 = 0, $4942 = 0, $4943 = 0, $4944 = 0, $4945 = 0, $4946 = 0, $4947 = 0, $4948 = 0, $4949 = 0, $495 = 0.0, $4950 = 0, $4951 = 0, $4952 = 0, $4953 = 0, $4954 = 0, $4955 = 0, $4956 = 0, $4957 = 0;
 var $4958 = 0, $4959 = 0, $496 = 0.0, $4960 = 0, $4961 = 0.0, $4962 = 0, $4963 = 0, $4964 = 0, $4965 = 0, $4966 = 0, $4967 = 0, $4968 = 0, $4969 = 0, $497 = 0, $4970 = 0, $4971 = 0, $4972 = 0, $4973 = 0, $4974 = 0, $4975 = 0;
 var $4976 = 0, $4977 = 0, $4978 = 0, $4979 = 0, $498 = 0.0, $4980 = 0, $4981 = 0, $4982 = 0, $4983 = 0, $4984 = 0, $4985 = 0, $4986 = 0, $4987 = 0, $4988 = 0, $4989 = 0, $499 = 0, $4990 = 0, $4991 = 0.0, $4992 = 0, $4993 = 0;
 var $4994 = 0, $4995 = 0, $4996 = 0, $4997 = 0, $4998 = 0, $4999 = 0, $5 = 0, $50 = 0.0, $500 = 0.0, $5000 = 0, $5001 = 0, $5002 = 0, $5003 = 0, $5004 = 0, $5005 = 0, $5006 = 0, $5007 = 0, $5008 = 0, $5009 = 0, $501 = 0.0;
 var $5010 = 0, $5011 = 0, $5012 = 0, $5013 = 0, $5014 = 0, $5015 = 0, $5016 = 0, $5017 = 0, $5018 = 0, $5019 = 0, $502 = 0.0, $5020 = 0, $5021 = 0.0, $5022 = 0, $5023 = 0, $5024 = 0, $5025 = 0, $5026 = 0, $5027 = 0, $5028 = 0;
 var $5029 = 0, $503 = 0.0, $5030 = 0, $5031 = 0, $5032 = 0, $5033 = 0, $5034 = 0, $5035 = 0, $5036 = 0, $5037 = 0, $5038 = 0, $5039 = 0, $504 = 0, $5040 = 0, $5041 = 0, $5042 = 0, $5043 = 0, $5044 = 0, $5045 = 0, $5046 = 0;
 var $5047 = 0, $5048 = 0, $5049 = 0, $505 = 0.0, $5050 = 0, $5051 = 0.0, $5052 = 0, $5053 = 0, $5054 = 0, $5055 = 0, $5056 = 0, $5057 = 0, $5058 = 0, $5059 = 0, $506 = 0.0, $5060 = 0, $5061 = 0, $5062 = 0, $5063 = 0, $5064 = 0;
 var $5065 = 0, $5066 = 0, $5067 = 0, $5068 = 0, $5069 = 0, $507 = 0.0, $5070 = 0, $5071 = 0, $5072 = 0, $5073 = 0, $5074 = 0, $5075 = 0, $5076 = 0, $5077 = 0, $5078 = 0, $5079 = 0, $508 = 0.0, $5080 = 0, $5081 = 0.0, $5082 = 0;
 var $5083 = 0, $5084 = 0, $5085 = 0, $5086 = 0, $5087 = 0, $5088 = 0, $5089 = 0, $509 = 0.0, $5090 = 0, $5091 = 0, $5092 = 0, $5093 = 0, $5094 = 0, $5095 = 0, $5096 = 0, $5097 = 0, $5098 = 0, $5099 = 0, $51 = 0, $510 = 0.0;
 var $5100 = 0, $5101 = 0, $5102 = 0, $5103 = 0, $5104 = 0, $5105 = 0, $5106 = 0, $5107 = 0, $5108 = 0, $5109 = 0, $511 = 0.0, $5110 = 0, $5111 = 0, $5112 = 0, $5113 = 0, $5114 = 0, $5115 = 0, $5116 = 0, $5117 = 0, $5118 = 0;
 var $5119 = 0, $512 = 0, $5120 = 0, $5121 = 0, $5122 = 0, $5123 = 0, $5124 = 0, $5125 = 0, $5126 = 0, $5127 = 0, $5128 = 0, $5129 = 0, $513 = 0.0, $5130 = 0, $5131 = 0, $5132 = 0.0, $5133 = 0, $5134 = 0, $5135 = 0, $5136 = 0.0;
 var $5137 = 0, $5138 = 0.0, $5139 = 0, $514 = 0.0, $5140 = 0, $5141 = 0, $5142 = 0, $5143 = 0.0, $5144 = 0.0, $5145 = 0.0, $5146 = 0.0, $5147 = 0.0, $5148 = 0, $5149 = 0.0, $515 = 0.0, $5150 = 0.0, $5151 = 0.0, $5152 = 0, $5153 = 0.0, $5154 = 0;
 var $5155 = 0.0, $5156 = 0.0, $5157 = 0, $5158 = 0.0, $5159 = 0.0, $516 = 0.0, $5160 = 0, $5161 = 0.0, $5162 = 0.0, $5163 = 0, $5164 = 0.0, $5165 = 0.0, $5166 = 0.0, $5167 = 0.0, $5168 = 0.0, $5169 = 0, $517 = 0, $5170 = 0, $5171 = 0.0, $5172 = 0.0;
 var $5173 = 0.0, $5174 = 0.0, $5175 = 0.0, $5176 = 0.0, $5177 = 0.0, $5178 = 0.0, $5179 = 0, $518 = 0.0, $5180 = 0.0, $5181 = 0, $5182 = 0.0, $5183 = 0.0, $5184 = 0, $5185 = 0.0, $5186 = 0.0, $5187 = 0, $5188 = 0.0, $5189 = 0.0, $519 = 0.0, $5190 = 0;
 var $5191 = 0.0, $5192 = 0.0, $5193 = 0.0, $5194 = 0.0, $5195 = 0.0, $5196 = 0.0, $5197 = 0.0, $5198 = 0.0, $5199 = 0, $52 = 0.0, $520 = 0.0, $5200 = 0, $5201 = 0.0, $5202 = 0.0, $5203 = 0.0, $5204 = 0.0, $5205 = 0.0, $5206 = 0.0, $5207 = 0.0, $5208 = 0;
 var $5209 = 0.0, $521 = 0.0, $5210 = 0, $5211 = 0.0, $5212 = 0.0, $5213 = 0, $5214 = 0.0, $5215 = 0.0, $5216 = 0, $5217 = 0.0, $5218 = 0.0, $5219 = 0, $522 = 0.0, $5220 = 0.0, $5221 = 0.0, $5222 = 0.0, $5223 = 0.0, $5224 = 0.0, $5225 = 0.0, $5226 = 0.0;
 var $5227 = 0.0, $5228 = 0.0, $5229 = 0.0, $523 = 0.0, $5230 = 0, $5231 = 0.0, $5232 = 0.0, $5233 = 0.0, $5234 = 0, $5235 = 0.0, $5236 = 0.0, $5237 = 0, $5238 = 0, $5239 = 0, $524 = 0.0, $5240 = 0, $5241 = 0, $5242 = 0, $5243 = 0, $5244 = 0;
 var $5245 = 0, $5246 = 0, $5247 = 0, $5248 = 0, $5249 = 0, $525 = 0, $5250 = 0, $5251 = 0, $5252 = 0, $5253 = 0, $5254 = 0, $5255 = 0, $5256 = 0, $5257 = 0, $5258 = 0.0, $5259 = 0, $526 = 0, $5260 = 0, $5261 = 0.0, $5262 = 0.0;
 var $5263 = 0.0, $5264 = 0, $5265 = 0, $5266 = 0, $5267 = 0.0, $5268 = 0, $5269 = 0, $527 = 0.0, $5270 = 0.0, $5271 = 0.0, $5272 = 0.0, $5273 = 0, $5274 = 0, $5275 = 0, $5276 = 0, $5277 = 0, $5278 = 0, $5279 = 0, $528 = 0.0, $5280 = 0;
 var $5281 = 0, $5282 = 0, $5283 = 0, $5284 = 0.0, $5285 = 0, $5286 = 0, $5287 = 0, $5288 = 0.0, $5289 = 0, $529 = 0.0, $5290 = 0, $5291 = 0, $5292 = 0.0, $5293 = 0, $5294 = 0, $5295 = 0.0, $5296 = 0.0, $5297 = 0, $5298 = 0.0, $5299 = 0.0;
 var $53 = 0.0, $530 = 0.0, $5300 = 0, $5301 = 0.0, $5302 = 0, $5303 = 0.0, $5304 = 0.0, $5305 = 0, $5306 = 0.0, $5307 = 0, $5308 = 0.0, $5309 = 0.0, $531 = 0.0, $5310 = 0, $5311 = 0.0, $5312 = 0.0, $5313 = 0, $5314 = 0.0, $5315 = 0.0, $5316 = 0;
 var $5317 = 0.0, $5318 = 0.0, $5319 = 0, $532 = 0.0, $5320 = 0.0, $5321 = 0, $5322 = 0.0, $5323 = 0.0, $5324 = 0, $5325 = 0.0, $5326 = 0.0, $5327 = 0.0, $5328 = 0, $5329 = 0.0, $533 = 0, $5330 = 0.0, $5331 = 0.0, $5332 = 0.0, $5333 = 0.0, $5334 = 0;
 var $5335 = 0.0, $5336 = 0.0, $5337 = 0.0, $5338 = 0, $5339 = 0.0, $534 = 0.0, $5340 = 0.0, $5341 = 0, $5342 = 0.0, $5343 = 0.0, $5344 = 0.0, $5345 = 0.0, $5346 = 0, $5347 = 0.0, $5348 = 0.0, $5349 = 0, $535 = 0.0, $5350 = 0, $5351 = 0.0, $5352 = 0;
 var $5353 = 0.0, $5354 = 0.0, $5355 = 0.0, $5356 = 0.0, $5357 = 0, $5358 = 0.0, $5359 = 0, $536 = 0.0, $5360 = 0.0, $5361 = 0.0, $5362 = 0.0, $5363 = 0, $5364 = 0, $5365 = 0.0, $5366 = 0, $5367 = 0.0, $5368 = 0.0, $5369 = 0.0, $537 = 0.0, $5370 = 0.0;
 var $5371 = 0, $5372 = 0.0, $5373 = 0, $5374 = 0.0, $5375 = 0.0, $5376 = 0.0, $5377 = 0, $5378 = 0.0, $5379 = 0.0, $538 = 0.0, $5380 = 0.0, $5381 = 0.0, $5382 = 0.0, $5383 = 0, $5384 = 0.0, $5385 = 0.0, $5386 = 0, $5387 = 0, $5388 = 0.0, $5389 = 0.0;
 var $539 = 0.0, $5390 = 0.0, $5391 = 0, $5392 = 0.0, $5393 = 0.0, $5394 = 0.0, $5395 = 0.0, $5396 = 0, $5397 = 0.0, $5398 = 0.0, $5399 = 0, $54 = 0.0, $540 = 0.0, $5400 = 0, $5401 = 0.0, $5402 = 0.0, $5403 = 0.0, $5404 = 0.0, $5405 = 0.0, $5406 = 0;
 var $5407 = 0.0, $5408 = 0.0, $5409 = 0.0, $541 = 0.0, $5410 = 0.0, $5411 = 0.0, $5412 = 0, $5413 = 0.0, $5414 = 0.0, $5415 = 0.0, $5416 = 0.0, $5417 = 0.0, $5418 = 0.0, $5419 = 0, $542 = 0, $5420 = 0.0, $5421 = 0.0, $5422 = 0, $5423 = 0, $5424 = 0.0;
 var $5425 = 0.0, $5426 = 0.0, $5427 = 0, $5428 = 0.0, $5429 = 0.0, $543 = 0, $5430 = 0.0, $5431 = 0.0, $5432 = 0.0, $5433 = 0.0, $5434 = 0.0, $5435 = 0, $5436 = 0, $5437 = 0.0, $5438 = 0.0, $5439 = 0.0, $544 = 0.0, $5440 = 0.0, $5441 = 0.0, $5442 = 0.0;
 var $5443 = 0.0, $5444 = 0.0, $5445 = 0.0, $5446 = 0.0, $5447 = 0.0, $5448 = 0, $5449 = 0, $545 = 0.0, $5450 = 0.0, $5451 = 0.0, $5452 = 0.0, $5453 = 0.0, $5454 = 0.0, $5455 = 0.0, $5456 = 0.0, $5457 = 0.0, $5458 = 0.0, $5459 = 0.0, $546 = 0.0, $5460 = 0;
 var $5461 = 0.0, $5462 = 0, $5463 = 0.0, $5464 = 0.0, $5465 = 0.0, $5466 = 0, $5467 = 0, $5468 = 0.0, $5469 = 0, $547 = 0.0, $5470 = 0.0, $5471 = 0.0, $5472 = 0.0, $5473 = 0.0, $5474 = 0.0, $5475 = 0.0, $5476 = 0.0, $5477 = 0, $5478 = 0.0, $5479 = 0.0;
 var $548 = 0.0, $5480 = 0.0, $5481 = 0.0, $5482 = 0.0, $5483 = 0.0, $5484 = 0.0, $5485 = 0, $5486 = 0.0, $5487 = 0.0, $5488 = 0, $5489 = 0, $549 = 0.0, $5490 = 0.0, $5491 = 0.0, $5492 = 0, $5493 = 0, $5494 = 0.0, $5495 = 0.0, $5496 = 0, $5497 = 0;
 var $5498 = 0.0, $5499 = 0.0, $55 = 0, $550 = 0.0, $5500 = 0, $5501 = 0, $5502 = 0.0, $5503 = 0.0, $5504 = 0, $5505 = 0, $5506 = 0.0, $5507 = 0.0, $5508 = 0, $5509 = 0, $551 = 0, $5510 = 0.0, $5511 = 0.0, $5512 = 0, $5513 = 0, $5514 = 0.0;
 var $5515 = 0.0, $5516 = 0, $5517 = 0, $5518 = 0.0, $5519 = 0.0, $552 = 0.0, $5520 = 0, $5521 = 0, $5522 = 0.0, $5523 = 0.0, $5524 = 0, $5525 = 0, $5526 = 0.0, $5527 = 0.0, $5528 = 0, $5529 = 0, $553 = 0.0, $5530 = 0.0, $5531 = 0.0, $5532 = 0;
 var $5533 = 0, $5534 = 0, $5535 = 0, $5536 = 0, $5537 = 0.0, $5538 = 0, $5539 = 0, $554 = 0.0, $5540 = 0, $5541 = 0, $5542 = 0, $5543 = 0, $5544 = 0, $5545 = 0, $5546 = 0, $5547 = 0, $5548 = 0, $5549 = 0, $555 = 0.0, $5550 = 0;
 var $5551 = 0, $5552 = 0, $5553 = 0, $5554 = 0, $5555 = 0, $5556 = 0, $5557 = 0, $5558 = 0, $5559 = 0, $556 = 0.0, $5560 = 0, $5561 = 0, $5562 = 0, $5563 = 0, $5564 = 0, $5565 = 0, $5566 = 0, $5567 = 0.0, $5568 = 0, $5569 = 0;
 var $557 = 0.0, $5570 = 0, $5571 = 0, $5572 = 0, $5573 = 0, $5574 = 0, $5575 = 0, $5576 = 0, $5577 = 0, $5578 = 0, $5579 = 0, $558 = 0.0, $5580 = 0, $5581 = 0, $5582 = 0, $5583 = 0, $5584 = 0, $5585 = 0, $5586 = 0, $5587 = 0;
 var $5588 = 0, $5589 = 0, $559 = 0, $5590 = 0, $5591 = 0, $5592 = 0, $5593 = 0, $5594 = 0, $5595 = 0, $5596 = 0, $5597 = 0.0, $5598 = 0, $5599 = 0, $56 = 0.0, $560 = 0, $5600 = 0, $5601 = 0, $5602 = 0, $5603 = 0, $5604 = 0;
 var $5605 = 0, $5606 = 0, $5607 = 0, $5608 = 0, $5609 = 0, $561 = 0.0, $5610 = 0, $5611 = 0, $5612 = 0, $5613 = 0, $5614 = 0, $5615 = 0, $5616 = 0, $5617 = 0, $5618 = 0, $5619 = 0, $562 = 0, $5620 = 0, $5621 = 0, $5622 = 0;
 var $5623 = 0, $5624 = 0, $5625 = 0, $5626 = 0, $5627 = 0.0, $5628 = 0, $5629 = 0, $563 = 0.0, $5630 = 0, $5631 = 0, $5632 = 0, $5633 = 0, $5634 = 0, $5635 = 0, $5636 = 0, $5637 = 0, $5638 = 0, $5639 = 0, $564 = 0.0, $5640 = 0;
 var $5641 = 0, $5642 = 0, $5643 = 0, $5644 = 0, $5645 = 0, $5646 = 0, $5647 = 0, $5648 = 0, $5649 = 0, $565 = 0, $5650 = 0, $5651 = 0, $5652 = 0, $5653 = 0, $5654 = 0, $5655 = 0, $5656 = 0, $5657 = 0.0, $5658 = 0, $5659 = 0;
 var $566 = 0.0, $5660 = 0, $5661 = 0, $5662 = 0, $5663 = 0, $5664 = 0, $5665 = 0, $5666 = 0, $5667 = 0, $5668 = 0, $5669 = 0, $567 = 0, $5670 = 0, $5671 = 0, $5672 = 0, $5673 = 0, $5674 = 0, $5675 = 0, $5676 = 0, $5677 = 0;
 var $5678 = 0, $5679 = 0, $568 = 0.0, $5680 = 0, $5681 = 0, $5682 = 0, $5683 = 0, $5684 = 0, $5685 = 0, $5686 = 0, $5687 = 0.0, $5688 = 0, $5689 = 0, $569 = 0.0, $5690 = 0, $5691 = 0, $5692 = 0, $5693 = 0, $5694 = 0, $5695 = 0;
 var $5696 = 0, $5697 = 0, $5698 = 0, $5699 = 0, $57 = 0.0, $570 = 0.0, $5700 = 0, $5701 = 0, $5702 = 0, $5703 = 0, $5704 = 0, $5705 = 0, $5706 = 0, $5707 = 0, $5708 = 0, $5709 = 0, $571 = 0, $5710 = 0, $5711 = 0, $5712 = 0;
 var $5713 = 0, $5714 = 0, $5715 = 0, $5716 = 0, $5717 = 0, $5718 = 0, $5719 = 0, $572 = 0, $5720 = 0, $5721 = 0, $5722 = 0, $5723 = 0, $5724 = 0, $5725 = 0, $5726 = 0, $5727 = 0, $5728 = 0, $5729 = 0, $573 = 0.0, $5730 = 0;
 var $5731 = 0, $5732 = 0, $5733 = 0, $5734 = 0.0, $5735 = 0, $5736 = 0, $5737 = 0, $5738 = 0, $5739 = 0.0, $574 = 0, $5740 = 0.0, $5741 = 0.0, $5742 = 0.0, $5743 = 0.0, $5744 = 0, $5745 = 0, $5746 = 0.0, $5747 = 0.0, $5748 = 0, $5749 = 0.0;
 var $575 = 0.0, $5750 = 0.0, $5751 = 0, $5752 = 0.0, $5753 = 0.0, $5754 = 0, $5755 = 0.0, $5756 = 0.0, $5757 = 0.0, $5758 = 0.0, $5759 = 0, $576 = 0.0, $5760 = 0, $5761 = 0.0, $5762 = 0.0, $5763 = 0.0, $5764 = 0.0, $5765 = 0.0, $5766 = 0, $5767 = 0.0;
 var $5768 = 0.0, $5769 = 0, $577 = 0, $5770 = 0.0, $5771 = 0.0, $5772 = 0, $5773 = 0.0, $5774 = 0.0, $5775 = 0, $5776 = 0.0, $5777 = 0.0, $5778 = 0.0, $5779 = 0.0, $578 = 0.0, $5780 = 0.0, $5781 = 0.0, $5782 = 0.0, $5783 = 0, $5784 = 0, $5785 = 0.0;
 var $5786 = 0.0, $5787 = 0.0, $5788 = 0.0, $5789 = 0, $579 = 0, $5790 = 0.0, $5791 = 0.0, $5792 = 0, $5793 = 0.0, $5794 = 0.0, $5795 = 0, $5796 = 0.0, $5797 = 0.0, $5798 = 0, $5799 = 0.0, $58 = 0.0, $580 = 0.0, $5800 = 0.0, $5801 = 0.0, $5802 = 0.0;
 var $5803 = 0.0, $5804 = 0.0, $5805 = 0.0, $5806 = 0.0, $5807 = 0.0, $5808 = 0, $5809 = 0.0, $581 = 0.0, $5810 = 0.0, $5811 = 0.0, $5812 = 0, $5813 = 0.0, $5814 = 0.0, $5815 = 0, $5816 = 0, $5817 = 0, $5818 = 0, $5819 = 0, $582 = 0.0, $5820 = 0;
 var $5821 = 0, $5822 = 0, $5823 = 0, $5824 = 0, $5825 = 0, $5826 = 0, $5827 = 0, $5828 = 0, $5829 = 0, $583 = 0, $5830 = 0, $5831 = 0, $5832 = 0, $5833 = 0, $5834 = 0, $5835 = 0, $5836 = 0.0, $5837 = 0, $5838 = 0, $5839 = 0.0;
 var $584 = 0, $5840 = 0.0, $5841 = 0.0, $5842 = 0, $5843 = 0, $5844 = 0, $5845 = 0.0, $5846 = 0, $5847 = 0, $5848 = 0.0, $5849 = 0.0, $585 = 0.0, $5850 = 0.0, $5851 = 0, $5852 = 0, $5853 = 0, $5854 = 0, $5855 = 0, $5856 = 0, $5857 = 0;
 var $5858 = 0, $5859 = 0, $586 = 0, $5860 = 0, $5861 = 0, $5862 = 0.0, $5863 = 0, $5864 = 0, $5865 = 0, $5866 = 0.0, $5867 = 0, $5868 = 0, $5869 = 0, $587 = 0.0, $5870 = 0.0, $5871 = 0, $5872 = 0, $5873 = 0.0, $5874 = 0.0, $5875 = 0;
 var $5876 = 0.0, $5877 = 0.0, $5878 = 0, $5879 = 0.0, $588 = 0.0, $5880 = 0, $5881 = 0.0, $5882 = 0.0, $5883 = 0, $5884 = 0.0, $5885 = 0, $5886 = 0.0, $5887 = 0.0, $5888 = 0, $5889 = 0.0, $589 = 0, $5890 = 0.0, $5891 = 0, $5892 = 0.0, $5893 = 0.0;
 var $5894 = 0, $5895 = 0.0, $5896 = 0.0, $5897 = 0, $5898 = 0.0, $5899 = 0, $59 = 0.0, $590 = 0.0, $5900 = 0.0, $5901 = 0.0, $5902 = 0, $5903 = 0.0, $5904 = 0.0, $5905 = 0.0, $5906 = 0, $5907 = 0.0, $5908 = 0.0, $5909 = 0.0, $591 = 0, $5910 = 0.0;
 var $5911 = 0.0, $5912 = 0, $5913 = 0.0, $5914 = 0, $5915 = 0.0, $5916 = 0.0, $5917 = 0.0, $5918 = 0.0, $5919 = 0, $592 = 0.0, $5920 = 0.0, $5921 = 0.0, $5922 = 0.0, $5923 = 0.0, $5924 = 0, $5925 = 0.0, $5926 = 0.0, $5927 = 0, $5928 = 0, $5929 = 0.0;
 var $593 = 0.0, $5930 = 0, $5931 = 0.0, $5932 = 0.0, $5933 = 0.0, $5934 = 0.0, $5935 = 0, $5936 = 0.0, $5937 = 0, $5938 = 0.0, $5939 = 0.0, $594 = 0.0, $5940 = 0.0, $5941 = 0, $5942 = 0, $5943 = 0.0, $5944 = 0, $5945 = 0.0, $5946 = 0.0, $5947 = 0.0;
 var $5948 = 0.0, $5949 = 0, $595 = 0, $5950 = 0.0, $5951 = 0, $5952 = 0.0, $5953 = 0.0, $5954 = 0.0, $5955 = 0, $5956 = 0.0, $5957 = 0, $5958 = 0.0, $5959 = 0.0, $596 = 0, $5960 = 0.0, $5961 = 0.0, $5962 = 0.0, $5963 = 0.0, $5964 = 0, $5965 = 0;
 var $5966 = 0.0, $5967 = 0.0, $5968 = 0.0, $5969 = 0, $597 = 0.0, $5970 = 0.0, $5971 = 0.0, $5972 = 0.0, $5973 = 0.0, $5974 = 0, $5975 = 0.0, $5976 = 0.0, $5977 = 0, $5978 = 0, $5979 = 0.0, $598 = 0.0, $5980 = 0.0, $5981 = 0.0, $5982 = 0.0, $5983 = 0.0;
 var $5984 = 0, $5985 = 0.0, $5986 = 0.0, $5987 = 0.0, $5988 = 0.0, $5989 = 0.0, $599 = 0.0, $5990 = 0, $5991 = 0.0, $5992 = 0.0, $5993 = 0.0, $5994 = 0.0, $5995 = 0.0, $5996 = 0.0, $5997 = 0, $5998 = 0.0, $5999 = 0.0, $6 = 0, $60 = 0.0, $600 = 0.0;
 var $6000 = 0, $6001 = 0, $6002 = 0.0, $6003 = 0.0, $6004 = 0.0, $6005 = 0.0, $6006 = 0.0, $6007 = 0.0, $6008 = 0.0, $6009 = 0.0, $601 = 0.0, $6010 = 0, $6011 = 0.0, $6012 = 0.0, $6013 = 0, $6014 = 0.0, $6015 = 0, $6016 = 0.0, $6017 = 0.0, $6018 = 0.0;
 var $6019 = 0.0, $602 = 0.0, $6020 = 0.0, $6021 = 0.0, $6022 = 0.0, $6023 = 0.0, $6024 = 0.0, $6025 = 0.0, $6026 = 0, $6027 = 0.0, $6028 = 0.0, $6029 = 0.0, $603 = 0, $6030 = 0.0, $6031 = 0.0, $6032 = 0.0, $6033 = 0, $6034 = 0.0, $6035 = 0.0, $6036 = 0.0;
 var $6037 = 0.0, $6038 = 0, $6039 = 0.0, $604 = 0.0, $6040 = 0, $6041 = 0.0, $6042 = 0.0, $6043 = 0.0, $6044 = 0, $6045 = 0, $6046 = 0.0, $6047 = 0.0, $6048 = 0.0, $6049 = 0, $605 = 0.0, $6050 = 0.0, $6051 = 0, $6052 = 0.0, $6053 = 0.0, $6054 = 0.0;
 var $6055 = 0.0, $6056 = 0.0, $6057 = 0.0, $6058 = 0.0, $6059 = 0.0, $606 = 0.0, $6060 = 0.0, $6061 = 0.0, $6062 = 0.0, $6063 = 0, $6064 = 0.0, $6065 = 0.0, $6066 = 0, $6067 = 0, $6068 = 0.0, $6069 = 0.0, $607 = 0.0, $6070 = 0, $6071 = 0, $6072 = 0.0;
 var $6073 = 0.0, $6074 = 0, $6075 = 0, $6076 = 0.0, $6077 = 0.0, $6078 = 0, $6079 = 0, $608 = 0.0, $6080 = 0.0, $6081 = 0.0, $6082 = 0, $6083 = 0, $6084 = 0.0, $6085 = 0.0, $6086 = 0, $6087 = 0, $6088 = 0.0, $6089 = 0.0, $609 = 0.0, $6090 = 0;
 var $6091 = 0, $6092 = 0.0, $6093 = 0.0, $6094 = 0, $6095 = 0, $6096 = 0.0, $6097 = 0.0, $6098 = 0, $6099 = 0, $61 = 0.0, $610 = 0.0, $6100 = 0.0, $6101 = 0.0, $6102 = 0, $6103 = 0, $6104 = 0.0, $6105 = 0.0, $6106 = 0, $6107 = 0, $6108 = 0.0;
 var $6109 = 0.0, $611 = 0.0, $6110 = 0, $6111 = 0, $6112 = 0, $6113 = 0, $6114 = 0, $6115 = 0.0, $6116 = 0, $6117 = 0, $6118 = 0, $6119 = 0, $612 = 0, $6120 = 0, $6121 = 0, $6122 = 0, $6123 = 0, $6124 = 0, $6125 = 0, $6126 = 0;
 var $6127 = 0, $6128 = 0, $6129 = 0, $613 = 0, $6130 = 0, $6131 = 0, $6132 = 0, $6133 = 0, $6134 = 0, $6135 = 0, $6136 = 0, $6137 = 0, $6138 = 0, $6139 = 0, $614 = 0.0, $6140 = 0, $6141 = 0, $6142 = 0, $6143 = 0, $6144 = 0;
 var $6145 = 0.0, $6146 = 0, $6147 = 0, $6148 = 0, $6149 = 0, $615 = 0.0, $6150 = 0, $6151 = 0, $6152 = 0, $6153 = 0, $6154 = 0, $6155 = 0, $6156 = 0, $6157 = 0, $6158 = 0, $6159 = 0, $616 = 0.0, $6160 = 0, $6161 = 0, $6162 = 0;
 var $6163 = 0, $6164 = 0, $6165 = 0, $6166 = 0, $6167 = 0, $6168 = 0, $6169 = 0, $617 = 0.0, $6170 = 0, $6171 = 0, $6172 = 0, $6173 = 0, $6174 = 0, $6175 = 0.0, $6176 = 0, $6177 = 0, $6178 = 0, $6179 = 0, $618 = 0.0, $6180 = 0;
 var $6181 = 0, $6182 = 0, $6183 = 0, $6184 = 0, $6185 = 0, $6186 = 0, $6187 = 0, $6188 = 0, $6189 = 0, $619 = 0.0, $6190 = 0, $6191 = 0, $6192 = 0, $6193 = 0, $6194 = 0, $6195 = 0, $6196 = 0, $6197 = 0, $6198 = 0, $6199 = 0;
 var $62 = 0.0, $620 = 0, $6200 = 0, $6201 = 0, $6202 = 0, $6203 = 0, $6204 = 0, $6205 = 0.0, $6206 = 0, $6207 = 0, $6208 = 0, $6209 = 0, $621 = 0.0, $6210 = 0, $6211 = 0, $6212 = 0, $6213 = 0, $6214 = 0, $6215 = 0, $6216 = 0;
 var $6217 = 0, $6218 = 0, $6219 = 0, $622 = 0.0, $6220 = 0, $6221 = 0, $6222 = 0, $6223 = 0, $6224 = 0, $6225 = 0, $6226 = 0, $6227 = 0, $6228 = 0, $6229 = 0, $623 = 0.0, $6230 = 0, $6231 = 0, $6232 = 0, $6233 = 0, $6234 = 0;
 var $6235 = 0.0, $6236 = 0, $6237 = 0, $6238 = 0, $6239 = 0, $624 = 0.0, $6240 = 0, $6241 = 0, $6242 = 0, $6243 = 0, $6244 = 0, $6245 = 0, $6246 = 0, $6247 = 0, $6248 = 0, $6249 = 0, $625 = 0.0, $6250 = 0, $6251 = 0, $6252 = 0;
 var $6253 = 0, $6254 = 0, $6255 = 0, $6256 = 0, $6257 = 0, $6258 = 0, $6259 = 0, $626 = 0.0, $6260 = 0, $6261 = 0, $6262 = 0, $6263 = 0, $6264 = 0, $6265 = 0.0, $6266 = 0, $6267 = 0, $6268 = 0, $6269 = 0, $627 = 0.0, $6270 = 0;
 var $6271 = 0, $6272 = 0, $6273 = 0, $6274 = 0, $6275 = 0, $6276 = 0, $6277 = 0, $6278 = 0, $6279 = 0, $628 = 0.0, $6280 = 0, $6281 = 0, $6282 = 0, $6283 = 0, $6284 = 0, $6285 = 0, $6286 = 0, $6287 = 0, $6288 = 0, $6289 = 0;
 var $629 = 0, $6290 = 0, $6291 = 0, $6292 = 0, $6293 = 0, $6294 = 0, $6295 = 0, $6296 = 0, $6297 = 0, $6298 = 0, $6299 = 0, $63 = 0, $630 = 0, $6300 = 0, $6301 = 0, $6302 = 0, $6303 = 0, $6304 = 0, $6305 = 0, $6306 = 0;
 var $6307 = 0, $6308 = 0, $6309 = 0, $631 = 0.0, $6310 = 0, $6311 = 0, $6312 = 0.0, $6313 = 0.0, $6314 = 0, $6315 = 0.0, $6316 = 0, $6317 = 0, $6318 = 0, $6319 = 0, $632 = 0.0, $6320 = 0.0, $6321 = 0.0, $6322 = 0, $6323 = 0, $6324 = 0;
 var $6325 = 0.0, $6326 = 0.0, $6327 = 0.0, $6328 = 0.0, $6329 = 0.0, $633 = 0.0, $6330 = 0.0, $6331 = 0.0, $6332 = 0.0, $6333 = 0.0, $6334 = 0.0, $6335 = 0, $6336 = 0.0, $6337 = 0.0, $6338 = 0.0, $6339 = 0, $634 = 0, $6340 = 0.0, $6341 = 0.0, $6342 = 0;
 var $6343 = 0, $6344 = 0, $6345 = 0, $6346 = 0, $6347 = 0, $6348 = 0, $6349 = 0, $635 = 0.0, $6350 = 0, $6351 = 0, $6352 = 0, $6353 = 0, $6354 = 0, $6355 = 0, $6356 = 0, $6357 = 0, $6358 = 0, $6359 = 0, $636 = 0.0, $6360 = 0;
 var $6361 = 0, $6362 = 0, $6363 = 0.0, $6364 = 0, $6365 = 0, $6366 = 0.0, $6367 = 0.0, $6368 = 0.0, $6369 = 0, $637 = 0.0, $6370 = 0, $6371 = 0, $6372 = 0.0, $6373 = 0, $6374 = 0, $6375 = 0.0, $6376 = 0.0, $6377 = 0.0, $6378 = 0, $6379 = 0;
 var $638 = 0.0, $6380 = 0, $6381 = 0, $6382 = 0, $6383 = 0, $6384 = 0, $6385 = 0, $6386 = 0, $6387 = 0, $6388 = 0, $6389 = 0.0, $639 = 0.0, $6390 = 0, $6391 = 0, $6392 = 0, $6393 = 0.0, $6394 = 0, $6395 = 0, $6396 = 0, $6397 = 0.0;
 var $6398 = 0, $6399 = 0, $64 = 0.0, $640 = 0.0, $6400 = 0.0, $6401 = 0.0, $6402 = 0, $6403 = 0.0, $6404 = 0.0, $6405 = 0, $6406 = 0.0, $6407 = 0, $6408 = 0.0, $6409 = 0.0, $641 = 0.0, $6410 = 0, $6411 = 0.0, $6412 = 0, $6413 = 0.0, $6414 = 0.0;
 var $6415 = 0, $6416 = 0.0, $6417 = 0.0, $6418 = 0, $6419 = 0.0, $642 = 0.0, $6420 = 0.0, $6421 = 0, $6422 = 0.0, $6423 = 0.0, $6424 = 0, $6425 = 0.0, $6426 = 0, $6427 = 0.0, $6428 = 0.0, $6429 = 0, $643 = 0.0, $6430 = 0.0, $6431 = 0.0, $6432 = 0.0;
 var $6433 = 0, $6434 = 0.0, $6435 = 0.0, $6436 = 0.0, $6437 = 0.0, $6438 = 0.0, $6439 = 0, $644 = 0.0, $6440 = 0.0, $6441 = 0.0, $6442 = 0.0, $6443 = 0, $6444 = 0.0, $6445 = 0.0, $6446 = 0, $6447 = 0.0, $6448 = 0.0, $6449 = 0.0, $645 = 0.0, $6450 = 0.0;
 var $6451 = 0, $6452 = 0.0, $6453 = 0.0, $6454 = 0, $6455 = 0, $6456 = 0.0, $6457 = 0, $6458 = 0.0, $6459 = 0.0, $646 = 0, $6460 = 0.0, $6461 = 0.0, $6462 = 0, $6463 = 0.0, $6464 = 0, $6465 = 0.0, $6466 = 0.0, $6467 = 0.0, $6468 = 0, $6469 = 0;
 var $647 = 0, $6470 = 0.0, $6471 = 0, $6472 = 0.0, $6473 = 0.0, $6474 = 0.0, $6475 = 0.0, $6476 = 0, $6477 = 0.0, $6478 = 0, $6479 = 0.0, $648 = 0.0, $6480 = 0.0, $6481 = 0.0, $6482 = 0, $6483 = 0.0, $6484 = 0.0, $6485 = 0.0, $6486 = 0.0, $6487 = 0.0;
 var $6488 = 0, $6489 = 0.0, $649 = 0.0, $6490 = 0.0, $6491 = 0, $6492 = 0, $6493 = 0.0, $6494 = 0.0, $6495 = 0.0, $6496 = 0, $6497 = 0.0, $6498 = 0.0, $6499 = 0, $65 = 0.0, $650 = 0.0, $6500 = 0.0, $6501 = 0.0, $6502 = 0.0, $6503 = 0.0, $6504 = 0;
 var $6505 = 0.0, $6506 = 0, $6507 = 0.0, $6508 = 0.0, $6509 = 0.0, $651 = 0, $6510 = 0.0, $6511 = 0, $6512 = 0.0, $6513 = 0.0, $6514 = 0.0, $6515 = 0.0, $6516 = 0.0, $6517 = 0, $6518 = 0.0, $6519 = 0.0, $652 = 0, $6520 = 0.0, $6521 = 0.0, $6522 = 0.0;
 var $6523 = 0.0, $6524 = 0, $6525 = 0.0, $6526 = 0.0, $6527 = 0, $6528 = 0, $6529 = 0.0, $653 = 0.0, $6530 = 0.0, $6531 = 0.0, $6532 = 0, $6533 = 0.0, $6534 = 0.0, $6535 = 0.0, $6536 = 0.0, $6537 = 0.0, $6538 = 0.0, $6539 = 0.0, $654 = 0.0, $6540 = 0;
 var $6541 = 0.0, $6542 = 0.0, $6543 = 0.0, $6544 = 0.0, $6545 = 0.0, $6546 = 0.0, $6547 = 0, $6548 = 0.0, $6549 = 0.0, $655 = 0.0, $6550 = 0.0, $6551 = 0.0, $6552 = 0.0, $6553 = 0, $6554 = 0.0, $6555 = 0, $6556 = 0.0, $6557 = 0.0, $6558 = 0.0, $6559 = 0.0;
 var $656 = 0.0, $6560 = 0.0, $6561 = 0.0, $6562 = 0.0, $6563 = 0.0, $6564 = 0.0, $6565 = 0, $6566 = 0.0, $6567 = 0, $6568 = 0.0, $6569 = 0.0, $657 = 0.0, $6570 = 0.0, $6571 = 0, $6572 = 0, $6573 = 0.0, $6574 = 0, $6575 = 0.0, $6576 = 0.0, $6577 = 0.0;
 var $6578 = 0.0, $6579 = 0.0, $658 = 0, $6580 = 0, $6581 = 0.0, $6582 = 0.0, $6583 = 0.0, $6584 = 0.0, $6585 = 0.0, $6586 = 0.0, $6587 = 0.0, $6588 = 0.0, $6589 = 0.0, $659 = 0.0, $6590 = 0, $6591 = 0.0, $6592 = 0.0, $6593 = 0, $6594 = 0, $6595 = 0.0;
 var $6596 = 0.0, $6597 = 0, $6598 = 0, $6599 = 0.0, $66 = 0.0, $660 = 0.0, $6600 = 0.0, $6601 = 0, $6602 = 0, $6603 = 0.0, $6604 = 0.0, $6605 = 0, $6606 = 0, $6607 = 0.0, $6608 = 0.0, $6609 = 0, $661 = 0, $6610 = 0, $6611 = 0.0, $6612 = 0.0;
 var $6613 = 0, $6614 = 0, $6615 = 0.0, $6616 = 0.0, $6617 = 0, $6618 = 0, $6619 = 0.0, $662 = 0, $6620 = 0.0, $6621 = 0, $6622 = 0, $6623 = 0.0, $6624 = 0.0, $6625 = 0, $6626 = 0, $6627 = 0.0, $6628 = 0.0, $6629 = 0, $663 = 0.0, $6630 = 0;
 var $6631 = 0.0, $6632 = 0.0, $6633 = 0, $6634 = 0, $6635 = 0.0, $6636 = 0.0, $6637 = 0, $6638 = 0, $6639 = 0, $664 = 0, $6640 = 0, $6641 = 0, $6642 = 0.0, $6643 = 0, $6644 = 0, $6645 = 0, $6646 = 0, $6647 = 0, $6648 = 0, $6649 = 0;
 var $665 = 0, $6650 = 0, $6651 = 0, $6652 = 0, $6653 = 0, $6654 = 0, $6655 = 0, $6656 = 0, $6657 = 0, $6658 = 0, $6659 = 0, $666 = 0.0, $6660 = 0, $6661 = 0, $6662 = 0, $6663 = 0, $6664 = 0, $6665 = 0, $6666 = 0, $6667 = 0;
 var $6668 = 0, $6669 = 0, $667 = 0, $6670 = 0, $6671 = 0, $6672 = 0.0, $6673 = 0, $6674 = 0, $6675 = 0, $6676 = 0, $6677 = 0, $6678 = 0, $6679 = 0, $668 = 0, $6680 = 0, $6681 = 0, $6682 = 0, $6683 = 0, $6684 = 0, $6685 = 0;
 var $6686 = 0, $6687 = 0, $6688 = 0, $6689 = 0, $669 = 0.0, $6690 = 0, $6691 = 0, $6692 = 0, $6693 = 0, $6694 = 0, $6695 = 0, $6696 = 0, $6697 = 0, $6698 = 0, $6699 = 0, $67 = 0.0, $670 = 0, $6700 = 0, $6701 = 0, $6702 = 0.0;
 var $6703 = 0, $6704 = 0, $6705 = 0, $6706 = 0, $6707 = 0, $6708 = 0, $6709 = 0, $671 = 0, $6710 = 0, $6711 = 0, $6712 = 0, $6713 = 0, $6714 = 0, $6715 = 0, $6716 = 0, $6717 = 0, $6718 = 0, $6719 = 0, $672 = 0.0, $6720 = 0;
 var $6721 = 0, $6722 = 0, $6723 = 0, $6724 = 0, $6725 = 0, $6726 = 0, $6727 = 0, $6728 = 0, $6729 = 0, $673 = 0, $6730 = 0, $6731 = 0, $6732 = 0.0, $6733 = 0, $6734 = 0, $6735 = 0, $6736 = 0, $6737 = 0, $6738 = 0, $6739 = 0;
 var $674 = 0.0, $6740 = 0, $6741 = 0, $6742 = 0, $6743 = 0, $6744 = 0, $6745 = 0, $6746 = 0, $6747 = 0, $6748 = 0, $6749 = 0, $675 = 0.0, $6750 = 0, $6751 = 0, $6752 = 0, $6753 = 0, $6754 = 0, $6755 = 0, $6756 = 0, $6757 = 0;
 var $6758 = 0, $6759 = 0, $676 = 0, $6760 = 0, $6761 = 0, $6762 = 0.0, $6763 = 0, $6764 = 0, $6765 = 0, $6766 = 0, $6767 = 0, $6768 = 0, $6769 = 0, $677 = 0, $6770 = 0, $6771 = 0, $6772 = 0, $6773 = 0, $6774 = 0, $6775 = 0;
 var $6776 = 0, $6777 = 0, $6778 = 0, $6779 = 0, $678 = 0.0, $6780 = 0, $6781 = 0, $6782 = 0, $6783 = 0, $6784 = 0, $6785 = 0, $6786 = 0, $6787 = 0, $6788 = 0, $6789 = 0, $679 = 0.0, $6790 = 0, $6791 = 0, $6792 = 0.0, $6793 = 0;
 var $6794 = 0, $6795 = 0, $6796 = 0, $6797 = 0, $6798 = 0, $6799 = 0, $68 = 0.0, $680 = 0, $6800 = 0, $6801 = 0, $6802 = 0, $6803 = 0, $6804 = 0, $6805 = 0, $6806 = 0, $6807 = 0, $6808 = 0, $6809 = 0, $681 = 0, $6810 = 0;
 var $6811 = 0, $6812 = 0, $6813 = 0, $6814 = 0, $6815 = 0, $6816 = 0, $6817 = 0, $6818 = 0, $6819 = 0, $682 = 0.0, $6820 = 0, $6821 = 0, $6822 = 0, $6823 = 0, $6824 = 0, $6825 = 0, $6826 = 0, $6827 = 0, $6828 = 0, $6829 = 0;
 var $683 = 0.0, $6830 = 0, $6831 = 0, $6832 = 0, $6833 = 0, $6834 = 0, $6835 = 0, $6836 = 0, $6837 = 0, $6838 = 0, $6839 = 0, $684 = 0, $6840 = 0, $6841 = 0.0, $6842 = 0.0, $6843 = 0, $6844 = 0, $6845 = 0, $6846 = 0, $6847 = 0.0;
 var $6848 = 0, $6849 = 0.0, $685 = 0, $6850 = 0.0, $6851 = 0, $6852 = 0, $6853 = 0, $6854 = 0.0, $6855 = 0.0, $6856 = 0.0, $6857 = 0.0, $6858 = 0.0, $6859 = 0.0, $686 = 0.0, $6860 = 0.0, $6861 = 0.0, $6862 = 0.0, $6863 = 0.0, $6864 = 0, $6865 = 0.0;
 var $6866 = 0.0, $6867 = 0.0, $6868 = 0, $6869 = 0.0, $687 = 0.0, $6870 = 0.0, $6871 = 0, $6872 = 0, $6873 = 0, $6874 = 0, $6875 = 0, $6876 = 0, $6877 = 0, $6878 = 0, $6879 = 0, $688 = 0, $6880 = 0, $6881 = 0, $6882 = 0, $6883 = 0;
 var $6884 = 0, $6885 = 0, $6886 = 0, $6887 = 0, $6888 = 0, $6889 = 0, $689 = 0, $6890 = 0, $6891 = 0, $6892 = 0.0, $6893 = 0, $6894 = 0, $6895 = 0.0, $6896 = 0.0, $6897 = 0.0, $6898 = 0, $6899 = 0, $69 = 0.0, $690 = 0.0, $6900 = 0;
 var $6901 = 0.0, $6902 = 0, $6903 = 0, $6904 = 0.0, $6905 = 0.0, $6906 = 0.0, $6907 = 0, $6908 = 0, $6909 = 0, $691 = 0.0, $6910 = 0, $6911 = 0, $6912 = 0, $6913 = 0, $6914 = 0, $6915 = 0, $6916 = 0, $6917 = 0, $6918 = 0.0, $6919 = 0;
 var $692 = 0, $6920 = 0, $6921 = 0, $6922 = 0.0, $6923 = 0, $6924 = 0, $6925 = 0, $6926 = 0.0, $6927 = 0, $6928 = 0, $6929 = 0.0, $693 = 0, $6930 = 0.0, $6931 = 0, $6932 = 0.0, $6933 = 0.0, $6934 = 0, $6935 = 0.0, $6936 = 0.0, $6937 = 0;
 var $6938 = 0.0, $6939 = 0.0, $694 = 0.0, $6940 = 0.0, $6941 = 0, $6942 = 0.0, $6943 = 0.0, $6944 = 0.0, $6945 = 0, $6946 = 0.0, $6947 = 0.0, $6948 = 0.0, $6949 = 0.0, $695 = 0.0, $6950 = 0, $6951 = 0.0, $6952 = 0, $6953 = 0.0, $6954 = 0.0, $6955 = 0.0;
 var $6956 = 0.0, $6957 = 0.0, $6958 = 0.0, $6959 = 0.0, $696 = 0, $6960 = 0.0, $6961 = 0, $6962 = 0.0, $6963 = 0.0, $6964 = 0, $6965 = 0, $6966 = 0.0, $6967 = 0.0, $6968 = 0.0, $6969 = 0, $697 = 0, $6970 = 0.0, $6971 = 0.0, $6972 = 0.0, $6973 = 0.0;
 var $6974 = 0, $6975 = 0, $6976 = 0.0, $6977 = 0.0, $6978 = 0.0, $6979 = 0.0, $698 = 0, $6980 = 0.0, $6981 = 0.0, $6982 = 0, $6983 = 0, $6984 = 0.0, $6985 = 0.0, $6986 = 0.0, $6987 = 0.0, $6988 = 0, $6989 = 0.0, $699 = 0.0, $6990 = 0.0, $6991 = 0.0;
 var $6992 = 0.0, $6993 = 0, $6994 = 0.0, $6995 = 0, $6996 = 0.0, $6997 = 0.0, $6998 = 0.0, $6999 = 0, $7 = 0, $70 = 0.0, $700 = 0, $7000 = 0, $7001 = 0.0, $7002 = 0.0, $7003 = 0.0, $7004 = 0.0, $7005 = 0.0, $7006 = 0.0, $7007 = 0, $7008 = 0.0;
 var $7009 = 0, $701 = 0.0, $7010 = 0.0, $7011 = 0.0, $7012 = 0.0, $7013 = 0, $7014 = 0.0, $7015 = 0.0, $7016 = 0.0, $7017 = 0.0, $7018 = 0, $7019 = 0, $702 = 0, $7020 = 0.0, $7021 = 0, $7022 = 0.0, $7023 = 0.0, $7024 = 0, $7025 = 0.0, $7026 = 0.0;
 var $7027 = 0.0, $7028 = 0.0, $7029 = 0, $703 = 0, $7030 = 0.0, $7031 = 0.0, $7032 = 0.0, $7033 = 0.0, $7034 = 0.0, $7035 = 0.0, $7036 = 0.0, $7037 = 0, $7038 = 0, $7039 = 0.0, $704 = 0, $7040 = 0, $7041 = 0.0, $7042 = 0.0, $7043 = 0.0, $7044 = 0;
 var $7045 = 0.0, $7046 = 0.0, $7047 = 0.0, $7048 = 0.0, $7049 = 0.0, $705 = 0.0, $7050 = 0.0, $7051 = 0.0, $7052 = 0.0, $7053 = 0.0, $7054 = 0, $7055 = 0.0, $7056 = 0.0, $7057 = 0, $7058 = 0, $7059 = 0.0, $706 = 0.0, $7060 = 0.0, $7061 = 0, $7062 = 0;
 var $7063 = 0.0, $7064 = 0.0, $7065 = 0, $7066 = 0, $7067 = 0.0, $7068 = 0.0, $7069 = 0, $707 = 0.0, $7070 = 0, $7071 = 0.0, $7072 = 0.0, $7073 = 0, $7074 = 0, $7075 = 0.0, $7076 = 0.0, $7077 = 0, $7078 = 0, $7079 = 0.0, $708 = 0.0, $7080 = 0.0;
 var $7081 = 0, $7082 = 0, $7083 = 0.0, $7084 = 0.0, $7085 = 0, $7086 = 0, $7087 = 0.0, $7088 = 0, $7089 = 0.0, $709 = 0.0, $7090 = 0.0, $7091 = 0, $7092 = 0.0, $7093 = 0.0, $7094 = 0, $7095 = 0.0, $7096 = 0, $7097 = 0.0, $7098 = 0.0, $7099 = 0;
 var $71 = 0.0, $710 = 0.0, $7100 = 0.0, $7101 = 0.0, $7102 = 0, $7103 = 0.0, $7104 = 0, $7105 = 0.0, $7106 = 0.0, $7107 = 0, $7108 = 0.0, $7109 = 0, $711 = 0.0, $7110 = 0.0, $7111 = 0.0, $7112 = 0.0, $7113 = 0, $7114 = 0.0, $7115 = 0, $7116 = 0.0;
 var $7117 = 0.0, $7118 = 0.0, $7119 = 0.0, $712 = 0.0, $7120 = 0, $7121 = 0.0, $7122 = 0.0, $7123 = 0.0, $7124 = 0.0, $7125 = 0.0, $7126 = 0.0, $7127 = 0.0, $7128 = 0, $7129 = 0.0, $713 = 0.0, $7130 = 0.0, $7131 = 0.0, $7132 = 0.0, $7133 = 0.0, $7134 = 0.0;
 var $7135 = 0.0, $7136 = 0, $7137 = 0.0, $7138 = 0.0, $7139 = 0.0, $714 = 0.0, $7140 = 0.0, $7141 = 0, $7142 = 0, $7143 = 0.0, $7144 = 0.0, $7145 = 0.0, $7146 = 0, $7147 = 0.0, $7148 = 0.0, $7149 = 0.0, $715 = 0, $7150 = 0.0, $7151 = 0.0, $7152 = 0.0;
 var $7153 = 0.0, $7154 = 0.0, $7155 = 0.0, $7156 = 0.0, $7157 = 0.0, $7158 = 0, $7159 = 0, $716 = 0, $7160 = 0.0, $7161 = 0.0, $7162 = 0.0, $7163 = 0.0, $7164 = 0.0, $7165 = 0.0, $7166 = 0.0, $7167 = 0.0, $7168 = 0.0, $7169 = 0.0, $717 = 0.0, $7170 = 0;
 var $7171 = 0.0, $7172 = 0.0, $7173 = 0.0, $7174 = 0.0, $7175 = 0, $7176 = 0, $7177 = 0.0, $7178 = 0, $7179 = 0.0, $718 = 0.0, $7180 = 0.0, $7181 = 0, $7182 = 0.0, $7183 = 0, $7184 = 0.0, $7185 = 0.0, $7186 = 0.0, $7187 = 0, $7188 = 0, $7189 = 0.0;
 var $719 = 0, $7190 = 0, $7191 = 0.0, $7192 = 0.0, $7193 = 0, $7194 = 0.0, $7195 = 0, $7196 = 0.0, $7197 = 0.0, $7198 = 0.0, $7199 = 0, $72 = 0.0, $720 = 0, $7200 = 0, $7201 = 0.0, $7202 = 0, $7203 = 0.0, $7204 = 0.0, $7205 = 0, $7206 = 0.0;
 var $7207 = 0, $7208 = 0.0, $7209 = 0.0, $721 = 0.0, $7210 = 0.0, $7211 = 0, $7212 = 0.0, $7213 = 0.0, $7214 = 0.0, $7215 = 0, $7216 = 0.0, $7217 = 0.0, $7218 = 0.0, $7219 = 0.0, $722 = 0.0, $7220 = 0.0, $7221 = 0.0, $7222 = 0.0, $7223 = 0, $7224 = 0.0;
 var $7225 = 0.0, $7226 = 0.0, $7227 = 0.0, $7228 = 0, $7229 = 0, $723 = 0, $7230 = 0.0, $7231 = 0.0, $7232 = 0.0, $7233 = 0, $7234 = 0.0, $7235 = 0.0, $7236 = 0.0, $7237 = 0.0, $7238 = 0.0, $7239 = 0.0, $724 = 0.0, $7240 = 0.0, $7241 = 0.0, $7242 = 0.0;
 var $7243 = 0.0, $7244 = 0.0, $7245 = 0, $7246 = 0, $7247 = 0.0, $7248 = 0.0, $7249 = 0.0, $725 = 0, $7250 = 0.0, $7251 = 0.0, $7252 = 0.0, $7253 = 0.0, $7254 = 0.0, $7255 = 0.0, $7256 = 0.0, $7257 = 0, $7258 = 0.0, $7259 = 0.0, $726 = 0.0, $7260 = 0.0;
 var $7261 = 0.0, $7262 = 0, $7263 = 0, $7264 = 0.0, $7265 = 0, $7266 = 0.0, $7267 = 0.0, $7268 = 0, $7269 = 0.0, $727 = 0.0, $7270 = 0.0, $7271 = 0, $7272 = 0, $7273 = 0.0, $7274 = 0.0, $7275 = 0, $7276 = 0, $7277 = 0.0, $7278 = 0, $7279 = 0.0;
 var $728 = 0.0, $7280 = 0.0, $7281 = 0, $7282 = 0.0, $7283 = 0.0, $7284 = 0, $7285 = 0.0, $7286 = 0, $7287 = 0.0, $7288 = 0.0, $7289 = 0, $729 = 0, $7290 = 0.0, $7291 = 0.0, $7292 = 0, $7293 = 0.0, $7294 = 0, $7295 = 0.0, $7296 = 0.0, $7297 = 0;
 var $7298 = 0.0, $7299 = 0, $73 = 0.0, $730 = 0.0, $7300 = 0.0, $7301 = 0.0, $7302 = 0.0, $7303 = 0, $7304 = 0.0, $7305 = 0, $7306 = 0.0, $7307 = 0.0, $7308 = 0.0, $7309 = 0.0, $731 = 0.0, $7310 = 0, $7311 = 0.0, $7312 = 0.0, $7313 = 0.0, $7314 = 0.0;
 var $7315 = 0, $7316 = 0.0, $7317 = 0.0, $7318 = 0.0, $7319 = 0.0, $732 = 0, $7320 = 0.0, $7321 = 0.0, $7322 = 0.0, $7323 = 0.0, $7324 = 0.0, $7325 = 0.0, $7326 = 0, $7327 = 0.0, $7328 = 0.0, $7329 = 0.0, $733 = 0.0, $7330 = 0.0, $7331 = 0, $7332 = 0;
 var $7333 = 0.0, $7334 = 0.0, $7335 = 0.0, $7336 = 0.0, $7337 = 0.0, $7338 = 0.0, $7339 = 0.0, $734 = 0, $7340 = 0.0, $7341 = 0.0, $7342 = 0.0, $7343 = 0, $7344 = 0.0, $7345 = 0.0, $7346 = 0.0, $7347 = 0.0, $7348 = 0, $7349 = 0, $735 = 0, $7350 = 0.0;
 var $7351 = 0.0, $7352 = 0.0, $7353 = 0.0, $7354 = 0.0, $7355 = 0.0, $7356 = 0, $7357 = 0.0, $7358 = 0.0, $7359 = 0.0, $736 = 0.0, $7360 = 0.0, $7361 = 0.0, $7362 = 0.0, $7363 = 0.0, $7364 = 0.0, $7365 = 0, $7366 = 0, $7367 = 0.0, $7368 = 0, $7369 = 0.0;
 var $737 = 0.0, $7370 = 0.0, $7371 = 0, $7372 = 0.0, $7373 = 0, $7374 = 0.0, $7375 = 0.0, $7376 = 0.0, $7377 = 0, $7378 = 0, $7379 = 0.0, $738 = 0, $7380 = 0, $7381 = 0.0, $7382 = 0.0, $7383 = 0, $7384 = 0.0, $7385 = 0, $7386 = 0.0, $7387 = 0.0;
 var $7388 = 0.0, $7389 = 0, $739 = 0.0, $7390 = 0, $7391 = 0.0, $7392 = 0, $7393 = 0.0, $7394 = 0.0, $7395 = 0, $7396 = 0.0, $7397 = 0, $7398 = 0.0, $7399 = 0.0, $74 = 0, $740 = 0, $7400 = 0.0, $7401 = 0, $7402 = 0, $7403 = 0.0, $7404 = 0.0;
 var $7405 = 0.0, $7406 = 0.0, $7407 = 0.0, $7408 = 0.0, $7409 = 0.0, $741 = 0, $7410 = 0.0, $7411 = 0.0, $7412 = 0.0, $7413 = 0, $7414 = 0.0, $7415 = 0.0, $7416 = 0.0, $7417 = 0.0, $7418 = 0, $7419 = 0, $742 = 0.0, $7420 = 0.0, $7421 = 0.0, $7422 = 0.0;
 var $7423 = 0.0, $7424 = 0.0, $7425 = 0.0, $7426 = 0.0, $7427 = 0.0, $7428 = 0.0, $7429 = 0.0, $743 = 0.0, $7430 = 0, $7431 = 0.0, $7432 = 0.0, $7433 = 0.0, $7434 = 0.0, $7435 = 0, $7436 = 0, $7437 = 0.0, $7438 = 0.0, $7439 = 0.0, $744 = 0, $7440 = 0.0;
 var $7441 = 0.0, $7442 = 0.0, $7443 = 0, $7444 = 0.0, $7445 = 0.0, $7446 = 0.0, $7447 = 0.0, $7448 = 0.0, $7449 = 0.0, $745 = 0, $7450 = 0.0, $7451 = 0.0, $7452 = 0, $7453 = 0, $7454 = 0.0, $7455 = 0.0, $7456 = 0.0, $7457 = 0, $7458 = 0, $7459 = 0.0;
 var $746 = 0, $7460 = 0, $7461 = 0.0, $7462 = 0.0, $7463 = 0, $7464 = 0.0, $7465 = 0.0, $7466 = 0, $7467 = 0.0, $7468 = 0, $7469 = 0.0, $747 = 0, $7470 = 0.0, $7471 = 0, $7472 = 0.0, $7473 = 0.0, $7474 = 0, $7475 = 0.0, $7476 = 0, $7477 = 0.0;
 var $7478 = 0.0, $7479 = 0, $748 = 0, $7480 = 0.0, $7481 = 0, $7482 = 0.0, $7483 = 0.0, $7484 = 0.0, $7485 = 0, $7486 = 0.0, $7487 = 0, $7488 = 0.0, $7489 = 0.0, $749 = 0, $7490 = 0.0, $7491 = 0.0, $7492 = 0, $7493 = 0.0, $7494 = 0.0, $7495 = 0.0;
 var $7496 = 0.0, $7497 = 0, $7498 = 0.0, $7499 = 0.0, $75 = 0.0, $750 = 0, $7500 = 0.0, $7501 = 0.0, $7502 = 0.0, $7503 = 0.0, $7504 = 0, $7505 = 0.0, $7506 = 0.0, $7507 = 0.0, $7508 = 0.0, $7509 = 0.0, $751 = 0, $7510 = 0.0, $7511 = 0.0, $7512 = 0.0;
 var $7513 = 0, $7514 = 0, $7515 = 0.0, $7516 = 0.0, $7517 = 0.0, $7518 = 0.0, $7519 = 0.0, $752 = 0, $7520 = 0.0, $7521 = 0, $7522 = 0.0, $7523 = 0.0, $7524 = 0.0, $7525 = 0.0, $7526 = 0.0, $7527 = 0.0, $7528 = 0.0, $7529 = 0.0, $753 = 0, $7530 = 0;
 var $7531 = 0.0, $7532 = 0.0, $7533 = 0.0, $7534 = 0, $7535 = 0.0, $7536 = 0.0, $7537 = 0.0, $7538 = 0.0, $7539 = 0.0, $754 = 0, $7540 = 0.0, $7541 = 0.0, $7542 = 0, $7543 = 0.0, $7544 = 0.0, $7545 = 0.0, $7546 = 0.0, $7547 = 0, $7548 = 0, $7549 = 0.0;
 var $755 = 0, $7550 = 0, $7551 = 0.0, $7552 = 0.0, $7553 = 0, $7554 = 0.0, $7555 = 0, $7556 = 0.0, $7557 = 0.0, $7558 = 0.0, $7559 = 0, $756 = 0, $7560 = 0, $7561 = 0.0, $7562 = 0, $7563 = 0.0, $7564 = 0.0, $7565 = 0, $7566 = 0.0, $7567 = 0;
 var $7568 = 0.0, $7569 = 0.0, $757 = 0, $7570 = 0.0, $7571 = 0, $7572 = 0, $7573 = 0.0, $7574 = 0, $7575 = 0.0, $7576 = 0.0, $7577 = 0, $7578 = 0.0, $7579 = 0, $758 = 0, $7580 = 0.0, $7581 = 0.0, $7582 = 0.0, $7583 = 0, $7584 = 0, $7585 = 0.0;
 var $7586 = 0.0, $7587 = 0.0, $7588 = 0.0, $7589 = 0.0, $759 = 0, $7590 = 0.0, $7591 = 0, $7592 = 0.0, $7593 = 0.0, $7594 = 0.0, $7595 = 0.0, $7596 = 0.0, $7597 = 0.0, $7598 = 0.0, $7599 = 0.0, $76 = 0.0, $760 = 0, $7600 = 0, $7601 = 0, $7602 = 0.0;
 var $7603 = 0.0, $7604 = 0.0, $7605 = 0.0, $7606 = 0.0, $7607 = 0.0, $7608 = 0, $7609 = 0.0, $761 = 0, $7610 = 0.0, $7611 = 0.0, $7612 = 0.0, $7613 = 0.0, $7614 = 0.0, $7615 = 0.0, $7616 = 0.0, $7617 = 0, $7618 = 0.0, $7619 = 0.0, $762 = 0, $7620 = 0.0;
 var $7621 = 0, $7622 = 0.0, $7623 = 0.0, $7624 = 0.0, $7625 = 0.0, $7626 = 0.0, $7627 = 0.0, $7628 = 0.0, $7629 = 0, $763 = 0, $7630 = 0.0, $7631 = 0.0, $7632 = 0.0, $7633 = 0.0, $7634 = 0, $7635 = 0, $7636 = 0.0, $7637 = 0, $7638 = 0.0, $7639 = 0;
 var $764 = 0, $7640 = 0.0, $7641 = 0.0, $7642 = 0, $7643 = 0, $7644 = 0.0, $7645 = 0.0, $7646 = 0, $7647 = 0, $7648 = 0.0, $7649 = 0, $765 = 0, $7650 = 0.0, $7651 = 0.0, $7652 = 0, $7653 = 0.0, $7654 = 0, $7655 = 0.0, $7656 = 0.0, $7657 = 0.0;
 var $7658 = 0, $7659 = 0.0, $766 = 0.0, $7660 = 0.0, $7661 = 0, $7662 = 0.0, $7663 = 0.0, $7664 = 0, $7665 = 0.0, $7666 = 0, $7667 = 0.0, $7668 = 0.0, $7669 = 0.0, $767 = 0, $7670 = 0, $7671 = 0.0, $7672 = 0.0, $7673 = 0.0, $7674 = 0.0, $7675 = 0.0;
 var $7676 = 0, $7677 = 0.0, $7678 = 0.0, $7679 = 0, $768 = 0, $7680 = 0, $7681 = 0.0, $7682 = 0, $7683 = 0, $7684 = 0.0, $7685 = 0, $7686 = 0, $7687 = 0.0, $7688 = 0, $7689 = 0, $769 = 0.0, $7690 = 0.0, $7691 = 0, $7692 = 0.0, $7693 = 0;
 var $7694 = 0.0, $7695 = 0, $7696 = 0.0, $7697 = 0, $7698 = 0.0, $7699 = 0, $77 = 0.0, $770 = 0.0, $7700 = 0.0, $7701 = 0.0, $7702 = 0, $7703 = 0, $7704 = 0.0, $7705 = 0.0, $7706 = 0, $7707 = 0, $7708 = 0.0, $7709 = 0.0, $771 = 0.0, $7710 = 0;
 var $7711 = 0, $7712 = 0.0, $7713 = 0.0, $7714 = 0, $7715 = 0, $7716 = 0.0, $7717 = 0.0, $7718 = 0, $7719 = 0, $772 = 0, $7720 = 0.0, $7721 = 0.0, $7722 = 0, $7723 = 0, $7724 = 0.0, $7725 = 0.0, $7726 = 0, $7727 = 0, $7728 = 0.0, $7729 = 0.0;
 var $773 = 0, $7730 = 0, $7731 = 0, $7732 = 0.0, $7733 = 0.0, $7734 = 0, $7735 = 0, $7736 = 0.0, $7737 = 0.0, $7738 = 0, $7739 = 0, $774 = 0, $7740 = 0, $7741 = 0.0, $7742 = 0.0, $7743 = 0, $7744 = 0.0, $7745 = 0, $7746 = 0.0, $7747 = 0.0;
 var $7748 = 0, $7749 = 0.0, $775 = 0.0, $7750 = 0.0, $7751 = 0.0, $7752 = 0.0, $7753 = 0.0, $7754 = 0.0, $7755 = 0, $7756 = 0, $7757 = 0.0, $7758 = 0.0, $7759 = 0.0, $776 = 0, $7760 = 0.0, $7761 = 0, $7762 = 0.0, $7763 = 0.0, $7764 = 0, $7765 = 0.0;
 var $7766 = 0.0, $7767 = 0.0, $7768 = 0.0, $7769 = 0, $777 = 0, $7770 = 0, $7771 = 0.0, $7772 = 0, $7773 = 0.0, $7774 = 0.0, $7775 = 0, $7776 = 0.0, $7777 = 0.0, $7778 = 0.0, $7779 = 0.0, $778 = 0.0, $7780 = 0.0, $7781 = 0.0, $7782 = 0, $7783 = 0.0;
 var $7784 = 0.0, $7785 = 0.0, $7786 = 0.0, $7787 = 0, $7788 = 0.0, $7789 = 0.0, $779 = 0.0, $7790 = 0, $7791 = 0.0, $7792 = 0.0, $7793 = 0.0, $7794 = 0.0, $7795 = 0.0, $7796 = 0.0, $7797 = 0.0, $7798 = 0, $7799 = 0, $78 = 0.0, $780 = 0.0, $7800 = 0.0;
 var $7801 = 0, $7802 = 0.0, $7803 = 0.0, $7804 = 0, $7805 = 0.0, $7806 = 0.0, $7807 = 0.0, $7808 = 0.0, $7809 = 0.0, $781 = 0, $7810 = 0, $7811 = 0.0, $7812 = 0.0, $7813 = 0.0, $7814 = 0.0, $7815 = 0, $7816 = 0.0, $7817 = 0.0, $7818 = 0, $7819 = 0.0;
 var $782 = 0, $7820 = 0.0, $7821 = 0.0, $7822 = 0.0, $7823 = 0.0, $7824 = 0.0, $7825 = 0.0, $7826 = 0.0, $7827 = 0.0, $7828 = 0, $7829 = 0.0, $783 = 0, $7830 = 0.0, $7831 = 0.0, $7832 = 0, $7833 = 0.0, $7834 = 0.0, $7835 = 0, $7836 = 0, $7837 = 0;
 var $7838 = 0, $7839 = 0, $784 = 0, $7840 = 0, $7841 = 0, $7842 = 0, $7843 = 0, $7844 = 0, $7845 = 0, $7846 = 0, $7847 = 0, $7848 = 0, $7849 = 0, $785 = 0, $7850 = 0, $7851 = 0, $7852 = 0, $7853 = 0, $7854 = 0, $7855 = 0;
 var $7856 = 0.0, $7857 = 0, $7858 = 0, $7859 = 0.0, $786 = 0, $7860 = 0.0, $7861 = 0.0, $7862 = 0, $7863 = 0, $7864 = 0, $7865 = 0.0, $7866 = 0, $7867 = 0, $7868 = 0.0, $7869 = 0.0, $787 = 0, $7870 = 0.0, $7871 = 0, $7872 = 0, $7873 = 0;
 var $7874 = 0, $7875 = 0, $7876 = 0, $7877 = 0, $7878 = 0, $7879 = 0, $788 = 0, $7880 = 0, $7881 = 0, $7882 = 0.0, $7883 = 0, $7884 = 0, $7885 = 0, $7886 = 0.0, $7887 = 0, $7888 = 0, $7889 = 0, $789 = 0, $7890 = 0.0, $7891 = 0;
 var $7892 = 0, $7893 = 0.0, $7894 = 0.0, $7895 = 0, $7896 = 0.0, $7897 = 0.0, $7898 = 0, $7899 = 0.0, $79 = 0, $790 = 0, $7900 = 0.0, $7901 = 0, $7902 = 0.0, $7903 = 0.0, $7904 = 0.0, $7905 = 0, $7906 = 0.0, $7907 = 0.0, $7908 = 0.0, $7909 = 0.0;
 var $791 = 0, $7910 = 0.0, $7911 = 0.0, $7912 = 0.0, $7913 = 0.0, $7914 = 0, $7915 = 0.0, $7916 = 0, $7917 = 0.0, $7918 = 0.0, $7919 = 0.0, $792 = 0.0, $7920 = 0.0, $7921 = 0, $7922 = 0.0, $7923 = 0, $7924 = 0.0, $7925 = 0.0, $7926 = 0.0, $7927 = 0;
 var $7928 = 0.0, $7929 = 0, $793 = 0, $7930 = 0.0, $7931 = 0.0, $7932 = 0.0, $7933 = 0.0, $7934 = 0, $7935 = 0.0, $7936 = 0, $7937 = 0.0, $7938 = 0.0, $7939 = 0.0, $794 = 0, $7940 = 0, $7941 = 0.0, $7942 = 0, $7943 = 0.0, $7944 = 0.0, $7945 = 0.0;
 var $7946 = 0.0, $7947 = 0.0, $7948 = 0, $7949 = 0.0, $795 = 0, $7950 = 0, $7951 = 0.0, $7952 = 0.0, $7953 = 0.0, $7954 = 0, $7955 = 0.0, $7956 = 0, $7957 = 0.0, $7958 = 0.0, $7959 = 0, $796 = 0.0, $7960 = 0.0, $7961 = 0, $7962 = 0.0, $7963 = 0.0;
 var $7964 = 0, $7965 = 0.0, $7966 = 0.0, $7967 = 0.0, $7968 = 0.0, $7969 = 0, $797 = 0, $7970 = 0.0, $7971 = 0.0, $7972 = 0.0, $7973 = 0.0, $7974 = 0, $7975 = 0.0, $7976 = 0.0, $7977 = 0, $7978 = 0, $7979 = 0.0, $798 = 0, $7980 = 0.0, $7981 = 0.0;
 var $7982 = 0.0, $7983 = 0, $7984 = 0.0, $7985 = 0.0, $7986 = 0.0, $7987 = 0.0, $7988 = 0, $7989 = 0.0, $799 = 0, $7990 = 0.0, $7991 = 0, $7992 = 0, $7993 = 0.0, $7994 = 0.0, $7995 = 0.0, $7996 = 0.0, $7997 = 0, $7998 = 0.0, $7999 = 0, $8 = 0.0;
 var $80 = 0, $800 = 0.0, $8000 = 0.0, $8001 = 0.0, $8002 = 0.0, $8003 = 0.0, $8004 = 0.0, $8005 = 0.0, $8006 = 0, $8007 = 0.0, $8008 = 0.0, $8009 = 0, $801 = 0, $8010 = 0, $8011 = 0.0, $8012 = 0.0, $8013 = 0, $8014 = 0, $8015 = 0.0, $8016 = 0.0;
 var $8017 = 0, $8018 = 0, $8019 = 0.0, $802 = 0, $8020 = 0.0, $8021 = 0, $8022 = 0, $8023 = 0.0, $8024 = 0.0, $8025 = 0, $8026 = 0, $8027 = 0.0, $8028 = 0.0, $8029 = 0, $803 = 0.0, $8030 = 0, $8031 = 0.0, $8032 = 0.0, $8033 = 0, $8034 = 0;
 var $8035 = 0.0, $8036 = 0.0, $8037 = 0, $8038 = 0, $8039 = 0, $804 = 0.0, $8040 = 0, $8041 = 0, $8042 = 0.0, $8043 = 0, $8044 = 0, $8045 = 0, $8046 = 0, $8047 = 0, $8048 = 0, $8049 = 0, $805 = 0, $8050 = 0, $8051 = 0, $8052 = 0;
 var $8053 = 0, $8054 = 0, $8055 = 0, $8056 = 0, $8057 = 0, $8058 = 0, $8059 = 0, $806 = 0.0, $8060 = 0, $8061 = 0, $8062 = 0, $8063 = 0, $8064 = 0, $8065 = 0, $8066 = 0, $8067 = 0, $8068 = 0, $8069 = 0, $807 = 0.0, $8070 = 0;
 var $8071 = 0, $8072 = 0.0, $8073 = 0, $8074 = 0, $8075 = 0, $8076 = 0, $8077 = 0, $8078 = 0, $8079 = 0, $808 = 0.0, $8080 = 0, $8081 = 0, $8082 = 0, $8083 = 0, $8084 = 0, $8085 = 0, $8086 = 0, $8087 = 0, $8088 = 0, $8089 = 0;
 var $809 = 0, $8090 = 0, $8091 = 0, $8092 = 0, $8093 = 0, $8094 = 0, $8095 = 0, $8096 = 0, $8097 = 0, $8098 = 0, $8099 = 0, $81 = 0.0, $810 = 0.0, $8100 = 0, $8101 = 0, $8102 = 0.0, $8103 = 0, $8104 = 0, $8105 = 0, $8106 = 0;
 var $8107 = 0, $8108 = 0, $8109 = 0, $811 = 0, $8110 = 0, $8111 = 0, $8112 = 0, $8113 = 0, $8114 = 0, $8115 = 0, $8116 = 0, $8117 = 0, $8118 = 0, $8119 = 0, $812 = 0.0, $8120 = 0, $8121 = 0, $8122 = 0, $8123 = 0, $8124 = 0;
 var $8125 = 0, $8126 = 0, $8127 = 0, $8128 = 0, $8129 = 0, $813 = 0.0, $8130 = 0, $8131 = 0, $8132 = 0.0, $8133 = 0, $8134 = 0, $8135 = 0, $8136 = 0, $8137 = 0, $8138 = 0, $8139 = 0, $814 = 0.0, $8140 = 0, $8141 = 0, $8142 = 0;
 var $8143 = 0, $8144 = 0, $8145 = 0, $8146 = 0, $8147 = 0, $8148 = 0, $8149 = 0, $815 = 0.0, $8150 = 0, $8151 = 0, $8152 = 0, $8153 = 0, $8154 = 0, $8155 = 0, $8156 = 0, $8157 = 0, $8158 = 0, $8159 = 0, $816 = 0.0, $8160 = 0;
 var $8161 = 0, $8162 = 0.0, $8163 = 0, $8164 = 0, $8165 = 0, $8166 = 0, $8167 = 0, $8168 = 0, $8169 = 0, $817 = 0.0, $8170 = 0, $8171 = 0, $8172 = 0, $8173 = 0, $8174 = 0, $8175 = 0, $8176 = 0, $8177 = 0, $8178 = 0, $8179 = 0;
 var $818 = 0, $8180 = 0, $8181 = 0, $8182 = 0, $8183 = 0, $8184 = 0, $8185 = 0, $8186 = 0, $8187 = 0, $8188 = 0, $8189 = 0, $819 = 0, $8190 = 0, $8191 = 0, $8192 = 0.0, $8193 = 0, $8194 = 0, $8195 = 0, $8196 = 0, $8197 = 0;
 var $8198 = 0, $8199 = 0, $82 = 0.0, $820 = 0, $8200 = 0, $8201 = 0, $8202 = 0, $8203 = 0, $8204 = 0, $8205 = 0, $8206 = 0, $8207 = 0, $8208 = 0, $8209 = 0, $821 = 0.0, $8210 = 0, $8211 = 0, $8212 = 0, $8213 = 0, $8214 = 0;
 var $8215 = 0, $8216 = 0, $8217 = 0, $8218 = 0, $8219 = 0, $822 = 0.0, $8220 = 0, $8221 = 0, $8222 = 0, $8223 = 0, $8224 = 0, $8225 = 0, $8226 = 0, $8227 = 0, $8228 = 0, $8229 = 0, $823 = 0, $8230 = 0, $8231 = 0, $8232 = 0;
 var $8233 = 0, $8234 = 0, $8235 = 0, $8236 = 0, $8237 = 0, $8238 = 0, $8239 = 0, $824 = 0.0, $8240 = 0.0, $8241 = 0, $8242 = 0.0, $8243 = 0.0, $8244 = 0, $8245 = 0.0, $8246 = 0, $8247 = 0.0, $8248 = 0.0, $8249 = 0, $825 = 0.0, $8250 = 0.0;
 var $8251 = 0, $8252 = 0.0, $8253 = 0.0, $8254 = 0, $8255 = 0.0, $8256 = 0, $8257 = 0.0, $8258 = 0.0, $8259 = 0.0, $826 = 0.0, $8260 = 0, $8261 = 0.0, $8262 = 0.0, $8263 = 0.0, $8264 = 0.0, $8265 = 0.0, $8266 = 0.0, $8267 = 0, $8268 = 0.0, $8269 = 0.0;
 var $827 = 0.0, $8270 = 0, $8271 = 0, $8272 = 0.0, $8273 = 0, $8274 = 0, $8275 = 0.0, $8276 = 0, $8277 = 0, $8278 = 0.0, $8279 = 0, $828 = 0, $8280 = 0, $8281 = 0.0, $8282 = 0, $8283 = 0.0, $8284 = 0, $8285 = 0.0, $8286 = 0, $8287 = 0.0;
 var $8288 = 0.0, $8289 = 0.0, $829 = 0.0, $8290 = 0.0, $8291 = 0, $8292 = 0.0, $8293 = 0.0, $8294 = 0.0, $8295 = 0.0, $8296 = 0, $8297 = 0.0, $8298 = 0.0, $8299 = 0, $83 = 0.0, $830 = 0, $8300 = 0, $8301 = 0.0, $8302 = 0.0, $8303 = 0, $8304 = 0;
 var $8305 = 0.0, $8306 = 0.0, $8307 = 0, $8308 = 0, $8309 = 0.0, $831 = 0.0, $8310 = 0.0, $8311 = 0, $8312 = 0, $8313 = 0.0, $8314 = 0.0, $8315 = 0, $8316 = 0, $8317 = 0.0, $8318 = 0.0, $8319 = 0, $832 = 0.0, $8320 = 0, $8321 = 0.0, $8322 = 0.0;
 var $8323 = 0, $8324 = 0, $8325 = 0.0, $8326 = 0.0, $8327 = 0, $8328 = 0, $8329 = 0.0, $833 = 0.0, $8330 = 0.0, $8331 = 0, $8332 = 0, $8333 = 0.0, $8334 = 0.0, $8335 = 0, $8336 = 0, $8337 = 0, $8338 = 0.0, $8339 = 0.0, $834 = 0.0, $8340 = 0;
 var $8341 = 0.0, $8342 = 0.0, $8343 = 0, $8344 = 0.0, $8345 = 0.0, $8346 = 0, $8347 = 0.0, $8348 = 0.0, $8349 = 0.0, $835 = 0, $8350 = 0.0, $8351 = 0.0, $8352 = 0.0, $8353 = 0, $8354 = 0, $8355 = 0.0, $8356 = 0, $8357 = 0.0, $8358 = 0.0, $8359 = 0;
 var $836 = 0, $8360 = 0.0, $8361 = 0.0, $8362 = 0.0, $8363 = 0.0, $8364 = 0.0, $8365 = 0.0, $8366 = 0, $8367 = 0, $8368 = 0.0, $8369 = 0.0, $837 = 0.0, $8370 = 0, $8371 = 0.0, $8372 = 0.0, $8373 = 0, $8374 = 0.0, $8375 = 0.0, $8376 = 0.0, $8377 = 0.0;
 var $8378 = 0.0, $8379 = 0.0, $838 = 0.0, $8380 = 0, $8381 = 0.0, $8382 = 0, $8383 = 0.0, $8384 = 0.0, $8385 = 0, $8386 = 0.0, $8387 = 0.0, $8388 = 0.0, $8389 = 0.0, $839 = 0.0, $8390 = 0.0, $8391 = 0.0, $8392 = 0.0, $8393 = 0.0, $8394 = 0.0, $8395 = 0;
 var $8396 = 0, $8397 = 0.0, $8398 = 0.0, $8399 = 0, $84 = 0.0, $840 = 0.0, $8400 = 0.0, $8401 = 0.0, $8402 = 0, $8403 = 0.0, $8404 = 0.0, $8405 = 0.0, $8406 = 0.0, $8407 = 0.0, $8408 = 0, $8409 = 0.0, $841 = 0, $8410 = 0, $8411 = 0.0, $8412 = 0.0;
 var $8413 = 0, $8414 = 0.0, $8415 = 0.0, $8416 = 0.0, $8417 = 0.0, $8418 = 0.0, $8419 = 0.0, $842 = 0.0, $8420 = 0.0, $8421 = 0.0, $8422 = 0.0, $8423 = 0.0, $8424 = 0.0, $8425 = 0, $8426 = 0.0, $8427 = 0.0, $8428 = 0.0, $8429 = 0, $843 = 0.0, $8430 = 0.0;
 var $8431 = 0.0, $8432 = 0, $8433 = 0, $8434 = 0, $8435 = 0, $8436 = 0, $8437 = 0, $8438 = 0, $8439 = 0, $844 = 0, $8440 = 0, $8441 = 0, $8442 = 0, $8443 = 0, $8444 = 0, $8445 = 0, $8446 = 0, $8447 = 0, $8448 = 0, $8449 = 0;
 var $845 = 0.0, $8450 = 0, $8451 = 0, $8452 = 0, $8453 = 0.0, $8454 = 0, $8455 = 0, $8456 = 0.0, $8457 = 0.0, $8458 = 0.0, $8459 = 0, $846 = 0.0, $8460 = 0, $8461 = 0, $8462 = 0.0, $8463 = 0, $8464 = 0, $8465 = 0.0, $8466 = 0.0, $8467 = 0.0;
 var $8468 = 0, $8469 = 0, $847 = 0.0, $8470 = 0, $8471 = 0, $8472 = 0, $8473 = 0, $8474 = 0, $8475 = 0, $8476 = 0, $8477 = 0, $8478 = 0, $8479 = 0.0, $848 = 0.0, $8480 = 0, $8481 = 0, $8482 = 0, $8483 = 0.0, $8484 = 0, $8485 = 0;
 var $8486 = 0, $8487 = 0.0, $8488 = 0, $8489 = 0, $849 = 0, $8490 = 0.0, $8491 = 0.0, $8492 = 0, $8493 = 0.0, $8494 = 0.0, $8495 = 0, $8496 = 0.0, $8497 = 0.0, $8498 = 0, $8499 = 0.0, $85 = 0.0, $850 = 0, $8500 = 0.0, $8501 = 0.0, $8502 = 0;
 var $8503 = 0.0, $8504 = 0.0, $8505 = 0.0, $8506 = 0.0, $8507 = 0.0, $8508 = 0.0, $8509 = 0.0, $851 = 0.0, $8510 = 0.0, $8511 = 0, $8512 = 0.0, $8513 = 0, $8514 = 0.0, $8515 = 0.0, $8516 = 0.0, $8517 = 0.0, $8518 = 0, $8519 = 0.0, $852 = 0.0, $8520 = 0;
 var $8521 = 0.0, $8522 = 0.0, $8523 = 0.0, $8524 = 0, $8525 = 0.0, $8526 = 0, $8527 = 0.0, $8528 = 0.0, $8529 = 0.0, $853 = 0.0, $8530 = 0.0, $8531 = 0, $8532 = 0.0, $8533 = 0, $8534 = 0.0, $8535 = 0.0, $8536 = 0.0, $8537 = 0, $8538 = 0.0, $8539 = 0;
 var $854 = 0.0, $8540 = 0.0, $8541 = 0, $8542 = 0.0, $8543 = 0.0, $8544 = 0.0, $8545 = 0, $8546 = 0.0, $8547 = 0.0, $8548 = 0.0, $8549 = 0.0, $855 = 0, $8550 = 0.0, $8551 = 0, $8552 = 0.0, $8553 = 0, $8554 = 0.0, $8555 = 0.0, $8556 = 0, $8557 = 0.0;
 var $8558 = 0, $8559 = 0.0, $856 = 0.0, $8560 = 0.0, $8561 = 0, $8562 = 0, $8563 = 0.0, $8564 = 0.0, $8565 = 0.0, $8566 = 0, $8567 = 0.0, $8568 = 0.0, $8569 = 0.0, $857 = 0, $8570 = 0.0, $8571 = 0.0, $8572 = 0.0, $8573 = 0.0, $8574 = 0, $8575 = 0;
 var $8576 = 0.0, $8577 = 0.0, $8578 = 0.0, $8579 = 0.0, $858 = 0.0, $8580 = 0, $8581 = 0.0, $8582 = 0.0, $8583 = 0, $8584 = 0.0, $8585 = 0.0, $8586 = 0.0, $8587 = 0.0, $8588 = 0, $8589 = 0, $859 = 0.0, $8590 = 0.0, $8591 = 0.0, $8592 = 0.0, $8593 = 0.0;
 var $8594 = 0.0, $8595 = 0.0, $8596 = 0.0, $8597 = 0, $8598 = 0.0, $8599 = 0, $86 = 0.0, $860 = 0.0, $8600 = 0.0, $8601 = 0.0, $8602 = 0.0, $8603 = 0, $8604 = 0.0, $8605 = 0.0, $8606 = 0, $8607 = 0, $8608 = 0.0, $8609 = 0.0, $861 = 0.0, $8610 = 0;
 var $8611 = 0, $8612 = 0.0, $8613 = 0.0, $8614 = 0, $8615 = 0, $8616 = 0.0, $8617 = 0.0, $8618 = 0, $8619 = 0, $862 = 0, $8620 = 0.0, $8621 = 0.0, $8622 = 0, $8623 = 0, $8624 = 0.0, $8625 = 0.0, $8626 = 0, $8627 = 0, $8628 = 0.0, $8629 = 0.0;
 var $863 = 0.0, $8630 = 0, $8631 = 0, $8632 = 0.0, $8633 = 0.0, $8634 = 0, $8635 = 0, $8636 = 0, $8637 = 0, $8638 = 0, $8639 = 0.0, $864 = 0.0, $8640 = 0, $8641 = 0, $8642 = 0, $8643 = 0, $8644 = 0, $8645 = 0, $8646 = 0, $8647 = 0;
 var $8648 = 0, $8649 = 0, $865 = 0.0, $8650 = 0, $8651 = 0, $8652 = 0, $8653 = 0, $8654 = 0, $8655 = 0, $8656 = 0, $8657 = 0, $8658 = 0, $8659 = 0, $866 = 0.0, $8660 = 0, $8661 = 0, $8662 = 0, $8663 = 0, $8664 = 0, $8665 = 0;
 var $8666 = 0, $8667 = 0, $8668 = 0, $8669 = 0.0, $867 = 0, $8670 = 0, $8671 = 0, $8672 = 0, $8673 = 0, $8674 = 0, $8675 = 0, $8676 = 0, $8677 = 0, $8678 = 0, $8679 = 0, $868 = 0.0, $8680 = 0, $8681 = 0, $8682 = 0, $8683 = 0;
 var $8684 = 0, $8685 = 0, $8686 = 0, $8687 = 0, $8688 = 0, $8689 = 0, $869 = 0.0, $8690 = 0, $8691 = 0, $8692 = 0, $8693 = 0, $8694 = 0, $8695 = 0, $8696 = 0, $8697 = 0, $8698 = 0, $8699 = 0.0, $87 = 0.0, $870 = 0, $8700 = 0;
 var $8701 = 0, $8702 = 0, $8703 = 0, $8704 = 0, $8705 = 0, $8706 = 0, $8707 = 0, $8708 = 0, $8709 = 0, $871 = 0.0, $8710 = 0, $8711 = 0, $8712 = 0, $8713 = 0, $8714 = 0, $8715 = 0, $8716 = 0, $8717 = 0, $8718 = 0, $8719 = 0;
 var $872 = 0.0, $8720 = 0, $8721 = 0, $8722 = 0, $8723 = 0, $8724 = 0, $8725 = 0, $8726 = 0, $8727 = 0, $8728 = 0, $8729 = 0.0, $873 = 0.0, $8730 = 0, $8731 = 0, $8732 = 0, $8733 = 0, $8734 = 0, $8735 = 0, $8736 = 0, $8737 = 0;
 var $8738 = 0, $8739 = 0, $874 = 0.0, $8740 = 0, $8741 = 0, $8742 = 0, $8743 = 0, $8744 = 0, $8745 = 0, $8746 = 0, $8747 = 0, $8748 = 0, $8749 = 0, $875 = 0.0, $8750 = 0, $8751 = 0, $8752 = 0, $8753 = 0, $8754 = 0, $8755 = 0;
 var $8756 = 0, $8757 = 0, $8758 = 0, $8759 = 0.0, $876 = 0.0, $8760 = 0, $8761 = 0, $8762 = 0, $8763 = 0, $8764 = 0, $8765 = 0, $8766 = 0, $8767 = 0, $8768 = 0, $8769 = 0, $877 = 0.0, $8770 = 0, $8771 = 0, $8772 = 0, $8773 = 0;
 var $8774 = 0, $8775 = 0, $8776 = 0, $8777 = 0, $8778 = 0, $8779 = 0, $878 = 0, $8780 = 0, $8781 = 0, $8782 = 0, $8783 = 0, $8784 = 0, $8785 = 0, $8786 = 0, $8787 = 0, $8788 = 0, $8789 = 0.0, $879 = 0, $8790 = 0, $8791 = 0;
 var $8792 = 0, $8793 = 0, $8794 = 0, $8795 = 0, $8796 = 0, $8797 = 0, $8798 = 0, $8799 = 0, $88 = 0, $880 = 0.0, $8800 = 0, $8801 = 0, $8802 = 0, $8803 = 0, $8804 = 0, $8805 = 0, $8806 = 0, $8807 = 0, $8808 = 0, $8809 = 0;
 var $881 = 0.0, $8810 = 0, $8811 = 0, $8812 = 0, $8813 = 0, $8814 = 0, $8815 = 0, $8816 = 0, $8817 = 0, $8818 = 0, $8819 = 0, $882 = 0.0, $8820 = 0, $8821 = 0, $8822 = 0, $8823 = 0, $8824 = 0, $8825 = 0, $8826 = 0, $8827 = 0;
 var $8828 = 0, $8829 = 0, $883 = 0.0, $8830 = 0, $8831 = 0, $8832 = 0, $8833 = 0, $8834 = 0, $8835 = 0, $8836 = 0, $8837 = 0.0, $8838 = 0, $8839 = 0.0, $884 = 0, $8840 = 0.0, $8841 = 0.0, $8842 = 0, $8843 = 0.0, $8844 = 0, $8845 = 0.0;
 var $8846 = 0.0, $8847 = 0, $8848 = 0.0, $8849 = 0.0, $885 = 0.0, $8850 = 0, $8851 = 0.0, $8852 = 0.0, $8853 = 0.0, $8854 = 0.0, $8855 = 0.0, $8856 = 0.0, $8857 = 0, $8858 = 0.0, $8859 = 0, $886 = 0, $8860 = 0.0, $8861 = 0, $8862 = 0, $8863 = 0.0;
 var $8864 = 0, $8865 = 0.0, $8866 = 0, $8867 = 0, $8868 = 0.0, $8869 = 0, $887 = 0.0, $8870 = 0.0, $8871 = 0.0, $8872 = 0, $8873 = 0.0, $8874 = 0, $8875 = 0.0, $8876 = 0.0, $8877 = 0.0, $8878 = 0, $8879 = 0, $888 = 0.0, $8880 = 0.0, $8881 = 0;
 var $8882 = 0.0, $8883 = 0.0, $8884 = 0, $8885 = 0.0, $8886 = 0.0, $8887 = 0.0, $8888 = 0.0, $8889 = 0.0, $889 = 0.0, $8890 = 0, $8891 = 0, $8892 = 0.0, $8893 = 0, $8894 = 0.0, $8895 = 0.0, $8896 = 0, $8897 = 0.0, $8898 = 0.0, $8899 = 0.0, $89 = 0.0;
 var $890 = 0, $8900 = 0.0, $8901 = 0.0, $8902 = 0, $8903 = 0, $8904 = 0.0, $8905 = 0, $8906 = 0.0, $8907 = 0.0, $8908 = 0.0, $8909 = 0, $891 = 0.0, $8910 = 0.0, $8911 = 0.0, $8912 = 0.0, $8913 = 0.0, $8914 = 0.0, $8915 = 0, $8916 = 0.0, $8917 = 0.0;
 var $8918 = 0, $8919 = 0, $892 = 0.0, $8920 = 0.0, $8921 = 0.0, $8922 = 0, $8923 = 0, $8924 = 0.0, $8925 = 0.0, $8926 = 0, $8927 = 0, $8928 = 0.0, $8929 = 0.0, $893 = 0.0, $8930 = 0, $8931 = 0, $8932 = 0.0, $8933 = 0.0, $8934 = 0, $8935 = 0;
 var $8936 = 0.0, $8937 = 0.0, $8938 = 0, $8939 = 0, $894 = 0.0, $8940 = 0.0, $8941 = 0.0, $8942 = 0, $8943 = 0, $8944 = 0.0, $8945 = 0.0, $8946 = 0, $8947 = 0, $8948 = 0.0, $8949 = 0.0, $895 = 0, $8950 = 0, $8951 = 0, $8952 = 0.0, $8953 = 0.0;
 var $8954 = 0, $8955 = 0, $8956 = 0, $8957 = 0.0, $8958 = 0.0, $8959 = 0.0, $896 = 0.0, $8960 = 0, $8961 = 0, $8962 = 0.0, $8963 = 0.0, $8964 = 0.0, $8965 = 0, $8966 = 0, $8967 = 0.0, $8968 = 0.0, $8969 = 0.0, $897 = 0.0, $8970 = 0, $8971 = 0.0;
 var $8972 = 0.0, $8973 = 0.0, $8974 = 0.0, $8975 = 0.0, $8976 = 0.0, $8977 = 0, $8978 = 0, $8979 = 0.0, $898 = 0, $8980 = 0.0, $8981 = 0, $8982 = 0.0, $8983 = 0.0, $8984 = 0.0, $8985 = 0.0, $8986 = 0.0, $8987 = 0.0, $8988 = 0.0, $8989 = 0.0, $899 = 0.0;
 var $8990 = 0, $8991 = 0.0, $8992 = 0.0, $8993 = 0.0, $8994 = 0, $8995 = 0.0, $8996 = 0.0, $8997 = 0, $8998 = 0, $8999 = 0, $9 = 0, $90 = 0.0, $900 = 0.0, $9000 = 0, $9001 = 0, $9002 = 0, $9003 = 0, $9004 = 0, $9005 = 0, $9006 = 0;
 var $9007 = 0, $9008 = 0, $9009 = 0, $901 = 0.0, $9010 = 0, $9011 = 0, $9012 = 0, $9013 = 0, $9014 = 0, $9015 = 0, $9016 = 0, $9017 = 0, $9018 = 0.0, $9019 = 0, $902 = 0.0, $9020 = 0, $9021 = 0.0, $9022 = 0.0, $9023 = 0.0, $9024 = 0;
 var $9025 = 0, $9026 = 0, $9027 = 0.0, $9028 = 0, $9029 = 0, $903 = 0.0, $9030 = 0.0, $9031 = 0.0, $9032 = 0.0, $9033 = 0, $9034 = 0, $9035 = 0, $9036 = 0, $9037 = 0, $9038 = 0, $9039 = 0, $904 = 0.0, $9040 = 0, $9041 = 0, $9042 = 0;
 var $9043 = 0, $9044 = 0.0, $9045 = 0, $9046 = 0, $9047 = 0, $9048 = 0.0, $9049 = 0, $905 = 0.0, $9050 = 0, $9051 = 0, $9052 = 0.0, $9053 = 0, $9054 = 0, $9055 = 0.0, $9056 = 0.0, $9057 = 0, $9058 = 0.0, $9059 = 0.0, $906 = 0.0, $9060 = 0;
 var $9061 = 0.0, $9062 = 0.0, $9063 = 0.0, $9064 = 0.0, $9065 = 0.0, $9066 = 0, $9067 = 0.0, $9068 = 0.0, $9069 = 0.0, $907 = 0.0, $9070 = 0, $9071 = 0.0, $9072 = 0.0, $9073 = 0, $9074 = 0, $9075 = 0.0, $9076 = 0.0, $9077 = 0.0, $9078 = 0, $9079 = 0.0;
 var $908 = 0, $9080 = 0.0, $9081 = 0, $9082 = 0, $9083 = 0.0, $9084 = 0.0, $9085 = 0.0, $9086 = 0, $9087 = 0.0, $9088 = 0.0, $9089 = 0, $909 = 0.0, $9090 = 0.0, $9091 = 0.0, $9092 = 0.0, $9093 = 0.0, $9094 = 0, $9095 = 0.0, $9096 = 0.0, $9097 = 0;
 var $9098 = 0, $9099 = 0.0, $91 = 0.0, $910 = 0.0, $9100 = 0.0, $9101 = 0.0, $9102 = 0.0, $9103 = 0, $9104 = 0.0, $9105 = 0.0, $9106 = 0, $9107 = 0, $9108 = 0.0, $9109 = 0.0, $911 = 0.0, $9110 = 0.0, $9111 = 0.0, $9112 = 0.0, $9113 = 0.0, $9114 = 0;
 var $9115 = 0.0, $9116 = 0, $9117 = 0.0, $9118 = 0.0, $9119 = 0.0, $912 = 0, $9120 = 0, $9121 = 0, $9122 = 0.0, $9123 = 0.0, $9124 = 0.0, $9125 = 0.0, $9126 = 0, $9127 = 0.0, $9128 = 0, $9129 = 0.0, $913 = 0.0, $9130 = 0.0, $9131 = 0.0, $9132 = 0.0;
 var $9133 = 0.0, $9134 = 0.0, $9135 = 0, $9136 = 0.0, $9137 = 0.0, $9138 = 0, $9139 = 0, $914 = 0.0, $9140 = 0.0, $9141 = 0.0, $9142 = 0, $9143 = 0, $9144 = 0.0, $9145 = 0.0, $9146 = 0, $9147 = 0, $9148 = 0.0, $9149 = 0.0, $915 = 0, $9150 = 0;
 var $9151 = 0, $9152 = 0.0, $9153 = 0.0, $9154 = 0, $9155 = 0, $9156 = 0.0, $9157 = 0.0, $9158 = 0, $9159 = 0, $916 = 0, $9160 = 0.0, $9161 = 0.0, $9162 = 0, $9163 = 0, $9164 = 0.0, $9165 = 0.0, $9166 = 0, $9167 = 0, $9168 = 0, $9169 = 0;
 var $917 = 0, $9170 = 0, $9171 = 0.0, $9172 = 0, $9173 = 0, $9174 = 0, $9175 = 0, $9176 = 0, $9177 = 0, $9178 = 0, $9179 = 0, $918 = 0, $9180 = 0, $9181 = 0, $9182 = 0, $9183 = 0, $9184 = 0, $9185 = 0, $9186 = 0, $9187 = 0;
 var $9188 = 0, $9189 = 0, $919 = 0, $9190 = 0, $9191 = 0, $9192 = 0, $9193 = 0, $9194 = 0, $9195 = 0, $9196 = 0, $9197 = 0, $9198 = 0, $9199 = 0, $92 = 0.0, $920 = 0, $9200 = 0, $9201 = 0.0, $9202 = 0, $9203 = 0, $9204 = 0;
 var $9205 = 0, $9206 = 0, $9207 = 0, $9208 = 0, $9209 = 0, $921 = 0, $9210 = 0, $9211 = 0, $9212 = 0, $9213 = 0, $9214 = 0, $9215 = 0, $9216 = 0, $9217 = 0, $9218 = 0, $9219 = 0, $922 = 0, $9220 = 0, $9221 = 0, $9222 = 0;
 var $9223 = 0, $9224 = 0, $9225 = 0, $9226 = 0, $9227 = 0, $9228 = 0, $9229 = 0, $923 = 0, $9230 = 0, $9231 = 0.0, $9232 = 0, $9233 = 0, $9234 = 0, $9235 = 0, $9236 = 0, $9237 = 0, $9238 = 0, $9239 = 0, $924 = 0, $9240 = 0;
 var $9241 = 0, $9242 = 0, $9243 = 0, $9244 = 0, $9245 = 0, $9246 = 0, $9247 = 0, $9248 = 0, $9249 = 0, $925 = 0, $9250 = 0, $9251 = 0, $9252 = 0, $9253 = 0, $9254 = 0, $9255 = 0, $9256 = 0, $9257 = 0, $9258 = 0, $9259 = 0;
 var $926 = 0, $9260 = 0, $9261 = 0.0, $9262 = 0, $9263 = 0, $9264 = 0, $9265 = 0, $9266 = 0, $9267 = 0, $9268 = 0, $9269 = 0, $927 = 0, $9270 = 0, $9271 = 0, $9272 = 0, $9273 = 0, $9274 = 0, $9275 = 0, $9276 = 0, $9277 = 0;
 var $9278 = 0, $9279 = 0, $928 = 0, $9280 = 0, $9281 = 0, $9282 = 0, $9283 = 0, $9284 = 0, $9285 = 0, $9286 = 0, $9287 = 0, $9288 = 0, $9289 = 0, $929 = 0, $9290 = 0, $9291 = 0.0, $9292 = 0, $9293 = 0, $9294 = 0, $9295 = 0;
 var $9296 = 0, $9297 = 0, $9298 = 0, $9299 = 0, $93 = 0.0, $930 = 0, $9300 = 0, $9301 = 0, $9302 = 0, $9303 = 0, $9304 = 0, $9305 = 0, $9306 = 0, $9307 = 0, $9308 = 0, $9309 = 0, $931 = 0, $9310 = 0, $9311 = 0, $9312 = 0;
 var $9313 = 0, $9314 = 0, $9315 = 0, $9316 = 0, $9317 = 0, $9318 = 0, $9319 = 0, $932 = 0, $9320 = 0, $9321 = 0.0, $9322 = 0, $9323 = 0, $9324 = 0, $9325 = 0, $9326 = 0, $9327 = 0, $9328 = 0, $9329 = 0, $933 = 0, $9330 = 0;
 var $9331 = 0, $9332 = 0, $9333 = 0, $9334 = 0, $9335 = 0, $9336 = 0, $9337 = 0, $9338 = 0, $9339 = 0, $934 = 0, $9340 = 0, $9341 = 0, $9342 = 0, $9343 = 0, $9344 = 0, $9345 = 0, $9346 = 0, $9347 = 0, $9348 = 0, $9349 = 0;
 var $935 = 0, $9350 = 0, $9351 = 0, $9352 = 0, $9353 = 0, $9354 = 0, $9355 = 0, $9356 = 0, $9357 = 0, $9358 = 0, $9359 = 0, $936 = 0.0, $9360 = 0, $9361 = 0, $9362 = 0, $9363 = 0, $9364 = 0, $9365 = 0, $9366 = 0, $9367 = 0;
 var $9368 = 0, $9369 = 0.0, $937 = 0, $9370 = 0, $9371 = 0.0, $9372 = 0.0, $9373 = 0.0, $9374 = 0, $9375 = 0.0, $9376 = 0.0, $9377 = 0, $9378 = 0.0, $9379 = 0.0, $938 = 0, $9380 = 0.0, $9381 = 0.0, $9382 = 0.0, $9383 = 0.0, $9384 = 0.0, $9385 = 0;
 var $9386 = 0.0, $9387 = 0, $9388 = 0, $9389 = 0.0, $939 = 0.0, $9390 = 0.0, $9391 = 0, $9392 = 0.0, $9393 = 0.0, $9394 = 0, $9395 = 0, $9396 = 0.0, $9397 = 0, $9398 = 0, $9399 = 0.0, $94 = 0.0, $940 = 0.0, $9400 = 0, $9401 = 0.0, $9402 = 0.0;
 var $9403 = 0.0, $9404 = 0, $9405 = 0, $9406 = 0.0, $9407 = 0, $9408 = 0.0, $9409 = 0.0, $941 = 0.0, $9410 = 0, $9411 = 0.0, $9412 = 0.0, $9413 = 0.0, $9414 = 0.0, $9415 = 0.0, $9416 = 0, $9417 = 0, $9418 = 0.0, $9419 = 0, $942 = 0, $9420 = 0.0;
 var $9421 = 0.0, $9422 = 0, $9423 = 0.0, $9424 = 0, $9425 = 0.0, $9426 = 0.0, $9427 = 0.0, $9428 = 0, $9429 = 0, $943 = 0, $9430 = 0.0, $9431 = 0, $9432 = 0.0, $9433 = 0.0, $9434 = 0, $9435 = 0.0, $9436 = 0, $9437 = 0.0, $9438 = 0.0, $9439 = 0.0;
 var $944 = 0, $9440 = 0, $9441 = 0, $9442 = 0.0, $9443 = 0, $9444 = 0.0, $9445 = 0.0, $9446 = 0.0, $9447 = 0, $9448 = 0.0, $9449 = 0, $945 = 0.0, $9450 = 0.0, $9451 = 0.0, $9452 = 0.0, $9453 = 0, $9454 = 0.0, $9455 = 0.0, $9456 = 0, $9457 = 0;
 var $9458 = 0.0, $9459 = 0.0, $946 = 0, $9460 = 0, $9461 = 0, $9462 = 0.0, $9463 = 0.0, $9464 = 0, $9465 = 0, $9466 = 0.0, $9467 = 0.0, $9468 = 0, $9469 = 0, $947 = 0, $9470 = 0.0, $9471 = 0.0, $9472 = 0, $9473 = 0, $9474 = 0.0, $9475 = 0.0;
 var $9476 = 0, $9477 = 0, $9478 = 0.0, $9479 = 0.0, $948 = 0.0, $9480 = 0, $9481 = 0, $9482 = 0.0, $9483 = 0.0, $9484 = 0, $9485 = 0, $9486 = 0.0, $9487 = 0.0, $9488 = 0, $9489 = 0, $949 = 0.0, $9490 = 0.0, $9491 = 0.0, $9492 = 0, $9493 = 0;
 var $9494 = 0, $9495 = 0.0, $9496 = 0.0, $9497 = 0, $9498 = 0, $9499 = 0.0, $95 = 0.0, $950 = 0.0, $9500 = 0.0, $9501 = 0, $9502 = 0, $9503 = 0.0, $9504 = 0.0, $9505 = 0, $9506 = 0.0, $9507 = 0.0, $9508 = 0.0, $9509 = 0.0, $951 = 0, $9510 = 0.0;
 var $9511 = 0, $9512 = 0, $9513 = 0.0, $9514 = 0, $9515 = 0.0, $9516 = 0.0, $9517 = 0.0, $9518 = 0.0, $9519 = 0.0, $952 = 0, $9520 = 0.0, $9521 = 0.0, $9522 = 0, $9523 = 0.0, $9524 = 0.0, $9525 = 0.0, $9526 = 0, $9527 = 0.0, $9528 = 0.0, $9529 = 0;
 var $953 = 0, $9530 = 0, $9531 = 0, $9532 = 0, $9533 = 0, $9534 = 0, $9535 = 0, $9536 = 0, $9537 = 0, $9538 = 0, $9539 = 0, $954 = 0, $9540 = 0, $9541 = 0, $9542 = 0, $9543 = 0, $9544 = 0, $9545 = 0, $9546 = 0, $9547 = 0;
 var $9548 = 0, $9549 = 0, $955 = 0, $9550 = 0.0, $9551 = 0, $9552 = 0, $9553 = 0.0, $9554 = 0.0, $9555 = 0.0, $9556 = 0, $9557 = 0, $9558 = 0, $9559 = 0.0, $956 = 0, $9560 = 0, $9561 = 0, $9562 = 0.0, $9563 = 0.0, $9564 = 0.0, $9565 = 0;
 var $9566 = 0, $9567 = 0, $9568 = 0, $9569 = 0, $957 = 0, $9570 = 0, $9571 = 0, $9572 = 0, $9573 = 0, $9574 = 0, $9575 = 0, $9576 = 0.0, $9577 = 0, $9578 = 0, $9579 = 0, $958 = 0, $9580 = 0.0, $9581 = 0, $9582 = 0, $9583 = 0;
 var $9584 = 0.0, $9585 = 0, $9586 = 0, $9587 = 0.0, $9588 = 0.0, $9589 = 0, $959 = 0, $9590 = 0.0, $9591 = 0.0, $9592 = 0, $9593 = 0.0, $9594 = 0.0, $9595 = 0.0, $9596 = 0.0, $9597 = 0, $9598 = 0.0, $9599 = 0.0, $96 = 0, $960 = 0, $9600 = 0.0;
 var $9601 = 0, $9602 = 0.0, $9603 = 0.0, $9604 = 0.0, $9605 = 0, $9606 = 0.0, $9607 = 0.0, $9608 = 0.0, $9609 = 0, $961 = 0, $9610 = 0.0, $9611 = 0, $9612 = 0.0, $9613 = 0.0, $9614 = 0.0, $9615 = 0, $9616 = 0, $9617 = 0.0, $9618 = 0.0, $9619 = 0.0;
 var $962 = 0.0, $9620 = 0, $9621 = 0.0, $9622 = 0.0, $9623 = 0, $9624 = 0, $9625 = 0.0, $9626 = 0.0, $9627 = 0.0, $9628 = 0.0, $9629 = 0, $963 = 0, $9630 = 0.0, $9631 = 0.0, $9632 = 0, $9633 = 0.0, $9634 = 0.0, $9635 = 0.0, $9636 = 0.0, $9637 = 0;
 var $9638 = 0.0, $9639 = 0.0, $964 = 0, $9640 = 0, $9641 = 0, $9642 = 0.0, $9643 = 0.0, $9644 = 0.0, $9645 = 0.0, $9646 = 0.0, $9647 = 0.0, $9648 = 0, $9649 = 0.0, $965 = 0, $9650 = 0, $9651 = 0.0, $9652 = 0.0, $9653 = 0.0, $9654 = 0, $9655 = 0;
 var $9656 = 0.0, $9657 = 0, $9658 = 0.0, $9659 = 0.0, $966 = 0.0, $9660 = 0, $9661 = 0.0, $9662 = 0.0, $9663 = 0.0, $9664 = 0.0, $9665 = 0.0, $9666 = 0.0, $9667 = 0.0, $9668 = 0.0, $9669 = 0, $967 = 0, $9670 = 0.0, $9671 = 0.0, $9672 = 0, $9673 = 0;
 var $9674 = 0.0, $9675 = 0.0, $9676 = 0, $9677 = 0, $9678 = 0.0, $9679 = 0.0, $968 = 0, $9680 = 0, $9681 = 0, $9682 = 0.0, $9683 = 0.0, $9684 = 0, $9685 = 0, $9686 = 0.0, $9687 = 0.0, $9688 = 0, $9689 = 0, $969 = 0, $9690 = 0.0, $9691 = 0.0;
 var $9692 = 0, $9693 = 0, $9694 = 0.0, $9695 = 0.0, $9696 = 0, $9697 = 0, $9698 = 0.0, $9699 = 0.0, $97 = 0, $970 = 0.0, $9700 = 0, $9701 = 0, $9702 = 0, $9703 = 0, $9704 = 0, $9705 = 0.0, $9706 = 0, $9707 = 0, $9708 = 0, $9709 = 0;
 var $971 = 0, $9710 = 0, $9711 = 0, $9712 = 0, $9713 = 0, $9714 = 0, $9715 = 0, $9716 = 0, $9717 = 0, $9718 = 0, $9719 = 0, $972 = 0, $9720 = 0, $9721 = 0, $9722 = 0, $9723 = 0, $9724 = 0, $9725 = 0, $9726 = 0, $9727 = 0;
 var $9728 = 0, $9729 = 0, $973 = 0.0, $9730 = 0, $9731 = 0, $9732 = 0, $9733 = 0, $9734 = 0, $9735 = 0.0, $9736 = 0, $9737 = 0, $9738 = 0, $9739 = 0, $974 = 0.0, $9740 = 0, $9741 = 0, $9742 = 0, $9743 = 0, $9744 = 0, $9745 = 0;
 var $9746 = 0, $9747 = 0, $9748 = 0, $9749 = 0, $975 = 0, $9750 = 0, $9751 = 0, $9752 = 0, $9753 = 0, $9754 = 0, $9755 = 0, $9756 = 0, $9757 = 0, $9758 = 0, $9759 = 0, $976 = 0.0, $9760 = 0, $9761 = 0, $9762 = 0, $9763 = 0;
 var $9764 = 0, $9765 = 0.0, $9766 = 0, $9767 = 0, $9768 = 0, $9769 = 0, $977 = 0.0, $9770 = 0, $9771 = 0, $9772 = 0, $9773 = 0, $9774 = 0, $9775 = 0, $9776 = 0, $9777 = 0, $9778 = 0, $9779 = 0, $978 = 0, $9780 = 0, $9781 = 0;
 var $9782 = 0, $9783 = 0, $9784 = 0, $9785 = 0, $9786 = 0, $9787 = 0, $9788 = 0, $9789 = 0, $979 = 0.0, $9790 = 0, $9791 = 0, $9792 = 0, $9793 = 0, $9794 = 0, $9795 = 0.0, $9796 = 0, $9797 = 0, $9798 = 0, $9799 = 0, $98 = 0.0;
 var $980 = 0.0, $9800 = 0, $9801 = 0, $9802 = 0, $9803 = 0, $9804 = 0, $9805 = 0, $9806 = 0, $9807 = 0, $9808 = 0, $9809 = 0, $981 = 0, $9810 = 0, $9811 = 0, $9812 = 0, $9813 = 0, $9814 = 0, $9815 = 0, $9816 = 0, $9817 = 0;
 var $9818 = 0, $9819 = 0, $982 = 0.0, $9820 = 0, $9821 = 0, $9822 = 0, $9823 = 0, $9824 = 0, $9825 = 0.0, $9826 = 0, $9827 = 0, $9828 = 0, $9829 = 0, $983 = 0.0, $9830 = 0, $9831 = 0, $9832 = 0, $9833 = 0, $9834 = 0, $9835 = 0;
 var $9836 = 0, $9837 = 0, $9838 = 0, $9839 = 0, $984 = 0.0, $9840 = 0, $9841 = 0, $9842 = 0, $9843 = 0, $9844 = 0, $9845 = 0, $9846 = 0, $9847 = 0, $9848 = 0, $9849 = 0, $985 = 0, $9850 = 0, $9851 = 0, $9852 = 0, $9853 = 0;
 var $9854 = 0, $9855 = 0.0, $9856 = 0, $9857 = 0, $9858 = 0, $9859 = 0, $986 = 0.0, $9860 = 0, $9861 = 0, $9862 = 0, $9863 = 0, $9864 = 0, $9865 = 0, $9866 = 0, $9867 = 0, $9868 = 0, $9869 = 0, $987 = 0.0, $9870 = 0, $9871 = 0;
 var $9872 = 0, $9873 = 0, $9874 = 0, $9875 = 0, $9876 = 0, $9877 = 0, $9878 = 0, $9879 = 0, $988 = 0.0, $9880 = 0, $9881 = 0, $9882 = 0, $9883 = 0, $9884 = 0, $9885 = 0, $9886 = 0, $9887 = 0, $9888 = 0, $9889 = 0, $989 = 0.0;
 var $9890 = 0, $9891 = 0, $9892 = 0, $9893 = 0, $9894 = 0, $9895 = 0, $9896 = 0, $9897 = 0, $9898 = 0, $9899 = 0, $99 = 0.0, $990 = 0.0, $9900 = 0, $9901 = 0, $9902 = 0, $9903 = 0, $9904 = 0, $9905 = 0, $9906 = 0.0, $9907 = 0;
 var $9908 = 0, $9909 = 0, $991 = 0.0, $9910 = 0.0, $9911 = 0, $9912 = 0.0, $9913 = 0, $9914 = 0, $9915 = 0, $9916 = 0, $9917 = 0.0, $9918 = 0.0, $9919 = 0.0, $992 = 0.0, $9920 = 0.0, $9921 = 0.0, $9922 = 0, $9923 = 0.0, $9924 = 0.0, $9925 = 0.0;
 var $9926 = 0, $9927 = 0.0, $9928 = 0, $9929 = 0.0, $993 = 0.0, $9930 = 0.0, $9931 = 0, $9932 = 0.0, $9933 = 0.0, $9934 = 0, $9935 = 0.0, $9936 = 0.0, $9937 = 0, $9938 = 0.0, $9939 = 0.0, $994 = 0, $9940 = 0.0, $9941 = 0.0, $9942 = 0.0, $9943 = 0;
 var $9944 = 0, $9945 = 0.0, $9946 = 0.0, $9947 = 0.0, $9948 = 0.0, $9949 = 0.0, $995 = 0.0, $9950 = 0.0, $9951 = 0.0, $9952 = 0.0, $9953 = 0, $9954 = 0.0, $9955 = 0, $9956 = 0.0, $9957 = 0.0, $9958 = 0, $9959 = 0.0, $996 = 0, $9960 = 0.0, $9961 = 0;
 var $9962 = 0.0, $9963 = 0.0, $9964 = 0, $9965 = 0.0, $9966 = 0.0, $9967 = 0.0, $9968 = 0.0, $9969 = 0.0, $997 = 0.0, $9970 = 0.0, $9971 = 0.0, $9972 = 0.0, $9973 = 0, $9974 = 0, $9975 = 0.0, $9976 = 0.0, $9977 = 0.0, $9978 = 0.0, $9979 = 0.0, $998 = 0.0;
 var $9980 = 0.0, $9981 = 0.0, $9982 = 0, $9983 = 0.0, $9984 = 0, $9985 = 0.0, $9986 = 0.0, $9987 = 0, $9988 = 0.0, $9989 = 0.0, $999 = 0.0, $9990 = 0, $9991 = 0.0, $9992 = 0.0, $9993 = 0, $9994 = 0.0, $9995 = 0.0, $9996 = 0.0, $9997 = 0.0, $9998 = 0.0;
 var $9999 = 0.0, $bgotonextstatement = 0, $bgotonextstatement111 = 0, $bgotonextstatement121 = 0, $bgotonextstatement131 = 0, $bgotonextstatement141 = 0, $bgotonextstatement151 = 0, $bgotonextstatement21 = 0, $bgotonextstatement32 = 0, $bgotonextstatement4 = 0, $bgotonextstatement42 = 0, $bgotonextstatement52 = 0, $bgotonextstatement62 = 0, $bgotonextstatement72 = 0, $cj3array = 0, $cj3array101 = 0, $cj3array23 = 0, $cj3array6 = 0, $cj4array = 0, $cj5array = 0;
 var $cj5array113 = 0, $cj5array123 = 0, $cj5array13 = 0, $cj5array133 = 0, $cj5array143 = 0, $cj5array153 = 0, $cj5array162 = 0, $cj5array171 = 0, $cj5array34 = 0, $cj5array44 = 0, $cj5array54 = 0, $cj5array64 = 0, $cj5array74 = 0, $cj5array83 = 0, $cj5array92 = 0, $evalcond = 0, $evalcond106 = 0, $evalcond11 = 0, $evalcond110 = 0, $evalcond118 = 0;
 var $evalcond128 = 0, $evalcond138 = 0, $evalcond148 = 0, $evalcond158 = 0, $evalcond167 = 0, $evalcond176 = 0, $evalcond18 = 0, $evalcond2 = 0, $evalcond28 = 0, $evalcond3 = 0, $evalcond31 = 0, $evalcond39 = 0, $evalcond49 = 0, $evalcond59 = 0, $evalcond69 = 0, $evalcond79 = 0, $evalcond88 = 0, $evalcond97 = 0, $iij3 = 0, $iij310 = 0;
 var $iij3105 = 0, $iij327 = 0, $iij4 = 0, $iij5 = 0, $iij5117 = 0, $iij5127 = 0, $iij5137 = 0, $iij5147 = 0, $iij5157 = 0, $iij5166 = 0, $iij517 = 0, $iij5175 = 0, $iij538 = 0, $iij548 = 0, $iij558 = 0, $iij568 = 0, $iij578 = 0, $iij587 = 0, $iij596 = 0, $ij3 = 0;
 var $ij3104 = 0, $ij326 = 0, $ij39 = 0, $ij4 = 0, $ij5 = 0, $ij5116 = 0, $ij5126 = 0, $ij5136 = 0, $ij5146 = 0, $ij5156 = 0, $ij516 = 0, $ij5165 = 0, $ij5174 = 0, $ij537 = 0, $ij547 = 0, $ij557 = 0, $ij567 = 0, $ij577 = 0, $ij586 = 0, $ij595 = 0;
 var $j3array = 0, $j3array100 = 0, $j3array22 = 0, $j3array5 = 0, $j3eval = 0, $j3eval1 = 0, $j3valid = 0, $j3valid103 = 0, $j3valid25 = 0, $j3valid8 = 0, $j4array = 0, $j4valid = 0, $j5array = 0, $j5array112 = 0, $j5array12 = 0, $j5array122 = 0, $j5array132 = 0, $j5array142 = 0, $j5array152 = 0, $j5array161 = 0;
 var $j5array170 = 0, $j5array33 = 0, $j5array43 = 0, $j5array53 = 0, $j5array63 = 0, $j5array73 = 0, $j5array82 = 0, $j5array91 = 0, $j5eval = 0, $j5eval107 = 0, $j5eval108 = 0, $j5eval109 = 0, $j5eval29 = 0, $j5eval30 = 0, $j5valid = 0, $j5valid115 = 0, $j5valid125 = 0, $j5valid135 = 0, $j5valid145 = 0, $j5valid15 = 0;
 var $j5valid155 = 0, $j5valid164 = 0, $j5valid173 = 0, $j5valid36 = 0, $j5valid46 = 0, $j5valid56 = 0, $j5valid66 = 0, $j5valid76 = 0, $j5valid85 = 0, $j5valid94 = 0, $rotationiter = 0, $sj3array = 0, $sj3array102 = 0, $sj3array24 = 0, $sj3array7 = 0, $sj4array = 0, $sj5array = 0, $sj5array114 = 0, $sj5array124 = 0, $sj5array134 = 0;
 var $sj5array14 = 0, $sj5array144 = 0, $sj5array154 = 0, $sj5array163 = 0, $sj5array172 = 0, $sj5array35 = 0, $sj5array45 = 0, $sj5array55 = 0, $sj5array65 = 0, $sj5array75 = 0, $sj5array84 = 0, $sj5array93 = 0, $vfree = 0, $vfree120 = 0, $vfree130 = 0, $vfree140 = 0, $vfree150 = 0, $vfree160 = 0, $vfree169 = 0, $vfree178 = 0;
 var $vfree20 = 0, $vfree41 = 0, $vfree51 = 0, $vfree61 = 0, $vfree71 = 0, $vfree81 = 0, $vfree90 = 0, $vfree99 = 0, $vinfos = 0, $vinfos119 = 0, $vinfos129 = 0, $vinfos139 = 0, $vinfos149 = 0, $vinfos159 = 0, $vinfos168 = 0, $vinfos177 = 0, $vinfos19 = 0, $vinfos40 = 0, $vinfos50 = 0, $vinfos60 = 0;
 var $vinfos70 = 0, $vinfos80 = 0, $vinfos89 = 0, $vinfos98 = 0, $x100 = 0.0, $x101 = 0.0, $x102 = 0.0, $x103 = 0.0, $x104 = 0.0, $x105 = 0.0, $x106 = 0.0, $x107 = 0.0, $x108 = 0.0, $x109 = 0, $x110 = 0.0, $x111 = 0.0, $x112 = 0.0, $x113 = 0.0, $x114 = 0.0, $x115 = 0.0;
 var $x116 = 0.0, $x117 = 0.0, $x118 = 0.0, $x119 = 0, $x120 = 0.0, $x121 = 0.0, $x122 = 0.0, $x123 = 0.0, $x124 = 0.0, $x125 = 0.0, $x126 = 0.0, $x127 = 0.0, $x128 = 0.0, $x129 = 0, $x130 = 0, $x131 = 0.0, $x132 = 0.0, $x133 = 0.0, $x134 = 0.0, $x135 = 0.0;
 var $x136 = 0.0, $x137 = 0.0, $x138 = 0.0, $x139 = 0.0, $x140 = 0.0, $x141 = 0.0, $x142 = 0.0, $x143 = 0.0, $x144 = 0.0, $x145 = 0.0, $x146 = 0.0, $x147 = 0.0, $x148 = 0.0, $x149 = 0.0, $x150 = 0.0, $x151 = 0.0, $x152 = 0.0, $x153 = 0.0, $x154 = 0.0, $x155 = 0.0;
 var $x156 = 0.0, $x157 = 0.0, $x158 = 0.0, $x159 = 0.0, $x160 = 0.0, $x161 = 0.0, $x162 = 0.0, $x163 = 0.0, $x164 = 0.0, $x165 = 0.0, $x166 = 0.0, $x167 = 0.0, $x168 = 0.0, $x169 = 0.0, $x170 = 0.0, $x171 = 0.0, $x172 = 0.0, $x173 = 0.0, $x174 = 0.0, $x175 = 0.0;
 var $x176 = 0.0, $x177 = 0.0, $x178 = 0.0, $x179 = 0.0, $x180 = 0.0, $x181 = 0.0, $x182 = 0.0, $x183 = 0.0, $x184 = 0.0, $x185 = 0.0, $x186 = 0.0, $x187 = 0.0, $x188 = 0.0, $x189 = 0.0, $x190 = 0.0, $x191 = 0.0, $x192 = 0.0, $x193 = 0.0, $x194 = 0.0, $x195 = 0.0;
 var $x196 = 0.0, $x197 = 0.0, $x198 = 0.0, $x199 = 0.0, $x200 = 0.0, $x201 = 0.0, $x202 = 0, $x203 = 0, $x204 = 0.0, $x205 = 0.0, $x206 = 0.0, $x207 = 0.0, $x208 = 0.0, $x209 = 0.0, $x210 = 0.0, $x211 = 0.0, $x212 = 0.0, $x213 = 0.0, $x214 = 0.0, $x215 = 0;
 var $x216 = 0.0, $x217 = 0.0, $x218 = 0.0, $x219 = 0.0, $x220 = 0.0, $x221 = 0.0, $x222 = 0.0, $x223 = 0.0, $x224 = 0.0, $x225 = 0.0, $x226 = 0.0, $x227 = 0, $x228 = 0, $x229 = 0.0, $x230 = 0.0, $x231 = 0.0, $x232 = 0.0, $x233 = 0.0, $x234 = 0.0, $x235 = 0.0;
 var $x236 = 0.0, $x237 = 0.0, $x238 = 0.0, $x239 = 0.0, $x240 = 0, $x241 = 0, $x242 = 0.0, $x243 = 0.0, $x244 = 0.0, $x245 = 0.0, $x246 = 0.0, $x247 = 0.0, $x248 = 0.0, $x249 = 0.0, $x250 = 0.0, $x251 = 0.0, $x252 = 0.0, $x253 = 0.0, $x254 = 0.0, $x255 = 0.0;
 var $x256 = 0.0, $x257 = 0.0, $x258 = 0.0, $x259 = 0.0, $x260 = 0.0, $x261 = 0.0, $x262 = 0.0, $x263 = 0.0, $x264 = 0.0, $x265 = 0.0, $x266 = 0.0, $x267 = 0.0, $x268 = 0.0, $x269 = 0.0, $x270 = 0.0, $x271 = 0.0, $x272 = 0.0, $x273 = 0.0, $x274 = 0.0, $x275 = 0.0;
 var $x276 = 0.0, $x277 = 0.0, $x278 = 0.0, $x279 = 0.0, $x280 = 0.0, $x281 = 0.0, $x282 = 0.0, $x283 = 0.0, $x284 = 0.0, $x285 = 0.0, $x286 = 0.0, $x287 = 0.0, $x288 = 0.0, $x289 = 0.0, $x290 = 0.0, $x291 = 0.0, $x292 = 0.0, $x293 = 0.0, $x294 = 0.0, $x295 = 0.0;
 var $x296 = 0.0, $x297 = 0.0, $x298 = 0.0, $x299 = 0.0, $x300 = 0.0, $x301 = 0.0, $x302 = 0.0, $x303 = 0.0, $x304 = 0.0, $x305 = 0.0, $x306 = 0.0, $x307 = 0.0, $x308 = 0.0, $x309 = 0.0, $x310 = 0.0, $x311 = 0.0, $x312 = 0.0, $x313 = 0, $x314 = 0, $x315 = 0.0;
 var $x316 = 0.0, $x317 = 0.0, $x318 = 0.0, $x319 = 0.0, $x320 = 0.0, $x321 = 0.0, $x322 = 0.0, $x323 = 0.0, $x324 = 0.0, $x325 = 0.0, $x326 = 0, $x327 = 0.0, $x328 = 0.0, $x329 = 0.0, $x330 = 0.0, $x331 = 0.0, $x332 = 0.0, $x333 = 0.0, $x334 = 0.0, $x335 = 0.0;
 var $x336 = 0.0, $x337 = 0.0, $x338 = 0, $x339 = 0, $x340 = 0.0, $x341 = 0.0, $x342 = 0.0, $x343 = 0.0, $x344 = 0.0, $x345 = 0.0, $x346 = 0.0, $x347 = 0.0, $x348 = 0.0, $x349 = 0.0, $x350 = 0.0, $x78 = 0.0, $x79 = 0.0, $x80 = 0.0, $x81 = 0.0, $x82 = 0.0;
 var $x83 = 0.0, $x84 = 0.0, $x85 = 0.0, $x86 = 0.0, $x87 = 0.0, $x88 = 0.0, $x89 = 0.0, $x90 = 0.0, $x91 = 0.0, $x92 = 0.0, $x93 = 0.0, $x94 = 0.0, $x95 = 0.0, $x96 = 0.0, $x97 = 0.0, $x98 = 0.0, $x99 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 5184|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $j4array = sp + 4464|0;
 $cj4array = sp + 4448|0;
 $sj4array = sp + 4432|0;
 $j4valid = sp + 5168|0;
 $j3eval = sp + 4416|0;
 $j3eval1 = sp + 4328|0;
 $evalcond = sp + 4200|0;
 $j3array = sp + 4184|0;
 $cj3array = sp + 4168|0;
 $sj3array = sp + 4152|0;
 $j3valid = sp + 5164|0;
 $x109 = sp + 4136|0;
 $evalcond2 = sp + 4120|0;
 $j5array = sp + 4112|0;
 $cj5array = sp + 4104|0;
 $sj5array = sp + 4096|0;
 $j5valid = sp + 5163|0;
 $evalcond3 = sp + 4024|0;
 $vinfos = sp + 5084|0;
 $vfree = sp + 5064|0;
 $j3array5 = sp + 3952|0;
 $cj3array6 = sp + 3936|0;
 $sj3array7 = sp + 3920|0;
 $j3valid8 = sp + 5160|0;
 $x119 = sp + 3904|0;
 $evalcond11 = sp + 3888|0;
 $j5array12 = sp + 3880|0;
 $cj5array13 = sp + 3872|0;
 $sj5array14 = sp + 3864|0;
 $j5valid15 = sp + 5159|0;
 $evalcond18 = sp + 3792|0;
 $vinfos19 = sp + 5036|0;
 $vfree20 = sp + 5024|0;
 $j3array22 = sp + 3728|0;
 $cj3array23 = sp + 3720|0;
 $sj3array24 = sp + 3712|0;
 $j3valid25 = sp + 5157|0;
 $x129 = sp + 3696|0;
 $x130 = sp + 3672|0;
 $evalcond28 = sp + 3608|0;
 $j5eval = sp + 3544|0;
 $j5eval29 = sp + 3456|0;
 $j5eval30 = sp + 3360|0;
 $evalcond31 = sp + 3200|0;
 $j5array33 = sp + 3176|0;
 $cj5array34 = sp + 3168|0;
 $sj5array35 = sp + 3160|0;
 $j5valid36 = sp + 5155|0;
 $evalcond39 = sp + 3088|0;
 $vinfos40 = sp + 4996|0;
 $vfree41 = sp + 4984|0;
 $j5array43 = sp + 3000|0;
 $cj5array44 = sp + 2992|0;
 $sj5array45 = sp + 2984|0;
 $j5valid46 = sp + 5153|0;
 $evalcond49 = sp + 2912|0;
 $vinfos50 = sp + 4964|0;
 $vfree51 = sp + 4952|0;
 $j5array53 = sp + 2824|0;
 $cj5array54 = sp + 2816|0;
 $sj5array55 = sp + 2808|0;
 $j5valid56 = sp + 5151|0;
 $evalcond59 = sp + 2744|0;
 $vinfos60 = sp + 4932|0;
 $vfree61 = sp + 4920|0;
 $j5array63 = sp + 2688|0;
 $cj5array64 = sp + 2680|0;
 $sj5array65 = sp + 2672|0;
 $j5valid66 = sp + 5149|0;
 $evalcond69 = sp + 2608|0;
 $vinfos70 = sp + 4900|0;
 $vfree71 = sp + 4888|0;
 $j5array73 = sp + 2568|0;
 $cj5array74 = sp + 2560|0;
 $sj5array75 = sp + 2552|0;
 $j5valid76 = sp + 5147|0;
 $x202 = sp + 2536|0;
 $x203 = sp + 2512|0;
 $evalcond79 = sp + 2416|0;
 $vinfos80 = sp + 4868|0;
 $vfree81 = sp + 4856|0;
 $j5array82 = sp + 2320|0;
 $cj5array83 = sp + 2312|0;
 $sj5array84 = sp + 2304|0;
 $j5valid85 = sp + 5146|0;
 $x215 = sp + 2288|0;
 $evalcond88 = sp + 2192|0;
 $vinfos89 = sp + 4836|0;
 $vfree90 = sp + 4824|0;
 $j5array91 = sp + 2096|0;
 $cj5array92 = sp + 2088|0;
 $sj5array93 = sp + 2080|0;
 $j5valid94 = sp + 5145|0;
 $x227 = sp + 2064|0;
 $x228 = sp + 2048|0;
 $evalcond97 = sp + 1952|0;
 $vinfos98 = sp + 4804|0;
 $vfree99 = sp + 4792|0;
 $j3array100 = sp + 1856|0;
 $cj3array101 = sp + 1848|0;
 $sj3array102 = sp + 1840|0;
 $j3valid103 = sp + 5144|0;
 $x240 = sp + 1824|0;
 $x241 = sp + 1808|0;
 $evalcond106 = sp + 1744|0;
 $j5eval107 = sp + 1680|0;
 $j5eval108 = sp + 1592|0;
 $j5eval109 = sp + 1496|0;
 $evalcond110 = sp + 1336|0;
 $j5array112 = sp + 1312|0;
 $cj5array113 = sp + 1304|0;
 $sj5array114 = sp + 1296|0;
 $j5valid115 = sp + 5142|0;
 $evalcond118 = sp + 1224|0;
 $vinfos119 = sp + 4764|0;
 $vfree120 = sp + 4752|0;
 $j5array122 = sp + 1136|0;
 $cj5array123 = sp + 1128|0;
 $sj5array124 = sp + 1120|0;
 $j5valid125 = sp + 5140|0;
 $evalcond128 = sp + 1048|0;
 $vinfos129 = sp + 4732|0;
 $vfree130 = sp + 4720|0;
 $j5array132 = sp + 960|0;
 $cj5array133 = sp + 952|0;
 $sj5array134 = sp + 944|0;
 $j5valid135 = sp + 5138|0;
 $evalcond138 = sp + 880|0;
 $vinfos139 = sp + 4700|0;
 $vfree140 = sp + 4688|0;
 $j5array142 = sp + 824|0;
 $cj5array143 = sp + 816|0;
 $sj5array144 = sp + 808|0;
 $j5valid145 = sp + 5136|0;
 $evalcond148 = sp + 744|0;
 $vinfos149 = sp + 4668|0;
 $vfree150 = sp + 4656|0;
 $j5array152 = sp + 704|0;
 $cj5array153 = sp + 696|0;
 $sj5array154 = sp + 688|0;
 $j5valid155 = sp + 5134|0;
 $x313 = sp + 672|0;
 $x314 = sp + 648|0;
 $evalcond158 = sp + 552|0;
 $vinfos159 = sp + 4636|0;
 $vfree160 = sp + 4624|0;
 $j5array161 = sp + 456|0;
 $cj5array162 = sp + 448|0;
 $sj5array163 = sp + 440|0;
 $j5valid164 = sp + 5133|0;
 $x326 = sp + 424|0;
 $evalcond167 = sp + 328|0;
 $vinfos168 = sp + 4604|0;
 $vfree169 = sp + 4592|0;
 $j5array170 = sp + 232|0;
 $cj5array171 = sp + 224|0;
 $sj5array172 = sp + 216|0;
 $j5valid173 = sp + 5132|0;
 $x338 = sp + 200|0;
 $x339 = sp + 184|0;
 $evalcond176 = sp + 88|0;
 $vinfos177 = sp + 4572|0;
 $vfree178 = sp + 4560|0;
 $0 = $this;
 $1 = $solutions;
 $4 = $0;
 $rotationiter = 0;
 L1: while(1) {
  $5 = $rotationiter;
  $6 = ($5|0)<(1);
  if (!($6)) {
   label = 1488;
   break;
  }
  $7 = (($4) + 8|0);
  $8 = +HEAPF64[$7>>3];
  $9 = (($4) + 320|0);
  $10 = +HEAPF64[$9>>3];
  $11 = $8 * $10;
  $x78 = $11;
  $12 = (($4) + 16|0);
  $13 = +HEAPF64[$12>>3];
  $14 = 1.0 * $13;
  $x79 = $14;
  $15 = (($4) + 8|0);
  $16 = +HEAPF64[$15>>3];
  $17 = (($4) + 344|0);
  $18 = +HEAPF64[$17>>3];
  $19 = $16 * $18;
  $x80 = $19;
  $20 = (($4) + 88|0);
  $21 = +HEAPF64[$20>>3];
  $22 = 1.0 * $21;
  $x81 = $22;
  $23 = (($4) + 48|0);
  $24 = +HEAPF64[$23>>3];
  $25 = (($4) + 96|0);
  $26 = +HEAPF64[$25>>3];
  $27 = $24 * $26;
  $x82 = $27;
  $28 = (($4) + 8|0);
  $29 = +HEAPF64[$28>>3];
  $30 = (($4) + 368|0);
  $31 = +HEAPF64[$30>>3];
  $32 = $29 * $31;
  $x83 = $32;
  $33 = (($4) + 56|0);
  $34 = +HEAPF64[$33>>3];
  $35 = (($4) + 96|0);
  $36 = +HEAPF64[$35>>3];
  $37 = $34 * $36;
  $38 = (($4) + 48|0);
  $39 = +HEAPF64[$38>>3];
  $40 = -1.0 * $39;
  $41 = $x81;
  $42 = $40 * $41;
  $43 = $37 + $42;
  $x84 = $43;
  $44 = (($4) + 88|0);
  $45 = +HEAPF64[$44>>3];
  $46 = (($4) + 56|0);
  $47 = +HEAPF64[$46>>3];
  $48 = $45 * $47;
  $49 = $x82;
  $50 = $48 + $49;
  $x85 = $50;
  $51 = (($4) + 8|0);
  $52 = +HEAPF64[$51>>3];
  $53 = $x84;
  $54 = $52 * $53;
  $x86 = $54;
  $55 = (($4) + 56|0);
  $56 = +HEAPF64[$55>>3];
  $57 = -1.0 * $56;
  $58 = $x81;
  $59 = $57 * $58;
  $60 = $x82;
  $61 = -1.0 * $60;
  $62 = $59 + $61;
  $x87 = $62;
  $63 = (($4) + 248|0);
  $64 = +HEAPF64[$63>>3];
  $65 = -1.0 * $64;
  $66 = $x79;
  $67 = $65 * $66;
  $68 = $x87;
  $69 = $67 * $68;
  $70 = $x78;
  $71 = $x87;
  $72 = $70 * $71;
  $73 = $69 + $72;
  $74 = (($4) + 392|0);
  $75 = +HEAPF64[$74>>3];
  $76 = $x84;
  $77 = $75 * $76;
  $78 = $73 + $77;
  $79 = (($4) + 240|0);
  HEAPF64[$79>>3] = $78;
  $80 = (($4) + 416|0);
  $81 = +HEAPF64[$80>>3];
  $82 = $x84;
  $83 = $81 * $82;
  $84 = $x80;
  $85 = $x87;
  $86 = $84 * $85;
  $87 = $83 + $86;
  $88 = (($4) + 272|0);
  $89 = +HEAPF64[$88>>3];
  $90 = -1.0 * $89;
  $91 = $x79;
  $92 = $90 * $91;
  $93 = $x87;
  $94 = $92 * $93;
  $95 = $87 + $94;
  $96 = (($4) + 264|0);
  HEAPF64[$96>>3] = $95;
  $97 = (($4) + 296|0);
  $98 = +HEAPF64[$97>>3];
  $99 = -1.0 * $98;
  $100 = $x79;
  $101 = $99 * $100;
  $102 = $x87;
  $103 = $101 * $102;
  $104 = $x83;
  $105 = $x87;
  $106 = $104 * $105;
  $107 = $103 + $106;
  $108 = (($4) + 440|0);
  $109 = +HEAPF64[$108>>3];
  $110 = $x84;
  $111 = $109 * $110;
  $112 = $107 + $111;
  $113 = (($4) + 288|0);
  HEAPF64[$113>>3] = $112;
  $114 = (($4) + 320|0);
  $115 = +HEAPF64[$114>>3];
  $116 = (($4) + 16|0);
  $117 = +HEAPF64[$116>>3];
  $118 = $115 * $117;
  $119 = (($4) + 8|0);
  $120 = +HEAPF64[$119>>3];
  $121 = (($4) + 248|0);
  $122 = +HEAPF64[$121>>3];
  $123 = $120 * $122;
  $124 = $118 + $123;
  $125 = (($4) + 312|0);
  HEAPF64[$125>>3] = $124;
  $126 = (($4) + 344|0);
  $127 = +HEAPF64[$126>>3];
  $128 = (($4) + 16|0);
  $129 = +HEAPF64[$128>>3];
  $130 = $127 * $129;
  $131 = (($4) + 8|0);
  $132 = +HEAPF64[$131>>3];
  $133 = (($4) + 272|0);
  $134 = +HEAPF64[$133>>3];
  $135 = $132 * $134;
  $136 = $130 + $135;
  $137 = (($4) + 336|0);
  HEAPF64[$137>>3] = $136;
  $138 = (($4) + 368|0);
  $139 = +HEAPF64[$138>>3];
  $140 = (($4) + 16|0);
  $141 = +HEAPF64[$140>>3];
  $142 = $139 * $141;
  $143 = (($4) + 8|0);
  $144 = +HEAPF64[$143>>3];
  $145 = (($4) + 296|0);
  $146 = +HEAPF64[$145>>3];
  $147 = $144 * $146;
  $148 = $142 + $147;
  $149 = (($4) + 360|0);
  HEAPF64[$149>>3] = $148;
  $150 = (($4) + 248|0);
  $151 = +HEAPF64[$150>>3];
  $152 = -1.0 * $151;
  $153 = $x79;
  $154 = $152 * $153;
  $155 = $x84;
  $156 = $154 * $155;
  $157 = $x78;
  $158 = $x84;
  $159 = $157 * $158;
  $160 = $156 + $159;
  $161 = (($4) + 392|0);
  $162 = +HEAPF64[$161>>3];
  $163 = $x85;
  $164 = $162 * $163;
  $165 = $160 + $164;
  $166 = (($4) + 384|0);
  HEAPF64[$166>>3] = $165;
  $167 = (($4) + 416|0);
  $168 = +HEAPF64[$167>>3];
  $169 = $x85;
  $170 = $168 * $169;
  $171 = $x80;
  $172 = $x84;
  $173 = $171 * $172;
  $174 = $170 + $173;
  $175 = (($4) + 272|0);
  $176 = +HEAPF64[$175>>3];
  $177 = -1.0 * $176;
  $178 = $x79;
  $179 = $177 * $178;
  $180 = $x84;
  $181 = $179 * $180;
  $182 = $174 + $181;
  $183 = (($4) + 408|0);
  HEAPF64[$183>>3] = $182;
  $184 = (($4) + 296|0);
  $185 = +HEAPF64[$184>>3];
  $186 = -1.0 * $185;
  $187 = $x79;
  $188 = $186 * $187;
  $189 = $x84;
  $190 = $188 * $189;
  $191 = $x83;
  $192 = $x84;
  $193 = $191 * $192;
  $194 = $190 + $193;
  $195 = (($4) + 440|0);
  $196 = +HEAPF64[$195>>3];
  $197 = $x85;
  $198 = $196 * $197;
  $199 = $194 + $198;
  $200 = (($4) + 432|0);
  HEAPF64[$200>>3] = $199;
  ;HEAP8[$j4valid+0>>0]=0|0;HEAP8[$j4valid+1>>0]=0|0;
  $201 = (($4) + 550|0);
  HEAP8[$201>>0] = 2;
  $202 = (($4) + 432|0);
  $203 = +HEAPF64[$202>>3];
  HEAPF64[$cj4array>>3] = $203;
  $204 = +HEAPF64[$cj4array>>3];
  $205 = $204 >= -1.0000020000000001;
  if ($205) {
   $206 = +HEAPF64[$cj4array>>3];
   $207 = $206 <= 1.0000020000000001;
   if ($207) {
    $208 = (($j4valid) + 1|0);
    HEAP8[$208>>0] = 1;
    HEAP8[$j4valid>>0] = 1;
    $209 = +HEAPF64[$cj4array>>3];
    $210 = (+__Z6IKacosd($209));
    HEAPF64[$j4array>>3] = $210;
    $211 = +HEAPF64[$j4array>>3];
    $212 = (+__Z5IKsind($211));
    HEAPF64[$sj4array>>3] = $212;
    $213 = +HEAPF64[$cj4array>>3];
    $214 = (($cj4array) + 8|0);
    HEAPF64[$214>>3] = $213;
    $215 = +HEAPF64[$j4array>>3];
    $216 = -$215;
    $217 = (($j4array) + 8|0);
    HEAPF64[$217>>3] = $216;
    $218 = +HEAPF64[$sj4array>>3];
    $219 = -$218;
    $220 = (($sj4array) + 8|0);
    HEAPF64[$220>>3] = $219;
   } else {
    label = 6;
   }
  } else {
   label = 6;
  }
  if ((label|0) == 6) {
   label = 0;
   $221 = +HEAPF64[$cj4array>>3];
   $222 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($221)|0);
   if ($222) {
    HEAP8[$j4valid>>0] = 1;
    HEAPF64[$cj4array>>3] = 1.0;
    HEAPF64[$sj4array>>3] = 0.0;
    HEAPF64[$j4array>>3] = 0.0;
   }
  }
  $ij4 = 0;
  while(1) {
   $223 = $ij4;
   $224 = ($223|0)<(2);
   if (!($224)) {
    break;
   }
   $225 = $ij4;
   $226 = (($j4valid) + ($225)|0);
   $227 = HEAP8[$226>>0]|0;
   $228 = $227&1;
   do {
    if ($228) {
     $229 = $ij4;
     $230 = $229&255;
     $231 = (($4) + 548|0);
     HEAP8[$231>>0] = $230;
     $232 = (($4) + 548|0);
     $233 = (($232) + 1|0);
     HEAP8[$233>>0] = -1;
     $234 = $ij4;
     $235 = (($234) + 1)|0;
     $iij4 = $235;
     while(1) {
      $236 = $iij4;
      $237 = ($236|0)<(2);
      if (!($237)) {
       break;
      }
      $238 = $iij4;
      $239 = (($j4valid) + ($238)|0);
      $240 = HEAP8[$239>>0]|0;
      $241 = $240&1;
      if ($241) {
       $242 = $ij4;
       $243 = (($cj4array) + ($242<<3)|0);
       $244 = +HEAPF64[$243>>3];
       $245 = $iij4;
       $246 = (($cj4array) + ($245<<3)|0);
       $247 = +HEAPF64[$246>>3];
       $248 = $244 - $247;
       $249 = (+__Z5IKabsd($248));
       $250 = $249 < 9.9999999999999995E-7;
       if ($250) {
        $251 = $ij4;
        $252 = (($sj4array) + ($251<<3)|0);
        $253 = +HEAPF64[$252>>3];
        $254 = $iij4;
        $255 = (($sj4array) + ($254<<3)|0);
        $256 = +HEAPF64[$255>>3];
        $257 = $253 - $256;
        $258 = (+__Z5IKabsd($257));
        $259 = $258 < 9.9999999999999995E-7;
        if ($259) {
         label = 18;
         break;
        }
       }
      }
      $266 = $iij4;
      $267 = (($266) + 1)|0;
      $iij4 = $267;
     }
     if ((label|0) == 18) {
      label = 0;
      $260 = $iij4;
      $261 = (($j4valid) + ($260)|0);
      HEAP8[$261>>0] = 0;
      $262 = $iij4;
      $263 = $262&255;
      $264 = (($4) + 548|0);
      $265 = (($264) + 1|0);
      HEAP8[$265>>0] = $263;
     }
     $268 = $ij4;
     $269 = (($j4array) + ($268<<3)|0);
     $270 = +HEAPF64[$269>>3];
     $271 = (($4) + 160|0);
     HEAPF64[$271>>3] = $270;
     $272 = $ij4;
     $273 = (($cj4array) + ($272<<3)|0);
     $274 = +HEAPF64[$273>>3];
     $275 = (($4) + 168|0);
     HEAPF64[$275>>3] = $274;
     $276 = $ij4;
     $277 = (($sj4array) + ($276<<3)|0);
     $278 = +HEAPF64[$277>>3];
     $279 = (($4) + 176|0);
     HEAPF64[$279>>3] = $278;
     $280 = (($4) + 8|0);
     $281 = +HEAPF64[$280>>3];
     $282 = (($4) + 320|0);
     $283 = +HEAPF64[$282>>3];
     $284 = $281 * $283;
     $x88 = $284;
     $285 = (($4) + 16|0);
     $286 = +HEAPF64[$285>>3];
     $287 = 1.0 * $286;
     $x89 = $287;
     $288 = (($4) + 8|0);
     $289 = +HEAPF64[$288>>3];
     $290 = (($4) + 344|0);
     $291 = +HEAPF64[$290>>3];
     $292 = $289 * $291;
     $x90 = $292;
     $293 = (($4) + 88|0);
     $294 = +HEAPF64[$293>>3];
     $295 = 1.0 * $294;
     $x91 = $295;
     $296 = (($4) + 48|0);
     $297 = +HEAPF64[$296>>3];
     $298 = (($4) + 96|0);
     $299 = +HEAPF64[$298>>3];
     $300 = $297 * $299;
     $x92 = $300;
     $301 = (($4) + 8|0);
     $302 = +HEAPF64[$301>>3];
     $303 = (($4) + 368|0);
     $304 = +HEAPF64[$303>>3];
     $305 = $302 * $304;
     $x93 = $305;
     $306 = $x84;
     $x94 = $306;
     $307 = (($4) + 88|0);
     $308 = +HEAPF64[$307>>3];
     $309 = (($4) + 56|0);
     $310 = +HEAPF64[$309>>3];
     $311 = $308 * $310;
     $312 = $x92;
     $313 = $311 + $312;
     $x95 = $313;
     $314 = (($4) + 8|0);
     $315 = +HEAPF64[$314>>3];
     $316 = $x94;
     $317 = $315 * $316;
     $x96 = $317;
     $318 = $x87;
     $x97 = $318;
     $319 = (($4) + 392|0);
     $320 = +HEAPF64[$319>>3];
     $321 = $x94;
     $322 = $320 * $321;
     $323 = $x88;
     $324 = $x97;
     $325 = $323 * $324;
     $326 = $322 + $325;
     $327 = (($4) + 248|0);
     $328 = +HEAPF64[$327>>3];
     $329 = -1.0 * $328;
     $330 = $x89;
     $331 = $329 * $330;
     $332 = $x97;
     $333 = $331 * $332;
     $334 = $326 + $333;
     $335 = (($4) + 240|0);
     HEAPF64[$335>>3] = $334;
     $336 = (($4) + 416|0);
     $337 = +HEAPF64[$336>>3];
     $338 = $x94;
     $339 = $337 * $338;
     $340 = $x90;
     $341 = $x97;
     $342 = $340 * $341;
     $343 = $339 + $342;
     $344 = (($4) + 272|0);
     $345 = +HEAPF64[$344>>3];
     $346 = -1.0 * $345;
     $347 = $x89;
     $348 = $346 * $347;
     $349 = $x97;
     $350 = $348 * $349;
     $351 = $343 + $350;
     $352 = (($4) + 264|0);
     HEAPF64[$352>>3] = $351;
     $353 = (($4) + 296|0);
     $354 = +HEAPF64[$353>>3];
     $355 = -1.0 * $354;
     $356 = $x89;
     $357 = $355 * $356;
     $358 = $x97;
     $359 = $357 * $358;
     $360 = $x93;
     $361 = $x97;
     $362 = $360 * $361;
     $363 = $359 + $362;
     $364 = (($4) + 440|0);
     $365 = +HEAPF64[$364>>3];
     $366 = $x94;
     $367 = $365 * $366;
     $368 = $363 + $367;
     $369 = (($4) + 288|0);
     HEAPF64[$369>>3] = $368;
     $370 = (($4) + 320|0);
     $371 = +HEAPF64[$370>>3];
     $372 = (($4) + 16|0);
     $373 = +HEAPF64[$372>>3];
     $374 = $371 * $373;
     $375 = (($4) + 8|0);
     $376 = +HEAPF64[$375>>3];
     $377 = (($4) + 248|0);
     $378 = +HEAPF64[$377>>3];
     $379 = $376 * $378;
     $380 = $374 + $379;
     $381 = (($4) + 312|0);
     HEAPF64[$381>>3] = $380;
     $382 = (($4) + 344|0);
     $383 = +HEAPF64[$382>>3];
     $384 = (($4) + 16|0);
     $385 = +HEAPF64[$384>>3];
     $386 = $383 * $385;
     $387 = (($4) + 8|0);
     $388 = +HEAPF64[$387>>3];
     $389 = (($4) + 272|0);
     $390 = +HEAPF64[$389>>3];
     $391 = $388 * $390;
     $392 = $386 + $391;
     $393 = (($4) + 336|0);
     HEAPF64[$393>>3] = $392;
     $394 = (($4) + 368|0);
     $395 = +HEAPF64[$394>>3];
     $396 = (($4) + 16|0);
     $397 = +HEAPF64[$396>>3];
     $398 = $395 * $397;
     $399 = (($4) + 8|0);
     $400 = +HEAPF64[$399>>3];
     $401 = (($4) + 296|0);
     $402 = +HEAPF64[$401>>3];
     $403 = $400 * $402;
     $404 = $398 + $403;
     $405 = (($4) + 360|0);
     HEAPF64[$405>>3] = $404;
     $406 = (($4) + 392|0);
     $407 = +HEAPF64[$406>>3];
     $408 = $x95;
     $409 = $407 * $408;
     $410 = $x88;
     $411 = $x94;
     $412 = $410 * $411;
     $413 = $409 + $412;
     $414 = (($4) + 248|0);
     $415 = +HEAPF64[$414>>3];
     $416 = -1.0 * $415;
     $417 = $x89;
     $418 = $416 * $417;
     $419 = $x94;
     $420 = $418 * $419;
     $421 = $413 + $420;
     $422 = (($4) + 384|0);
     HEAPF64[$422>>3] = $421;
     $423 = (($4) + 416|0);
     $424 = +HEAPF64[$423>>3];
     $425 = $x95;
     $426 = $424 * $425;
     $427 = $x90;
     $428 = $x94;
     $429 = $427 * $428;
     $430 = $426 + $429;
     $431 = (($4) + 272|0);
     $432 = +HEAPF64[$431>>3];
     $433 = -1.0 * $432;
     $434 = $x89;
     $435 = $433 * $434;
     $436 = $x94;
     $437 = $435 * $436;
     $438 = $430 + $437;
     $439 = (($4) + 408|0);
     HEAPF64[$439>>3] = $438;
     $440 = (($4) + 296|0);
     $441 = +HEAPF64[$440>>3];
     $442 = -1.0 * $441;
     $443 = $x89;
     $444 = $442 * $443;
     $445 = $x94;
     $446 = $444 * $445;
     $447 = $x93;
     $448 = $x94;
     $449 = $447 * $448;
     $450 = $446 + $449;
     $451 = (($4) + 440|0);
     $452 = +HEAPF64[$451>>3];
     $453 = $x95;
     $454 = $452 * $453;
     $455 = $450 + $454;
     $456 = (($4) + 432|0);
     HEAPF64[$456>>3] = $455;
     $457 = (($4) + 176|0);
     $458 = +HEAPF64[$457>>3];
     HEAPF64[$j3eval>>3] = $458;
     $459 = (($4) + 176|0);
     $460 = +HEAPF64[$459>>3];
     $461 = (+__Z6IKsignd($460));
     $462 = (($j3eval) + 8|0);
     HEAPF64[$462>>3] = $461;
     $463 = +HEAPF64[$j3eval>>3];
     $464 = (+__Z5IKabsd($463));
     $465 = $464 < 9.9999999999999995E-7;
     if ($465) {
      label = 23;
     } else {
      $466 = (($j3eval) + 8|0);
      $467 = +HEAPF64[$466>>3];
      $468 = (+__Z5IKabsd($467));
      $469 = $468 < 9.9999999999999995E-7;
      if ($469) {
       label = 23;
      } else {
       ;HEAP8[$j3valid103+0>>0]=0|0;
       $6839 = (($4) + 547|0);
       HEAP8[$6839>>0] = 1;
       $6840 = (($4) + 176|0);
       $6841 = +HEAPF64[$6840>>3];
       $6842 = (+__Z6IKsignd($6841));
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x240,$6842,-1);
       $6843 = (($x240) + 8|0);
       $6844 = HEAP8[$6843>>0]|0;
       $6845 = $6844&1;
       if (!($6845)) {
        break;
       }
       $6846 = (($4) + 288|0);
       $6847 = +HEAPF64[$6846>>3];
       $6848 = (($4) + 360|0);
       $6849 = +HEAPF64[$6848>>3];
       $6850 = -1.0 * $6849;
       __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x241,$6847,$6850,1.9999999999999999E-6);
       $6851 = (($x241) + 8|0);
       $6852 = HEAP8[$6851>>0]|0;
       $6853 = $6852&1;
       if (!($6853)) {
        break;
       }
       $6854 = +HEAPF64[$x240>>3];
       $6855 = 1.5707963267949001 * $6854;
       $6856 = -1.5707963267949001 + $6855;
       $6857 = +HEAPF64[$x241>>3];
       $6858 = $6856 + $6857;
       HEAPF64[$j3array100>>3] = $6858;
       $6859 = +HEAPF64[$j3array100>>3];
       $6860 = (+__Z5IKsind($6859));
       HEAPF64[$sj3array102>>3] = $6860;
       $6861 = +HEAPF64[$j3array100>>3];
       $6862 = (+__Z5IKcosd($6861));
       HEAPF64[$cj3array101>>3] = $6862;
       $6863 = +HEAPF64[$j3array100>>3];
       $6864 = $6863 > 3.14159265358979;
       if ($6864) {
        $6865 = +HEAPF64[$j3array100>>3];
        $6866 = $6865 - 6.2831853071795898;
        HEAPF64[$j3array100>>3] = $6866;
       } else {
        $6867 = +HEAPF64[$j3array100>>3];
        $6868 = $6867 < -3.14159265358979;
        if ($6868) {
         $6869 = +HEAPF64[$j3array100>>3];
         $6870 = $6869 + 6.2831853071795898;
         HEAPF64[$j3array100>>3] = $6870;
        }
       }
       HEAP8[$j3valid103>>0] = 1;
       $ij3104 = 0;
       while(1) {
        $6871 = $ij3104;
        $6872 = ($6871|0)<(1);
        if (!($6872)) {
         break;
        }
        $6873 = $ij3104;
        $6874 = (($j3valid103) + ($6873)|0);
        $6875 = HEAP8[$6874>>0]|0;
        $6876 = $6875&1;
        L49: do {
         if ($6876) {
          $6877 = $ij3104;
          $6878 = $6877&255;
          $6879 = (($4) + 545|0);
          HEAP8[$6879>>0] = $6878;
          $6880 = (($4) + 545|0);
          $6881 = (($6880) + 1|0);
          HEAP8[$6881>>0] = -1;
          $6882 = $ij3104;
          $6883 = (($6882) + 1)|0;
          $iij3105 = $6883;
          L52: while(1) {
           $6884 = $iij3105;
           $6885 = ($6884|0)<(1);
           if (!($6885)) {
            break;
           }
           $6886 = $iij3105;
           $6887 = (($j3valid103) + ($6886)|0);
           $6888 = HEAP8[$6887>>0]|0;
           $6889 = $6888&1;
           do {
            if ($6889) {
             $6890 = $ij3104;
             $6891 = (($cj3array101) + ($6890<<3)|0);
             $6892 = +HEAPF64[$6891>>3];
             $6893 = $iij3105;
             $6894 = (($cj3array101) + ($6893<<3)|0);
             $6895 = +HEAPF64[$6894>>3];
             $6896 = $6892 - $6895;
             $6897 = (+__Z5IKabsd($6896));
             $6898 = $6897 < 9.9999999999999995E-7;
             if (!($6898)) {
              break;
             }
             $6899 = $ij3104;
             $6900 = (($sj3array102) + ($6899<<3)|0);
             $6901 = +HEAPF64[$6900>>3];
             $6902 = $iij3105;
             $6903 = (($sj3array102) + ($6902<<3)|0);
             $6904 = +HEAPF64[$6903>>3];
             $6905 = $6901 - $6904;
             $6906 = (+__Z5IKabsd($6905));
             $6907 = $6906 < 9.9999999999999995E-7;
             if ($6907) {
              label = 886;
              break L52;
             }
            }
           } while(0);
           $6914 = $iij3105;
           $6915 = (($6914) + 1)|0;
           $iij3105 = $6915;
          }
          if ((label|0) == 886) {
           label = 0;
           $6908 = $iij3105;
           $6909 = (($j3valid103) + ($6908)|0);
           HEAP8[$6909>>0] = 0;
           $6910 = $iij3105;
           $6911 = $6910&255;
           $6912 = (($4) + 545|0);
           $6913 = (($6912) + 1|0);
           HEAP8[$6913>>0] = $6911;
          }
          $6916 = $ij3104;
          $6917 = (($j3array100) + ($6916<<3)|0);
          $6918 = +HEAPF64[$6917>>3];
          $6919 = (($4) + 120|0);
          HEAPF64[$6919>>3] = $6918;
          $6920 = $ij3104;
          $6921 = (($cj3array101) + ($6920<<3)|0);
          $6922 = +HEAPF64[$6921>>3];
          $6923 = (($4) + 128|0);
          HEAPF64[$6923>>3] = $6922;
          $6924 = $ij3104;
          $6925 = (($sj3array102) + ($6924<<3)|0);
          $6926 = +HEAPF64[$6925>>3];
          $6927 = (($4) + 136|0);
          HEAPF64[$6927>>3] = $6926;
          $6928 = (($4) + 120|0);
          $6929 = +HEAPF64[$6928>>3];
          $6930 = (+__Z5IKsind($6929));
          $x242 = $6930;
          $6931 = (($4) + 120|0);
          $6932 = +HEAPF64[$6931>>3];
          $6933 = (+__Z5IKcosd($6932));
          $x243 = $6933;
          $6934 = (($4) + 176|0);
          $6935 = +HEAPF64[$6934>>3];
          $6936 = 1.0 * $6935;
          $x244 = $6936;
          $6937 = (($4) + 360|0);
          $6938 = +HEAPF64[$6937>>3];
          $6939 = $x243;
          $6940 = $6938 * $6939;
          $x245 = $6940;
          $6941 = (($4) + 176|0);
          $6942 = +HEAPF64[$6941>>3];
          $6943 = $x242;
          $6944 = $6942 * $6943;
          $x246 = $6944;
          $6945 = (($4) + 288|0);
          $6946 = +HEAPF64[$6945>>3];
          $6947 = 1.0 * $6946;
          $6948 = $x242;
          $6949 = $6947 * $6948;
          $x247 = $6949;
          $6950 = (($4) + 360|0);
          $6951 = +HEAPF64[$6950>>3];
          $6952 = (($4) + 176|0);
          $6953 = +HEAPF64[$6952>>3];
          $6954 = $x243;
          $6955 = $6953 * $6954;
          $6956 = $6951 + $6955;
          HEAPF64[$evalcond106>>3] = $6956;
          $6957 = $x242;
          $6958 = -1.0 * $6957;
          $6959 = $x244;
          $6960 = $6958 * $6959;
          $6961 = (($4) + 288|0);
          $6962 = +HEAPF64[$6961>>3];
          $6963 = $6960 + $6962;
          $6964 = (($evalcond106) + 8|0);
          HEAPF64[$6964>>3] = $6963;
          $6965 = (($4) + 360|0);
          $6966 = +HEAPF64[$6965>>3];
          $6967 = $x242;
          $6968 = $6966 * $6967;
          $6969 = (($4) + 288|0);
          $6970 = +HEAPF64[$6969>>3];
          $6971 = $x243;
          $6972 = $6970 * $6971;
          $6973 = $6968 + $6972;
          $6974 = (($evalcond106) + 16|0);
          HEAPF64[$6974>>3] = $6973;
          $6975 = (($4) + 176|0);
          $6976 = +HEAPF64[$6975>>3];
          $6977 = $x245;
          $6978 = $6976 + $6977;
          $6979 = $x247;
          $6980 = -1.0 * $6979;
          $6981 = $6978 + $6980;
          $6982 = (($evalcond106) + 24|0);
          HEAPF64[$6982>>3] = $6981;
          $6983 = (($4) + 168|0);
          $6984 = +HEAPF64[$6983>>3];
          $6985 = -1.0 * $6984;
          $6986 = $x247;
          $6987 = $6985 * $6986;
          $6988 = (($4) + 168|0);
          $6989 = +HEAPF64[$6988>>3];
          $6990 = $x245;
          $6991 = $6989 * $6990;
          $6992 = $6987 + $6991;
          $6993 = (($4) + 432|0);
          $6994 = +HEAPF64[$6993>>3];
          $6995 = (($4) + 176|0);
          $6996 = +HEAPF64[$6995>>3];
          $6997 = $6994 * $6996;
          $6998 = $6992 + $6997;
          $6999 = (($evalcond106) + 32|0);
          HEAPF64[$6999>>3] = $6998;
          $7000 = (($4) + 312|0);
          $7001 = +HEAPF64[$7000>>3];
          $7002 = -1.0 * $7001;
          $7003 = $x243;
          $7004 = $7002 * $7003;
          $7005 = $x244;
          $7006 = $7004 * $7005;
          $7007 = (($4) + 168|0);
          $7008 = +HEAPF64[$7007>>3];
          $7009 = (($4) + 384|0);
          $7010 = +HEAPF64[$7009>>3];
          $7011 = $7008 * $7010;
          $7012 = $7006 + $7011;
          $7013 = (($4) + 240|0);
          $7014 = +HEAPF64[$7013>>3];
          $7015 = $x246;
          $7016 = $7014 * $7015;
          $7017 = $7012 + $7016;
          $7018 = (($evalcond106) + 40|0);
          HEAPF64[$7018>>3] = $7017;
          $7019 = (($4) + 168|0);
          $7020 = +HEAPF64[$7019>>3];
          $7021 = (($4) + 408|0);
          $7022 = +HEAPF64[$7021>>3];
          $7023 = $7020 * $7022;
          $7024 = (($4) + 264|0);
          $7025 = +HEAPF64[$7024>>3];
          $7026 = $x246;
          $7027 = $7025 * $7026;
          $7028 = $7023 + $7027;
          $7029 = (($4) + 336|0);
          $7030 = +HEAPF64[$7029>>3];
          $7031 = -1.0 * $7030;
          $7032 = $x243;
          $7033 = $7031 * $7032;
          $7034 = $x244;
          $7035 = $7033 * $7034;
          $7036 = $7028 + $7035;
          $7037 = (($evalcond106) + 48|0);
          HEAPF64[$7037>>3] = $7036;
          $7038 = (($4) + 168|0);
          $7039 = +HEAPF64[$7038>>3];
          $7040 = (($4) + 432|0);
          $7041 = +HEAPF64[$7040>>3];
          $7042 = $7039 * $7041;
          $7043 = -1.0 + $7042;
          $7044 = (($4) + 288|0);
          $7045 = +HEAPF64[$7044>>3];
          $7046 = $x246;
          $7047 = $7045 * $7046;
          $7048 = $7043 + $7047;
          $7049 = $x244;
          $7050 = -1.0 * $7049;
          $7051 = $x245;
          $7052 = $7050 * $7051;
          $7053 = $7048 + $7052;
          $7054 = (($evalcond106) + 56|0);
          HEAPF64[$7054>>3] = $7053;
          $7055 = +HEAPF64[$evalcond106>>3];
          $7056 = (+__Z5IKabsd($7055));
          $7057 = $7056 > 5.0000000000000004E-6;
          do {
           if (!($7057)) {
            $7058 = (($evalcond106) + 8|0);
            $7059 = +HEAPF64[$7058>>3];
            $7060 = (+__Z5IKabsd($7059));
            $7061 = $7060 > 5.0000000000000004E-6;
            if (!($7061)) {
             $7062 = (($evalcond106) + 16|0);
             $7063 = +HEAPF64[$7062>>3];
             $7064 = (+__Z5IKabsd($7063));
             $7065 = $7064 > 5.0000000000000004E-6;
             if ($7065) {
              break;
             }
             $7066 = (($evalcond106) + 24|0);
             $7067 = +HEAPF64[$7066>>3];
             $7068 = (+__Z5IKabsd($7067));
             $7069 = $7068 > 5.0000000000000004E-6;
             if ($7069) {
              break;
             }
             $7070 = (($evalcond106) + 32|0);
             $7071 = +HEAPF64[$7070>>3];
             $7072 = (+__Z5IKabsd($7071));
             $7073 = $7072 > 5.0000000000000004E-6;
             if ($7073) {
              break;
             }
             $7074 = (($evalcond106) + 40|0);
             $7075 = +HEAPF64[$7074>>3];
             $7076 = (+__Z5IKabsd($7075));
             $7077 = $7076 > 5.0000000000000004E-6;
             if ($7077) {
              break;
             }
             $7078 = (($evalcond106) + 48|0);
             $7079 = +HEAPF64[$7078>>3];
             $7080 = (+__Z5IKabsd($7079));
             $7081 = $7080 > 5.0000000000000004E-6;
             if ($7081) {
              break;
             }
             $7082 = (($evalcond106) + 56|0);
             $7083 = +HEAPF64[$7082>>3];
             $7084 = (+__Z5IKabsd($7083));
             $7085 = $7084 > 5.0000000000000004E-6;
             if ($7085) {
              break;
             }
             $7086 = (($4) + 8|0);
             $7087 = +HEAPF64[$7086>>3];
             $7088 = (($4) + 320|0);
             $7089 = +HEAPF64[$7088>>3];
             $7090 = $7087 * $7089;
             $x248 = $7090;
             $7091 = (($4) + 16|0);
             $7092 = +HEAPF64[$7091>>3];
             $7093 = 1.0 * $7092;
             $x249 = $7093;
             $7094 = (($4) + 8|0);
             $7095 = +HEAPF64[$7094>>3];
             $7096 = (($4) + 344|0);
             $7097 = +HEAPF64[$7096>>3];
             $7098 = $7095 * $7097;
             $x250 = $7098;
             $7099 = (($4) + 88|0);
             $7100 = +HEAPF64[$7099>>3];
             $7101 = 1.0 * $7100;
             $x251 = $7101;
             $7102 = (($4) + 48|0);
             $7103 = +HEAPF64[$7102>>3];
             $7104 = (($4) + 96|0);
             $7105 = +HEAPF64[$7104>>3];
             $7106 = $7103 * $7105;
             $x252 = $7106;
             $7107 = (($4) + 8|0);
             $7108 = +HEAPF64[$7107>>3];
             $7109 = (($4) + 368|0);
             $7110 = +HEAPF64[$7109>>3];
             $7111 = $7108 * $7110;
             $x253 = $7111;
             $7112 = $x84;
             $x254 = $7112;
             $7113 = (($4) + 88|0);
             $7114 = +HEAPF64[$7113>>3];
             $7115 = (($4) + 56|0);
             $7116 = +HEAPF64[$7115>>3];
             $7117 = $7114 * $7116;
             $7118 = $x252;
             $7119 = $7117 + $7118;
             $x255 = $7119;
             $7120 = (($4) + 8|0);
             $7121 = +HEAPF64[$7120>>3];
             $7122 = $x254;
             $7123 = $7121 * $7122;
             $x256 = $7123;
             $7124 = $x87;
             $x257 = $7124;
             $7125 = $x248;
             $7126 = $x257;
             $7127 = $7125 * $7126;
             $7128 = (($4) + 248|0);
             $7129 = +HEAPF64[$7128>>3];
             $7130 = -1.0 * $7129;
             $7131 = $x249;
             $7132 = $7130 * $7131;
             $7133 = $x257;
             $7134 = $7132 * $7133;
             $7135 = $7127 + $7134;
             $7136 = (($4) + 392|0);
             $7137 = +HEAPF64[$7136>>3];
             $7138 = $x254;
             $7139 = $7137 * $7138;
             $7140 = $7135 + $7139;
             $7141 = (($4) + 240|0);
             HEAPF64[$7141>>3] = $7140;
             $7142 = (($4) + 416|0);
             $7143 = +HEAPF64[$7142>>3];
             $7144 = $x254;
             $7145 = $7143 * $7144;
             $7146 = (($4) + 272|0);
             $7147 = +HEAPF64[$7146>>3];
             $7148 = -1.0 * $7147;
             $7149 = $x249;
             $7150 = $7148 * $7149;
             $7151 = $x257;
             $7152 = $7150 * $7151;
             $7153 = $7145 + $7152;
             $7154 = $x250;
             $7155 = $x257;
             $7156 = $7154 * $7155;
             $7157 = $7153 + $7156;
             $7158 = (($4) + 264|0);
             HEAPF64[$7158>>3] = $7157;
             $7159 = (($4) + 296|0);
             $7160 = +HEAPF64[$7159>>3];
             $7161 = -1.0 * $7160;
             $7162 = $x249;
             $7163 = $7161 * $7162;
             $7164 = $x257;
             $7165 = $7163 * $7164;
             $7166 = $x253;
             $7167 = $x257;
             $7168 = $7166 * $7167;
             $7169 = $7165 + $7168;
             $7170 = (($4) + 440|0);
             $7171 = +HEAPF64[$7170>>3];
             $7172 = $x254;
             $7173 = $7171 * $7172;
             $7174 = $7169 + $7173;
             $7175 = (($4) + 288|0);
             HEAPF64[$7175>>3] = $7174;
             $7176 = (($4) + 320|0);
             $7177 = +HEAPF64[$7176>>3];
             $7178 = (($4) + 16|0);
             $7179 = +HEAPF64[$7178>>3];
             $7180 = $7177 * $7179;
             $7181 = (($4) + 8|0);
             $7182 = +HEAPF64[$7181>>3];
             $7183 = (($4) + 248|0);
             $7184 = +HEAPF64[$7183>>3];
             $7185 = $7182 * $7184;
             $7186 = $7180 + $7185;
             $7187 = (($4) + 312|0);
             HEAPF64[$7187>>3] = $7186;
             $7188 = (($4) + 344|0);
             $7189 = +HEAPF64[$7188>>3];
             $7190 = (($4) + 16|0);
             $7191 = +HEAPF64[$7190>>3];
             $7192 = $7189 * $7191;
             $7193 = (($4) + 8|0);
             $7194 = +HEAPF64[$7193>>3];
             $7195 = (($4) + 272|0);
             $7196 = +HEAPF64[$7195>>3];
             $7197 = $7194 * $7196;
             $7198 = $7192 + $7197;
             $7199 = (($4) + 336|0);
             HEAPF64[$7199>>3] = $7198;
             $7200 = (($4) + 368|0);
             $7201 = +HEAPF64[$7200>>3];
             $7202 = (($4) + 16|0);
             $7203 = +HEAPF64[$7202>>3];
             $7204 = $7201 * $7203;
             $7205 = (($4) + 8|0);
             $7206 = +HEAPF64[$7205>>3];
             $7207 = (($4) + 296|0);
             $7208 = +HEAPF64[$7207>>3];
             $7209 = $7206 * $7208;
             $7210 = $7204 + $7209;
             $7211 = (($4) + 360|0);
             HEAPF64[$7211>>3] = $7210;
             $7212 = $x248;
             $7213 = $x254;
             $7214 = $7212 * $7213;
             $7215 = (($4) + 248|0);
             $7216 = +HEAPF64[$7215>>3];
             $7217 = -1.0 * $7216;
             $7218 = $x249;
             $7219 = $7217 * $7218;
             $7220 = $x254;
             $7221 = $7219 * $7220;
             $7222 = $7214 + $7221;
             $7223 = (($4) + 392|0);
             $7224 = +HEAPF64[$7223>>3];
             $7225 = $x255;
             $7226 = $7224 * $7225;
             $7227 = $7222 + $7226;
             $7228 = (($4) + 384|0);
             HEAPF64[$7228>>3] = $7227;
             $7229 = (($4) + 416|0);
             $7230 = +HEAPF64[$7229>>3];
             $7231 = $x255;
             $7232 = $7230 * $7231;
             $7233 = (($4) + 272|0);
             $7234 = +HEAPF64[$7233>>3];
             $7235 = -1.0 * $7234;
             $7236 = $x249;
             $7237 = $7235 * $7236;
             $7238 = $x254;
             $7239 = $7237 * $7238;
             $7240 = $7232 + $7239;
             $7241 = $x250;
             $7242 = $x254;
             $7243 = $7241 * $7242;
             $7244 = $7240 + $7243;
             $7245 = (($4) + 408|0);
             HEAPF64[$7245>>3] = $7244;
             $7246 = (($4) + 296|0);
             $7247 = +HEAPF64[$7246>>3];
             $7248 = -1.0 * $7247;
             $7249 = $x249;
             $7250 = $7248 * $7249;
             $7251 = $x254;
             $7252 = $7250 * $7251;
             $7253 = $x253;
             $7254 = $x254;
             $7255 = $7253 * $7254;
             $7256 = $7252 + $7255;
             $7257 = (($4) + 440|0);
             $7258 = +HEAPF64[$7257>>3];
             $7259 = $x255;
             $7260 = $7258 * $7259;
             $7261 = $7256 + $7260;
             $7262 = (($4) + 432|0);
             HEAPF64[$7262>>3] = $7261;
             $7263 = (($4) + 176|0);
             $7264 = +HEAPF64[$7263>>3];
             HEAPF64[$j5eval107>>3] = $7264;
             $7265 = (($4) + 176|0);
             $7266 = +HEAPF64[$7265>>3];
             $7267 = (+__Z6IKsignd($7266));
             $7268 = (($j5eval107) + 8|0);
             HEAPF64[$7268>>3] = $7267;
             $7269 = +HEAPF64[$j5eval107>>3];
             $7270 = (+__Z5IKabsd($7269));
             $7271 = $7270 < 9.9999999999999995E-7;
             do {
              if ($7271) {
               label = 900;
              } else {
               $7272 = (($j5eval107) + 8|0);
               $7273 = +HEAPF64[$7272>>3];
               $7274 = (+__Z5IKabsd($7273));
               $7275 = $7274 < 9.9999999999999995E-7;
               if ($7275) {
                label = 900;
                break;
               }
               ;HEAP8[$j5valid173+0>>0]=0|0;
               $11084 = (($4) + 553|0);
               HEAP8[$11084>>0] = 1;
               $11085 = (($4) + 408|0);
               $11086 = +HEAPF64[$11085>>3];
               $11087 = -1.0 * $11086;
               $11088 = (($4) + 384|0);
               $11089 = +HEAPF64[$11088>>3];
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x338,$11087,$11089,1.9999999999999999E-6);
               $11090 = (($x338) + 8|0);
               $11091 = HEAP8[$11090>>0]|0;
               $11092 = $11091&1;
               if (!($11092)) {
                break L49;
               }
               $11093 = (($4) + 176|0);
               $11094 = +HEAPF64[$11093>>3];
               $11095 = (+__Z6IKsignd($11094));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x339,$11095,-1);
               $11096 = (($x339) + 8|0);
               $11097 = HEAP8[$11096>>0]|0;
               $11098 = $11097&1;
               if (!($11098)) {
                break L49;
               }
               $11099 = +HEAPF64[$x338>>3];
               $11100 = -1.5707963267949001 + $11099;
               $11101 = +HEAPF64[$x339>>3];
               $11102 = 1.5707963267949001 * $11101;
               $11103 = $11100 + $11102;
               HEAPF64[$j5array170>>3] = $11103;
               $11104 = +HEAPF64[$j5array170>>3];
               $11105 = (+__Z5IKsind($11104));
               HEAPF64[$sj5array172>>3] = $11105;
               $11106 = +HEAPF64[$j5array170>>3];
               $11107 = (+__Z5IKcosd($11106));
               HEAPF64[$cj5array171>>3] = $11107;
               $11108 = +HEAPF64[$j5array170>>3];
               $11109 = $11108 > 3.14159265358979;
               if ($11109) {
                $11110 = +HEAPF64[$j5array170>>3];
                $11111 = $11110 - 6.2831853071795898;
                HEAPF64[$j5array170>>3] = $11111;
               } else {
                $11112 = +HEAPF64[$j5array170>>3];
                $11113 = $11112 < -3.14159265358979;
                if ($11113) {
                 $11114 = +HEAPF64[$j5array170>>3];
                 $11115 = $11114 + 6.2831853071795898;
                 HEAPF64[$j5array170>>3] = $11115;
                }
               }
               HEAP8[$j5valid173>>0] = 1;
               $ij5174 = 0;
               while(1) {
                $11116 = $ij5174;
                $11117 = ($11116|0)<(1);
                if (!($11117)) {
                 break;
                }
                $11118 = $ij5174;
                $11119 = (($j5valid173) + ($11118)|0);
                $11120 = HEAP8[$11119>>0]|0;
                $11121 = $11120&1;
                L91: do {
                 if ($11121) {
                  $11122 = $ij5174;
                  $11123 = $11122&255;
                  $11124 = (($4) + 551|0);
                  HEAP8[$11124>>0] = $11123;
                  $11125 = (($4) + 551|0);
                  $11126 = (($11125) + 1|0);
                  HEAP8[$11126>>0] = -1;
                  $11127 = $ij5174;
                  $11128 = (($11127) + 1)|0;
                  $iij5175 = $11128;
                  L94: while(1) {
                   $11129 = $iij5175;
                   $11130 = ($11129|0)<(1);
                   if (!($11130)) {
                    break;
                   }
                   $11131 = $iij5175;
                   $11132 = (($j5valid173) + ($11131)|0);
                   $11133 = HEAP8[$11132>>0]|0;
                   $11134 = $11133&1;
                   do {
                    if ($11134) {
                     $11135 = $ij5174;
                     $11136 = (($cj5array171) + ($11135<<3)|0);
                     $11137 = +HEAPF64[$11136>>3];
                     $11138 = $iij5175;
                     $11139 = (($cj5array171) + ($11138<<3)|0);
                     $11140 = +HEAPF64[$11139>>3];
                     $11141 = $11137 - $11140;
                     $11142 = (+__Z5IKabsd($11141));
                     $11143 = $11142 < 9.9999999999999995E-7;
                     if (!($11143)) {
                      break;
                     }
                     $11144 = $ij5174;
                     $11145 = (($sj5array172) + ($11144<<3)|0);
                     $11146 = +HEAPF64[$11145>>3];
                     $11147 = $iij5175;
                     $11148 = (($sj5array172) + ($11147<<3)|0);
                     $11149 = +HEAPF64[$11148>>3];
                     $11150 = $11146 - $11149;
                     $11151 = (+__Z5IKabsd($11150));
                     $11152 = $11151 < 9.9999999999999995E-7;
                     if ($11152) {
                      label = 1424;
                      break L94;
                     }
                    }
                   } while(0);
                   $11159 = $iij5175;
                   $11160 = (($11159) + 1)|0;
                   $iij5175 = $11160;
                  }
                  if ((label|0) == 1424) {
                   label = 0;
                   $11153 = $iij5175;
                   $11154 = (($j5valid173) + ($11153)|0);
                   HEAP8[$11154>>0] = 0;
                   $11155 = $iij5175;
                   $11156 = $11155&255;
                   $11157 = (($4) + 551|0);
                   $11158 = (($11157) + 1|0);
                   HEAP8[$11158>>0] = $11156;
                  }
                  $11161 = $ij5174;
                  $11162 = (($j5array170) + ($11161<<3)|0);
                  $11163 = +HEAPF64[$11162>>3];
                  $11164 = (($4) + 200|0);
                  HEAPF64[$11164>>3] = $11163;
                  $11165 = $ij5174;
                  $11166 = (($cj5array171) + ($11165<<3)|0);
                  $11167 = +HEAPF64[$11166>>3];
                  $11168 = (($4) + 208|0);
                  HEAPF64[$11168>>3] = $11167;
                  $11169 = $ij5174;
                  $11170 = (($sj5array172) + ($11169<<3)|0);
                  $11171 = +HEAPF64[$11170>>3];
                  $11172 = (($4) + 216|0);
                  HEAPF64[$11172>>3] = $11171;
                  $11173 = (($4) + 200|0);
                  $11174 = +HEAPF64[$11173>>3];
                  $11175 = (+__Z5IKsind($11174));
                  $x340 = $11175;
                  $11176 = (($4) + 200|0);
                  $11177 = +HEAPF64[$11176>>3];
                  $11178 = (+__Z5IKcosd($11177));
                  $x341 = $11178;
                  $11179 = (($4) + 168|0);
                  $11180 = +HEAPF64[$11179>>3];
                  $11181 = (($4) + 136|0);
                  $11182 = +HEAPF64[$11181>>3];
                  $11183 = $11180 * $11182;
                  $x342 = $11183;
                  $11184 = (($4) + 128|0);
                  $11185 = +HEAPF64[$11184>>3];
                  $11186 = (($4) + 312|0);
                  $11187 = +HEAPF64[$11186>>3];
                  $11188 = $11185 * $11187;
                  $x343 = $11188;
                  $11189 = (($4) + 264|0);
                  $11190 = +HEAPF64[$11189>>3];
                  $11191 = 1.0 * $11190;
                  $x344 = $11191;
                  $11192 = (($4) + 168|0);
                  $11193 = +HEAPF64[$11192>>3];
                  $11194 = 1.0 * $11193;
                  $x345 = $11194;
                  $11195 = (($4) + 240|0);
                  $11196 = +HEAPF64[$11195>>3];
                  $11197 = 1.0 * $11196;
                  $x346 = $11197;
                  $11198 = (($4) + 128|0);
                  $11199 = +HEAPF64[$11198>>3];
                  $11200 = (($4) + 336|0);
                  $11201 = +HEAPF64[$11200>>3];
                  $11202 = $11199 * $11201;
                  $x347 = $11202;
                  $11203 = (($4) + 128|0);
                  $11204 = +HEAPF64[$11203>>3];
                  $11205 = $x341;
                  $11206 = $11204 * $11205;
                  $x348 = $11206;
                  $11207 = (($4) + 128|0);
                  $11208 = +HEAPF64[$11207>>3];
                  $11209 = $x340;
                  $11210 = $11208 * $11209;
                  $x349 = $11210;
                  $11211 = $x341;
                  $11212 = 1.0 * $11211;
                  $x350 = $11212;
                  $11213 = (($4) + 176|0);
                  $11214 = +HEAPF64[$11213>>3];
                  $11215 = $x340;
                  $11216 = $11214 * $11215;
                  $11217 = (($4) + 408|0);
                  $11218 = +HEAPF64[$11217>>3];
                  $11219 = $11216 + $11218;
                  HEAPF64[$evalcond176>>3] = $11219;
                  $11220 = (($4) + 384|0);
                  $11221 = +HEAPF64[$11220>>3];
                  $11222 = (($4) + 176|0);
                  $11223 = +HEAPF64[$11222>>3];
                  $11224 = -1.0 * $11223;
                  $11225 = $x350;
                  $11226 = $11224 * $11225;
                  $11227 = $11221 + $11226;
                  $11228 = (($evalcond176) + 8|0);
                  HEAPF64[$11228>>3] = $11227;
                  $11229 = (($4) + 312|0);
                  $11230 = +HEAPF64[$11229>>3];
                  $11231 = (($4) + 136|0);
                  $11232 = +HEAPF64[$11231>>3];
                  $11233 = $11230 * $11232;
                  $11234 = $x340;
                  $11235 = $11233 + $11234;
                  $11236 = (($4) + 128|0);
                  $11237 = +HEAPF64[$11236>>3];
                  $11238 = (($4) + 240|0);
                  $11239 = +HEAPF64[$11238>>3];
                  $11240 = $11237 * $11239;
                  $11241 = $11235 + $11240;
                  $11242 = (($evalcond176) + 16|0);
                  HEAPF64[$11242>>3] = $11241;
                  $11243 = (($4) + 336|0);
                  $11244 = +HEAPF64[$11243>>3];
                  $11245 = (($4) + 136|0);
                  $11246 = +HEAPF64[$11245>>3];
                  $11247 = $11244 * $11246;
                  $11248 = $x341;
                  $11249 = $11247 + $11248;
                  $11250 = (($4) + 128|0);
                  $11251 = +HEAPF64[$11250>>3];
                  $11252 = (($4) + 264|0);
                  $11253 = +HEAPF64[$11252>>3];
                  $11254 = $11251 * $11253;
                  $11255 = $11249 + $11254;
                  $11256 = (($evalcond176) + 24|0);
                  HEAPF64[$11256>>3] = $11255;
                  $11257 = $x349;
                  $11258 = $x341;
                  $11259 = $x342;
                  $11260 = $11258 * $11259;
                  $11261 = $11257 + $11260;
                  $11262 = (($4) + 240|0);
                  $11263 = +HEAPF64[$11262>>3];
                  $11264 = $11261 + $11263;
                  $11265 = (($evalcond176) + 32|0);
                  HEAPF64[$11265>>3] = $11264;
                  $11266 = (($4) + 136|0);
                  $11267 = +HEAPF64[$11266>>3];
                  $11268 = $x341;
                  $11269 = $11267 * $11268;
                  $11270 = (($4) + 168|0);
                  $11271 = +HEAPF64[$11270>>3];
                  $11272 = $x349;
                  $11273 = $11271 * $11272;
                  $11274 = $11269 + $11273;
                  $11275 = (($4) + 336|0);
                  $11276 = +HEAPF64[$11275>>3];
                  $11277 = $11274 + $11276;
                  $11278 = (($evalcond176) + 40|0);
                  HEAPF64[$11278>>3] = $11277;
                  $11279 = $x347;
                  $11280 = (($4) + 168|0);
                  $11281 = +HEAPF64[$11280>>3];
                  $11282 = $x340;
                  $11283 = $11281 * $11282;
                  $11284 = $11279 + $11283;
                  $11285 = (($4) + 136|0);
                  $11286 = +HEAPF64[$11285>>3];
                  $11287 = -1.0 * $11286;
                  $11288 = $x344;
                  $11289 = $11287 * $11288;
                  $11290 = $11284 + $11289;
                  $11291 = (($evalcond176) + 48|0);
                  HEAPF64[$11291>>3] = $11290;
                  $11292 = $x348;
                  $11293 = $x340;
                  $11294 = -1.0 * $11293;
                  $11295 = $x342;
                  $11296 = $11294 * $11295;
                  $11297 = $11292 + $11296;
                  $11298 = (($4) + 264|0);
                  $11299 = +HEAPF64[$11298>>3];
                  $11300 = $11297 + $11299;
                  $11301 = (($evalcond176) + 56|0);
                  HEAPF64[$11301>>3] = $11300;
                  $11302 = (($4) + 136|0);
                  $11303 = +HEAPF64[$11302>>3];
                  $11304 = $x340;
                  $11305 = $11303 * $11304;
                  $11306 = $x345;
                  $11307 = -1.0 * $11306;
                  $11308 = $x348;
                  $11309 = $11307 * $11308;
                  $11310 = $11305 + $11309;
                  $11311 = (($4) + 312|0);
                  $11312 = +HEAPF64[$11311>>3];
                  $11313 = $11310 + $11312;
                  $11314 = (($evalcond176) + 64|0);
                  HEAPF64[$11314>>3] = $11313;
                  $11315 = $x343;
                  $11316 = $x341;
                  $11317 = -1.0 * $11316;
                  $11318 = $x345;
                  $11319 = $11317 * $11318;
                  $11320 = $11315 + $11319;
                  $11321 = (($4) + 136|0);
                  $11322 = +HEAPF64[$11321>>3];
                  $11323 = -1.0 * $11322;
                  $11324 = $x346;
                  $11325 = $11323 * $11324;
                  $11326 = $11320 + $11325;
                  $11327 = (($evalcond176) + 72|0);
                  HEAPF64[$11327>>3] = $11326;
                  $11328 = $x340;
                  $11329 = (($4) + 168|0);
                  $11330 = +HEAPF64[$11329>>3];
                  $11331 = $x347;
                  $11332 = $11330 * $11331;
                  $11333 = $11328 + $11332;
                  $11334 = (($4) + 408|0);
                  $11335 = +HEAPF64[$11334>>3];
                  $11336 = (($4) + 176|0);
                  $11337 = +HEAPF64[$11336>>3];
                  $11338 = $11335 * $11337;
                  $11339 = $11333 + $11338;
                  $11340 = $x342;
                  $11341 = -1.0 * $11340;
                  $11342 = $x344;
                  $11343 = $11341 * $11342;
                  $11344 = $11339 + $11343;
                  $11345 = (($evalcond176) + 80|0);
                  HEAPF64[$11345>>3] = $11344;
                  $11346 = (($4) + 384|0);
                  $11347 = +HEAPF64[$11346>>3];
                  $11348 = (($4) + 176|0);
                  $11349 = +HEAPF64[$11348>>3];
                  $11350 = $11347 * $11349;
                  $11351 = $x350;
                  $11352 = -1.0 * $11351;
                  $11353 = $11350 + $11352;
                  $11354 = (($4) + 168|0);
                  $11355 = +HEAPF64[$11354>>3];
                  $11356 = $x343;
                  $11357 = $11355 * $11356;
                  $11358 = $11353 + $11357;
                  $11359 = $x342;
                  $11360 = -1.0 * $11359;
                  $11361 = $x346;
                  $11362 = $11360 * $11361;
                  $11363 = $11358 + $11362;
                  $11364 = (($evalcond176) + 88|0);
                  HEAPF64[$11364>>3] = $11363;
                  $11365 = +HEAPF64[$evalcond176>>3];
                  $11366 = (+__Z5IKabsd($11365));
                  $11367 = $11366 > 5.0000000000000004E-6;
                  do {
                   if (!($11367)) {
                    $11368 = (($evalcond176) + 8|0);
                    $11369 = +HEAPF64[$11368>>3];
                    $11370 = (+__Z5IKabsd($11369));
                    $11371 = $11370 > 5.0000000000000004E-6;
                    if ($11371) {
                     break;
                    }
                    $11372 = (($evalcond176) + 16|0);
                    $11373 = +HEAPF64[$11372>>3];
                    $11374 = (+__Z5IKabsd($11373));
                    $11375 = $11374 > 5.0000000000000004E-6;
                    if ($11375) {
                     break;
                    }
                    $11376 = (($evalcond176) + 24|0);
                    $11377 = +HEAPF64[$11376>>3];
                    $11378 = (+__Z5IKabsd($11377));
                    $11379 = $11378 > 5.0000000000000004E-6;
                    if ($11379) {
                     break;
                    }
                    $11380 = (($evalcond176) + 32|0);
                    $11381 = +HEAPF64[$11380>>3];
                    $11382 = (+__Z5IKabsd($11381));
                    $11383 = $11382 > 5.0000000000000004E-6;
                    if ($11383) {
                     break;
                    }
                    $11384 = (($evalcond176) + 40|0);
                    $11385 = +HEAPF64[$11384>>3];
                    $11386 = (+__Z5IKabsd($11385));
                    $11387 = $11386 > 5.0000000000000004E-6;
                    if ($11387) {
                     break;
                    }
                    $11388 = (($evalcond176) + 48|0);
                    $11389 = +HEAPF64[$11388>>3];
                    $11390 = (+__Z5IKabsd($11389));
                    $11391 = $11390 > 5.0000000000000004E-6;
                    if ($11391) {
                     break;
                    }
                    $11392 = (($evalcond176) + 56|0);
                    $11393 = +HEAPF64[$11392>>3];
                    $11394 = (+__Z5IKabsd($11393));
                    $11395 = $11394 > 5.0000000000000004E-6;
                    if ($11395) {
                     break;
                    }
                    $11396 = (($evalcond176) + 64|0);
                    $11397 = +HEAPF64[$11396>>3];
                    $11398 = (+__Z5IKabsd($11397));
                    $11399 = $11398 > 5.0000000000000004E-6;
                    if ($11399) {
                     break;
                    }
                    $11400 = (($evalcond176) + 72|0);
                    $11401 = +HEAPF64[$11400>>3];
                    $11402 = (+__Z5IKabsd($11401));
                    $11403 = $11402 > 5.0000000000000004E-6;
                    if ($11403) {
                     break;
                    }
                    $11404 = (($evalcond176) + 80|0);
                    $11405 = +HEAPF64[$11404>>3];
                    $11406 = (+__Z5IKabsd($11405));
                    $11407 = $11406 > 5.0000000000000004E-6;
                    if ($11407) {
                     break;
                    }
                    $11408 = (($evalcond176) + 88|0);
                    $11409 = +HEAPF64[$11408>>3];
                    $11410 = (+__Z5IKabsd($11409));
                    $11411 = $11410 > 5.0000000000000004E-6;
                    if ($11411) {
                     break;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos177,6);
                    __THREW__ = 0;
                    $11412 = (invoke_iii(381,($vinfos177|0),0)|0);
                    $11413 = __THREW__; __THREW__ = 0;
                    $11414 = $11413&1;
                    if ($11414) {
                     label = 1475;
                     break L1;
                    }
                    $11415 = (($11412) + 17|0);
                    HEAP8[$11415>>0] = 1;
                    $11416 = +HEAPF64[$4>>3];
                    __THREW__ = 0;
                    $11417 = (invoke_iii(381,($vinfos177|0),0)|0);
                    $11418 = __THREW__; __THREW__ = 0;
                    $11419 = $11418&1;
                    if ($11419) {
                     label = 1475;
                     break L1;
                    }
                    $11420 = (($11417) + 8|0);
                    HEAPF64[$11420>>3] = $11416;
                    $11421 = (($4) + 536|0);
                    $11422 = HEAP8[$11421>>0]|0;
                    __THREW__ = 0;
                    $11423 = (invoke_iii(381,($vinfos177|0),0)|0);
                    $11424 = __THREW__; __THREW__ = 0;
                    $11425 = $11424&1;
                    if ($11425) {
                     label = 1475;
                     break L1;
                    }
                    $11426 = (($11423) + 19|0);
                    HEAP8[$11426>>0] = $11422;
                    $11427 = (($4) + 536|0);
                    $11428 = (($11427) + 1|0);
                    $11429 = HEAP8[$11428>>0]|0;
                    __THREW__ = 0;
                    $11430 = (invoke_iii(381,($vinfos177|0),0)|0);
                    $11431 = __THREW__; __THREW__ = 0;
                    $11432 = $11431&1;
                    if ($11432) {
                     label = 1475;
                     break L1;
                    }
                    $11433 = (($11430) + 19|0);
                    $11434 = (($11433) + 1|0);
                    HEAP8[$11434>>0] = $11429;
                    $11435 = (($4) + 538|0);
                    $11436 = HEAP8[$11435>>0]|0;
                    __THREW__ = 0;
                    $11437 = (invoke_iii(381,($vinfos177|0),0)|0);
                    $11438 = __THREW__; __THREW__ = 0;
                    $11439 = $11438&1;
                    if ($11439) {
                     label = 1475;
                     break L1;
                    }
                    $11440 = (($11437) + 18|0);
                    HEAP8[$11440>>0] = $11436;
                    __THREW__ = 0;
                    $11441 = (invoke_iii(381,($vinfos177|0),1)|0);
                    $11442 = __THREW__; __THREW__ = 0;
                    $11443 = $11442&1;
                    if ($11443) {
                     label = 1475;
                     break L1;
                    }
                    $11444 = (($11441) + 17|0);
                    HEAP8[$11444>>0] = 1;
                    $11445 = (($4) + 40|0);
                    $11446 = +HEAPF64[$11445>>3];
                    __THREW__ = 0;
                    $11447 = (invoke_iii(381,($vinfos177|0),1)|0);
                    $11448 = __THREW__; __THREW__ = 0;
                    $11449 = $11448&1;
                    if ($11449) {
                     label = 1475;
                     break L1;
                    }
                    $11450 = (($11447) + 8|0);
                    HEAPF64[$11450>>3] = $11446;
                    $11451 = (($4) + 539|0);
                    $11452 = HEAP8[$11451>>0]|0;
                    __THREW__ = 0;
                    $11453 = (invoke_iii(381,($vinfos177|0),1)|0);
                    $11454 = __THREW__; __THREW__ = 0;
                    $11455 = $11454&1;
                    if ($11455) {
                     label = 1475;
                     break L1;
                    }
                    $11456 = (($11453) + 19|0);
                    HEAP8[$11456>>0] = $11452;
                    $11457 = (($4) + 539|0);
                    $11458 = (($11457) + 1|0);
                    $11459 = HEAP8[$11458>>0]|0;
                    __THREW__ = 0;
                    $11460 = (invoke_iii(381,($vinfos177|0),1)|0);
                    $11461 = __THREW__; __THREW__ = 0;
                    $11462 = $11461&1;
                    if ($11462) {
                     label = 1475;
                     break L1;
                    }
                    $11463 = (($11460) + 19|0);
                    $11464 = (($11463) + 1|0);
                    HEAP8[$11464>>0] = $11459;
                    $11465 = (($4) + 541|0);
                    $11466 = HEAP8[$11465>>0]|0;
                    __THREW__ = 0;
                    $11467 = (invoke_iii(381,($vinfos177|0),1)|0);
                    $11468 = __THREW__; __THREW__ = 0;
                    $11469 = $11468&1;
                    if ($11469) {
                     label = 1475;
                     break L1;
                    }
                    $11470 = (($11467) + 18|0);
                    HEAP8[$11470>>0] = $11466;
                    __THREW__ = 0;
                    $11471 = (invoke_iii(381,($vinfos177|0),2)|0);
                    $11472 = __THREW__; __THREW__ = 0;
                    $11473 = $11472&1;
                    if ($11473) {
                     label = 1475;
                     break L1;
                    }
                    $11474 = (($11471) + 17|0);
                    HEAP8[$11474>>0] = 1;
                    $11475 = (($4) + 80|0);
                    $11476 = +HEAPF64[$11475>>3];
                    __THREW__ = 0;
                    $11477 = (invoke_iii(381,($vinfos177|0),2)|0);
                    $11478 = __THREW__; __THREW__ = 0;
                    $11479 = $11478&1;
                    if ($11479) {
                     label = 1475;
                     break L1;
                    }
                    $11480 = (($11477) + 8|0);
                    HEAPF64[$11480>>3] = $11476;
                    $11481 = (($4) + 542|0);
                    $11482 = HEAP8[$11481>>0]|0;
                    __THREW__ = 0;
                    $11483 = (invoke_iii(381,($vinfos177|0),2)|0);
                    $11484 = __THREW__; __THREW__ = 0;
                    $11485 = $11484&1;
                    if ($11485) {
                     label = 1475;
                     break L1;
                    }
                    $11486 = (($11483) + 19|0);
                    HEAP8[$11486>>0] = $11482;
                    $11487 = (($4) + 542|0);
                    $11488 = (($11487) + 1|0);
                    $11489 = HEAP8[$11488>>0]|0;
                    __THREW__ = 0;
                    $11490 = (invoke_iii(381,($vinfos177|0),2)|0);
                    $11491 = __THREW__; __THREW__ = 0;
                    $11492 = $11491&1;
                    if ($11492) {
                     label = 1475;
                     break L1;
                    }
                    $11493 = (($11490) + 19|0);
                    $11494 = (($11493) + 1|0);
                    HEAP8[$11494>>0] = $11489;
                    $11495 = (($4) + 544|0);
                    $11496 = HEAP8[$11495>>0]|0;
                    __THREW__ = 0;
                    $11497 = (invoke_iii(381,($vinfos177|0),2)|0);
                    $11498 = __THREW__; __THREW__ = 0;
                    $11499 = $11498&1;
                    if ($11499) {
                     label = 1475;
                     break L1;
                    }
                    $11500 = (($11497) + 18|0);
                    HEAP8[$11500>>0] = $11496;
                    __THREW__ = 0;
                    $11501 = (invoke_iii(381,($vinfos177|0),3)|0);
                    $11502 = __THREW__; __THREW__ = 0;
                    $11503 = $11502&1;
                    if ($11503) {
                     label = 1475;
                     break L1;
                    }
                    $11504 = (($11501) + 17|0);
                    HEAP8[$11504>>0] = 1;
                    $11505 = (($4) + 120|0);
                    $11506 = +HEAPF64[$11505>>3];
                    __THREW__ = 0;
                    $11507 = (invoke_iii(381,($vinfos177|0),3)|0);
                    $11508 = __THREW__; __THREW__ = 0;
                    $11509 = $11508&1;
                    if ($11509) {
                     label = 1475;
                     break L1;
                    }
                    $11510 = (($11507) + 8|0);
                    HEAPF64[$11510>>3] = $11506;
                    $11511 = (($4) + 545|0);
                    $11512 = HEAP8[$11511>>0]|0;
                    __THREW__ = 0;
                    $11513 = (invoke_iii(381,($vinfos177|0),3)|0);
                    $11514 = __THREW__; __THREW__ = 0;
                    $11515 = $11514&1;
                    if ($11515) {
                     label = 1475;
                     break L1;
                    }
                    $11516 = (($11513) + 19|0);
                    HEAP8[$11516>>0] = $11512;
                    $11517 = (($4) + 545|0);
                    $11518 = (($11517) + 1|0);
                    $11519 = HEAP8[$11518>>0]|0;
                    __THREW__ = 0;
                    $11520 = (invoke_iii(381,($vinfos177|0),3)|0);
                    $11521 = __THREW__; __THREW__ = 0;
                    $11522 = $11521&1;
                    if ($11522) {
                     label = 1475;
                     break L1;
                    }
                    $11523 = (($11520) + 19|0);
                    $11524 = (($11523) + 1|0);
                    HEAP8[$11524>>0] = $11519;
                    $11525 = (($4) + 547|0);
                    $11526 = HEAP8[$11525>>0]|0;
                    __THREW__ = 0;
                    $11527 = (invoke_iii(381,($vinfos177|0),3)|0);
                    $11528 = __THREW__; __THREW__ = 0;
                    $11529 = $11528&1;
                    if ($11529) {
                     label = 1475;
                     break L1;
                    }
                    $11530 = (($11527) + 18|0);
                    HEAP8[$11530>>0] = $11526;
                    __THREW__ = 0;
                    $11531 = (invoke_iii(381,($vinfos177|0),4)|0);
                    $11532 = __THREW__; __THREW__ = 0;
                    $11533 = $11532&1;
                    if ($11533) {
                     label = 1475;
                     break L1;
                    }
                    $11534 = (($11531) + 17|0);
                    HEAP8[$11534>>0] = 1;
                    $11535 = (($4) + 160|0);
                    $11536 = +HEAPF64[$11535>>3];
                    __THREW__ = 0;
                    $11537 = (invoke_iii(381,($vinfos177|0),4)|0);
                    $11538 = __THREW__; __THREW__ = 0;
                    $11539 = $11538&1;
                    if ($11539) {
                     label = 1475;
                     break L1;
                    }
                    $11540 = (($11537) + 8|0);
                    HEAPF64[$11540>>3] = $11536;
                    $11541 = (($4) + 548|0);
                    $11542 = HEAP8[$11541>>0]|0;
                    __THREW__ = 0;
                    $11543 = (invoke_iii(381,($vinfos177|0),4)|0);
                    $11544 = __THREW__; __THREW__ = 0;
                    $11545 = $11544&1;
                    if ($11545) {
                     label = 1475;
                     break L1;
                    }
                    $11546 = (($11543) + 19|0);
                    HEAP8[$11546>>0] = $11542;
                    $11547 = (($4) + 548|0);
                    $11548 = (($11547) + 1|0);
                    $11549 = HEAP8[$11548>>0]|0;
                    __THREW__ = 0;
                    $11550 = (invoke_iii(381,($vinfos177|0),4)|0);
                    $11551 = __THREW__; __THREW__ = 0;
                    $11552 = $11551&1;
                    if ($11552) {
                     label = 1475;
                     break L1;
                    }
                    $11553 = (($11550) + 19|0);
                    $11554 = (($11553) + 1|0);
                    HEAP8[$11554>>0] = $11549;
                    $11555 = (($4) + 550|0);
                    $11556 = HEAP8[$11555>>0]|0;
                    __THREW__ = 0;
                    $11557 = (invoke_iii(381,($vinfos177|0),4)|0);
                    $11558 = __THREW__; __THREW__ = 0;
                    $11559 = $11558&1;
                    if ($11559) {
                     label = 1475;
                     break L1;
                    }
                    $11560 = (($11557) + 18|0);
                    HEAP8[$11560>>0] = $11556;
                    __THREW__ = 0;
                    $11561 = (invoke_iii(381,($vinfos177|0),5)|0);
                    $11562 = __THREW__; __THREW__ = 0;
                    $11563 = $11562&1;
                    if ($11563) {
                     label = 1475;
                     break L1;
                    }
                    $11564 = (($11561) + 17|0);
                    HEAP8[$11564>>0] = 1;
                    $11565 = (($4) + 200|0);
                    $11566 = +HEAPF64[$11565>>3];
                    __THREW__ = 0;
                    $11567 = (invoke_iii(381,($vinfos177|0),5)|0);
                    $11568 = __THREW__; __THREW__ = 0;
                    $11569 = $11568&1;
                    if ($11569) {
                     label = 1475;
                     break L1;
                    }
                    $11570 = (($11567) + 8|0);
                    HEAPF64[$11570>>3] = $11566;
                    $11571 = (($4) + 551|0);
                    $11572 = HEAP8[$11571>>0]|0;
                    __THREW__ = 0;
                    $11573 = (invoke_iii(381,($vinfos177|0),5)|0);
                    $11574 = __THREW__; __THREW__ = 0;
                    $11575 = $11574&1;
                    if ($11575) {
                     label = 1475;
                     break L1;
                    }
                    $11576 = (($11573) + 19|0);
                    HEAP8[$11576>>0] = $11572;
                    $11577 = (($4) + 551|0);
                    $11578 = (($11577) + 1|0);
                    $11579 = HEAP8[$11578>>0]|0;
                    __THREW__ = 0;
                    $11580 = (invoke_iii(381,($vinfos177|0),5)|0);
                    $11581 = __THREW__; __THREW__ = 0;
                    $11582 = $11581&1;
                    if ($11582) {
                     label = 1475;
                     break L1;
                    }
                    $11583 = (($11580) + 19|0);
                    $11584 = (($11583) + 1|0);
                    HEAP8[$11584>>0] = $11579;
                    $11585 = (($4) + 553|0);
                    $11586 = HEAP8[$11585>>0]|0;
                    __THREW__ = 0;
                    $11587 = (invoke_iii(381,($vinfos177|0),5)|0);
                    $11588 = __THREW__; __THREW__ = 0;
                    $11589 = $11588&1;
                    if ($11589) {
                     label = 1475;
                     break L1;
                    }
                    $11590 = (($11587) + 18|0);
                    HEAP8[$11590>>0] = $11586;
                    __THREW__ = 0;
                    invoke_vii(382,($vfree178|0),0);
                    $11591 = __THREW__; __THREW__ = 0;
                    $11592 = $11591&1;
                    if ($11592) {
                     label = 1475;
                     break L1;
                    }
                    $11593 = $1;
                    $11594 = HEAP32[$11593>>2]|0;
                    $11595 = (($11594) + 8|0);
                    $11596 = HEAP32[$11595>>2]|0;
                    __THREW__ = 0;
                    (invoke_iiii($11596|0,($11593|0),($vinfos177|0),($vfree178|0))|0);
                    $11597 = __THREW__; __THREW__ = 0;
                    $11598 = $11597&1;
                    if ($11598) {
                     label = 1476;
                     break L1;
                    }
                    __THREW__ = 0;
                    invoke_vi(366,($vfree178|0));
                    $11599 = __THREW__; __THREW__ = 0;
                    $11600 = $11599&1;
                    if ($11600) {
                     label = 1475;
                     break L1;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos177);
                    break L91;
                   }
                  } while(0);
                 } else {
                 }
                } while(0);
                $11601 = $ij5174;
                $11602 = (($11601) + 1)|0;
                $ij5174 = $11602;
               }
              }
             } while(0);
             if ((label|0) == 900) {
              label = 0;
              $7276 = (($4) + 8|0);
              $7277 = +HEAPF64[$7276>>3];
              $7278 = (($4) + 320|0);
              $7279 = +HEAPF64[$7278>>3];
              $7280 = $7277 * $7279;
              $x258 = $7280;
              $7281 = (($4) + 16|0);
              $7282 = +HEAPF64[$7281>>3];
              $7283 = 1.0 * $7282;
              $x259 = $7283;
              $7284 = (($4) + 8|0);
              $7285 = +HEAPF64[$7284>>3];
              $7286 = (($4) + 344|0);
              $7287 = +HEAPF64[$7286>>3];
              $7288 = $7285 * $7287;
              $x260 = $7288;
              $7289 = (($4) + 88|0);
              $7290 = +HEAPF64[$7289>>3];
              $7291 = 1.0 * $7290;
              $x261 = $7291;
              $7292 = (($4) + 48|0);
              $7293 = +HEAPF64[$7292>>3];
              $7294 = (($4) + 96|0);
              $7295 = +HEAPF64[$7294>>3];
              $7296 = $7293 * $7295;
              $x262 = $7296;
              $7297 = (($4) + 8|0);
              $7298 = +HEAPF64[$7297>>3];
              $7299 = (($4) + 368|0);
              $7300 = +HEAPF64[$7299>>3];
              $7301 = $7298 * $7300;
              $x263 = $7301;
              $7302 = $x84;
              $x264 = $7302;
              $7303 = (($4) + 88|0);
              $7304 = +HEAPF64[$7303>>3];
              $7305 = (($4) + 56|0);
              $7306 = +HEAPF64[$7305>>3];
              $7307 = $7304 * $7306;
              $7308 = $x262;
              $7309 = $7307 + $7308;
              $x265 = $7309;
              $7310 = (($4) + 8|0);
              $7311 = +HEAPF64[$7310>>3];
              $7312 = $x264;
              $7313 = $7311 * $7312;
              $x266 = $7313;
              $7314 = $x87;
              $x267 = $7314;
              $7315 = (($4) + 248|0);
              $7316 = +HEAPF64[$7315>>3];
              $7317 = -1.0 * $7316;
              $7318 = $x259;
              $7319 = $7317 * $7318;
              $7320 = $x267;
              $7321 = $7319 * $7320;
              $7322 = $x258;
              $7323 = $x267;
              $7324 = $7322 * $7323;
              $7325 = $7321 + $7324;
              $7326 = (($4) + 392|0);
              $7327 = +HEAPF64[$7326>>3];
              $7328 = $x264;
              $7329 = $7327 * $7328;
              $7330 = $7325 + $7329;
              $7331 = (($4) + 240|0);
              HEAPF64[$7331>>3] = $7330;
              $7332 = (($4) + 272|0);
              $7333 = +HEAPF64[$7332>>3];
              $7334 = -1.0 * $7333;
              $7335 = $x259;
              $7336 = $7334 * $7335;
              $7337 = $x267;
              $7338 = $7336 * $7337;
              $7339 = $x260;
              $7340 = $x267;
              $7341 = $7339 * $7340;
              $7342 = $7338 + $7341;
              $7343 = (($4) + 416|0);
              $7344 = +HEAPF64[$7343>>3];
              $7345 = $x264;
              $7346 = $7344 * $7345;
              $7347 = $7342 + $7346;
              $7348 = (($4) + 264|0);
              HEAPF64[$7348>>3] = $7347;
              $7349 = (($4) + 296|0);
              $7350 = +HEAPF64[$7349>>3];
              $7351 = -1.0 * $7350;
              $7352 = $x259;
              $7353 = $7351 * $7352;
              $7354 = $x267;
              $7355 = $7353 * $7354;
              $7356 = (($4) + 440|0);
              $7357 = +HEAPF64[$7356>>3];
              $7358 = $x264;
              $7359 = $7357 * $7358;
              $7360 = $7355 + $7359;
              $7361 = $x263;
              $7362 = $x267;
              $7363 = $7361 * $7362;
              $7364 = $7360 + $7363;
              $7365 = (($4) + 288|0);
              HEAPF64[$7365>>3] = $7364;
              $7366 = (($4) + 320|0);
              $7367 = +HEAPF64[$7366>>3];
              $7368 = (($4) + 16|0);
              $7369 = +HEAPF64[$7368>>3];
              $7370 = $7367 * $7369;
              $7371 = (($4) + 8|0);
              $7372 = +HEAPF64[$7371>>3];
              $7373 = (($4) + 248|0);
              $7374 = +HEAPF64[$7373>>3];
              $7375 = $7372 * $7374;
              $7376 = $7370 + $7375;
              $7377 = (($4) + 312|0);
              HEAPF64[$7377>>3] = $7376;
              $7378 = (($4) + 344|0);
              $7379 = +HEAPF64[$7378>>3];
              $7380 = (($4) + 16|0);
              $7381 = +HEAPF64[$7380>>3];
              $7382 = $7379 * $7381;
              $7383 = (($4) + 8|0);
              $7384 = +HEAPF64[$7383>>3];
              $7385 = (($4) + 272|0);
              $7386 = +HEAPF64[$7385>>3];
              $7387 = $7384 * $7386;
              $7388 = $7382 + $7387;
              $7389 = (($4) + 336|0);
              HEAPF64[$7389>>3] = $7388;
              $7390 = (($4) + 368|0);
              $7391 = +HEAPF64[$7390>>3];
              $7392 = (($4) + 16|0);
              $7393 = +HEAPF64[$7392>>3];
              $7394 = $7391 * $7393;
              $7395 = (($4) + 8|0);
              $7396 = +HEAPF64[$7395>>3];
              $7397 = (($4) + 296|0);
              $7398 = +HEAPF64[$7397>>3];
              $7399 = $7396 * $7398;
              $7400 = $7394 + $7399;
              $7401 = (($4) + 360|0);
              HEAPF64[$7401>>3] = $7400;
              $7402 = (($4) + 248|0);
              $7403 = +HEAPF64[$7402>>3];
              $7404 = -1.0 * $7403;
              $7405 = $x259;
              $7406 = $7404 * $7405;
              $7407 = $x264;
              $7408 = $7406 * $7407;
              $7409 = $x258;
              $7410 = $x264;
              $7411 = $7409 * $7410;
              $7412 = $7408 + $7411;
              $7413 = (($4) + 392|0);
              $7414 = +HEAPF64[$7413>>3];
              $7415 = $x265;
              $7416 = $7414 * $7415;
              $7417 = $7412 + $7416;
              $7418 = (($4) + 384|0);
              HEAPF64[$7418>>3] = $7417;
              $7419 = (($4) + 272|0);
              $7420 = +HEAPF64[$7419>>3];
              $7421 = -1.0 * $7420;
              $7422 = $x259;
              $7423 = $7421 * $7422;
              $7424 = $x264;
              $7425 = $7423 * $7424;
              $7426 = $x260;
              $7427 = $x264;
              $7428 = $7426 * $7427;
              $7429 = $7425 + $7428;
              $7430 = (($4) + 416|0);
              $7431 = +HEAPF64[$7430>>3];
              $7432 = $x265;
              $7433 = $7431 * $7432;
              $7434 = $7429 + $7433;
              $7435 = (($4) + 408|0);
              HEAPF64[$7435>>3] = $7434;
              $7436 = (($4) + 296|0);
              $7437 = +HEAPF64[$7436>>3];
              $7438 = -1.0 * $7437;
              $7439 = $x259;
              $7440 = $7438 * $7439;
              $7441 = $x264;
              $7442 = $7440 * $7441;
              $7443 = (($4) + 440|0);
              $7444 = +HEAPF64[$7443>>3];
              $7445 = $x265;
              $7446 = $7444 * $7445;
              $7447 = $7442 + $7446;
              $7448 = $x263;
              $7449 = $x264;
              $7450 = $7448 * $7449;
              $7451 = $7447 + $7450;
              $7452 = (($4) + 432|0);
              HEAPF64[$7452>>3] = $7451;
              $7453 = (($4) + 176|0);
              $7454 = +HEAPF64[$7453>>3];
              HEAPF64[$j5eval108>>3] = $7454;
              $7455 = +HEAPF64[$j5eval108>>3];
              $7456 = (+__Z5IKabsd($7455));
              $7457 = $7456 < 9.9999999999999995E-7;
              if ($7457) {
               $7458 = (($4) + 8|0);
               $7459 = +HEAPF64[$7458>>3];
               $7460 = (($4) + 320|0);
               $7461 = +HEAPF64[$7460>>3];
               $7462 = $7459 * $7461;
               $x268 = $7462;
               $7463 = (($4) + 16|0);
               $7464 = +HEAPF64[$7463>>3];
               $7465 = 1.0 * $7464;
               $x269 = $7465;
               $7466 = (($4) + 8|0);
               $7467 = +HEAPF64[$7466>>3];
               $7468 = (($4) + 344|0);
               $7469 = +HEAPF64[$7468>>3];
               $7470 = $7467 * $7469;
               $x270 = $7470;
               $7471 = (($4) + 88|0);
               $7472 = +HEAPF64[$7471>>3];
               $7473 = 1.0 * $7472;
               $x271 = $7473;
               $7474 = (($4) + 48|0);
               $7475 = +HEAPF64[$7474>>3];
               $7476 = (($4) + 96|0);
               $7477 = +HEAPF64[$7476>>3];
               $7478 = $7475 * $7477;
               $x272 = $7478;
               $7479 = (($4) + 8|0);
               $7480 = +HEAPF64[$7479>>3];
               $7481 = (($4) + 368|0);
               $7482 = +HEAPF64[$7481>>3];
               $7483 = $7480 * $7482;
               $x273 = $7483;
               $7484 = $x84;
               $x274 = $7484;
               $7485 = (($4) + 88|0);
               $7486 = +HEAPF64[$7485>>3];
               $7487 = (($4) + 56|0);
               $7488 = +HEAPF64[$7487>>3];
               $7489 = $7486 * $7488;
               $7490 = $x272;
               $7491 = $7489 + $7490;
               $x275 = $7491;
               $7492 = (($4) + 8|0);
               $7493 = +HEAPF64[$7492>>3];
               $7494 = $x274;
               $7495 = $7493 * $7494;
               $x276 = $7495;
               $7496 = $x87;
               $x277 = $7496;
               $7497 = (($4) + 248|0);
               $7498 = +HEAPF64[$7497>>3];
               $7499 = -1.0 * $7498;
               $7500 = $x269;
               $7501 = $7499 * $7500;
               $7502 = $x277;
               $7503 = $7501 * $7502;
               $7504 = (($4) + 392|0);
               $7505 = +HEAPF64[$7504>>3];
               $7506 = $x274;
               $7507 = $7505 * $7506;
               $7508 = $7503 + $7507;
               $7509 = $x268;
               $7510 = $x277;
               $7511 = $7509 * $7510;
               $7512 = $7508 + $7511;
               $7513 = (($4) + 240|0);
               HEAPF64[$7513>>3] = $7512;
               $7514 = (($4) + 272|0);
               $7515 = +HEAPF64[$7514>>3];
               $7516 = -1.0 * $7515;
               $7517 = $x269;
               $7518 = $7516 * $7517;
               $7519 = $x277;
               $7520 = $7518 * $7519;
               $7521 = (($4) + 416|0);
               $7522 = +HEAPF64[$7521>>3];
               $7523 = $x274;
               $7524 = $7522 * $7523;
               $7525 = $7520 + $7524;
               $7526 = $x270;
               $7527 = $x277;
               $7528 = $7526 * $7527;
               $7529 = $7525 + $7528;
               $7530 = (($4) + 264|0);
               HEAPF64[$7530>>3] = $7529;
               $7531 = $x273;
               $7532 = $x277;
               $7533 = $7531 * $7532;
               $7534 = (($4) + 296|0);
               $7535 = +HEAPF64[$7534>>3];
               $7536 = -1.0 * $7535;
               $7537 = $x269;
               $7538 = $7536 * $7537;
               $7539 = $x277;
               $7540 = $7538 * $7539;
               $7541 = $7533 + $7540;
               $7542 = (($4) + 440|0);
               $7543 = +HEAPF64[$7542>>3];
               $7544 = $x274;
               $7545 = $7543 * $7544;
               $7546 = $7541 + $7545;
               $7547 = (($4) + 288|0);
               HEAPF64[$7547>>3] = $7546;
               $7548 = (($4) + 320|0);
               $7549 = +HEAPF64[$7548>>3];
               $7550 = (($4) + 16|0);
               $7551 = +HEAPF64[$7550>>3];
               $7552 = $7549 * $7551;
               $7553 = (($4) + 8|0);
               $7554 = +HEAPF64[$7553>>3];
               $7555 = (($4) + 248|0);
               $7556 = +HEAPF64[$7555>>3];
               $7557 = $7554 * $7556;
               $7558 = $7552 + $7557;
               $7559 = (($4) + 312|0);
               HEAPF64[$7559>>3] = $7558;
               $7560 = (($4) + 344|0);
               $7561 = +HEAPF64[$7560>>3];
               $7562 = (($4) + 16|0);
               $7563 = +HEAPF64[$7562>>3];
               $7564 = $7561 * $7563;
               $7565 = (($4) + 8|0);
               $7566 = +HEAPF64[$7565>>3];
               $7567 = (($4) + 272|0);
               $7568 = +HEAPF64[$7567>>3];
               $7569 = $7566 * $7568;
               $7570 = $7564 + $7569;
               $7571 = (($4) + 336|0);
               HEAPF64[$7571>>3] = $7570;
               $7572 = (($4) + 368|0);
               $7573 = +HEAPF64[$7572>>3];
               $7574 = (($4) + 16|0);
               $7575 = +HEAPF64[$7574>>3];
               $7576 = $7573 * $7575;
               $7577 = (($4) + 8|0);
               $7578 = +HEAPF64[$7577>>3];
               $7579 = (($4) + 296|0);
               $7580 = +HEAPF64[$7579>>3];
               $7581 = $7578 * $7580;
               $7582 = $7576 + $7581;
               $7583 = (($4) + 360|0);
               HEAPF64[$7583>>3] = $7582;
               $7584 = (($4) + 248|0);
               $7585 = +HEAPF64[$7584>>3];
               $7586 = -1.0 * $7585;
               $7587 = $x269;
               $7588 = $7586 * $7587;
               $7589 = $x274;
               $7590 = $7588 * $7589;
               $7591 = (($4) + 392|0);
               $7592 = +HEAPF64[$7591>>3];
               $7593 = $x275;
               $7594 = $7592 * $7593;
               $7595 = $7590 + $7594;
               $7596 = $x268;
               $7597 = $x274;
               $7598 = $7596 * $7597;
               $7599 = $7595 + $7598;
               $7600 = (($4) + 384|0);
               HEAPF64[$7600>>3] = $7599;
               $7601 = (($4) + 272|0);
               $7602 = +HEAPF64[$7601>>3];
               $7603 = -1.0 * $7602;
               $7604 = $x269;
               $7605 = $7603 * $7604;
               $7606 = $x274;
               $7607 = $7605 * $7606;
               $7608 = (($4) + 416|0);
               $7609 = +HEAPF64[$7608>>3];
               $7610 = $x275;
               $7611 = $7609 * $7610;
               $7612 = $7607 + $7611;
               $7613 = $x270;
               $7614 = $x274;
               $7615 = $7613 * $7614;
               $7616 = $7612 + $7615;
               $7617 = (($4) + 408|0);
               HEAPF64[$7617>>3] = $7616;
               $7618 = $x273;
               $7619 = $x274;
               $7620 = $7618 * $7619;
               $7621 = (($4) + 296|0);
               $7622 = +HEAPF64[$7621>>3];
               $7623 = -1.0 * $7622;
               $7624 = $x269;
               $7625 = $7623 * $7624;
               $7626 = $x274;
               $7627 = $7625 * $7626;
               $7628 = $7620 + $7627;
               $7629 = (($4) + 440|0);
               $7630 = +HEAPF64[$7629>>3];
               $7631 = $x275;
               $7632 = $7630 * $7631;
               $7633 = $7628 + $7632;
               $7634 = (($4) + 432|0);
               HEAPF64[$7634>>3] = $7633;
               $7635 = (($4) + 176|0);
               $7636 = +HEAPF64[$7635>>3];
               HEAPF64[$j5eval109>>3] = $7636;
               $7637 = (($4) + 136|0);
               $7638 = +HEAPF64[$7637>>3];
               $7639 = (($j5eval109) + 8|0);
               HEAPF64[$7639>>3] = $7638;
               $7640 = +HEAPF64[$j5eval109>>3];
               $7641 = (+__Z5IKabsd($7640));
               $7642 = $7641 < 9.9999999999999995E-7;
               do {
                if ($7642) {
                 label = 903;
                } else {
                 $7643 = (($j5eval109) + 8|0);
                 $7644 = +HEAPF64[$7643>>3];
                 $7645 = (+__Z5IKabsd($7644));
                 $7646 = $7645 < 9.9999999999999995E-7;
                 if ($7646) {
                  label = 903;
                  break;
                 }
                 ;HEAP8[$j5valid155+0>>0]=0|0;
                 $9904 = (($4) + 553|0);
                 HEAP8[$9904>>0] = 1;
                 $9905 = (($4) + 176|0);
                 $9906 = +HEAPF64[$9905>>3];
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x313,$9906,-1);
                 $9907 = (($x313) + 8|0);
                 $9908 = HEAP8[$9907>>0]|0;
                 $9909 = $9908&1;
                 if (!($9909)) {
                  break L49;
                 }
                 $9910 = +HEAPF64[$x313>>3];
                 $x312 = $9910;
                 $9911 = (($4) + 136|0);
                 $9912 = +HEAPF64[$9911>>3];
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x314,$9912,-1);
                 $9913 = (($x314) + 8|0);
                 $9914 = HEAP8[$9913>>0]|0;
                 $9915 = $9914&1;
                 if (!($9915)) {
                  break L49;
                 }
                 $9916 = (($4) + 408|0);
                 $9917 = +HEAPF64[$9916>>3];
                 $9918 = -1.0 * $9917;
                 $9919 = $x312;
                 $9920 = $9918 * $9919;
                 $9921 = (+__Z5IKabsd($9920));
                 $9922 = $9921 < 1.9999999999999999E-6;
                 do {
                  if ($9922) {
                   $9923 = $x312;
                   $9924 = +HEAPF64[$x314>>3];
                   $9925 = $9923 * $9924;
                   $9926 = (($4) + 128|0);
                   $9927 = +HEAPF64[$9926>>3];
                   $9928 = (($4) + 168|0);
                   $9929 = +HEAPF64[$9928>>3];
                   $9930 = $9927 * $9929;
                   $9931 = (($4) + 408|0);
                   $9932 = +HEAPF64[$9931>>3];
                   $9933 = $9930 * $9932;
                   $9934 = (($4) + 336|0);
                   $9935 = +HEAPF64[$9934>>3];
                   $9936 = -1.0 * $9935;
                   $9937 = (($4) + 176|0);
                   $9938 = +HEAPF64[$9937>>3];
                   $9939 = $9936 * $9938;
                   $9940 = $9933 + $9939;
                   $9941 = $9925 * $9940;
                   $9942 = (+__Z5IKabsd($9941));
                   $9943 = $9942 < 1.9999999999999999E-6;
                   if (!($9943)) {
                    break;
                   }
                   $9944 = (($4) + 408|0);
                   $9945 = +HEAPF64[$9944>>3];
                   $9946 = -1.0 * $9945;
                   $9947 = $x312;
                   $9948 = $9946 * $9947;
                   $9949 = (+__Z5IKsqrd($9948));
                   $9950 = $x312;
                   $9951 = +HEAPF64[$x314>>3];
                   $9952 = $9950 * $9951;
                   $9953 = (($4) + 128|0);
                   $9954 = +HEAPF64[$9953>>3];
                   $9955 = (($4) + 168|0);
                   $9956 = +HEAPF64[$9955>>3];
                   $9957 = $9954 * $9956;
                   $9958 = (($4) + 408|0);
                   $9959 = +HEAPF64[$9958>>3];
                   $9960 = $9957 * $9959;
                   $9961 = (($4) + 336|0);
                   $9962 = +HEAPF64[$9961>>3];
                   $9963 = -1.0 * $9962;
                   $9964 = (($4) + 176|0);
                   $9965 = +HEAPF64[$9964>>3];
                   $9966 = $9963 * $9965;
                   $9967 = $9960 + $9966;
                   $9968 = $9952 * $9967;
                   $9969 = (+__Z5IKsqrd($9968));
                   $9970 = $9949 + $9969;
                   $9971 = $9970 - 1.0;
                   $9972 = (+__Z5IKabsd($9971));
                   $9973 = $9972 <= 1.9999999999999999E-6;
                   if (!($9973)) {
                    break;
                   }
                   break L49;
                  }
                 } while(0);
                 $9974 = (($4) + 408|0);
                 $9975 = +HEAPF64[$9974>>3];
                 $9976 = -1.0 * $9975;
                 $9977 = $x312;
                 $9978 = $9976 * $9977;
                 $9979 = $x312;
                 $9980 = +HEAPF64[$x314>>3];
                 $9981 = $9979 * $9980;
                 $9982 = (($4) + 128|0);
                 $9983 = +HEAPF64[$9982>>3];
                 $9984 = (($4) + 168|0);
                 $9985 = +HEAPF64[$9984>>3];
                 $9986 = $9983 * $9985;
                 $9987 = (($4) + 408|0);
                 $9988 = +HEAPF64[$9987>>3];
                 $9989 = $9986 * $9988;
                 $9990 = (($4) + 336|0);
                 $9991 = +HEAPF64[$9990>>3];
                 $9992 = -1.0 * $9991;
                 $9993 = (($4) + 176|0);
                 $9994 = +HEAPF64[$9993>>3];
                 $9995 = $9992 * $9994;
                 $9996 = $9989 + $9995;
                 $9997 = $9981 * $9996;
                 $9998 = (+__Z7IKatan2dd($9978,$9997));
                 HEAPF64[$j5array152>>3] = $9998;
                 $9999 = +HEAPF64[$j5array152>>3];
                 $10000 = (+__Z5IKsind($9999));
                 HEAPF64[$sj5array154>>3] = $10000;
                 $10001 = +HEAPF64[$j5array152>>3];
                 $10002 = (+__Z5IKcosd($10001));
                 HEAPF64[$cj5array153>>3] = $10002;
                 $10003 = +HEAPF64[$j5array152>>3];
                 $10004 = $10003 > 3.14159265358979;
                 if ($10004) {
                  $10005 = +HEAPF64[$j5array152>>3];
                  $10006 = $10005 - 6.2831853071795898;
                  HEAPF64[$j5array152>>3] = $10006;
                 } else {
                  $10007 = +HEAPF64[$j5array152>>3];
                  $10008 = $10007 < -3.14159265358979;
                  if ($10008) {
                   $10009 = +HEAPF64[$j5array152>>3];
                   $10010 = $10009 + 6.2831853071795898;
                   HEAPF64[$j5array152>>3] = $10010;
                  }
                 }
                 HEAP8[$j5valid155>>0] = 1;
                 $ij5156 = 0;
                 while(1) {
                  $10011 = $ij5156;
                  $10012 = ($10011|0)<(1);
                  if (!($10012)) {
                   break;
                  }
                  $10013 = $ij5156;
                  $10014 = (($j5valid155) + ($10013)|0);
                  $10015 = HEAP8[$10014>>0]|0;
                  $10016 = $10015&1;
                  L182: do {
                   if ($10016) {
                    $10017 = $ij5156;
                    $10018 = $10017&255;
                    $10019 = (($4) + 551|0);
                    HEAP8[$10019>>0] = $10018;
                    $10020 = (($4) + 551|0);
                    $10021 = (($10020) + 1|0);
                    HEAP8[$10021>>0] = -1;
                    $10022 = $ij5156;
                    $10023 = (($10022) + 1)|0;
                    $iij5157 = $10023;
                    L185: while(1) {
                     $10024 = $iij5157;
                     $10025 = ($10024|0)<(1);
                     if (!($10025)) {
                      break;
                     }
                     $10026 = $iij5157;
                     $10027 = (($j5valid155) + ($10026)|0);
                     $10028 = HEAP8[$10027>>0]|0;
                     $10029 = $10028&1;
                     do {
                      if ($10029) {
                       $10030 = $ij5156;
                       $10031 = (($cj5array153) + ($10030<<3)|0);
                       $10032 = +HEAPF64[$10031>>3];
                       $10033 = $iij5157;
                       $10034 = (($cj5array153) + ($10033<<3)|0);
                       $10035 = +HEAPF64[$10034>>3];
                       $10036 = $10032 - $10035;
                       $10037 = (+__Z5IKabsd($10036));
                       $10038 = $10037 < 9.9999999999999995E-7;
                       if (!($10038)) {
                        break;
                       }
                       $10039 = $ij5156;
                       $10040 = (($sj5array154) + ($10039<<3)|0);
                       $10041 = +HEAPF64[$10040>>3];
                       $10042 = $iij5157;
                       $10043 = (($sj5array154) + ($10042<<3)|0);
                       $10044 = +HEAPF64[$10043>>3];
                       $10045 = $10041 - $10044;
                       $10046 = (+__Z5IKabsd($10045));
                       $10047 = $10046 < 9.9999999999999995E-7;
                       if ($10047) {
                        label = 1270;
                        break L185;
                       }
                      }
                     } while(0);
                     $10054 = $iij5157;
                     $10055 = (($10054) + 1)|0;
                     $iij5157 = $10055;
                    }
                    if ((label|0) == 1270) {
                     label = 0;
                     $10048 = $iij5157;
                     $10049 = (($j5valid155) + ($10048)|0);
                     HEAP8[$10049>>0] = 0;
                     $10050 = $iij5157;
                     $10051 = $10050&255;
                     $10052 = (($4) + 551|0);
                     $10053 = (($10052) + 1|0);
                     HEAP8[$10053>>0] = $10051;
                    }
                    $10056 = $ij5156;
                    $10057 = (($j5array152) + ($10056<<3)|0);
                    $10058 = +HEAPF64[$10057>>3];
                    $10059 = (($4) + 200|0);
                    HEAPF64[$10059>>3] = $10058;
                    $10060 = $ij5156;
                    $10061 = (($cj5array153) + ($10060<<3)|0);
                    $10062 = +HEAPF64[$10061>>3];
                    $10063 = (($4) + 208|0);
                    HEAPF64[$10063>>3] = $10062;
                    $10064 = $ij5156;
                    $10065 = (($sj5array154) + ($10064<<3)|0);
                    $10066 = +HEAPF64[$10065>>3];
                    $10067 = (($4) + 216|0);
                    HEAPF64[$10067>>3] = $10066;
                    $10068 = (($4) + 200|0);
                    $10069 = +HEAPF64[$10068>>3];
                    $10070 = (+__Z5IKsind($10069));
                    $x315 = $10070;
                    $10071 = (($4) + 200|0);
                    $10072 = +HEAPF64[$10071>>3];
                    $10073 = (+__Z5IKcosd($10072));
                    $x316 = $10073;
                    $10074 = (($4) + 168|0);
                    $10075 = +HEAPF64[$10074>>3];
                    $10076 = (($4) + 136|0);
                    $10077 = +HEAPF64[$10076>>3];
                    $10078 = $10075 * $10077;
                    $x317 = $10078;
                    $10079 = (($4) + 128|0);
                    $10080 = +HEAPF64[$10079>>3];
                    $10081 = (($4) + 312|0);
                    $10082 = +HEAPF64[$10081>>3];
                    $10083 = $10080 * $10082;
                    $x318 = $10083;
                    $10084 = (($4) + 264|0);
                    $10085 = +HEAPF64[$10084>>3];
                    $10086 = 1.0 * $10085;
                    $x319 = $10086;
                    $10087 = (($4) + 168|0);
                    $10088 = +HEAPF64[$10087>>3];
                    $10089 = 1.0 * $10088;
                    $x320 = $10089;
                    $10090 = (($4) + 240|0);
                    $10091 = +HEAPF64[$10090>>3];
                    $10092 = 1.0 * $10091;
                    $x321 = $10092;
                    $10093 = (($4) + 128|0);
                    $10094 = +HEAPF64[$10093>>3];
                    $10095 = (($4) + 336|0);
                    $10096 = +HEAPF64[$10095>>3];
                    $10097 = $10094 * $10096;
                    $x322 = $10097;
                    $10098 = (($4) + 128|0);
                    $10099 = +HEAPF64[$10098>>3];
                    $10100 = $x316;
                    $10101 = $10099 * $10100;
                    $x323 = $10101;
                    $10102 = (($4) + 128|0);
                    $10103 = +HEAPF64[$10102>>3];
                    $10104 = $x315;
                    $10105 = $10103 * $10104;
                    $x324 = $10105;
                    $10106 = $x316;
                    $10107 = 1.0 * $10106;
                    $x325 = $10107;
                    $10108 = (($4) + 176|0);
                    $10109 = +HEAPF64[$10108>>3];
                    $10110 = $x315;
                    $10111 = $10109 * $10110;
                    $10112 = (($4) + 408|0);
                    $10113 = +HEAPF64[$10112>>3];
                    $10114 = $10111 + $10113;
                    HEAPF64[$evalcond158>>3] = $10114;
                    $10115 = (($4) + 384|0);
                    $10116 = +HEAPF64[$10115>>3];
                    $10117 = (($4) + 176|0);
                    $10118 = +HEAPF64[$10117>>3];
                    $10119 = -1.0 * $10118;
                    $10120 = $x325;
                    $10121 = $10119 * $10120;
                    $10122 = $10116 + $10121;
                    $10123 = (($evalcond158) + 8|0);
                    HEAPF64[$10123>>3] = $10122;
                    $10124 = (($4) + 312|0);
                    $10125 = +HEAPF64[$10124>>3];
                    $10126 = (($4) + 136|0);
                    $10127 = +HEAPF64[$10126>>3];
                    $10128 = $10125 * $10127;
                    $10129 = $x315;
                    $10130 = $10128 + $10129;
                    $10131 = (($4) + 128|0);
                    $10132 = +HEAPF64[$10131>>3];
                    $10133 = (($4) + 240|0);
                    $10134 = +HEAPF64[$10133>>3];
                    $10135 = $10132 * $10134;
                    $10136 = $10130 + $10135;
                    $10137 = (($evalcond158) + 16|0);
                    HEAPF64[$10137>>3] = $10136;
                    $10138 = (($4) + 336|0);
                    $10139 = +HEAPF64[$10138>>3];
                    $10140 = (($4) + 136|0);
                    $10141 = +HEAPF64[$10140>>3];
                    $10142 = $10139 * $10141;
                    $10143 = $x316;
                    $10144 = $10142 + $10143;
                    $10145 = (($4) + 128|0);
                    $10146 = +HEAPF64[$10145>>3];
                    $10147 = (($4) + 264|0);
                    $10148 = +HEAPF64[$10147>>3];
                    $10149 = $10146 * $10148;
                    $10150 = $10144 + $10149;
                    $10151 = (($evalcond158) + 24|0);
                    HEAPF64[$10151>>3] = $10150;
                    $10152 = $x324;
                    $10153 = (($4) + 240|0);
                    $10154 = +HEAPF64[$10153>>3];
                    $10155 = $10152 + $10154;
                    $10156 = $x316;
                    $10157 = $x317;
                    $10158 = $10156 * $10157;
                    $10159 = $10155 + $10158;
                    $10160 = (($evalcond158) + 32|0);
                    HEAPF64[$10160>>3] = $10159;
                    $10161 = (($4) + 168|0);
                    $10162 = +HEAPF64[$10161>>3];
                    $10163 = $x324;
                    $10164 = $10162 * $10163;
                    $10165 = (($4) + 336|0);
                    $10166 = +HEAPF64[$10165>>3];
                    $10167 = $10164 + $10166;
                    $10168 = (($4) + 136|0);
                    $10169 = +HEAPF64[$10168>>3];
                    $10170 = $x316;
                    $10171 = $10169 * $10170;
                    $10172 = $10167 + $10171;
                    $10173 = (($evalcond158) + 40|0);
                    HEAPF64[$10173>>3] = $10172;
                    $10174 = (($4) + 168|0);
                    $10175 = +HEAPF64[$10174>>3];
                    $10176 = $x315;
                    $10177 = $10175 * $10176;
                    $10178 = (($4) + 136|0);
                    $10179 = +HEAPF64[$10178>>3];
                    $10180 = -1.0 * $10179;
                    $10181 = $x319;
                    $10182 = $10180 * $10181;
                    $10183 = $10177 + $10182;
                    $10184 = $x322;
                    $10185 = $10183 + $10184;
                    $10186 = (($evalcond158) + 48|0);
                    HEAPF64[$10186>>3] = $10185;
                    $10187 = $x323;
                    $10188 = (($4) + 264|0);
                    $10189 = +HEAPF64[$10188>>3];
                    $10190 = $10187 + $10189;
                    $10191 = $x315;
                    $10192 = -1.0 * $10191;
                    $10193 = $x317;
                    $10194 = $10192 * $10193;
                    $10195 = $10190 + $10194;
                    $10196 = (($evalcond158) + 56|0);
                    HEAPF64[$10196>>3] = $10195;
                    $10197 = $x320;
                    $10198 = -1.0 * $10197;
                    $10199 = $x323;
                    $10200 = $10198 * $10199;
                    $10201 = (($4) + 312|0);
                    $10202 = +HEAPF64[$10201>>3];
                    $10203 = $10200 + $10202;
                    $10204 = (($4) + 136|0);
                    $10205 = +HEAPF64[$10204>>3];
                    $10206 = $x315;
                    $10207 = $10205 * $10206;
                    $10208 = $10203 + $10207;
                    $10209 = (($evalcond158) + 64|0);
                    HEAPF64[$10209>>3] = $10208;
                    $10210 = $x318;
                    $10211 = $x316;
                    $10212 = -1.0 * $10211;
                    $10213 = $x320;
                    $10214 = $10212 * $10213;
                    $10215 = $10210 + $10214;
                    $10216 = (($4) + 136|0);
                    $10217 = +HEAPF64[$10216>>3];
                    $10218 = -1.0 * $10217;
                    $10219 = $x321;
                    $10220 = $10218 * $10219;
                    $10221 = $10215 + $10220;
                    $10222 = (($evalcond158) + 72|0);
                    HEAPF64[$10222>>3] = $10221;
                    $10223 = $x315;
                    $10224 = (($4) + 168|0);
                    $10225 = +HEAPF64[$10224>>3];
                    $10226 = $x322;
                    $10227 = $10225 * $10226;
                    $10228 = $10223 + $10227;
                    $10229 = (($4) + 408|0);
                    $10230 = +HEAPF64[$10229>>3];
                    $10231 = (($4) + 176|0);
                    $10232 = +HEAPF64[$10231>>3];
                    $10233 = $10230 * $10232;
                    $10234 = $10228 + $10233;
                    $10235 = $x317;
                    $10236 = -1.0 * $10235;
                    $10237 = $x319;
                    $10238 = $10236 * $10237;
                    $10239 = $10234 + $10238;
                    $10240 = (($evalcond158) + 80|0);
                    HEAPF64[$10240>>3] = $10239;
                    $10241 = (($4) + 384|0);
                    $10242 = +HEAPF64[$10241>>3];
                    $10243 = (($4) + 176|0);
                    $10244 = +HEAPF64[$10243>>3];
                    $10245 = $10242 * $10244;
                    $10246 = (($4) + 168|0);
                    $10247 = +HEAPF64[$10246>>3];
                    $10248 = $x318;
                    $10249 = $10247 * $10248;
                    $10250 = $10245 + $10249;
                    $10251 = $x317;
                    $10252 = -1.0 * $10251;
                    $10253 = $x321;
                    $10254 = $10252 * $10253;
                    $10255 = $10250 + $10254;
                    $10256 = $x325;
                    $10257 = -1.0 * $10256;
                    $10258 = $10255 + $10257;
                    $10259 = (($evalcond158) + 88|0);
                    HEAPF64[$10259>>3] = $10258;
                    $10260 = +HEAPF64[$evalcond158>>3];
                    $10261 = (+__Z5IKabsd($10260));
                    $10262 = $10261 > 5.0000000000000004E-6;
                    do {
                     if (!($10262)) {
                      $10263 = (($evalcond158) + 8|0);
                      $10264 = +HEAPF64[$10263>>3];
                      $10265 = (+__Z5IKabsd($10264));
                      $10266 = $10265 > 5.0000000000000004E-6;
                      if ($10266) {
                       break;
                      }
                      $10267 = (($evalcond158) + 16|0);
                      $10268 = +HEAPF64[$10267>>3];
                      $10269 = (+__Z5IKabsd($10268));
                      $10270 = $10269 > 5.0000000000000004E-6;
                      if ($10270) {
                       break;
                      }
                      $10271 = (($evalcond158) + 24|0);
                      $10272 = +HEAPF64[$10271>>3];
                      $10273 = (+__Z5IKabsd($10272));
                      $10274 = $10273 > 5.0000000000000004E-6;
                      if ($10274) {
                       break;
                      }
                      $10275 = (($evalcond158) + 32|0);
                      $10276 = +HEAPF64[$10275>>3];
                      $10277 = (+__Z5IKabsd($10276));
                      $10278 = $10277 > 5.0000000000000004E-6;
                      if ($10278) {
                       break;
                      }
                      $10279 = (($evalcond158) + 40|0);
                      $10280 = +HEAPF64[$10279>>3];
                      $10281 = (+__Z5IKabsd($10280));
                      $10282 = $10281 > 5.0000000000000004E-6;
                      if ($10282) {
                       break;
                      }
                      $10283 = (($evalcond158) + 48|0);
                      $10284 = +HEAPF64[$10283>>3];
                      $10285 = (+__Z5IKabsd($10284));
                      $10286 = $10285 > 5.0000000000000004E-6;
                      if ($10286) {
                       break;
                      }
                      $10287 = (($evalcond158) + 56|0);
                      $10288 = +HEAPF64[$10287>>3];
                      $10289 = (+__Z5IKabsd($10288));
                      $10290 = $10289 > 5.0000000000000004E-6;
                      if ($10290) {
                       break;
                      }
                      $10291 = (($evalcond158) + 64|0);
                      $10292 = +HEAPF64[$10291>>3];
                      $10293 = (+__Z5IKabsd($10292));
                      $10294 = $10293 > 5.0000000000000004E-6;
                      if ($10294) {
                       break;
                      }
                      $10295 = (($evalcond158) + 72|0);
                      $10296 = +HEAPF64[$10295>>3];
                      $10297 = (+__Z5IKabsd($10296));
                      $10298 = $10297 > 5.0000000000000004E-6;
                      if ($10298) {
                       break;
                      }
                      $10299 = (($evalcond158) + 80|0);
                      $10300 = +HEAPF64[$10299>>3];
                      $10301 = (+__Z5IKabsd($10300));
                      $10302 = $10301 > 5.0000000000000004E-6;
                      if ($10302) {
                       break;
                      }
                      $10303 = (($evalcond158) + 88|0);
                      $10304 = +HEAPF64[$10303>>3];
                      $10305 = (+__Z5IKabsd($10304));
                      $10306 = $10305 > 5.0000000000000004E-6;
                      if ($10306) {
                       break;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos159,6);
                      __THREW__ = 0;
                      $10307 = (invoke_iii(381,($vinfos159|0),0)|0);
                      $10308 = __THREW__; __THREW__ = 0;
                      $10309 = $10308&1;
                      if ($10309) {
                       label = 1321;
                       break L1;
                      }
                      $10310 = (($10307) + 17|0);
                      HEAP8[$10310>>0] = 1;
                      $10311 = +HEAPF64[$4>>3];
                      __THREW__ = 0;
                      $10312 = (invoke_iii(381,($vinfos159|0),0)|0);
                      $10313 = __THREW__; __THREW__ = 0;
                      $10314 = $10313&1;
                      if ($10314) {
                       label = 1321;
                       break L1;
                      }
                      $10315 = (($10312) + 8|0);
                      HEAPF64[$10315>>3] = $10311;
                      $10316 = (($4) + 536|0);
                      $10317 = HEAP8[$10316>>0]|0;
                      __THREW__ = 0;
                      $10318 = (invoke_iii(381,($vinfos159|0),0)|0);
                      $10319 = __THREW__; __THREW__ = 0;
                      $10320 = $10319&1;
                      if ($10320) {
                       label = 1321;
                       break L1;
                      }
                      $10321 = (($10318) + 19|0);
                      HEAP8[$10321>>0] = $10317;
                      $10322 = (($4) + 536|0);
                      $10323 = (($10322) + 1|0);
                      $10324 = HEAP8[$10323>>0]|0;
                      __THREW__ = 0;
                      $10325 = (invoke_iii(381,($vinfos159|0),0)|0);
                      $10326 = __THREW__; __THREW__ = 0;
                      $10327 = $10326&1;
                      if ($10327) {
                       label = 1321;
                       break L1;
                      }
                      $10328 = (($10325) + 19|0);
                      $10329 = (($10328) + 1|0);
                      HEAP8[$10329>>0] = $10324;
                      $10330 = (($4) + 538|0);
                      $10331 = HEAP8[$10330>>0]|0;
                      __THREW__ = 0;
                      $10332 = (invoke_iii(381,($vinfos159|0),0)|0);
                      $10333 = __THREW__; __THREW__ = 0;
                      $10334 = $10333&1;
                      if ($10334) {
                       label = 1321;
                       break L1;
                      }
                      $10335 = (($10332) + 18|0);
                      HEAP8[$10335>>0] = $10331;
                      __THREW__ = 0;
                      $10336 = (invoke_iii(381,($vinfos159|0),1)|0);
                      $10337 = __THREW__; __THREW__ = 0;
                      $10338 = $10337&1;
                      if ($10338) {
                       label = 1321;
                       break L1;
                      }
                      $10339 = (($10336) + 17|0);
                      HEAP8[$10339>>0] = 1;
                      $10340 = (($4) + 40|0);
                      $10341 = +HEAPF64[$10340>>3];
                      __THREW__ = 0;
                      $10342 = (invoke_iii(381,($vinfos159|0),1)|0);
                      $10343 = __THREW__; __THREW__ = 0;
                      $10344 = $10343&1;
                      if ($10344) {
                       label = 1321;
                       break L1;
                      }
                      $10345 = (($10342) + 8|0);
                      HEAPF64[$10345>>3] = $10341;
                      $10346 = (($4) + 539|0);
                      $10347 = HEAP8[$10346>>0]|0;
                      __THREW__ = 0;
                      $10348 = (invoke_iii(381,($vinfos159|0),1)|0);
                      $10349 = __THREW__; __THREW__ = 0;
                      $10350 = $10349&1;
                      if ($10350) {
                       label = 1321;
                       break L1;
                      }
                      $10351 = (($10348) + 19|0);
                      HEAP8[$10351>>0] = $10347;
                      $10352 = (($4) + 539|0);
                      $10353 = (($10352) + 1|0);
                      $10354 = HEAP8[$10353>>0]|0;
                      __THREW__ = 0;
                      $10355 = (invoke_iii(381,($vinfos159|0),1)|0);
                      $10356 = __THREW__; __THREW__ = 0;
                      $10357 = $10356&1;
                      if ($10357) {
                       label = 1321;
                       break L1;
                      }
                      $10358 = (($10355) + 19|0);
                      $10359 = (($10358) + 1|0);
                      HEAP8[$10359>>0] = $10354;
                      $10360 = (($4) + 541|0);
                      $10361 = HEAP8[$10360>>0]|0;
                      __THREW__ = 0;
                      $10362 = (invoke_iii(381,($vinfos159|0),1)|0);
                      $10363 = __THREW__; __THREW__ = 0;
                      $10364 = $10363&1;
                      if ($10364) {
                       label = 1321;
                       break L1;
                      }
                      $10365 = (($10362) + 18|0);
                      HEAP8[$10365>>0] = $10361;
                      __THREW__ = 0;
                      $10366 = (invoke_iii(381,($vinfos159|0),2)|0);
                      $10367 = __THREW__; __THREW__ = 0;
                      $10368 = $10367&1;
                      if ($10368) {
                       label = 1321;
                       break L1;
                      }
                      $10369 = (($10366) + 17|0);
                      HEAP8[$10369>>0] = 1;
                      $10370 = (($4) + 80|0);
                      $10371 = +HEAPF64[$10370>>3];
                      __THREW__ = 0;
                      $10372 = (invoke_iii(381,($vinfos159|0),2)|0);
                      $10373 = __THREW__; __THREW__ = 0;
                      $10374 = $10373&1;
                      if ($10374) {
                       label = 1321;
                       break L1;
                      }
                      $10375 = (($10372) + 8|0);
                      HEAPF64[$10375>>3] = $10371;
                      $10376 = (($4) + 542|0);
                      $10377 = HEAP8[$10376>>0]|0;
                      __THREW__ = 0;
                      $10378 = (invoke_iii(381,($vinfos159|0),2)|0);
                      $10379 = __THREW__; __THREW__ = 0;
                      $10380 = $10379&1;
                      if ($10380) {
                       label = 1321;
                       break L1;
                      }
                      $10381 = (($10378) + 19|0);
                      HEAP8[$10381>>0] = $10377;
                      $10382 = (($4) + 542|0);
                      $10383 = (($10382) + 1|0);
                      $10384 = HEAP8[$10383>>0]|0;
                      __THREW__ = 0;
                      $10385 = (invoke_iii(381,($vinfos159|0),2)|0);
                      $10386 = __THREW__; __THREW__ = 0;
                      $10387 = $10386&1;
                      if ($10387) {
                       label = 1321;
                       break L1;
                      }
                      $10388 = (($10385) + 19|0);
                      $10389 = (($10388) + 1|0);
                      HEAP8[$10389>>0] = $10384;
                      $10390 = (($4) + 544|0);
                      $10391 = HEAP8[$10390>>0]|0;
                      __THREW__ = 0;
                      $10392 = (invoke_iii(381,($vinfos159|0),2)|0);
                      $10393 = __THREW__; __THREW__ = 0;
                      $10394 = $10393&1;
                      if ($10394) {
                       label = 1321;
                       break L1;
                      }
                      $10395 = (($10392) + 18|0);
                      HEAP8[$10395>>0] = $10391;
                      __THREW__ = 0;
                      $10396 = (invoke_iii(381,($vinfos159|0),3)|0);
                      $10397 = __THREW__; __THREW__ = 0;
                      $10398 = $10397&1;
                      if ($10398) {
                       label = 1321;
                       break L1;
                      }
                      $10399 = (($10396) + 17|0);
                      HEAP8[$10399>>0] = 1;
                      $10400 = (($4) + 120|0);
                      $10401 = +HEAPF64[$10400>>3];
                      __THREW__ = 0;
                      $10402 = (invoke_iii(381,($vinfos159|0),3)|0);
                      $10403 = __THREW__; __THREW__ = 0;
                      $10404 = $10403&1;
                      if ($10404) {
                       label = 1321;
                       break L1;
                      }
                      $10405 = (($10402) + 8|0);
                      HEAPF64[$10405>>3] = $10401;
                      $10406 = (($4) + 545|0);
                      $10407 = HEAP8[$10406>>0]|0;
                      __THREW__ = 0;
                      $10408 = (invoke_iii(381,($vinfos159|0),3)|0);
                      $10409 = __THREW__; __THREW__ = 0;
                      $10410 = $10409&1;
                      if ($10410) {
                       label = 1321;
                       break L1;
                      }
                      $10411 = (($10408) + 19|0);
                      HEAP8[$10411>>0] = $10407;
                      $10412 = (($4) + 545|0);
                      $10413 = (($10412) + 1|0);
                      $10414 = HEAP8[$10413>>0]|0;
                      __THREW__ = 0;
                      $10415 = (invoke_iii(381,($vinfos159|0),3)|0);
                      $10416 = __THREW__; __THREW__ = 0;
                      $10417 = $10416&1;
                      if ($10417) {
                       label = 1321;
                       break L1;
                      }
                      $10418 = (($10415) + 19|0);
                      $10419 = (($10418) + 1|0);
                      HEAP8[$10419>>0] = $10414;
                      $10420 = (($4) + 547|0);
                      $10421 = HEAP8[$10420>>0]|0;
                      __THREW__ = 0;
                      $10422 = (invoke_iii(381,($vinfos159|0),3)|0);
                      $10423 = __THREW__; __THREW__ = 0;
                      $10424 = $10423&1;
                      if ($10424) {
                       label = 1321;
                       break L1;
                      }
                      $10425 = (($10422) + 18|0);
                      HEAP8[$10425>>0] = $10421;
                      __THREW__ = 0;
                      $10426 = (invoke_iii(381,($vinfos159|0),4)|0);
                      $10427 = __THREW__; __THREW__ = 0;
                      $10428 = $10427&1;
                      if ($10428) {
                       label = 1321;
                       break L1;
                      }
                      $10429 = (($10426) + 17|0);
                      HEAP8[$10429>>0] = 1;
                      $10430 = (($4) + 160|0);
                      $10431 = +HEAPF64[$10430>>3];
                      __THREW__ = 0;
                      $10432 = (invoke_iii(381,($vinfos159|0),4)|0);
                      $10433 = __THREW__; __THREW__ = 0;
                      $10434 = $10433&1;
                      if ($10434) {
                       label = 1321;
                       break L1;
                      }
                      $10435 = (($10432) + 8|0);
                      HEAPF64[$10435>>3] = $10431;
                      $10436 = (($4) + 548|0);
                      $10437 = HEAP8[$10436>>0]|0;
                      __THREW__ = 0;
                      $10438 = (invoke_iii(381,($vinfos159|0),4)|0);
                      $10439 = __THREW__; __THREW__ = 0;
                      $10440 = $10439&1;
                      if ($10440) {
                       label = 1321;
                       break L1;
                      }
                      $10441 = (($10438) + 19|0);
                      HEAP8[$10441>>0] = $10437;
                      $10442 = (($4) + 548|0);
                      $10443 = (($10442) + 1|0);
                      $10444 = HEAP8[$10443>>0]|0;
                      __THREW__ = 0;
                      $10445 = (invoke_iii(381,($vinfos159|0),4)|0);
                      $10446 = __THREW__; __THREW__ = 0;
                      $10447 = $10446&1;
                      if ($10447) {
                       label = 1321;
                       break L1;
                      }
                      $10448 = (($10445) + 19|0);
                      $10449 = (($10448) + 1|0);
                      HEAP8[$10449>>0] = $10444;
                      $10450 = (($4) + 550|0);
                      $10451 = HEAP8[$10450>>0]|0;
                      __THREW__ = 0;
                      $10452 = (invoke_iii(381,($vinfos159|0),4)|0);
                      $10453 = __THREW__; __THREW__ = 0;
                      $10454 = $10453&1;
                      if ($10454) {
                       label = 1321;
                       break L1;
                      }
                      $10455 = (($10452) + 18|0);
                      HEAP8[$10455>>0] = $10451;
                      __THREW__ = 0;
                      $10456 = (invoke_iii(381,($vinfos159|0),5)|0);
                      $10457 = __THREW__; __THREW__ = 0;
                      $10458 = $10457&1;
                      if ($10458) {
                       label = 1321;
                       break L1;
                      }
                      $10459 = (($10456) + 17|0);
                      HEAP8[$10459>>0] = 1;
                      $10460 = (($4) + 200|0);
                      $10461 = +HEAPF64[$10460>>3];
                      __THREW__ = 0;
                      $10462 = (invoke_iii(381,($vinfos159|0),5)|0);
                      $10463 = __THREW__; __THREW__ = 0;
                      $10464 = $10463&1;
                      if ($10464) {
                       label = 1321;
                       break L1;
                      }
                      $10465 = (($10462) + 8|0);
                      HEAPF64[$10465>>3] = $10461;
                      $10466 = (($4) + 551|0);
                      $10467 = HEAP8[$10466>>0]|0;
                      __THREW__ = 0;
                      $10468 = (invoke_iii(381,($vinfos159|0),5)|0);
                      $10469 = __THREW__; __THREW__ = 0;
                      $10470 = $10469&1;
                      if ($10470) {
                       label = 1321;
                       break L1;
                      }
                      $10471 = (($10468) + 19|0);
                      HEAP8[$10471>>0] = $10467;
                      $10472 = (($4) + 551|0);
                      $10473 = (($10472) + 1|0);
                      $10474 = HEAP8[$10473>>0]|0;
                      __THREW__ = 0;
                      $10475 = (invoke_iii(381,($vinfos159|0),5)|0);
                      $10476 = __THREW__; __THREW__ = 0;
                      $10477 = $10476&1;
                      if ($10477) {
                       label = 1321;
                       break L1;
                      }
                      $10478 = (($10475) + 19|0);
                      $10479 = (($10478) + 1|0);
                      HEAP8[$10479>>0] = $10474;
                      $10480 = (($4) + 553|0);
                      $10481 = HEAP8[$10480>>0]|0;
                      __THREW__ = 0;
                      $10482 = (invoke_iii(381,($vinfos159|0),5)|0);
                      $10483 = __THREW__; __THREW__ = 0;
                      $10484 = $10483&1;
                      if ($10484) {
                       label = 1321;
                       break L1;
                      }
                      $10485 = (($10482) + 18|0);
                      HEAP8[$10485>>0] = $10481;
                      __THREW__ = 0;
                      invoke_vii(382,($vfree160|0),0);
                      $10486 = __THREW__; __THREW__ = 0;
                      $10487 = $10486&1;
                      if ($10487) {
                       label = 1321;
                       break L1;
                      }
                      $10488 = $1;
                      $10489 = HEAP32[$10488>>2]|0;
                      $10490 = (($10489) + 8|0);
                      $10491 = HEAP32[$10490>>2]|0;
                      __THREW__ = 0;
                      (invoke_iiii($10491|0,($10488|0),($vinfos159|0),($vfree160|0))|0);
                      $10492 = __THREW__; __THREW__ = 0;
                      $10493 = $10492&1;
                      if ($10493) {
                       label = 1322;
                       break L1;
                      }
                      __THREW__ = 0;
                      invoke_vi(366,($vfree160|0));
                      $10494 = __THREW__; __THREW__ = 0;
                      $10495 = $10494&1;
                      if ($10495) {
                       label = 1321;
                       break L1;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos159);
                      break L182;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $10496 = $ij5156;
                  $10497 = (($10496) + 1)|0;
                  $ij5156 = $10497;
                 }
                }
               } while(0);
               if ((label|0) == 903) {
                label = 0;
                $bgotonextstatement111 = 1;
                $7647 = (($4) + 360|0);
                $7648 = +HEAPF64[$7647>>3];
                $7649 = (($4) + 136|0);
                $7650 = +HEAPF64[$7649>>3];
                $7651 = $7648 * $7650;
                $7652 = (($4) + 128|0);
                $7653 = +HEAPF64[$7652>>3];
                $7654 = (($4) + 288|0);
                $7655 = +HEAPF64[$7654>>3];
                $7656 = $7653 * $7655;
                $7657 = $7651 + $7656;
                $x278 = $7657;
                $7658 = (($4) + 288|0);
                $7659 = +HEAPF64[$7658>>3];
                $7660 = -1.0 * $7659;
                $7661 = (($4) + 136|0);
                $7662 = +HEAPF64[$7661>>3];
                $7663 = $7660 * $7662;
                $7664 = (($4) + 128|0);
                $7665 = +HEAPF64[$7664>>3];
                $7666 = (($4) + 360|0);
                $7667 = +HEAPF64[$7666>>3];
                $7668 = $7665 * $7667;
                $7669 = $7663 + $7668;
                $x279 = $7669;
                $7670 = (($4) + 160|0);
                $7671 = +HEAPF64[$7670>>3];
                $7672 = (+__Z5IKabsd($7671));
                $7673 = 3.14159265358979 + $7672;
                $7674 = (+__Z6IKfmoddd($7673,6.2831853071795898));
                $7675 = -3.14159265358979 + $7674;
                HEAPF64[$evalcond110>>3] = $7675;
                $7676 = (($4) + 432|0);
                $7677 = +HEAPF64[$7676>>3];
                $7678 = -1.0 + $7677;
                $7679 = (($evalcond110) + 8|0);
                HEAPF64[$7679>>3] = $7678;
                $7680 = (($4) + 360|0);
                $7681 = +HEAPF64[$7680>>3];
                $7682 = (($evalcond110) + 16|0);
                HEAPF64[$7682>>3] = $7681;
                $7683 = (($4) + 408|0);
                $7684 = +HEAPF64[$7683>>3];
                $7685 = (($evalcond110) + 24|0);
                HEAPF64[$7685>>3] = $7684;
                $7686 = (($4) + 288|0);
                $7687 = +HEAPF64[$7686>>3];
                $7688 = (($evalcond110) + 32|0);
                HEAPF64[$7688>>3] = $7687;
                $7689 = (($4) + 384|0);
                $7690 = +HEAPF64[$7689>>3];
                $7691 = (($evalcond110) + 40|0);
                HEAPF64[$7691>>3] = $7690;
                $7692 = $x278;
                $7693 = (($evalcond110) + 48|0);
                HEAPF64[$7693>>3] = $7692;
                $7694 = $x278;
                $7695 = (($evalcond110) + 56|0);
                HEAPF64[$7695>>3] = $7694;
                $7696 = $x279;
                $7697 = (($evalcond110) + 64|0);
                HEAPF64[$7697>>3] = $7696;
                $7698 = $x279;
                $7699 = (($evalcond110) + 72|0);
                HEAPF64[$7699>>3] = $7698;
                $7700 = +HEAPF64[$evalcond110>>3];
                $7701 = (+__Z5IKabsd($7700));
                $7702 = $7701 < 9.9999999999999995E-7;
                L248: do {
                 if ($7702) {
                  $7703 = (($evalcond110) + 8|0);
                  $7704 = +HEAPF64[$7703>>3];
                  $7705 = (+__Z5IKabsd($7704));
                  $7706 = $7705 < 9.9999999999999995E-7;
                  if (!($7706)) {
                   label = 985;
                   break;
                  }
                  $7707 = (($evalcond110) + 16|0);
                  $7708 = +HEAPF64[$7707>>3];
                  $7709 = (+__Z5IKabsd($7708));
                  $7710 = $7709 < 9.9999999999999995E-7;
                  if (!($7710)) {
                   label = 985;
                   break;
                  }
                  $7711 = (($evalcond110) + 24|0);
                  $7712 = +HEAPF64[$7711>>3];
                  $7713 = (+__Z5IKabsd($7712));
                  $7714 = $7713 < 9.9999999999999995E-7;
                  if (!($7714)) {
                   label = 985;
                   break;
                  }
                  $7715 = (($evalcond110) + 32|0);
                  $7716 = +HEAPF64[$7715>>3];
                  $7717 = (+__Z5IKabsd($7716));
                  $7718 = $7717 < 9.9999999999999995E-7;
                  if (!($7718)) {
                   label = 985;
                   break;
                  }
                  $7719 = (($evalcond110) + 40|0);
                  $7720 = +HEAPF64[$7719>>3];
                  $7721 = (+__Z5IKabsd($7720));
                  $7722 = $7721 < 9.9999999999999995E-7;
                  if (!($7722)) {
                   label = 985;
                   break;
                  }
                  $7723 = (($evalcond110) + 48|0);
                  $7724 = +HEAPF64[$7723>>3];
                  $7725 = (+__Z5IKabsd($7724));
                  $7726 = $7725 < 9.9999999999999995E-7;
                  if (!($7726)) {
                   label = 985;
                   break;
                  }
                  $7727 = (($evalcond110) + 56|0);
                  $7728 = +HEAPF64[$7727>>3];
                  $7729 = (+__Z5IKabsd($7728));
                  $7730 = $7729 < 9.9999999999999995E-7;
                  if (!($7730)) {
                   label = 985;
                   break;
                  }
                  $7731 = (($evalcond110) + 64|0);
                  $7732 = +HEAPF64[$7731>>3];
                  $7733 = (+__Z5IKabsd($7732));
                  $7734 = $7733 < 9.9999999999999995E-7;
                  if (!($7734)) {
                   label = 985;
                   break;
                  }
                  $7735 = (($evalcond110) + 72|0);
                  $7736 = +HEAPF64[$7735>>3];
                  $7737 = (+__Z5IKabsd($7736));
                  $7738 = $7737 < 9.9999999999999995E-7;
                  if (!($7738)) {
                   label = 985;
                   break;
                  }
                  $bgotonextstatement111 = 0;
                  ;HEAP8[$j5valid115+0>>0]=0|0;
                  $7739 = (($4) + 553|0);
                  HEAP8[$7739>>0] = 1;
                  $7740 = (($4) + 128|0);
                  $7741 = +HEAPF64[$7740>>3];
                  $7742 = 1.0 * $7741;
                  $x280 = $7742;
                  $7743 = (($4) + 264|0);
                  $7744 = +HEAPF64[$7743>>3];
                  $7745 = (($4) + 136|0);
                  $7746 = +HEAPF64[$7745>>3];
                  $7747 = $7744 * $7746;
                  $7748 = (($4) + 240|0);
                  $7749 = +HEAPF64[$7748>>3];
                  $7750 = -1.0 * $7749;
                  $7751 = $x280;
                  $7752 = $7750 * $7751;
                  $7753 = $7747 + $7752;
                  $7754 = (+__Z5IKabsd($7753));
                  $7755 = $7754 < 1.9999999999999999E-6;
                  do {
                   if ($7755) {
                    $7756 = (($4) + 264|0);
                    $7757 = +HEAPF64[$7756>>3];
                    $7758 = -1.0 * $7757;
                    $7759 = $x280;
                    $7760 = $7758 * $7759;
                    $7761 = (($4) + 240|0);
                    $7762 = +HEAPF64[$7761>>3];
                    $7763 = -1.0 * $7762;
                    $7764 = (($4) + 136|0);
                    $7765 = +HEAPF64[$7764>>3];
                    $7766 = $7763 * $7765;
                    $7767 = $7760 + $7766;
                    $7768 = (+__Z5IKabsd($7767));
                    $7769 = $7768 < 1.9999999999999999E-6;
                    if (!($7769)) {
                     break;
                    }
                    $7770 = (($4) + 264|0);
                    $7771 = +HEAPF64[$7770>>3];
                    $7772 = (($4) + 136|0);
                    $7773 = +HEAPF64[$7772>>3];
                    $7774 = $7771 * $7773;
                    $7775 = (($4) + 240|0);
                    $7776 = +HEAPF64[$7775>>3];
                    $7777 = -1.0 * $7776;
                    $7778 = $x280;
                    $7779 = $7777 * $7778;
                    $7780 = $7774 + $7779;
                    $7781 = (+__Z5IKsqrd($7780));
                    $7782 = (($4) + 264|0);
                    $7783 = +HEAPF64[$7782>>3];
                    $7784 = -1.0 * $7783;
                    $7785 = $x280;
                    $7786 = $7784 * $7785;
                    $7787 = (($4) + 240|0);
                    $7788 = +HEAPF64[$7787>>3];
                    $7789 = -1.0 * $7788;
                    $7790 = (($4) + 136|0);
                    $7791 = +HEAPF64[$7790>>3];
                    $7792 = $7789 * $7791;
                    $7793 = $7786 + $7792;
                    $7794 = (+__Z5IKsqrd($7793));
                    $7795 = $7781 + $7794;
                    $7796 = $7795 - 1.0;
                    $7797 = (+__Z5IKabsd($7796));
                    $7798 = $7797 <= 1.9999999999999999E-6;
                    if (!($7798)) {
                     break;
                    }
                    break L248;
                   }
                  } while(0);
                  $7799 = (($4) + 264|0);
                  $7800 = +HEAPF64[$7799>>3];
                  $7801 = (($4) + 136|0);
                  $7802 = +HEAPF64[$7801>>3];
                  $7803 = $7800 * $7802;
                  $7804 = (($4) + 240|0);
                  $7805 = +HEAPF64[$7804>>3];
                  $7806 = -1.0 * $7805;
                  $7807 = $x280;
                  $7808 = $7806 * $7807;
                  $7809 = $7803 + $7808;
                  $7810 = (($4) + 264|0);
                  $7811 = +HEAPF64[$7810>>3];
                  $7812 = -1.0 * $7811;
                  $7813 = $x280;
                  $7814 = $7812 * $7813;
                  $7815 = (($4) + 240|0);
                  $7816 = +HEAPF64[$7815>>3];
                  $7817 = -1.0 * $7816;
                  $7818 = (($4) + 136|0);
                  $7819 = +HEAPF64[$7818>>3];
                  $7820 = $7817 * $7819;
                  $7821 = $7814 + $7820;
                  $7822 = (+__Z7IKatan2dd($7809,$7821));
                  HEAPF64[$j5array112>>3] = $7822;
                  $7823 = +HEAPF64[$j5array112>>3];
                  $7824 = (+__Z5IKsind($7823));
                  HEAPF64[$sj5array114>>3] = $7824;
                  $7825 = +HEAPF64[$j5array112>>3];
                  $7826 = (+__Z5IKcosd($7825));
                  HEAPF64[$cj5array113>>3] = $7826;
                  $7827 = +HEAPF64[$j5array112>>3];
                  $7828 = $7827 > 3.14159265358979;
                  if ($7828) {
                   $7829 = +HEAPF64[$j5array112>>3];
                   $7830 = $7829 - 6.2831853071795898;
                   HEAPF64[$j5array112>>3] = $7830;
                  } else {
                   $7831 = +HEAPF64[$j5array112>>3];
                   $7832 = $7831 < -3.14159265358979;
                   if ($7832) {
                    $7833 = +HEAPF64[$j5array112>>3];
                    $7834 = $7833 + 6.2831853071795898;
                    HEAPF64[$j5array112>>3] = $7834;
                   }
                  }
                  HEAP8[$j5valid115>>0] = 1;
                  $ij5116 = 0;
                  while(1) {
                   $7835 = $ij5116;
                   $7836 = ($7835|0)<(1);
                   if (!($7836)) {
                    break;
                   }
                   $7837 = $ij5116;
                   $7838 = (($j5valid115) + ($7837)|0);
                   $7839 = HEAP8[$7838>>0]|0;
                   $7840 = $7839&1;
                   L274: do {
                    if ($7840) {
                     $7841 = $ij5116;
                     $7842 = $7841&255;
                     $7843 = (($4) + 551|0);
                     HEAP8[$7843>>0] = $7842;
                     $7844 = (($4) + 551|0);
                     $7845 = (($7844) + 1|0);
                     HEAP8[$7845>>0] = -1;
                     $7846 = $ij5116;
                     $7847 = (($7846) + 1)|0;
                     $iij5117 = $7847;
                     L277: while(1) {
                      $7848 = $iij5117;
                      $7849 = ($7848|0)<(1);
                      if (!($7849)) {
                       break;
                      }
                      $7850 = $iij5117;
                      $7851 = (($j5valid115) + ($7850)|0);
                      $7852 = HEAP8[$7851>>0]|0;
                      $7853 = $7852&1;
                      do {
                       if ($7853) {
                        $7854 = $ij5116;
                        $7855 = (($cj5array113) + ($7854<<3)|0);
                        $7856 = +HEAPF64[$7855>>3];
                        $7857 = $iij5117;
                        $7858 = (($cj5array113) + ($7857<<3)|0);
                        $7859 = +HEAPF64[$7858>>3];
                        $7860 = $7856 - $7859;
                        $7861 = (+__Z5IKabsd($7860));
                        $7862 = $7861 < 9.9999999999999995E-7;
                        if (!($7862)) {
                         break;
                        }
                        $7863 = $ij5116;
                        $7864 = (($sj5array114) + ($7863<<3)|0);
                        $7865 = +HEAPF64[$7864>>3];
                        $7866 = $iij5117;
                        $7867 = (($sj5array114) + ($7866<<3)|0);
                        $7868 = +HEAPF64[$7867>>3];
                        $7869 = $7865 - $7868;
                        $7870 = (+__Z5IKabsd($7869));
                        $7871 = $7870 < 9.9999999999999995E-7;
                        if ($7871) {
                         label = 932;
                         break L277;
                        }
                       }
                      } while(0);
                      $7878 = $iij5117;
                      $7879 = (($7878) + 1)|0;
                      $iij5117 = $7879;
                     }
                     if ((label|0) == 932) {
                      label = 0;
                      $7872 = $iij5117;
                      $7873 = (($j5valid115) + ($7872)|0);
                      HEAP8[$7873>>0] = 0;
                      $7874 = $iij5117;
                      $7875 = $7874&255;
                      $7876 = (($4) + 551|0);
                      $7877 = (($7876) + 1|0);
                      HEAP8[$7877>>0] = $7875;
                     }
                     $7880 = $ij5116;
                     $7881 = (($j5array112) + ($7880<<3)|0);
                     $7882 = +HEAPF64[$7881>>3];
                     $7883 = (($4) + 200|0);
                     HEAPF64[$7883>>3] = $7882;
                     $7884 = $ij5116;
                     $7885 = (($cj5array113) + ($7884<<3)|0);
                     $7886 = +HEAPF64[$7885>>3];
                     $7887 = (($4) + 208|0);
                     HEAPF64[$7887>>3] = $7886;
                     $7888 = $ij5116;
                     $7889 = (($sj5array114) + ($7888<<3)|0);
                     $7890 = +HEAPF64[$7889>>3];
                     $7891 = (($4) + 216|0);
                     HEAPF64[$7891>>3] = $7890;
                     $7892 = (($4) + 200|0);
                     $7893 = +HEAPF64[$7892>>3];
                     $7894 = (+__Z5IKsind($7893));
                     $x281 = $7894;
                     $7895 = (($4) + 200|0);
                     $7896 = +HEAPF64[$7895>>3];
                     $7897 = (+__Z5IKcosd($7896));
                     $x282 = $7897;
                     $7898 = (($4) + 136|0);
                     $7899 = +HEAPF64[$7898>>3];
                     $7900 = 1.0 * $7899;
                     $x283 = $7900;
                     $7901 = (($4) + 128|0);
                     $7902 = +HEAPF64[$7901>>3];
                     $7903 = $x281;
                     $7904 = $7902 * $7903;
                     $x284 = $7904;
                     $7905 = (($4) + 136|0);
                     $7906 = +HEAPF64[$7905>>3];
                     $7907 = $x282;
                     $7908 = $7906 * $7907;
                     $x285 = $7908;
                     $7909 = $x282;
                     $7910 = 1.0 * $7909;
                     $x286 = $7910;
                     $7911 = $x285;
                     $7912 = $x284;
                     $7913 = $7911 + $7912;
                     $x287 = $7913;
                     $7914 = (($4) + 312|0);
                     $7915 = +HEAPF64[$7914>>3];
                     $7916 = (($4) + 136|0);
                     $7917 = +HEAPF64[$7916>>3];
                     $7918 = $7915 * $7917;
                     $7919 = $x281;
                     $7920 = $7918 + $7919;
                     $7921 = (($4) + 128|0);
                     $7922 = +HEAPF64[$7921>>3];
                     $7923 = (($4) + 240|0);
                     $7924 = +HEAPF64[$7923>>3];
                     $7925 = $7922 * $7924;
                     $7926 = $7920 + $7925;
                     HEAPF64[$evalcond118>>3] = $7926;
                     $7927 = (($4) + 336|0);
                     $7928 = +HEAPF64[$7927>>3];
                     $7929 = (($4) + 136|0);
                     $7930 = +HEAPF64[$7929>>3];
                     $7931 = $7928 * $7930;
                     $7932 = $x282;
                     $7933 = $7931 + $7932;
                     $7934 = (($4) + 128|0);
                     $7935 = +HEAPF64[$7934>>3];
                     $7936 = (($4) + 264|0);
                     $7937 = +HEAPF64[$7936>>3];
                     $7938 = $7935 * $7937;
                     $7939 = $7933 + $7938;
                     $7940 = (($evalcond118) + 8|0);
                     HEAPF64[$7940>>3] = $7939;
                     $7941 = $x281;
                     $7942 = (($4) + 264|0);
                     $7943 = +HEAPF64[$7942>>3];
                     $7944 = -1.0 * $7943;
                     $7945 = $x283;
                     $7946 = $7944 * $7945;
                     $7947 = $7941 + $7946;
                     $7948 = (($4) + 128|0);
                     $7949 = +HEAPF64[$7948>>3];
                     $7950 = (($4) + 336|0);
                     $7951 = +HEAPF64[$7950>>3];
                     $7952 = $7949 * $7951;
                     $7953 = $7947 + $7952;
                     $7954 = (($evalcond118) + 16|0);
                     HEAPF64[$7954>>3] = $7953;
                     $7955 = $x287;
                     $7956 = (($4) + 240|0);
                     $7957 = +HEAPF64[$7956>>3];
                     $7958 = $7955 + $7957;
                     $7959 = (($evalcond118) + 24|0);
                     HEAPF64[$7959>>3] = $7958;
                     $7960 = $x287;
                     $7961 = (($4) + 336|0);
                     $7962 = +HEAPF64[$7961>>3];
                     $7963 = $7960 + $7962;
                     $7964 = (($evalcond118) + 32|0);
                     HEAPF64[$7964>>3] = $7963;
                     $7965 = $x281;
                     $7966 = -1.0 * $7965;
                     $7967 = $x283;
                     $7968 = $7966 * $7967;
                     $7969 = (($4) + 128|0);
                     $7970 = +HEAPF64[$7969>>3];
                     $7971 = $x282;
                     $7972 = $7970 * $7971;
                     $7973 = $7968 + $7972;
                     $7974 = (($4) + 264|0);
                     $7975 = +HEAPF64[$7974>>3];
                     $7976 = $7973 + $7975;
                     $7977 = (($evalcond118) + 40|0);
                     HEAPF64[$7977>>3] = $7976;
                     $7978 = (($4) + 128|0);
                     $7979 = +HEAPF64[$7978>>3];
                     $7980 = -1.0 * $7979;
                     $7981 = $x286;
                     $7982 = $7980 * $7981;
                     $7983 = (($4) + 136|0);
                     $7984 = +HEAPF64[$7983>>3];
                     $7985 = $x281;
                     $7986 = $7984 * $7985;
                     $7987 = $7982 + $7986;
                     $7988 = (($4) + 312|0);
                     $7989 = +HEAPF64[$7988>>3];
                     $7990 = $7987 + $7989;
                     $7991 = (($evalcond118) + 48|0);
                     HEAPF64[$7991>>3] = $7990;
                     $7992 = (($4) + 240|0);
                     $7993 = +HEAPF64[$7992>>3];
                     $7994 = -1.0 * $7993;
                     $7995 = $x283;
                     $7996 = $7994 * $7995;
                     $7997 = (($4) + 128|0);
                     $7998 = +HEAPF64[$7997>>3];
                     $7999 = (($4) + 312|0);
                     $8000 = +HEAPF64[$7999>>3];
                     $8001 = $7998 * $8000;
                     $8002 = $7996 + $8001;
                     $8003 = $x286;
                     $8004 = -1.0 * $8003;
                     $8005 = $8002 + $8004;
                     $8006 = (($evalcond118) + 56|0);
                     HEAPF64[$8006>>3] = $8005;
                     $8007 = +HEAPF64[$evalcond118>>3];
                     $8008 = (+__Z5IKabsd($8007));
                     $8009 = $8008 > 5.0000000000000004E-6;
                     do {
                      if (!($8009)) {
                       $8010 = (($evalcond118) + 8|0);
                       $8011 = +HEAPF64[$8010>>3];
                       $8012 = (+__Z5IKabsd($8011));
                       $8013 = $8012 > 5.0000000000000004E-6;
                       if ($8013) {
                        break;
                       }
                       $8014 = (($evalcond118) + 16|0);
                       $8015 = +HEAPF64[$8014>>3];
                       $8016 = (+__Z5IKabsd($8015));
                       $8017 = $8016 > 5.0000000000000004E-6;
                       if ($8017) {
                        break;
                       }
                       $8018 = (($evalcond118) + 24|0);
                       $8019 = +HEAPF64[$8018>>3];
                       $8020 = (+__Z5IKabsd($8019));
                       $8021 = $8020 > 5.0000000000000004E-6;
                       if ($8021) {
                        break;
                       }
                       $8022 = (($evalcond118) + 32|0);
                       $8023 = +HEAPF64[$8022>>3];
                       $8024 = (+__Z5IKabsd($8023));
                       $8025 = $8024 > 5.0000000000000004E-6;
                       if ($8025) {
                        break;
                       }
                       $8026 = (($evalcond118) + 40|0);
                       $8027 = +HEAPF64[$8026>>3];
                       $8028 = (+__Z5IKabsd($8027));
                       $8029 = $8028 > 5.0000000000000004E-6;
                       if ($8029) {
                        break;
                       }
                       $8030 = (($evalcond118) + 48|0);
                       $8031 = +HEAPF64[$8030>>3];
                       $8032 = (+__Z5IKabsd($8031));
                       $8033 = $8032 > 5.0000000000000004E-6;
                       if ($8033) {
                        break;
                       }
                       $8034 = (($evalcond118) + 56|0);
                       $8035 = +HEAPF64[$8034>>3];
                       $8036 = (+__Z5IKabsd($8035));
                       $8037 = $8036 > 5.0000000000000004E-6;
                       if ($8037) {
                        break;
                       }
                       __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos119,6);
                       __THREW__ = 0;
                       $8038 = (invoke_iii(381,($vinfos119|0),0)|0);
                       $8039 = __THREW__; __THREW__ = 0;
                       $8040 = $8039&1;
                       if ($8040) {
                        label = 979;
                        break L1;
                       }
                       $8041 = (($8038) + 17|0);
                       HEAP8[$8041>>0] = 1;
                       $8042 = +HEAPF64[$4>>3];
                       __THREW__ = 0;
                       $8043 = (invoke_iii(381,($vinfos119|0),0)|0);
                       $8044 = __THREW__; __THREW__ = 0;
                       $8045 = $8044&1;
                       if ($8045) {
                        label = 979;
                        break L1;
                       }
                       $8046 = (($8043) + 8|0);
                       HEAPF64[$8046>>3] = $8042;
                       $8047 = (($4) + 536|0);
                       $8048 = HEAP8[$8047>>0]|0;
                       __THREW__ = 0;
                       $8049 = (invoke_iii(381,($vinfos119|0),0)|0);
                       $8050 = __THREW__; __THREW__ = 0;
                       $8051 = $8050&1;
                       if ($8051) {
                        label = 979;
                        break L1;
                       }
                       $8052 = (($8049) + 19|0);
                       HEAP8[$8052>>0] = $8048;
                       $8053 = (($4) + 536|0);
                       $8054 = (($8053) + 1|0);
                       $8055 = HEAP8[$8054>>0]|0;
                       __THREW__ = 0;
                       $8056 = (invoke_iii(381,($vinfos119|0),0)|0);
                       $8057 = __THREW__; __THREW__ = 0;
                       $8058 = $8057&1;
                       if ($8058) {
                        label = 979;
                        break L1;
                       }
                       $8059 = (($8056) + 19|0);
                       $8060 = (($8059) + 1|0);
                       HEAP8[$8060>>0] = $8055;
                       $8061 = (($4) + 538|0);
                       $8062 = HEAP8[$8061>>0]|0;
                       __THREW__ = 0;
                       $8063 = (invoke_iii(381,($vinfos119|0),0)|0);
                       $8064 = __THREW__; __THREW__ = 0;
                       $8065 = $8064&1;
                       if ($8065) {
                        label = 979;
                        break L1;
                       }
                       $8066 = (($8063) + 18|0);
                       HEAP8[$8066>>0] = $8062;
                       __THREW__ = 0;
                       $8067 = (invoke_iii(381,($vinfos119|0),1)|0);
                       $8068 = __THREW__; __THREW__ = 0;
                       $8069 = $8068&1;
                       if ($8069) {
                        label = 979;
                        break L1;
                       }
                       $8070 = (($8067) + 17|0);
                       HEAP8[$8070>>0] = 1;
                       $8071 = (($4) + 40|0);
                       $8072 = +HEAPF64[$8071>>3];
                       __THREW__ = 0;
                       $8073 = (invoke_iii(381,($vinfos119|0),1)|0);
                       $8074 = __THREW__; __THREW__ = 0;
                       $8075 = $8074&1;
                       if ($8075) {
                        label = 979;
                        break L1;
                       }
                       $8076 = (($8073) + 8|0);
                       HEAPF64[$8076>>3] = $8072;
                       $8077 = (($4) + 539|0);
                       $8078 = HEAP8[$8077>>0]|0;
                       __THREW__ = 0;
                       $8079 = (invoke_iii(381,($vinfos119|0),1)|0);
                       $8080 = __THREW__; __THREW__ = 0;
                       $8081 = $8080&1;
                       if ($8081) {
                        label = 979;
                        break L1;
                       }
                       $8082 = (($8079) + 19|0);
                       HEAP8[$8082>>0] = $8078;
                       $8083 = (($4) + 539|0);
                       $8084 = (($8083) + 1|0);
                       $8085 = HEAP8[$8084>>0]|0;
                       __THREW__ = 0;
                       $8086 = (invoke_iii(381,($vinfos119|0),1)|0);
                       $8087 = __THREW__; __THREW__ = 0;
                       $8088 = $8087&1;
                       if ($8088) {
                        label = 979;
                        break L1;
                       }
                       $8089 = (($8086) + 19|0);
                       $8090 = (($8089) + 1|0);
                       HEAP8[$8090>>0] = $8085;
                       $8091 = (($4) + 541|0);
                       $8092 = HEAP8[$8091>>0]|0;
                       __THREW__ = 0;
                       $8093 = (invoke_iii(381,($vinfos119|0),1)|0);
                       $8094 = __THREW__; __THREW__ = 0;
                       $8095 = $8094&1;
                       if ($8095) {
                        label = 979;
                        break L1;
                       }
                       $8096 = (($8093) + 18|0);
                       HEAP8[$8096>>0] = $8092;
                       __THREW__ = 0;
                       $8097 = (invoke_iii(381,($vinfos119|0),2)|0);
                       $8098 = __THREW__; __THREW__ = 0;
                       $8099 = $8098&1;
                       if ($8099) {
                        label = 979;
                        break L1;
                       }
                       $8100 = (($8097) + 17|0);
                       HEAP8[$8100>>0] = 1;
                       $8101 = (($4) + 80|0);
                       $8102 = +HEAPF64[$8101>>3];
                       __THREW__ = 0;
                       $8103 = (invoke_iii(381,($vinfos119|0),2)|0);
                       $8104 = __THREW__; __THREW__ = 0;
                       $8105 = $8104&1;
                       if ($8105) {
                        label = 979;
                        break L1;
                       }
                       $8106 = (($8103) + 8|0);
                       HEAPF64[$8106>>3] = $8102;
                       $8107 = (($4) + 542|0);
                       $8108 = HEAP8[$8107>>0]|0;
                       __THREW__ = 0;
                       $8109 = (invoke_iii(381,($vinfos119|0),2)|0);
                       $8110 = __THREW__; __THREW__ = 0;
                       $8111 = $8110&1;
                       if ($8111) {
                        label = 979;
                        break L1;
                       }
                       $8112 = (($8109) + 19|0);
                       HEAP8[$8112>>0] = $8108;
                       $8113 = (($4) + 542|0);
                       $8114 = (($8113) + 1|0);
                       $8115 = HEAP8[$8114>>0]|0;
                       __THREW__ = 0;
                       $8116 = (invoke_iii(381,($vinfos119|0),2)|0);
                       $8117 = __THREW__; __THREW__ = 0;
                       $8118 = $8117&1;
                       if ($8118) {
                        label = 979;
                        break L1;
                       }
                       $8119 = (($8116) + 19|0);
                       $8120 = (($8119) + 1|0);
                       HEAP8[$8120>>0] = $8115;
                       $8121 = (($4) + 544|0);
                       $8122 = HEAP8[$8121>>0]|0;
                       __THREW__ = 0;
                       $8123 = (invoke_iii(381,($vinfos119|0),2)|0);
                       $8124 = __THREW__; __THREW__ = 0;
                       $8125 = $8124&1;
                       if ($8125) {
                        label = 979;
                        break L1;
                       }
                       $8126 = (($8123) + 18|0);
                       HEAP8[$8126>>0] = $8122;
                       __THREW__ = 0;
                       $8127 = (invoke_iii(381,($vinfos119|0),3)|0);
                       $8128 = __THREW__; __THREW__ = 0;
                       $8129 = $8128&1;
                       if ($8129) {
                        label = 979;
                        break L1;
                       }
                       $8130 = (($8127) + 17|0);
                       HEAP8[$8130>>0] = 1;
                       $8131 = (($4) + 120|0);
                       $8132 = +HEAPF64[$8131>>3];
                       __THREW__ = 0;
                       $8133 = (invoke_iii(381,($vinfos119|0),3)|0);
                       $8134 = __THREW__; __THREW__ = 0;
                       $8135 = $8134&1;
                       if ($8135) {
                        label = 979;
                        break L1;
                       }
                       $8136 = (($8133) + 8|0);
                       HEAPF64[$8136>>3] = $8132;
                       $8137 = (($4) + 545|0);
                       $8138 = HEAP8[$8137>>0]|0;
                       __THREW__ = 0;
                       $8139 = (invoke_iii(381,($vinfos119|0),3)|0);
                       $8140 = __THREW__; __THREW__ = 0;
                       $8141 = $8140&1;
                       if ($8141) {
                        label = 979;
                        break L1;
                       }
                       $8142 = (($8139) + 19|0);
                       HEAP8[$8142>>0] = $8138;
                       $8143 = (($4) + 545|0);
                       $8144 = (($8143) + 1|0);
                       $8145 = HEAP8[$8144>>0]|0;
                       __THREW__ = 0;
                       $8146 = (invoke_iii(381,($vinfos119|0),3)|0);
                       $8147 = __THREW__; __THREW__ = 0;
                       $8148 = $8147&1;
                       if ($8148) {
                        label = 979;
                        break L1;
                       }
                       $8149 = (($8146) + 19|0);
                       $8150 = (($8149) + 1|0);
                       HEAP8[$8150>>0] = $8145;
                       $8151 = (($4) + 547|0);
                       $8152 = HEAP8[$8151>>0]|0;
                       __THREW__ = 0;
                       $8153 = (invoke_iii(381,($vinfos119|0),3)|0);
                       $8154 = __THREW__; __THREW__ = 0;
                       $8155 = $8154&1;
                       if ($8155) {
                        label = 979;
                        break L1;
                       }
                       $8156 = (($8153) + 18|0);
                       HEAP8[$8156>>0] = $8152;
                       __THREW__ = 0;
                       $8157 = (invoke_iii(381,($vinfos119|0),4)|0);
                       $8158 = __THREW__; __THREW__ = 0;
                       $8159 = $8158&1;
                       if ($8159) {
                        label = 979;
                        break L1;
                       }
                       $8160 = (($8157) + 17|0);
                       HEAP8[$8160>>0] = 1;
                       $8161 = (($4) + 160|0);
                       $8162 = +HEAPF64[$8161>>3];
                       __THREW__ = 0;
                       $8163 = (invoke_iii(381,($vinfos119|0),4)|0);
                       $8164 = __THREW__; __THREW__ = 0;
                       $8165 = $8164&1;
                       if ($8165) {
                        label = 979;
                        break L1;
                       }
                       $8166 = (($8163) + 8|0);
                       HEAPF64[$8166>>3] = $8162;
                       $8167 = (($4) + 548|0);
                       $8168 = HEAP8[$8167>>0]|0;
                       __THREW__ = 0;
                       $8169 = (invoke_iii(381,($vinfos119|0),4)|0);
                       $8170 = __THREW__; __THREW__ = 0;
                       $8171 = $8170&1;
                       if ($8171) {
                        label = 979;
                        break L1;
                       }
                       $8172 = (($8169) + 19|0);
                       HEAP8[$8172>>0] = $8168;
                       $8173 = (($4) + 548|0);
                       $8174 = (($8173) + 1|0);
                       $8175 = HEAP8[$8174>>0]|0;
                       __THREW__ = 0;
                       $8176 = (invoke_iii(381,($vinfos119|0),4)|0);
                       $8177 = __THREW__; __THREW__ = 0;
                       $8178 = $8177&1;
                       if ($8178) {
                        label = 979;
                        break L1;
                       }
                       $8179 = (($8176) + 19|0);
                       $8180 = (($8179) + 1|0);
                       HEAP8[$8180>>0] = $8175;
                       $8181 = (($4) + 550|0);
                       $8182 = HEAP8[$8181>>0]|0;
                       __THREW__ = 0;
                       $8183 = (invoke_iii(381,($vinfos119|0),4)|0);
                       $8184 = __THREW__; __THREW__ = 0;
                       $8185 = $8184&1;
                       if ($8185) {
                        label = 979;
                        break L1;
                       }
                       $8186 = (($8183) + 18|0);
                       HEAP8[$8186>>0] = $8182;
                       __THREW__ = 0;
                       $8187 = (invoke_iii(381,($vinfos119|0),5)|0);
                       $8188 = __THREW__; __THREW__ = 0;
                       $8189 = $8188&1;
                       if ($8189) {
                        label = 979;
                        break L1;
                       }
                       $8190 = (($8187) + 17|0);
                       HEAP8[$8190>>0] = 1;
                       $8191 = (($4) + 200|0);
                       $8192 = +HEAPF64[$8191>>3];
                       __THREW__ = 0;
                       $8193 = (invoke_iii(381,($vinfos119|0),5)|0);
                       $8194 = __THREW__; __THREW__ = 0;
                       $8195 = $8194&1;
                       if ($8195) {
                        label = 979;
                        break L1;
                       }
                       $8196 = (($8193) + 8|0);
                       HEAPF64[$8196>>3] = $8192;
                       $8197 = (($4) + 551|0);
                       $8198 = HEAP8[$8197>>0]|0;
                       __THREW__ = 0;
                       $8199 = (invoke_iii(381,($vinfos119|0),5)|0);
                       $8200 = __THREW__; __THREW__ = 0;
                       $8201 = $8200&1;
                       if ($8201) {
                        label = 979;
                        break L1;
                       }
                       $8202 = (($8199) + 19|0);
                       HEAP8[$8202>>0] = $8198;
                       $8203 = (($4) + 551|0);
                       $8204 = (($8203) + 1|0);
                       $8205 = HEAP8[$8204>>0]|0;
                       __THREW__ = 0;
                       $8206 = (invoke_iii(381,($vinfos119|0),5)|0);
                       $8207 = __THREW__; __THREW__ = 0;
                       $8208 = $8207&1;
                       if ($8208) {
                        label = 979;
                        break L1;
                       }
                       $8209 = (($8206) + 19|0);
                       $8210 = (($8209) + 1|0);
                       HEAP8[$8210>>0] = $8205;
                       $8211 = (($4) + 553|0);
                       $8212 = HEAP8[$8211>>0]|0;
                       __THREW__ = 0;
                       $8213 = (invoke_iii(381,($vinfos119|0),5)|0);
                       $8214 = __THREW__; __THREW__ = 0;
                       $8215 = $8214&1;
                       if ($8215) {
                        label = 979;
                        break L1;
                       }
                       $8216 = (($8213) + 18|0);
                       HEAP8[$8216>>0] = $8212;
                       __THREW__ = 0;
                       invoke_vii(382,($vfree120|0),0);
                       $8217 = __THREW__; __THREW__ = 0;
                       $8218 = $8217&1;
                       if ($8218) {
                        label = 979;
                        break L1;
                       }
                       $8219 = $1;
                       $8220 = HEAP32[$8219>>2]|0;
                       $8221 = (($8220) + 8|0);
                       $8222 = HEAP32[$8221>>2]|0;
                       __THREW__ = 0;
                       (invoke_iiii($8222|0,($8219|0),($vinfos119|0),($vfree120|0))|0);
                       $8223 = __THREW__; __THREW__ = 0;
                       $8224 = $8223&1;
                       if ($8224) {
                        label = 980;
                        break L1;
                       }
                       __THREW__ = 0;
                       invoke_vi(366,($vfree120|0));
                       $8225 = __THREW__; __THREW__ = 0;
                       $8226 = $8225&1;
                       if ($8226) {
                        label = 979;
                        break L1;
                       }
                       __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos119);
                       break L274;
                      }
                     } while(0);
                    } else {
                    }
                   } while(0);
                   $8227 = $ij5116;
                   $8228 = (($8227) + 1)|0;
                   $ij5116 = $8228;
                  }
                  label = 985;
                 } else {
                  label = 985;
                 }
                } while(0);
                if ((label|0) == 985) {
                 label = 0;
                }
                $8237 = $bgotonextstatement111;
                $8238 = $8237&1;
                if ($8238) {
                 $bgotonextstatement121 = 1;
                 $8239 = (($4) + 128|0);
                 $8240 = +HEAPF64[$8239>>3];
                 $8241 = (($4) + 360|0);
                 $8242 = +HEAPF64[$8241>>3];
                 $8243 = $8240 * $8242;
                 $x288 = $8243;
                 $8244 = (($4) + 288|0);
                 $8245 = +HEAPF64[$8244>>3];
                 $8246 = (($4) + 136|0);
                 $8247 = +HEAPF64[$8246>>3];
                 $8248 = $8245 * $8247;
                 $x289 = $8248;
                 $8249 = (($4) + 360|0);
                 $8250 = +HEAPF64[$8249>>3];
                 $8251 = (($4) + 136|0);
                 $8252 = +HEAPF64[$8251>>3];
                 $8253 = $8250 * $8252;
                 $8254 = (($4) + 128|0);
                 $8255 = +HEAPF64[$8254>>3];
                 $8256 = (($4) + 288|0);
                 $8257 = +HEAPF64[$8256>>3];
                 $8258 = $8255 * $8257;
                 $8259 = $8253 + $8258;
                 $x290 = $8259;
                 $8260 = (($4) + 160|0);
                 $8261 = +HEAPF64[$8260>>3];
                 $8262 = -3.14159265358979 + $8261;
                 $8263 = (+__Z5IKabsd($8262));
                 $8264 = 3.14159265358979 + $8263;
                 $8265 = (+__Z6IKfmoddd($8264,6.2831853071795898));
                 $8266 = -3.14159265358979 + $8265;
                 HEAPF64[$evalcond110>>3] = $8266;
                 $8267 = (($4) + 432|0);
                 $8268 = +HEAPF64[$8267>>3];
                 $8269 = 1.0 + $8268;
                 $8270 = (($evalcond110) + 8|0);
                 HEAPF64[$8270>>3] = $8269;
                 $8271 = (($4) + 360|0);
                 $8272 = +HEAPF64[$8271>>3];
                 $8273 = (($evalcond110) + 16|0);
                 HEAPF64[$8273>>3] = $8272;
                 $8274 = (($4) + 408|0);
                 $8275 = +HEAPF64[$8274>>3];
                 $8276 = (($evalcond110) + 24|0);
                 HEAPF64[$8276>>3] = $8275;
                 $8277 = (($4) + 288|0);
                 $8278 = +HEAPF64[$8277>>3];
                 $8279 = (($evalcond110) + 32|0);
                 HEAPF64[$8279>>3] = $8278;
                 $8280 = (($4) + 384|0);
                 $8281 = +HEAPF64[$8280>>3];
                 $8282 = (($evalcond110) + 40|0);
                 HEAPF64[$8282>>3] = $8281;
                 $8283 = $x290;
                 $8284 = (($evalcond110) + 48|0);
                 HEAPF64[$8284>>3] = $8283;
                 $8285 = $x290;
                 $8286 = (($evalcond110) + 56|0);
                 HEAPF64[$8286>>3] = $8285;
                 $8287 = $x288;
                 $8288 = $x289;
                 $8289 = -1.0 * $8288;
                 $8290 = $8287 + $8289;
                 $8291 = (($evalcond110) + 64|0);
                 HEAPF64[$8291>>3] = $8290;
                 $8292 = $x289;
                 $8293 = $x288;
                 $8294 = -1.0 * $8293;
                 $8295 = $8292 + $8294;
                 $8296 = (($evalcond110) + 72|0);
                 HEAPF64[$8296>>3] = $8295;
                 $8297 = +HEAPF64[$evalcond110>>3];
                 $8298 = (+__Z5IKabsd($8297));
                 $8299 = $8298 < 9.9999999999999995E-7;
                 L339: do {
                  if ($8299) {
                   $8300 = (($evalcond110) + 8|0);
                   $8301 = +HEAPF64[$8300>>3];
                   $8302 = (+__Z5IKabsd($8301));
                   $8303 = $8302 < 9.9999999999999995E-7;
                   if (!($8303)) {
                    label = 1069;
                    break;
                   }
                   $8304 = (($evalcond110) + 16|0);
                   $8305 = +HEAPF64[$8304>>3];
                   $8306 = (+__Z5IKabsd($8305));
                   $8307 = $8306 < 9.9999999999999995E-7;
                   if (!($8307)) {
                    label = 1069;
                    break;
                   }
                   $8308 = (($evalcond110) + 24|0);
                   $8309 = +HEAPF64[$8308>>3];
                   $8310 = (+__Z5IKabsd($8309));
                   $8311 = $8310 < 9.9999999999999995E-7;
                   if (!($8311)) {
                    label = 1069;
                    break;
                   }
                   $8312 = (($evalcond110) + 32|0);
                   $8313 = +HEAPF64[$8312>>3];
                   $8314 = (+__Z5IKabsd($8313));
                   $8315 = $8314 < 9.9999999999999995E-7;
                   if (!($8315)) {
                    label = 1069;
                    break;
                   }
                   $8316 = (($evalcond110) + 40|0);
                   $8317 = +HEAPF64[$8316>>3];
                   $8318 = (+__Z5IKabsd($8317));
                   $8319 = $8318 < 9.9999999999999995E-7;
                   if (!($8319)) {
                    label = 1069;
                    break;
                   }
                   $8320 = (($evalcond110) + 48|0);
                   $8321 = +HEAPF64[$8320>>3];
                   $8322 = (+__Z5IKabsd($8321));
                   $8323 = $8322 < 9.9999999999999995E-7;
                   if (!($8323)) {
                    label = 1069;
                    break;
                   }
                   $8324 = (($evalcond110) + 56|0);
                   $8325 = +HEAPF64[$8324>>3];
                   $8326 = (+__Z5IKabsd($8325));
                   $8327 = $8326 < 9.9999999999999995E-7;
                   if (!($8327)) {
                    label = 1069;
                    break;
                   }
                   $8328 = (($evalcond110) + 64|0);
                   $8329 = +HEAPF64[$8328>>3];
                   $8330 = (+__Z5IKabsd($8329));
                   $8331 = $8330 < 9.9999999999999995E-7;
                   if (!($8331)) {
                    label = 1069;
                    break;
                   }
                   $8332 = (($evalcond110) + 72|0);
                   $8333 = +HEAPF64[$8332>>3];
                   $8334 = (+__Z5IKabsd($8333));
                   $8335 = $8334 < 9.9999999999999995E-7;
                   if (!($8335)) {
                    label = 1069;
                    break;
                   }
                   $bgotonextstatement121 = 0;
                   ;HEAP8[$j5valid125+0>>0]=0|0;
                   $8336 = (($4) + 553|0);
                   HEAP8[$8336>>0] = 1;
                   $8337 = (($4) + 264|0);
                   $8338 = +HEAPF64[$8337>>3];
                   $8339 = 1.0 * $8338;
                   $x291 = $8339;
                   $8340 = (($4) + 128|0);
                   $8341 = +HEAPF64[$8340>>3];
                   $8342 = -1.0 * $8341;
                   $8343 = (($4) + 240|0);
                   $8344 = +HEAPF64[$8343>>3];
                   $8345 = $8342 * $8344;
                   $8346 = (($4) + 136|0);
                   $8347 = +HEAPF64[$8346>>3];
                   $8348 = -1.0 * $8347;
                   $8349 = $x291;
                   $8350 = $8348 * $8349;
                   $8351 = $8345 + $8350;
                   $8352 = (+__Z5IKabsd($8351));
                   $8353 = $8352 < 1.9999999999999999E-6;
                   do {
                    if ($8353) {
                     $8354 = (($4) + 240|0);
                     $8355 = +HEAPF64[$8354>>3];
                     $8356 = (($4) + 136|0);
                     $8357 = +HEAPF64[$8356>>3];
                     $8358 = $8355 * $8357;
                     $8359 = (($4) + 128|0);
                     $8360 = +HEAPF64[$8359>>3];
                     $8361 = -1.0 * $8360;
                     $8362 = $x291;
                     $8363 = $8361 * $8362;
                     $8364 = $8358 + $8363;
                     $8365 = (+__Z5IKabsd($8364));
                     $8366 = $8365 < 1.9999999999999999E-6;
                     if (!($8366)) {
                      break;
                     }
                     $8367 = (($4) + 128|0);
                     $8368 = +HEAPF64[$8367>>3];
                     $8369 = -1.0 * $8368;
                     $8370 = (($4) + 240|0);
                     $8371 = +HEAPF64[$8370>>3];
                     $8372 = $8369 * $8371;
                     $8373 = (($4) + 136|0);
                     $8374 = +HEAPF64[$8373>>3];
                     $8375 = -1.0 * $8374;
                     $8376 = $x291;
                     $8377 = $8375 * $8376;
                     $8378 = $8372 + $8377;
                     $8379 = (+__Z5IKsqrd($8378));
                     $8380 = (($4) + 240|0);
                     $8381 = +HEAPF64[$8380>>3];
                     $8382 = (($4) + 136|0);
                     $8383 = +HEAPF64[$8382>>3];
                     $8384 = $8381 * $8383;
                     $8385 = (($4) + 128|0);
                     $8386 = +HEAPF64[$8385>>3];
                     $8387 = -1.0 * $8386;
                     $8388 = $x291;
                     $8389 = $8387 * $8388;
                     $8390 = $8384 + $8389;
                     $8391 = (+__Z5IKsqrd($8390));
                     $8392 = $8379 + $8391;
                     $8393 = $8392 - 1.0;
                     $8394 = (+__Z5IKabsd($8393));
                     $8395 = $8394 <= 1.9999999999999999E-6;
                     if (!($8395)) {
                      break;
                     }
                     break L339;
                    }
                   } while(0);
                   $8396 = (($4) + 128|0);
                   $8397 = +HEAPF64[$8396>>3];
                   $8398 = -1.0 * $8397;
                   $8399 = (($4) + 240|0);
                   $8400 = +HEAPF64[$8399>>3];
                   $8401 = $8398 * $8400;
                   $8402 = (($4) + 136|0);
                   $8403 = +HEAPF64[$8402>>3];
                   $8404 = -1.0 * $8403;
                   $8405 = $x291;
                   $8406 = $8404 * $8405;
                   $8407 = $8401 + $8406;
                   $8408 = (($4) + 240|0);
                   $8409 = +HEAPF64[$8408>>3];
                   $8410 = (($4) + 136|0);
                   $8411 = +HEAPF64[$8410>>3];
                   $8412 = $8409 * $8411;
                   $8413 = (($4) + 128|0);
                   $8414 = +HEAPF64[$8413>>3];
                   $8415 = -1.0 * $8414;
                   $8416 = $x291;
                   $8417 = $8415 * $8416;
                   $8418 = $8412 + $8417;
                   $8419 = (+__Z7IKatan2dd($8407,$8418));
                   HEAPF64[$j5array122>>3] = $8419;
                   $8420 = +HEAPF64[$j5array122>>3];
                   $8421 = (+__Z5IKsind($8420));
                   HEAPF64[$sj5array124>>3] = $8421;
                   $8422 = +HEAPF64[$j5array122>>3];
                   $8423 = (+__Z5IKcosd($8422));
                   HEAPF64[$cj5array123>>3] = $8423;
                   $8424 = +HEAPF64[$j5array122>>3];
                   $8425 = $8424 > 3.14159265358979;
                   if ($8425) {
                    $8426 = +HEAPF64[$j5array122>>3];
                    $8427 = $8426 - 6.2831853071795898;
                    HEAPF64[$j5array122>>3] = $8427;
                   } else {
                    $8428 = +HEAPF64[$j5array122>>3];
                    $8429 = $8428 < -3.14159265358979;
                    if ($8429) {
                     $8430 = +HEAPF64[$j5array122>>3];
                     $8431 = $8430 + 6.2831853071795898;
                     HEAPF64[$j5array122>>3] = $8431;
                    }
                   }
                   HEAP8[$j5valid125>>0] = 1;
                   $ij5126 = 0;
                   while(1) {
                    $8432 = $ij5126;
                    $8433 = ($8432|0)<(1);
                    if (!($8433)) {
                     break;
                    }
                    $8434 = $ij5126;
                    $8435 = (($j5valid125) + ($8434)|0);
                    $8436 = HEAP8[$8435>>0]|0;
                    $8437 = $8436&1;
                    L365: do {
                     if ($8437) {
                      $8438 = $ij5126;
                      $8439 = $8438&255;
                      $8440 = (($4) + 551|0);
                      HEAP8[$8440>>0] = $8439;
                      $8441 = (($4) + 551|0);
                      $8442 = (($8441) + 1|0);
                      HEAP8[$8442>>0] = -1;
                      $8443 = $ij5126;
                      $8444 = (($8443) + 1)|0;
                      $iij5127 = $8444;
                      L368: while(1) {
                       $8445 = $iij5127;
                       $8446 = ($8445|0)<(1);
                       if (!($8446)) {
                        break;
                       }
                       $8447 = $iij5127;
                       $8448 = (($j5valid125) + ($8447)|0);
                       $8449 = HEAP8[$8448>>0]|0;
                       $8450 = $8449&1;
                       do {
                        if ($8450) {
                         $8451 = $ij5126;
                         $8452 = (($cj5array123) + ($8451<<3)|0);
                         $8453 = +HEAPF64[$8452>>3];
                         $8454 = $iij5127;
                         $8455 = (($cj5array123) + ($8454<<3)|0);
                         $8456 = +HEAPF64[$8455>>3];
                         $8457 = $8453 - $8456;
                         $8458 = (+__Z5IKabsd($8457));
                         $8459 = $8458 < 9.9999999999999995E-7;
                         if (!($8459)) {
                          break;
                         }
                         $8460 = $ij5126;
                         $8461 = (($sj5array124) + ($8460<<3)|0);
                         $8462 = +HEAPF64[$8461>>3];
                         $8463 = $iij5127;
                         $8464 = (($sj5array124) + ($8463<<3)|0);
                         $8465 = +HEAPF64[$8464>>3];
                         $8466 = $8462 - $8465;
                         $8467 = (+__Z5IKabsd($8466));
                         $8468 = $8467 < 9.9999999999999995E-7;
                         if ($8468) {
                          label = 1016;
                          break L368;
                         }
                        }
                       } while(0);
                       $8475 = $iij5127;
                       $8476 = (($8475) + 1)|0;
                       $iij5127 = $8476;
                      }
                      if ((label|0) == 1016) {
                       label = 0;
                       $8469 = $iij5127;
                       $8470 = (($j5valid125) + ($8469)|0);
                       HEAP8[$8470>>0] = 0;
                       $8471 = $iij5127;
                       $8472 = $8471&255;
                       $8473 = (($4) + 551|0);
                       $8474 = (($8473) + 1|0);
                       HEAP8[$8474>>0] = $8472;
                      }
                      $8477 = $ij5126;
                      $8478 = (($j5array122) + ($8477<<3)|0);
                      $8479 = +HEAPF64[$8478>>3];
                      $8480 = (($4) + 200|0);
                      HEAPF64[$8480>>3] = $8479;
                      $8481 = $ij5126;
                      $8482 = (($cj5array123) + ($8481<<3)|0);
                      $8483 = +HEAPF64[$8482>>3];
                      $8484 = (($4) + 208|0);
                      HEAPF64[$8484>>3] = $8483;
                      $8485 = $ij5126;
                      $8486 = (($sj5array124) + ($8485<<3)|0);
                      $8487 = +HEAPF64[$8486>>3];
                      $8488 = (($4) + 216|0);
                      HEAPF64[$8488>>3] = $8487;
                      $8489 = (($4) + 200|0);
                      $8490 = +HEAPF64[$8489>>3];
                      $8491 = (+__Z5IKcosd($8490));
                      $x292 = $8491;
                      $8492 = (($4) + 200|0);
                      $8493 = +HEAPF64[$8492>>3];
                      $8494 = (+__Z5IKsind($8493));
                      $x293 = $8494;
                      $8495 = (($4) + 136|0);
                      $8496 = +HEAPF64[$8495>>3];
                      $8497 = 1.0 * $8496;
                      $x294 = $8497;
                      $8498 = (($4) + 136|0);
                      $8499 = +HEAPF64[$8498>>3];
                      $8500 = $x293;
                      $8501 = $8499 * $8500;
                      $x295 = $8501;
                      $8502 = (($4) + 128|0);
                      $8503 = +HEAPF64[$8502>>3];
                      $8504 = $x292;
                      $8505 = $8503 * $8504;
                      $x296 = $8505;
                      $8506 = $x293;
                      $8507 = 1.0 * $8506;
                      $x297 = $8507;
                      $8508 = $x295;
                      $8509 = $x296;
                      $8510 = $8508 + $8509;
                      $x298 = $8510;
                      $8511 = (($4) + 312|0);
                      $8512 = +HEAPF64[$8511>>3];
                      $8513 = (($4) + 136|0);
                      $8514 = +HEAPF64[$8513>>3];
                      $8515 = $8512 * $8514;
                      $8516 = $x293;
                      $8517 = $8515 + $8516;
                      $8518 = (($4) + 128|0);
                      $8519 = +HEAPF64[$8518>>3];
                      $8520 = (($4) + 240|0);
                      $8521 = +HEAPF64[$8520>>3];
                      $8522 = $8519 * $8521;
                      $8523 = $8517 + $8522;
                      HEAPF64[$evalcond128>>3] = $8523;
                      $8524 = (($4) + 336|0);
                      $8525 = +HEAPF64[$8524>>3];
                      $8526 = (($4) + 136|0);
                      $8527 = +HEAPF64[$8526>>3];
                      $8528 = $8525 * $8527;
                      $8529 = $x292;
                      $8530 = $8528 + $8529;
                      $8531 = (($4) + 128|0);
                      $8532 = +HEAPF64[$8531>>3];
                      $8533 = (($4) + 264|0);
                      $8534 = +HEAPF64[$8533>>3];
                      $8535 = $8532 * $8534;
                      $8536 = $8530 + $8535;
                      $8537 = (($evalcond128) + 8|0);
                      HEAPF64[$8537>>3] = $8536;
                      $8538 = $x292;
                      $8539 = (($4) + 128|0);
                      $8540 = +HEAPF64[$8539>>3];
                      $8541 = (($4) + 312|0);
                      $8542 = +HEAPF64[$8541>>3];
                      $8543 = $8540 * $8542;
                      $8544 = $8538 + $8543;
                      $8545 = (($4) + 240|0);
                      $8546 = +HEAPF64[$8545>>3];
                      $8547 = -1.0 * $8546;
                      $8548 = $x294;
                      $8549 = $8547 * $8548;
                      $8550 = $8544 + $8549;
                      $8551 = (($evalcond128) + 16|0);
                      HEAPF64[$8551>>3] = $8550;
                      $8552 = $x298;
                      $8553 = (($4) + 264|0);
                      $8554 = +HEAPF64[$8553>>3];
                      $8555 = $8552 + $8554;
                      $8556 = (($evalcond128) + 24|0);
                      HEAPF64[$8556>>3] = $8555;
                      $8557 = $x298;
                      $8558 = (($4) + 312|0);
                      $8559 = +HEAPF64[$8558>>3];
                      $8560 = $8557 + $8559;
                      $8561 = (($evalcond128) + 32|0);
                      HEAPF64[$8561>>3] = $8560;
                      $8562 = (($4) + 128|0);
                      $8563 = +HEAPF64[$8562>>3];
                      $8564 = $x293;
                      $8565 = $8563 * $8564;
                      $8566 = (($4) + 240|0);
                      $8567 = +HEAPF64[$8566>>3];
                      $8568 = $8565 + $8567;
                      $8569 = $x292;
                      $8570 = -1.0 * $8569;
                      $8571 = $x294;
                      $8572 = $8570 * $8571;
                      $8573 = $8568 + $8572;
                      $8574 = (($evalcond128) + 40|0);
                      HEAPF64[$8574>>3] = $8573;
                      $8575 = (($4) + 128|0);
                      $8576 = +HEAPF64[$8575>>3];
                      $8577 = -1.0 * $8576;
                      $8578 = $x297;
                      $8579 = $8577 * $8578;
                      $8580 = (($4) + 336|0);
                      $8581 = +HEAPF64[$8580>>3];
                      $8582 = $8579 + $8581;
                      $8583 = (($4) + 136|0);
                      $8584 = +HEAPF64[$8583>>3];
                      $8585 = $x292;
                      $8586 = $8584 * $8585;
                      $8587 = $8582 + $8586;
                      $8588 = (($evalcond128) + 48|0);
                      HEAPF64[$8588>>3] = $8587;
                      $8589 = (($4) + 264|0);
                      $8590 = +HEAPF64[$8589>>3];
                      $8591 = -1.0 * $8590;
                      $8592 = $x294;
                      $8593 = $8591 * $8592;
                      $8594 = $x297;
                      $8595 = -1.0 * $8594;
                      $8596 = $8593 + $8595;
                      $8597 = (($4) + 128|0);
                      $8598 = +HEAPF64[$8597>>3];
                      $8599 = (($4) + 336|0);
                      $8600 = +HEAPF64[$8599>>3];
                      $8601 = $8598 * $8600;
                      $8602 = $8596 + $8601;
                      $8603 = (($evalcond128) + 56|0);
                      HEAPF64[$8603>>3] = $8602;
                      $8604 = +HEAPF64[$evalcond128>>3];
                      $8605 = (+__Z5IKabsd($8604));
                      $8606 = $8605 > 5.0000000000000004E-6;
                      do {
                       if (!($8606)) {
                        $8607 = (($evalcond128) + 8|0);
                        $8608 = +HEAPF64[$8607>>3];
                        $8609 = (+__Z5IKabsd($8608));
                        $8610 = $8609 > 5.0000000000000004E-6;
                        if ($8610) {
                         break;
                        }
                        $8611 = (($evalcond128) + 16|0);
                        $8612 = +HEAPF64[$8611>>3];
                        $8613 = (+__Z5IKabsd($8612));
                        $8614 = $8613 > 5.0000000000000004E-6;
                        if ($8614) {
                         break;
                        }
                        $8615 = (($evalcond128) + 24|0);
                        $8616 = +HEAPF64[$8615>>3];
                        $8617 = (+__Z5IKabsd($8616));
                        $8618 = $8617 > 5.0000000000000004E-6;
                        if ($8618) {
                         break;
                        }
                        $8619 = (($evalcond128) + 32|0);
                        $8620 = +HEAPF64[$8619>>3];
                        $8621 = (+__Z5IKabsd($8620));
                        $8622 = $8621 > 5.0000000000000004E-6;
                        if ($8622) {
                         break;
                        }
                        $8623 = (($evalcond128) + 40|0);
                        $8624 = +HEAPF64[$8623>>3];
                        $8625 = (+__Z5IKabsd($8624));
                        $8626 = $8625 > 5.0000000000000004E-6;
                        if ($8626) {
                         break;
                        }
                        $8627 = (($evalcond128) + 48|0);
                        $8628 = +HEAPF64[$8627>>3];
                        $8629 = (+__Z5IKabsd($8628));
                        $8630 = $8629 > 5.0000000000000004E-6;
                        if ($8630) {
                         break;
                        }
                        $8631 = (($evalcond128) + 56|0);
                        $8632 = +HEAPF64[$8631>>3];
                        $8633 = (+__Z5IKabsd($8632));
                        $8634 = $8633 > 5.0000000000000004E-6;
                        if ($8634) {
                         break;
                        }
                        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos129,6);
                        __THREW__ = 0;
                        $8635 = (invoke_iii(381,($vinfos129|0),0)|0);
                        $8636 = __THREW__; __THREW__ = 0;
                        $8637 = $8636&1;
                        if ($8637) {
                         label = 1063;
                         break L1;
                        }
                        $8638 = (($8635) + 17|0);
                        HEAP8[$8638>>0] = 1;
                        $8639 = +HEAPF64[$4>>3];
                        __THREW__ = 0;
                        $8640 = (invoke_iii(381,($vinfos129|0),0)|0);
                        $8641 = __THREW__; __THREW__ = 0;
                        $8642 = $8641&1;
                        if ($8642) {
                         label = 1063;
                         break L1;
                        }
                        $8643 = (($8640) + 8|0);
                        HEAPF64[$8643>>3] = $8639;
                        $8644 = (($4) + 536|0);
                        $8645 = HEAP8[$8644>>0]|0;
                        __THREW__ = 0;
                        $8646 = (invoke_iii(381,($vinfos129|0),0)|0);
                        $8647 = __THREW__; __THREW__ = 0;
                        $8648 = $8647&1;
                        if ($8648) {
                         label = 1063;
                         break L1;
                        }
                        $8649 = (($8646) + 19|0);
                        HEAP8[$8649>>0] = $8645;
                        $8650 = (($4) + 536|0);
                        $8651 = (($8650) + 1|0);
                        $8652 = HEAP8[$8651>>0]|0;
                        __THREW__ = 0;
                        $8653 = (invoke_iii(381,($vinfos129|0),0)|0);
                        $8654 = __THREW__; __THREW__ = 0;
                        $8655 = $8654&1;
                        if ($8655) {
                         label = 1063;
                         break L1;
                        }
                        $8656 = (($8653) + 19|0);
                        $8657 = (($8656) + 1|0);
                        HEAP8[$8657>>0] = $8652;
                        $8658 = (($4) + 538|0);
                        $8659 = HEAP8[$8658>>0]|0;
                        __THREW__ = 0;
                        $8660 = (invoke_iii(381,($vinfos129|0),0)|0);
                        $8661 = __THREW__; __THREW__ = 0;
                        $8662 = $8661&1;
                        if ($8662) {
                         label = 1063;
                         break L1;
                        }
                        $8663 = (($8660) + 18|0);
                        HEAP8[$8663>>0] = $8659;
                        __THREW__ = 0;
                        $8664 = (invoke_iii(381,($vinfos129|0),1)|0);
                        $8665 = __THREW__; __THREW__ = 0;
                        $8666 = $8665&1;
                        if ($8666) {
                         label = 1063;
                         break L1;
                        }
                        $8667 = (($8664) + 17|0);
                        HEAP8[$8667>>0] = 1;
                        $8668 = (($4) + 40|0);
                        $8669 = +HEAPF64[$8668>>3];
                        __THREW__ = 0;
                        $8670 = (invoke_iii(381,($vinfos129|0),1)|0);
                        $8671 = __THREW__; __THREW__ = 0;
                        $8672 = $8671&1;
                        if ($8672) {
                         label = 1063;
                         break L1;
                        }
                        $8673 = (($8670) + 8|0);
                        HEAPF64[$8673>>3] = $8669;
                        $8674 = (($4) + 539|0);
                        $8675 = HEAP8[$8674>>0]|0;
                        __THREW__ = 0;
                        $8676 = (invoke_iii(381,($vinfos129|0),1)|0);
                        $8677 = __THREW__; __THREW__ = 0;
                        $8678 = $8677&1;
                        if ($8678) {
                         label = 1063;
                         break L1;
                        }
                        $8679 = (($8676) + 19|0);
                        HEAP8[$8679>>0] = $8675;
                        $8680 = (($4) + 539|0);
                        $8681 = (($8680) + 1|0);
                        $8682 = HEAP8[$8681>>0]|0;
                        __THREW__ = 0;
                        $8683 = (invoke_iii(381,($vinfos129|0),1)|0);
                        $8684 = __THREW__; __THREW__ = 0;
                        $8685 = $8684&1;
                        if ($8685) {
                         label = 1063;
                         break L1;
                        }
                        $8686 = (($8683) + 19|0);
                        $8687 = (($8686) + 1|0);
                        HEAP8[$8687>>0] = $8682;
                        $8688 = (($4) + 541|0);
                        $8689 = HEAP8[$8688>>0]|0;
                        __THREW__ = 0;
                        $8690 = (invoke_iii(381,($vinfos129|0),1)|0);
                        $8691 = __THREW__; __THREW__ = 0;
                        $8692 = $8691&1;
                        if ($8692) {
                         label = 1063;
                         break L1;
                        }
                        $8693 = (($8690) + 18|0);
                        HEAP8[$8693>>0] = $8689;
                        __THREW__ = 0;
                        $8694 = (invoke_iii(381,($vinfos129|0),2)|0);
                        $8695 = __THREW__; __THREW__ = 0;
                        $8696 = $8695&1;
                        if ($8696) {
                         label = 1063;
                         break L1;
                        }
                        $8697 = (($8694) + 17|0);
                        HEAP8[$8697>>0] = 1;
                        $8698 = (($4) + 80|0);
                        $8699 = +HEAPF64[$8698>>3];
                        __THREW__ = 0;
                        $8700 = (invoke_iii(381,($vinfos129|0),2)|0);
                        $8701 = __THREW__; __THREW__ = 0;
                        $8702 = $8701&1;
                        if ($8702) {
                         label = 1063;
                         break L1;
                        }
                        $8703 = (($8700) + 8|0);
                        HEAPF64[$8703>>3] = $8699;
                        $8704 = (($4) + 542|0);
                        $8705 = HEAP8[$8704>>0]|0;
                        __THREW__ = 0;
                        $8706 = (invoke_iii(381,($vinfos129|0),2)|0);
                        $8707 = __THREW__; __THREW__ = 0;
                        $8708 = $8707&1;
                        if ($8708) {
                         label = 1063;
                         break L1;
                        }
                        $8709 = (($8706) + 19|0);
                        HEAP8[$8709>>0] = $8705;
                        $8710 = (($4) + 542|0);
                        $8711 = (($8710) + 1|0);
                        $8712 = HEAP8[$8711>>0]|0;
                        __THREW__ = 0;
                        $8713 = (invoke_iii(381,($vinfos129|0),2)|0);
                        $8714 = __THREW__; __THREW__ = 0;
                        $8715 = $8714&1;
                        if ($8715) {
                         label = 1063;
                         break L1;
                        }
                        $8716 = (($8713) + 19|0);
                        $8717 = (($8716) + 1|0);
                        HEAP8[$8717>>0] = $8712;
                        $8718 = (($4) + 544|0);
                        $8719 = HEAP8[$8718>>0]|0;
                        __THREW__ = 0;
                        $8720 = (invoke_iii(381,($vinfos129|0),2)|0);
                        $8721 = __THREW__; __THREW__ = 0;
                        $8722 = $8721&1;
                        if ($8722) {
                         label = 1063;
                         break L1;
                        }
                        $8723 = (($8720) + 18|0);
                        HEAP8[$8723>>0] = $8719;
                        __THREW__ = 0;
                        $8724 = (invoke_iii(381,($vinfos129|0),3)|0);
                        $8725 = __THREW__; __THREW__ = 0;
                        $8726 = $8725&1;
                        if ($8726) {
                         label = 1063;
                         break L1;
                        }
                        $8727 = (($8724) + 17|0);
                        HEAP8[$8727>>0] = 1;
                        $8728 = (($4) + 120|0);
                        $8729 = +HEAPF64[$8728>>3];
                        __THREW__ = 0;
                        $8730 = (invoke_iii(381,($vinfos129|0),3)|0);
                        $8731 = __THREW__; __THREW__ = 0;
                        $8732 = $8731&1;
                        if ($8732) {
                         label = 1063;
                         break L1;
                        }
                        $8733 = (($8730) + 8|0);
                        HEAPF64[$8733>>3] = $8729;
                        $8734 = (($4) + 545|0);
                        $8735 = HEAP8[$8734>>0]|0;
                        __THREW__ = 0;
                        $8736 = (invoke_iii(381,($vinfos129|0),3)|0);
                        $8737 = __THREW__; __THREW__ = 0;
                        $8738 = $8737&1;
                        if ($8738) {
                         label = 1063;
                         break L1;
                        }
                        $8739 = (($8736) + 19|0);
                        HEAP8[$8739>>0] = $8735;
                        $8740 = (($4) + 545|0);
                        $8741 = (($8740) + 1|0);
                        $8742 = HEAP8[$8741>>0]|0;
                        __THREW__ = 0;
                        $8743 = (invoke_iii(381,($vinfos129|0),3)|0);
                        $8744 = __THREW__; __THREW__ = 0;
                        $8745 = $8744&1;
                        if ($8745) {
                         label = 1063;
                         break L1;
                        }
                        $8746 = (($8743) + 19|0);
                        $8747 = (($8746) + 1|0);
                        HEAP8[$8747>>0] = $8742;
                        $8748 = (($4) + 547|0);
                        $8749 = HEAP8[$8748>>0]|0;
                        __THREW__ = 0;
                        $8750 = (invoke_iii(381,($vinfos129|0),3)|0);
                        $8751 = __THREW__; __THREW__ = 0;
                        $8752 = $8751&1;
                        if ($8752) {
                         label = 1063;
                         break L1;
                        }
                        $8753 = (($8750) + 18|0);
                        HEAP8[$8753>>0] = $8749;
                        __THREW__ = 0;
                        $8754 = (invoke_iii(381,($vinfos129|0),4)|0);
                        $8755 = __THREW__; __THREW__ = 0;
                        $8756 = $8755&1;
                        if ($8756) {
                         label = 1063;
                         break L1;
                        }
                        $8757 = (($8754) + 17|0);
                        HEAP8[$8757>>0] = 1;
                        $8758 = (($4) + 160|0);
                        $8759 = +HEAPF64[$8758>>3];
                        __THREW__ = 0;
                        $8760 = (invoke_iii(381,($vinfos129|0),4)|0);
                        $8761 = __THREW__; __THREW__ = 0;
                        $8762 = $8761&1;
                        if ($8762) {
                         label = 1063;
                         break L1;
                        }
                        $8763 = (($8760) + 8|0);
                        HEAPF64[$8763>>3] = $8759;
                        $8764 = (($4) + 548|0);
                        $8765 = HEAP8[$8764>>0]|0;
                        __THREW__ = 0;
                        $8766 = (invoke_iii(381,($vinfos129|0),4)|0);
                        $8767 = __THREW__; __THREW__ = 0;
                        $8768 = $8767&1;
                        if ($8768) {
                         label = 1063;
                         break L1;
                        }
                        $8769 = (($8766) + 19|0);
                        HEAP8[$8769>>0] = $8765;
                        $8770 = (($4) + 548|0);
                        $8771 = (($8770) + 1|0);
                        $8772 = HEAP8[$8771>>0]|0;
                        __THREW__ = 0;
                        $8773 = (invoke_iii(381,($vinfos129|0),4)|0);
                        $8774 = __THREW__; __THREW__ = 0;
                        $8775 = $8774&1;
                        if ($8775) {
                         label = 1063;
                         break L1;
                        }
                        $8776 = (($8773) + 19|0);
                        $8777 = (($8776) + 1|0);
                        HEAP8[$8777>>0] = $8772;
                        $8778 = (($4) + 550|0);
                        $8779 = HEAP8[$8778>>0]|0;
                        __THREW__ = 0;
                        $8780 = (invoke_iii(381,($vinfos129|0),4)|0);
                        $8781 = __THREW__; __THREW__ = 0;
                        $8782 = $8781&1;
                        if ($8782) {
                         label = 1063;
                         break L1;
                        }
                        $8783 = (($8780) + 18|0);
                        HEAP8[$8783>>0] = $8779;
                        __THREW__ = 0;
                        $8784 = (invoke_iii(381,($vinfos129|0),5)|0);
                        $8785 = __THREW__; __THREW__ = 0;
                        $8786 = $8785&1;
                        if ($8786) {
                         label = 1063;
                         break L1;
                        }
                        $8787 = (($8784) + 17|0);
                        HEAP8[$8787>>0] = 1;
                        $8788 = (($4) + 200|0);
                        $8789 = +HEAPF64[$8788>>3];
                        __THREW__ = 0;
                        $8790 = (invoke_iii(381,($vinfos129|0),5)|0);
                        $8791 = __THREW__; __THREW__ = 0;
                        $8792 = $8791&1;
                        if ($8792) {
                         label = 1063;
                         break L1;
                        }
                        $8793 = (($8790) + 8|0);
                        HEAPF64[$8793>>3] = $8789;
                        $8794 = (($4) + 551|0);
                        $8795 = HEAP8[$8794>>0]|0;
                        __THREW__ = 0;
                        $8796 = (invoke_iii(381,($vinfos129|0),5)|0);
                        $8797 = __THREW__; __THREW__ = 0;
                        $8798 = $8797&1;
                        if ($8798) {
                         label = 1063;
                         break L1;
                        }
                        $8799 = (($8796) + 19|0);
                        HEAP8[$8799>>0] = $8795;
                        $8800 = (($4) + 551|0);
                        $8801 = (($8800) + 1|0);
                        $8802 = HEAP8[$8801>>0]|0;
                        __THREW__ = 0;
                        $8803 = (invoke_iii(381,($vinfos129|0),5)|0);
                        $8804 = __THREW__; __THREW__ = 0;
                        $8805 = $8804&1;
                        if ($8805) {
                         label = 1063;
                         break L1;
                        }
                        $8806 = (($8803) + 19|0);
                        $8807 = (($8806) + 1|0);
                        HEAP8[$8807>>0] = $8802;
                        $8808 = (($4) + 553|0);
                        $8809 = HEAP8[$8808>>0]|0;
                        __THREW__ = 0;
                        $8810 = (invoke_iii(381,($vinfos129|0),5)|0);
                        $8811 = __THREW__; __THREW__ = 0;
                        $8812 = $8811&1;
                        if ($8812) {
                         label = 1063;
                         break L1;
                        }
                        $8813 = (($8810) + 18|0);
                        HEAP8[$8813>>0] = $8809;
                        __THREW__ = 0;
                        invoke_vii(382,($vfree130|0),0);
                        $8814 = __THREW__; __THREW__ = 0;
                        $8815 = $8814&1;
                        if ($8815) {
                         label = 1063;
                         break L1;
                        }
                        $8816 = $1;
                        $8817 = HEAP32[$8816>>2]|0;
                        $8818 = (($8817) + 8|0);
                        $8819 = HEAP32[$8818>>2]|0;
                        __THREW__ = 0;
                        (invoke_iiii($8819|0,($8816|0),($vinfos129|0),($vfree130|0))|0);
                        $8820 = __THREW__; __THREW__ = 0;
                        $8821 = $8820&1;
                        if ($8821) {
                         label = 1064;
                         break L1;
                        }
                        __THREW__ = 0;
                        invoke_vi(366,($vfree130|0));
                        $8822 = __THREW__; __THREW__ = 0;
                        $8823 = $8822&1;
                        if ($8823) {
                         label = 1063;
                         break L1;
                        }
                        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos129);
                        break L365;
                       }
                      } while(0);
                     } else {
                     }
                    } while(0);
                    $8824 = $ij5126;
                    $8825 = (($8824) + 1)|0;
                    $ij5126 = $8825;
                   }
                   label = 1069;
                  } else {
                   label = 1069;
                  }
                 } while(0);
                 if ((label|0) == 1069) {
                  label = 0;
                 }
                 $8834 = $bgotonextstatement121;
                 $8835 = $8834&1;
                 if ($8835) {
                  $bgotonextstatement131 = 1;
                  $8836 = (($4) + 432|0);
                  $8837 = +HEAPF64[$8836>>3];
                  $8838 = (($4) + 168|0);
                  $8839 = +HEAPF64[$8838>>3];
                  $8840 = -1.0 * $8839;
                  $8841 = $8837 + $8840;
                  $x299 = $8841;
                  $8842 = (($4) + 176|0);
                  $8843 = +HEAPF64[$8842>>3];
                  $8844 = (($4) + 360|0);
                  $8845 = +HEAPF64[$8844>>3];
                  $8846 = $8843 + $8845;
                  $x300 = $8846;
                  $8847 = (($4) + 176|0);
                  $8848 = +HEAPF64[$8847>>3];
                  $8849 = 1.0 * $8848;
                  $x301 = $8849;
                  $8850 = (($4) + 120|0);
                  $8851 = +HEAPF64[$8850>>3];
                  $8852 = (+__Z5IKabsd($8851));
                  $8853 = 3.14159265358979 + $8852;
                  $8854 = (+__Z6IKfmoddd($8853,6.2831853071795898));
                  $8855 = -3.14159265358979 + $8854;
                  HEAPF64[$evalcond110>>3] = $8855;
                  $8856 = $x299;
                  $8857 = (($evalcond110) + 8|0);
                  HEAPF64[$8857>>3] = $8856;
                  $8858 = $x299;
                  $8859 = (($evalcond110) + 16|0);
                  HEAPF64[$8859>>3] = $8858;
                  $8860 = $x300;
                  $8861 = (($evalcond110) + 24|0);
                  HEAPF64[$8861>>3] = $8860;
                  $8862 = (($4) + 288|0);
                  $8863 = +HEAPF64[$8862>>3];
                  $8864 = (($evalcond110) + 32|0);
                  HEAPF64[$8864>>3] = $8863;
                  $8865 = $x300;
                  $8866 = (($evalcond110) + 40|0);
                  HEAPF64[$8866>>3] = $8865;
                  $8867 = (($4) + 168|0);
                  $8868 = +HEAPF64[$8867>>3];
                  $8869 = (($4) + 360|0);
                  $8870 = +HEAPF64[$8869>>3];
                  $8871 = $8868 * $8870;
                  $8872 = (($4) + 432|0);
                  $8873 = +HEAPF64[$8872>>3];
                  $8874 = (($4) + 176|0);
                  $8875 = +HEAPF64[$8874>>3];
                  $8876 = $8873 * $8875;
                  $8877 = $8871 + $8876;
                  $8878 = (($evalcond110) + 48|0);
                  HEAPF64[$8878>>3] = $8877;
                  $8879 = (($4) + 168|0);
                  $8880 = +HEAPF64[$8879>>3];
                  $8881 = (($4) + 384|0);
                  $8882 = +HEAPF64[$8881>>3];
                  $8883 = $8880 * $8882;
                  $8884 = (($4) + 312|0);
                  $8885 = +HEAPF64[$8884>>3];
                  $8886 = -1.0 * $8885;
                  $8887 = $x301;
                  $8888 = $8886 * $8887;
                  $8889 = $8883 + $8888;
                  $8890 = (($evalcond110) + 56|0);
                  HEAPF64[$8890>>3] = $8889;
                  $8891 = (($4) + 168|0);
                  $8892 = +HEAPF64[$8891>>3];
                  $8893 = (($4) + 408|0);
                  $8894 = +HEAPF64[$8893>>3];
                  $8895 = $8892 * $8894;
                  $8896 = (($4) + 336|0);
                  $8897 = +HEAPF64[$8896>>3];
                  $8898 = -1.0 * $8897;
                  $8899 = $x301;
                  $8900 = $8898 * $8899;
                  $8901 = $8895 + $8900;
                  $8902 = (($evalcond110) + 64|0);
                  HEAPF64[$8902>>3] = $8901;
                  $8903 = (($4) + 168|0);
                  $8904 = +HEAPF64[$8903>>3];
                  $8905 = (($4) + 432|0);
                  $8906 = +HEAPF64[$8905>>3];
                  $8907 = $8904 * $8906;
                  $8908 = -1.0 + $8907;
                  $8909 = (($4) + 360|0);
                  $8910 = +HEAPF64[$8909>>3];
                  $8911 = -1.0 * $8910;
                  $8912 = $x301;
                  $8913 = $8911 * $8912;
                  $8914 = $8908 + $8913;
                  $8915 = (($evalcond110) + 72|0);
                  HEAPF64[$8915>>3] = $8914;
                  $8916 = +HEAPF64[$evalcond110>>3];
                  $8917 = (+__Z5IKabsd($8916));
                  $8918 = $8917 < 9.9999999999999995E-7;
                  L430: do {
                   if ($8918) {
                    $8919 = (($evalcond110) + 8|0);
                    $8920 = +HEAPF64[$8919>>3];
                    $8921 = (+__Z5IKabsd($8920));
                    $8922 = $8921 < 9.9999999999999995E-7;
                    if (!($8922)) {
                     label = 1153;
                     break;
                    }
                    $8923 = (($evalcond110) + 16|0);
                    $8924 = +HEAPF64[$8923>>3];
                    $8925 = (+__Z5IKabsd($8924));
                    $8926 = $8925 < 9.9999999999999995E-7;
                    if (!($8926)) {
                     label = 1153;
                     break;
                    }
                    $8927 = (($evalcond110) + 24|0);
                    $8928 = +HEAPF64[$8927>>3];
                    $8929 = (+__Z5IKabsd($8928));
                    $8930 = $8929 < 9.9999999999999995E-7;
                    if (!($8930)) {
                     label = 1153;
                     break;
                    }
                    $8931 = (($evalcond110) + 32|0);
                    $8932 = +HEAPF64[$8931>>3];
                    $8933 = (+__Z5IKabsd($8932));
                    $8934 = $8933 < 9.9999999999999995E-7;
                    if (!($8934)) {
                     label = 1153;
                     break;
                    }
                    $8935 = (($evalcond110) + 40|0);
                    $8936 = +HEAPF64[$8935>>3];
                    $8937 = (+__Z5IKabsd($8936));
                    $8938 = $8937 < 9.9999999999999995E-7;
                    if (!($8938)) {
                     label = 1153;
                     break;
                    }
                    $8939 = (($evalcond110) + 48|0);
                    $8940 = +HEAPF64[$8939>>3];
                    $8941 = (+__Z5IKabsd($8940));
                    $8942 = $8941 < 9.9999999999999995E-7;
                    if (!($8942)) {
                     label = 1153;
                     break;
                    }
                    $8943 = (($evalcond110) + 56|0);
                    $8944 = +HEAPF64[$8943>>3];
                    $8945 = (+__Z5IKabsd($8944));
                    $8946 = $8945 < 9.9999999999999995E-7;
                    if (!($8946)) {
                     label = 1153;
                     break;
                    }
                    $8947 = (($evalcond110) + 64|0);
                    $8948 = +HEAPF64[$8947>>3];
                    $8949 = (+__Z5IKabsd($8948));
                    $8950 = $8949 < 9.9999999999999995E-7;
                    if (!($8950)) {
                     label = 1153;
                     break;
                    }
                    $8951 = (($evalcond110) + 72|0);
                    $8952 = +HEAPF64[$8951>>3];
                    $8953 = (+__Z5IKabsd($8952));
                    $8954 = $8953 < 9.9999999999999995E-7;
                    if (!($8954)) {
                     label = 1153;
                     break;
                    }
                    $bgotonextstatement131 = 0;
                    ;HEAP8[$j5valid135+0>>0]=0|0;
                    $8955 = (($4) + 553|0);
                    HEAP8[$8955>>0] = 1;
                    $8956 = (($4) + 240|0);
                    $8957 = +HEAPF64[$8956>>3];
                    $8958 = -1.0 * $8957;
                    $8959 = (+__Z5IKabsd($8958));
                    $8960 = $8959 < 1.9999999999999999E-6;
                    do {
                     if ($8960) {
                      $8961 = (($4) + 264|0);
                      $8962 = +HEAPF64[$8961>>3];
                      $8963 = -1.0 * $8962;
                      $8964 = (+__Z5IKabsd($8963));
                      $8965 = $8964 < 1.9999999999999999E-6;
                      if (!($8965)) {
                       break;
                      }
                      $8966 = (($4) + 240|0);
                      $8967 = +HEAPF64[$8966>>3];
                      $8968 = -1.0 * $8967;
                      $8969 = (+__Z5IKsqrd($8968));
                      $8970 = (($4) + 264|0);
                      $8971 = +HEAPF64[$8970>>3];
                      $8972 = -1.0 * $8971;
                      $8973 = (+__Z5IKsqrd($8972));
                      $8974 = $8969 + $8973;
                      $8975 = $8974 - 1.0;
                      $8976 = (+__Z5IKabsd($8975));
                      $8977 = $8976 <= 1.9999999999999999E-6;
                      if (!($8977)) {
                       break;
                      }
                      break L430;
                     }
                    } while(0);
                    $8978 = (($4) + 240|0);
                    $8979 = +HEAPF64[$8978>>3];
                    $8980 = -1.0 * $8979;
                    $8981 = (($4) + 264|0);
                    $8982 = +HEAPF64[$8981>>3];
                    $8983 = -1.0 * $8982;
                    $8984 = (+__Z7IKatan2dd($8980,$8983));
                    HEAPF64[$j5array132>>3] = $8984;
                    $8985 = +HEAPF64[$j5array132>>3];
                    $8986 = (+__Z5IKsind($8985));
                    HEAPF64[$sj5array134>>3] = $8986;
                    $8987 = +HEAPF64[$j5array132>>3];
                    $8988 = (+__Z5IKcosd($8987));
                    HEAPF64[$cj5array133>>3] = $8988;
                    $8989 = +HEAPF64[$j5array132>>3];
                    $8990 = $8989 > 3.14159265358979;
                    if ($8990) {
                     $8991 = +HEAPF64[$j5array132>>3];
                     $8992 = $8991 - 6.2831853071795898;
                     HEAPF64[$j5array132>>3] = $8992;
                    } else {
                     $8993 = +HEAPF64[$j5array132>>3];
                     $8994 = $8993 < -3.14159265358979;
                     if ($8994) {
                      $8995 = +HEAPF64[$j5array132>>3];
                      $8996 = $8995 + 6.2831853071795898;
                      HEAPF64[$j5array132>>3] = $8996;
                     }
                    }
                    HEAP8[$j5valid135>>0] = 1;
                    $ij5136 = 0;
                    while(1) {
                     $8997 = $ij5136;
                     $8998 = ($8997|0)<(1);
                     if (!($8998)) {
                      break;
                     }
                     $8999 = $ij5136;
                     $9000 = (($j5valid135) + ($8999)|0);
                     $9001 = HEAP8[$9000>>0]|0;
                     $9002 = $9001&1;
                     L456: do {
                      if ($9002) {
                       $9003 = $ij5136;
                       $9004 = $9003&255;
                       $9005 = (($4) + 551|0);
                       HEAP8[$9005>>0] = $9004;
                       $9006 = (($4) + 551|0);
                       $9007 = (($9006) + 1|0);
                       HEAP8[$9007>>0] = -1;
                       $9008 = $ij5136;
                       $9009 = (($9008) + 1)|0;
                       $iij5137 = $9009;
                       L459: while(1) {
                        $9010 = $iij5137;
                        $9011 = ($9010|0)<(1);
                        if (!($9011)) {
                         break;
                        }
                        $9012 = $iij5137;
                        $9013 = (($j5valid135) + ($9012)|0);
                        $9014 = HEAP8[$9013>>0]|0;
                        $9015 = $9014&1;
                        do {
                         if ($9015) {
                          $9016 = $ij5136;
                          $9017 = (($cj5array133) + ($9016<<3)|0);
                          $9018 = +HEAPF64[$9017>>3];
                          $9019 = $iij5137;
                          $9020 = (($cj5array133) + ($9019<<3)|0);
                          $9021 = +HEAPF64[$9020>>3];
                          $9022 = $9018 - $9021;
                          $9023 = (+__Z5IKabsd($9022));
                          $9024 = $9023 < 9.9999999999999995E-7;
                          if (!($9024)) {
                           break;
                          }
                          $9025 = $ij5136;
                          $9026 = (($sj5array134) + ($9025<<3)|0);
                          $9027 = +HEAPF64[$9026>>3];
                          $9028 = $iij5137;
                          $9029 = (($sj5array134) + ($9028<<3)|0);
                          $9030 = +HEAPF64[$9029>>3];
                          $9031 = $9027 - $9030;
                          $9032 = (+__Z5IKabsd($9031));
                          $9033 = $9032 < 9.9999999999999995E-7;
                          if ($9033) {
                           label = 1100;
                           break L459;
                          }
                         }
                        } while(0);
                        $9040 = $iij5137;
                        $9041 = (($9040) + 1)|0;
                        $iij5137 = $9041;
                       }
                       if ((label|0) == 1100) {
                        label = 0;
                        $9034 = $iij5137;
                        $9035 = (($j5valid135) + ($9034)|0);
                        HEAP8[$9035>>0] = 0;
                        $9036 = $iij5137;
                        $9037 = $9036&255;
                        $9038 = (($4) + 551|0);
                        $9039 = (($9038) + 1|0);
                        HEAP8[$9039>>0] = $9037;
                       }
                       $9042 = $ij5136;
                       $9043 = (($j5array132) + ($9042<<3)|0);
                       $9044 = +HEAPF64[$9043>>3];
                       $9045 = (($4) + 200|0);
                       HEAPF64[$9045>>3] = $9044;
                       $9046 = $ij5136;
                       $9047 = (($cj5array133) + ($9046<<3)|0);
                       $9048 = +HEAPF64[$9047>>3];
                       $9049 = (($4) + 208|0);
                       HEAPF64[$9049>>3] = $9048;
                       $9050 = $ij5136;
                       $9051 = (($sj5array134) + ($9050<<3)|0);
                       $9052 = +HEAPF64[$9051>>3];
                       $9053 = (($4) + 216|0);
                       HEAPF64[$9053>>3] = $9052;
                       $9054 = (($4) + 200|0);
                       $9055 = +HEAPF64[$9054>>3];
                       $9056 = (+__Z5IKcosd($9055));
                       $x302 = $9056;
                       $9057 = (($4) + 200|0);
                       $9058 = +HEAPF64[$9057>>3];
                       $9059 = (+__Z5IKsind($9058));
                       $x303 = $9059;
                       $9060 = (($4) + 360|0);
                       $9061 = +HEAPF64[$9060>>3];
                       $9062 = 1.0 * $9061;
                       $x304 = $9062;
                       $9063 = $x302;
                       $9064 = 1.0 * $9063;
                       $x305 = $9064;
                       $9065 = $x303;
                       $9066 = (($4) + 240|0);
                       $9067 = +HEAPF64[$9066>>3];
                       $9068 = $9065 + $9067;
                       HEAPF64[$evalcond138>>3] = $9068;
                       $9069 = $x302;
                       $9070 = (($4) + 264|0);
                       $9071 = +HEAPF64[$9070>>3];
                       $9072 = $9069 + $9071;
                       $9073 = (($evalcond138) + 8|0);
                       HEAPF64[$9073>>3] = $9072;
                       $9074 = (($4) + 360|0);
                       $9075 = +HEAPF64[$9074>>3];
                       $9076 = $x302;
                       $9077 = $9075 * $9076;
                       $9078 = (($4) + 384|0);
                       $9079 = +HEAPF64[$9078>>3];
                       $9080 = $9077 + $9079;
                       $9081 = (($evalcond138) + 16|0);
                       HEAPF64[$9081>>3] = $9080;
                       $9082 = (($4) + 432|0);
                       $9083 = +HEAPF64[$9082>>3];
                       $9084 = $x303;
                       $9085 = $9083 * $9084;
                       $9086 = (($4) + 336|0);
                       $9087 = +HEAPF64[$9086>>3];
                       $9088 = $9085 + $9087;
                       $9089 = (($evalcond138) + 24|0);
                       HEAPF64[$9089>>3] = $9088;
                       $9090 = $x303;
                       $9091 = -1.0 * $9090;
                       $9092 = $x304;
                       $9093 = $9091 * $9092;
                       $9094 = (($4) + 408|0);
                       $9095 = +HEAPF64[$9094>>3];
                       $9096 = $9093 + $9095;
                       $9097 = (($evalcond138) + 32|0);
                       HEAPF64[$9097>>3] = $9096;
                       $9098 = (($4) + 432|0);
                       $9099 = +HEAPF64[$9098>>3];
                       $9100 = -1.0 * $9099;
                       $9101 = $x305;
                       $9102 = $9100 * $9101;
                       $9103 = (($4) + 312|0);
                       $9104 = +HEAPF64[$9103>>3];
                       $9105 = $9102 + $9104;
                       $9106 = (($evalcond138) + 40|0);
                       HEAPF64[$9106>>3] = $9105;
                       $9107 = (($4) + 408|0);
                       $9108 = +HEAPF64[$9107>>3];
                       $9109 = -1.0 * $9108;
                       $9110 = $x304;
                       $9111 = $9109 * $9110;
                       $9112 = $x303;
                       $9113 = $9111 + $9112;
                       $9114 = (($4) + 336|0);
                       $9115 = +HEAPF64[$9114>>3];
                       $9116 = (($4) + 432|0);
                       $9117 = +HEAPF64[$9116>>3];
                       $9118 = $9115 * $9117;
                       $9119 = $9113 + $9118;
                       $9120 = (($evalcond138) + 48|0);
                       HEAPF64[$9120>>3] = $9119;
                       $9121 = (($4) + 384|0);
                       $9122 = +HEAPF64[$9121>>3];
                       $9123 = -1.0 * $9122;
                       $9124 = $x304;
                       $9125 = $9123 * $9124;
                       $9126 = (($4) + 312|0);
                       $9127 = +HEAPF64[$9126>>3];
                       $9128 = (($4) + 432|0);
                       $9129 = +HEAPF64[$9128>>3];
                       $9130 = $9127 * $9129;
                       $9131 = $9125 + $9130;
                       $9132 = $x305;
                       $9133 = -1.0 * $9132;
                       $9134 = $9131 + $9133;
                       $9135 = (($evalcond138) + 56|0);
                       HEAPF64[$9135>>3] = $9134;
                       $9136 = +HEAPF64[$evalcond138>>3];
                       $9137 = (+__Z5IKabsd($9136));
                       $9138 = $9137 > 5.0000000000000004E-6;
                       do {
                        if (!($9138)) {
                         $9139 = (($evalcond138) + 8|0);
                         $9140 = +HEAPF64[$9139>>3];
                         $9141 = (+__Z5IKabsd($9140));
                         $9142 = $9141 > 5.0000000000000004E-6;
                         if ($9142) {
                          break;
                         }
                         $9143 = (($evalcond138) + 16|0);
                         $9144 = +HEAPF64[$9143>>3];
                         $9145 = (+__Z5IKabsd($9144));
                         $9146 = $9145 > 5.0000000000000004E-6;
                         if ($9146) {
                          break;
                         }
                         $9147 = (($evalcond138) + 24|0);
                         $9148 = +HEAPF64[$9147>>3];
                         $9149 = (+__Z5IKabsd($9148));
                         $9150 = $9149 > 5.0000000000000004E-6;
                         if ($9150) {
                          break;
                         }
                         $9151 = (($evalcond138) + 32|0);
                         $9152 = +HEAPF64[$9151>>3];
                         $9153 = (+__Z5IKabsd($9152));
                         $9154 = $9153 > 5.0000000000000004E-6;
                         if ($9154) {
                          break;
                         }
                         $9155 = (($evalcond138) + 40|0);
                         $9156 = +HEAPF64[$9155>>3];
                         $9157 = (+__Z5IKabsd($9156));
                         $9158 = $9157 > 5.0000000000000004E-6;
                         if ($9158) {
                          break;
                         }
                         $9159 = (($evalcond138) + 48|0);
                         $9160 = +HEAPF64[$9159>>3];
                         $9161 = (+__Z5IKabsd($9160));
                         $9162 = $9161 > 5.0000000000000004E-6;
                         if ($9162) {
                          break;
                         }
                         $9163 = (($evalcond138) + 56|0);
                         $9164 = +HEAPF64[$9163>>3];
                         $9165 = (+__Z5IKabsd($9164));
                         $9166 = $9165 > 5.0000000000000004E-6;
                         if ($9166) {
                          break;
                         }
                         __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos139,6);
                         __THREW__ = 0;
                         $9167 = (invoke_iii(381,($vinfos139|0),0)|0);
                         $9168 = __THREW__; __THREW__ = 0;
                         $9169 = $9168&1;
                         if ($9169) {
                          label = 1147;
                          break L1;
                         }
                         $9170 = (($9167) + 17|0);
                         HEAP8[$9170>>0] = 1;
                         $9171 = +HEAPF64[$4>>3];
                         __THREW__ = 0;
                         $9172 = (invoke_iii(381,($vinfos139|0),0)|0);
                         $9173 = __THREW__; __THREW__ = 0;
                         $9174 = $9173&1;
                         if ($9174) {
                          label = 1147;
                          break L1;
                         }
                         $9175 = (($9172) + 8|0);
                         HEAPF64[$9175>>3] = $9171;
                         $9176 = (($4) + 536|0);
                         $9177 = HEAP8[$9176>>0]|0;
                         __THREW__ = 0;
                         $9178 = (invoke_iii(381,($vinfos139|0),0)|0);
                         $9179 = __THREW__; __THREW__ = 0;
                         $9180 = $9179&1;
                         if ($9180) {
                          label = 1147;
                          break L1;
                         }
                         $9181 = (($9178) + 19|0);
                         HEAP8[$9181>>0] = $9177;
                         $9182 = (($4) + 536|0);
                         $9183 = (($9182) + 1|0);
                         $9184 = HEAP8[$9183>>0]|0;
                         __THREW__ = 0;
                         $9185 = (invoke_iii(381,($vinfos139|0),0)|0);
                         $9186 = __THREW__; __THREW__ = 0;
                         $9187 = $9186&1;
                         if ($9187) {
                          label = 1147;
                          break L1;
                         }
                         $9188 = (($9185) + 19|0);
                         $9189 = (($9188) + 1|0);
                         HEAP8[$9189>>0] = $9184;
                         $9190 = (($4) + 538|0);
                         $9191 = HEAP8[$9190>>0]|0;
                         __THREW__ = 0;
                         $9192 = (invoke_iii(381,($vinfos139|0),0)|0);
                         $9193 = __THREW__; __THREW__ = 0;
                         $9194 = $9193&1;
                         if ($9194) {
                          label = 1147;
                          break L1;
                         }
                         $9195 = (($9192) + 18|0);
                         HEAP8[$9195>>0] = $9191;
                         __THREW__ = 0;
                         $9196 = (invoke_iii(381,($vinfos139|0),1)|0);
                         $9197 = __THREW__; __THREW__ = 0;
                         $9198 = $9197&1;
                         if ($9198) {
                          label = 1147;
                          break L1;
                         }
                         $9199 = (($9196) + 17|0);
                         HEAP8[$9199>>0] = 1;
                         $9200 = (($4) + 40|0);
                         $9201 = +HEAPF64[$9200>>3];
                         __THREW__ = 0;
                         $9202 = (invoke_iii(381,($vinfos139|0),1)|0);
                         $9203 = __THREW__; __THREW__ = 0;
                         $9204 = $9203&1;
                         if ($9204) {
                          label = 1147;
                          break L1;
                         }
                         $9205 = (($9202) + 8|0);
                         HEAPF64[$9205>>3] = $9201;
                         $9206 = (($4) + 539|0);
                         $9207 = HEAP8[$9206>>0]|0;
                         __THREW__ = 0;
                         $9208 = (invoke_iii(381,($vinfos139|0),1)|0);
                         $9209 = __THREW__; __THREW__ = 0;
                         $9210 = $9209&1;
                         if ($9210) {
                          label = 1147;
                          break L1;
                         }
                         $9211 = (($9208) + 19|0);
                         HEAP8[$9211>>0] = $9207;
                         $9212 = (($4) + 539|0);
                         $9213 = (($9212) + 1|0);
                         $9214 = HEAP8[$9213>>0]|0;
                         __THREW__ = 0;
                         $9215 = (invoke_iii(381,($vinfos139|0),1)|0);
                         $9216 = __THREW__; __THREW__ = 0;
                         $9217 = $9216&1;
                         if ($9217) {
                          label = 1147;
                          break L1;
                         }
                         $9218 = (($9215) + 19|0);
                         $9219 = (($9218) + 1|0);
                         HEAP8[$9219>>0] = $9214;
                         $9220 = (($4) + 541|0);
                         $9221 = HEAP8[$9220>>0]|0;
                         __THREW__ = 0;
                         $9222 = (invoke_iii(381,($vinfos139|0),1)|0);
                         $9223 = __THREW__; __THREW__ = 0;
                         $9224 = $9223&1;
                         if ($9224) {
                          label = 1147;
                          break L1;
                         }
                         $9225 = (($9222) + 18|0);
                         HEAP8[$9225>>0] = $9221;
                         __THREW__ = 0;
                         $9226 = (invoke_iii(381,($vinfos139|0),2)|0);
                         $9227 = __THREW__; __THREW__ = 0;
                         $9228 = $9227&1;
                         if ($9228) {
                          label = 1147;
                          break L1;
                         }
                         $9229 = (($9226) + 17|0);
                         HEAP8[$9229>>0] = 1;
                         $9230 = (($4) + 80|0);
                         $9231 = +HEAPF64[$9230>>3];
                         __THREW__ = 0;
                         $9232 = (invoke_iii(381,($vinfos139|0),2)|0);
                         $9233 = __THREW__; __THREW__ = 0;
                         $9234 = $9233&1;
                         if ($9234) {
                          label = 1147;
                          break L1;
                         }
                         $9235 = (($9232) + 8|0);
                         HEAPF64[$9235>>3] = $9231;
                         $9236 = (($4) + 542|0);
                         $9237 = HEAP8[$9236>>0]|0;
                         __THREW__ = 0;
                         $9238 = (invoke_iii(381,($vinfos139|0),2)|0);
                         $9239 = __THREW__; __THREW__ = 0;
                         $9240 = $9239&1;
                         if ($9240) {
                          label = 1147;
                          break L1;
                         }
                         $9241 = (($9238) + 19|0);
                         HEAP8[$9241>>0] = $9237;
                         $9242 = (($4) + 542|0);
                         $9243 = (($9242) + 1|0);
                         $9244 = HEAP8[$9243>>0]|0;
                         __THREW__ = 0;
                         $9245 = (invoke_iii(381,($vinfos139|0),2)|0);
                         $9246 = __THREW__; __THREW__ = 0;
                         $9247 = $9246&1;
                         if ($9247) {
                          label = 1147;
                          break L1;
                         }
                         $9248 = (($9245) + 19|0);
                         $9249 = (($9248) + 1|0);
                         HEAP8[$9249>>0] = $9244;
                         $9250 = (($4) + 544|0);
                         $9251 = HEAP8[$9250>>0]|0;
                         __THREW__ = 0;
                         $9252 = (invoke_iii(381,($vinfos139|0),2)|0);
                         $9253 = __THREW__; __THREW__ = 0;
                         $9254 = $9253&1;
                         if ($9254) {
                          label = 1147;
                          break L1;
                         }
                         $9255 = (($9252) + 18|0);
                         HEAP8[$9255>>0] = $9251;
                         __THREW__ = 0;
                         $9256 = (invoke_iii(381,($vinfos139|0),3)|0);
                         $9257 = __THREW__; __THREW__ = 0;
                         $9258 = $9257&1;
                         if ($9258) {
                          label = 1147;
                          break L1;
                         }
                         $9259 = (($9256) + 17|0);
                         HEAP8[$9259>>0] = 1;
                         $9260 = (($4) + 120|0);
                         $9261 = +HEAPF64[$9260>>3];
                         __THREW__ = 0;
                         $9262 = (invoke_iii(381,($vinfos139|0),3)|0);
                         $9263 = __THREW__; __THREW__ = 0;
                         $9264 = $9263&1;
                         if ($9264) {
                          label = 1147;
                          break L1;
                         }
                         $9265 = (($9262) + 8|0);
                         HEAPF64[$9265>>3] = $9261;
                         $9266 = (($4) + 545|0);
                         $9267 = HEAP8[$9266>>0]|0;
                         __THREW__ = 0;
                         $9268 = (invoke_iii(381,($vinfos139|0),3)|0);
                         $9269 = __THREW__; __THREW__ = 0;
                         $9270 = $9269&1;
                         if ($9270) {
                          label = 1147;
                          break L1;
                         }
                         $9271 = (($9268) + 19|0);
                         HEAP8[$9271>>0] = $9267;
                         $9272 = (($4) + 545|0);
                         $9273 = (($9272) + 1|0);
                         $9274 = HEAP8[$9273>>0]|0;
                         __THREW__ = 0;
                         $9275 = (invoke_iii(381,($vinfos139|0),3)|0);
                         $9276 = __THREW__; __THREW__ = 0;
                         $9277 = $9276&1;
                         if ($9277) {
                          label = 1147;
                          break L1;
                         }
                         $9278 = (($9275) + 19|0);
                         $9279 = (($9278) + 1|0);
                         HEAP8[$9279>>0] = $9274;
                         $9280 = (($4) + 547|0);
                         $9281 = HEAP8[$9280>>0]|0;
                         __THREW__ = 0;
                         $9282 = (invoke_iii(381,($vinfos139|0),3)|0);
                         $9283 = __THREW__; __THREW__ = 0;
                         $9284 = $9283&1;
                         if ($9284) {
                          label = 1147;
                          break L1;
                         }
                         $9285 = (($9282) + 18|0);
                         HEAP8[$9285>>0] = $9281;
                         __THREW__ = 0;
                         $9286 = (invoke_iii(381,($vinfos139|0),4)|0);
                         $9287 = __THREW__; __THREW__ = 0;
                         $9288 = $9287&1;
                         if ($9288) {
                          label = 1147;
                          break L1;
                         }
                         $9289 = (($9286) + 17|0);
                         HEAP8[$9289>>0] = 1;
                         $9290 = (($4) + 160|0);
                         $9291 = +HEAPF64[$9290>>3];
                         __THREW__ = 0;
                         $9292 = (invoke_iii(381,($vinfos139|0),4)|0);
                         $9293 = __THREW__; __THREW__ = 0;
                         $9294 = $9293&1;
                         if ($9294) {
                          label = 1147;
                          break L1;
                         }
                         $9295 = (($9292) + 8|0);
                         HEAPF64[$9295>>3] = $9291;
                         $9296 = (($4) + 548|0);
                         $9297 = HEAP8[$9296>>0]|0;
                         __THREW__ = 0;
                         $9298 = (invoke_iii(381,($vinfos139|0),4)|0);
                         $9299 = __THREW__; __THREW__ = 0;
                         $9300 = $9299&1;
                         if ($9300) {
                          label = 1147;
                          break L1;
                         }
                         $9301 = (($9298) + 19|0);
                         HEAP8[$9301>>0] = $9297;
                         $9302 = (($4) + 548|0);
                         $9303 = (($9302) + 1|0);
                         $9304 = HEAP8[$9303>>0]|0;
                         __THREW__ = 0;
                         $9305 = (invoke_iii(381,($vinfos139|0),4)|0);
                         $9306 = __THREW__; __THREW__ = 0;
                         $9307 = $9306&1;
                         if ($9307) {
                          label = 1147;
                          break L1;
                         }
                         $9308 = (($9305) + 19|0);
                         $9309 = (($9308) + 1|0);
                         HEAP8[$9309>>0] = $9304;
                         $9310 = (($4) + 550|0);
                         $9311 = HEAP8[$9310>>0]|0;
                         __THREW__ = 0;
                         $9312 = (invoke_iii(381,($vinfos139|0),4)|0);
                         $9313 = __THREW__; __THREW__ = 0;
                         $9314 = $9313&1;
                         if ($9314) {
                          label = 1147;
                          break L1;
                         }
                         $9315 = (($9312) + 18|0);
                         HEAP8[$9315>>0] = $9311;
                         __THREW__ = 0;
                         $9316 = (invoke_iii(381,($vinfos139|0),5)|0);
                         $9317 = __THREW__; __THREW__ = 0;
                         $9318 = $9317&1;
                         if ($9318) {
                          label = 1147;
                          break L1;
                         }
                         $9319 = (($9316) + 17|0);
                         HEAP8[$9319>>0] = 1;
                         $9320 = (($4) + 200|0);
                         $9321 = +HEAPF64[$9320>>3];
                         __THREW__ = 0;
                         $9322 = (invoke_iii(381,($vinfos139|0),5)|0);
                         $9323 = __THREW__; __THREW__ = 0;
                         $9324 = $9323&1;
                         if ($9324) {
                          label = 1147;
                          break L1;
                         }
                         $9325 = (($9322) + 8|0);
                         HEAPF64[$9325>>3] = $9321;
                         $9326 = (($4) + 551|0);
                         $9327 = HEAP8[$9326>>0]|0;
                         __THREW__ = 0;
                         $9328 = (invoke_iii(381,($vinfos139|0),5)|0);
                         $9329 = __THREW__; __THREW__ = 0;
                         $9330 = $9329&1;
                         if ($9330) {
                          label = 1147;
                          break L1;
                         }
                         $9331 = (($9328) + 19|0);
                         HEAP8[$9331>>0] = $9327;
                         $9332 = (($4) + 551|0);
                         $9333 = (($9332) + 1|0);
                         $9334 = HEAP8[$9333>>0]|0;
                         __THREW__ = 0;
                         $9335 = (invoke_iii(381,($vinfos139|0),5)|0);
                         $9336 = __THREW__; __THREW__ = 0;
                         $9337 = $9336&1;
                         if ($9337) {
                          label = 1147;
                          break L1;
                         }
                         $9338 = (($9335) + 19|0);
                         $9339 = (($9338) + 1|0);
                         HEAP8[$9339>>0] = $9334;
                         $9340 = (($4) + 553|0);
                         $9341 = HEAP8[$9340>>0]|0;
                         __THREW__ = 0;
                         $9342 = (invoke_iii(381,($vinfos139|0),5)|0);
                         $9343 = __THREW__; __THREW__ = 0;
                         $9344 = $9343&1;
                         if ($9344) {
                          label = 1147;
                          break L1;
                         }
                         $9345 = (($9342) + 18|0);
                         HEAP8[$9345>>0] = $9341;
                         __THREW__ = 0;
                         invoke_vii(382,($vfree140|0),0);
                         $9346 = __THREW__; __THREW__ = 0;
                         $9347 = $9346&1;
                         if ($9347) {
                          label = 1147;
                          break L1;
                         }
                         $9348 = $1;
                         $9349 = HEAP32[$9348>>2]|0;
                         $9350 = (($9349) + 8|0);
                         $9351 = HEAP32[$9350>>2]|0;
                         __THREW__ = 0;
                         (invoke_iiii($9351|0,($9348|0),($vinfos139|0),($vfree140|0))|0);
                         $9352 = __THREW__; __THREW__ = 0;
                         $9353 = $9352&1;
                         if ($9353) {
                          label = 1148;
                          break L1;
                         }
                         __THREW__ = 0;
                         invoke_vi(366,($vfree140|0));
                         $9354 = __THREW__; __THREW__ = 0;
                         $9355 = $9354&1;
                         if ($9355) {
                          label = 1147;
                          break L1;
                         }
                         __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos139);
                         break L456;
                        }
                       } while(0);
                      } else {
                      }
                     } while(0);
                     $9356 = $ij5136;
                     $9357 = (($9356) + 1)|0;
                     $ij5136 = $9357;
                    }
                    label = 1153;
                   } else {
                    label = 1153;
                   }
                  } while(0);
                  if ((label|0) == 1153) {
                   label = 0;
                  }
                  $9366 = $bgotonextstatement131;
                  $9367 = $9366&1;
                  if ($9367) {
                   $bgotonextstatement141 = 1;
                   $9368 = (($4) + 432|0);
                   $9369 = +HEAPF64[$9368>>3];
                   $9370 = (($4) + 168|0);
                   $9371 = +HEAPF64[$9370>>3];
                   $9372 = -1.0 * $9371;
                   $9373 = $9369 + $9372;
                   $x306 = $9373;
                   $9374 = (($4) + 168|0);
                   $9375 = +HEAPF64[$9374>>3];
                   $9376 = 1.0 * $9375;
                   $x307 = $9376;
                   $9377 = (($4) + 120|0);
                   $9378 = +HEAPF64[$9377>>3];
                   $9379 = -3.14159265358979 + $9378;
                   $9380 = (+__Z5IKabsd($9379));
                   $9381 = 3.14159265358979 + $9380;
                   $9382 = (+__Z6IKfmoddd($9381,6.2831853071795898));
                   $9383 = -3.14159265358979 + $9382;
                   HEAPF64[$evalcond110>>3] = $9383;
                   $9384 = $x306;
                   $9385 = (($evalcond110) + 8|0);
                   HEAPF64[$9385>>3] = $9384;
                   $9386 = $x306;
                   $9387 = (($evalcond110) + 16|0);
                   HEAPF64[$9387>>3] = $9386;
                   $9388 = (($4) + 176|0);
                   $9389 = +HEAPF64[$9388>>3];
                   $9390 = -1.0 * $9389;
                   $9391 = (($4) + 360|0);
                   $9392 = +HEAPF64[$9391>>3];
                   $9393 = $9390 + $9392;
                   $9394 = (($evalcond110) + 24|0);
                   HEAPF64[$9394>>3] = $9393;
                   $9395 = (($4) + 288|0);
                   $9396 = +HEAPF64[$9395>>3];
                   $9397 = (($evalcond110) + 32|0);
                   HEAPF64[$9397>>3] = $9396;
                   $9398 = (($4) + 176|0);
                   $9399 = +HEAPF64[$9398>>3];
                   $9400 = (($4) + 360|0);
                   $9401 = +HEAPF64[$9400>>3];
                   $9402 = -1.0 * $9401;
                   $9403 = $9399 + $9402;
                   $9404 = (($evalcond110) + 40|0);
                   HEAPF64[$9404>>3] = $9403;
                   $9405 = (($4) + 432|0);
                   $9406 = +HEAPF64[$9405>>3];
                   $9407 = (($4) + 176|0);
                   $9408 = +HEAPF64[$9407>>3];
                   $9409 = $9406 * $9408;
                   $9410 = (($4) + 360|0);
                   $9411 = +HEAPF64[$9410>>3];
                   $9412 = -1.0 * $9411;
                   $9413 = $x307;
                   $9414 = $9412 * $9413;
                   $9415 = $9409 + $9414;
                   $9416 = (($evalcond110) + 48|0);
                   HEAPF64[$9416>>3] = $9415;
                   $9417 = (($4) + 312|0);
                   $9418 = +HEAPF64[$9417>>3];
                   $9419 = (($4) + 176|0);
                   $9420 = +HEAPF64[$9419>>3];
                   $9421 = $9418 * $9420;
                   $9422 = (($4) + 168|0);
                   $9423 = +HEAPF64[$9422>>3];
                   $9424 = (($4) + 384|0);
                   $9425 = +HEAPF64[$9424>>3];
                   $9426 = $9423 * $9425;
                   $9427 = $9421 + $9426;
                   $9428 = (($evalcond110) + 56|0);
                   HEAPF64[$9428>>3] = $9427;
                   $9429 = (($4) + 336|0);
                   $9430 = +HEAPF64[$9429>>3];
                   $9431 = (($4) + 176|0);
                   $9432 = +HEAPF64[$9431>>3];
                   $9433 = $9430 * $9432;
                   $9434 = (($4) + 168|0);
                   $9435 = +HEAPF64[$9434>>3];
                   $9436 = (($4) + 408|0);
                   $9437 = +HEAPF64[$9436>>3];
                   $9438 = $9435 * $9437;
                   $9439 = $9433 + $9438;
                   $9440 = (($evalcond110) + 64|0);
                   HEAPF64[$9440>>3] = $9439;
                   $9441 = (($4) + 360|0);
                   $9442 = +HEAPF64[$9441>>3];
                   $9443 = (($4) + 176|0);
                   $9444 = +HEAPF64[$9443>>3];
                   $9445 = $9442 * $9444;
                   $9446 = -1.0 + $9445;
                   $9447 = (($4) + 168|0);
                   $9448 = +HEAPF64[$9447>>3];
                   $9449 = (($4) + 432|0);
                   $9450 = +HEAPF64[$9449>>3];
                   $9451 = $9448 * $9450;
                   $9452 = $9446 + $9451;
                   $9453 = (($evalcond110) + 72|0);
                   HEAPF64[$9453>>3] = $9452;
                   $9454 = +HEAPF64[$evalcond110>>3];
                   $9455 = (+__Z5IKabsd($9454));
                   $9456 = $9455 < 9.9999999999999995E-7;
                   L521: do {
                    if ($9456) {
                     $9457 = (($evalcond110) + 8|0);
                     $9458 = +HEAPF64[$9457>>3];
                     $9459 = (+__Z5IKabsd($9458));
                     $9460 = $9459 < 9.9999999999999995E-7;
                     if (!($9460)) {
                      label = 1237;
                      break;
                     }
                     $9461 = (($evalcond110) + 16|0);
                     $9462 = +HEAPF64[$9461>>3];
                     $9463 = (+__Z5IKabsd($9462));
                     $9464 = $9463 < 9.9999999999999995E-7;
                     if (!($9464)) {
                      label = 1237;
                      break;
                     }
                     $9465 = (($evalcond110) + 24|0);
                     $9466 = +HEAPF64[$9465>>3];
                     $9467 = (+__Z5IKabsd($9466));
                     $9468 = $9467 < 9.9999999999999995E-7;
                     if (!($9468)) {
                      label = 1237;
                      break;
                     }
                     $9469 = (($evalcond110) + 32|0);
                     $9470 = +HEAPF64[$9469>>3];
                     $9471 = (+__Z5IKabsd($9470));
                     $9472 = $9471 < 9.9999999999999995E-7;
                     if (!($9472)) {
                      label = 1237;
                      break;
                     }
                     $9473 = (($evalcond110) + 40|0);
                     $9474 = +HEAPF64[$9473>>3];
                     $9475 = (+__Z5IKabsd($9474));
                     $9476 = $9475 < 9.9999999999999995E-7;
                     if (!($9476)) {
                      label = 1237;
                      break;
                     }
                     $9477 = (($evalcond110) + 48|0);
                     $9478 = +HEAPF64[$9477>>3];
                     $9479 = (+__Z5IKabsd($9478));
                     $9480 = $9479 < 9.9999999999999995E-7;
                     if (!($9480)) {
                      label = 1237;
                      break;
                     }
                     $9481 = (($evalcond110) + 56|0);
                     $9482 = +HEAPF64[$9481>>3];
                     $9483 = (+__Z5IKabsd($9482));
                     $9484 = $9483 < 9.9999999999999995E-7;
                     if (!($9484)) {
                      label = 1237;
                      break;
                     }
                     $9485 = (($evalcond110) + 64|0);
                     $9486 = +HEAPF64[$9485>>3];
                     $9487 = (+__Z5IKabsd($9486));
                     $9488 = $9487 < 9.9999999999999995E-7;
                     if (!($9488)) {
                      label = 1237;
                      break;
                     }
                     $9489 = (($evalcond110) + 72|0);
                     $9490 = +HEAPF64[$9489>>3];
                     $9491 = (+__Z5IKabsd($9490));
                     $9492 = $9491 < 9.9999999999999995E-7;
                     if (!($9492)) {
                      label = 1237;
                      break;
                     }
                     $bgotonextstatement141 = 0;
                     ;HEAP8[$j5valid145+0>>0]=0|0;
                     $9493 = (($4) + 553|0);
                     HEAP8[$9493>>0] = 1;
                     $9494 = (($4) + 240|0);
                     $9495 = +HEAPF64[$9494>>3];
                     $9496 = (+__Z5IKabsd($9495));
                     $9497 = $9496 < 1.9999999999999999E-6;
                     do {
                      if ($9497) {
                       $9498 = (($4) + 264|0);
                       $9499 = +HEAPF64[$9498>>3];
                       $9500 = (+__Z5IKabsd($9499));
                       $9501 = $9500 < 1.9999999999999999E-6;
                       if (!($9501)) {
                        break;
                       }
                       $9502 = (($4) + 240|0);
                       $9503 = +HEAPF64[$9502>>3];
                       $9504 = (+__Z5IKsqrd($9503));
                       $9505 = (($4) + 264|0);
                       $9506 = +HEAPF64[$9505>>3];
                       $9507 = (+__Z5IKsqrd($9506));
                       $9508 = $9504 + $9507;
                       $9509 = $9508 - 1.0;
                       $9510 = (+__Z5IKabsd($9509));
                       $9511 = $9510 <= 1.9999999999999999E-6;
                       if (!($9511)) {
                        break;
                       }
                       break L521;
                      }
                     } while(0);
                     $9512 = (($4) + 240|0);
                     $9513 = +HEAPF64[$9512>>3];
                     $9514 = (($4) + 264|0);
                     $9515 = +HEAPF64[$9514>>3];
                     $9516 = (+__Z7IKatan2dd($9513,$9515));
                     HEAPF64[$j5array142>>3] = $9516;
                     $9517 = +HEAPF64[$j5array142>>3];
                     $9518 = (+__Z5IKsind($9517));
                     HEAPF64[$sj5array144>>3] = $9518;
                     $9519 = +HEAPF64[$j5array142>>3];
                     $9520 = (+__Z5IKcosd($9519));
                     HEAPF64[$cj5array143>>3] = $9520;
                     $9521 = +HEAPF64[$j5array142>>3];
                     $9522 = $9521 > 3.14159265358979;
                     if ($9522) {
                      $9523 = +HEAPF64[$j5array142>>3];
                      $9524 = $9523 - 6.2831853071795898;
                      HEAPF64[$j5array142>>3] = $9524;
                     } else {
                      $9525 = +HEAPF64[$j5array142>>3];
                      $9526 = $9525 < -3.14159265358979;
                      if ($9526) {
                       $9527 = +HEAPF64[$j5array142>>3];
                       $9528 = $9527 + 6.2831853071795898;
                       HEAPF64[$j5array142>>3] = $9528;
                      }
                     }
                     HEAP8[$j5valid145>>0] = 1;
                     $ij5146 = 0;
                     while(1) {
                      $9529 = $ij5146;
                      $9530 = ($9529|0)<(1);
                      if (!($9530)) {
                       break;
                      }
                      $9531 = $ij5146;
                      $9532 = (($j5valid145) + ($9531)|0);
                      $9533 = HEAP8[$9532>>0]|0;
                      $9534 = $9533&1;
                      L547: do {
                       if ($9534) {
                        $9535 = $ij5146;
                        $9536 = $9535&255;
                        $9537 = (($4) + 551|0);
                        HEAP8[$9537>>0] = $9536;
                        $9538 = (($4) + 551|0);
                        $9539 = (($9538) + 1|0);
                        HEAP8[$9539>>0] = -1;
                        $9540 = $ij5146;
                        $9541 = (($9540) + 1)|0;
                        $iij5147 = $9541;
                        L550: while(1) {
                         $9542 = $iij5147;
                         $9543 = ($9542|0)<(1);
                         if (!($9543)) {
                          break;
                         }
                         $9544 = $iij5147;
                         $9545 = (($j5valid145) + ($9544)|0);
                         $9546 = HEAP8[$9545>>0]|0;
                         $9547 = $9546&1;
                         do {
                          if ($9547) {
                           $9548 = $ij5146;
                           $9549 = (($cj5array143) + ($9548<<3)|0);
                           $9550 = +HEAPF64[$9549>>3];
                           $9551 = $iij5147;
                           $9552 = (($cj5array143) + ($9551<<3)|0);
                           $9553 = +HEAPF64[$9552>>3];
                           $9554 = $9550 - $9553;
                           $9555 = (+__Z5IKabsd($9554));
                           $9556 = $9555 < 9.9999999999999995E-7;
                           if (!($9556)) {
                            break;
                           }
                           $9557 = $ij5146;
                           $9558 = (($sj5array144) + ($9557<<3)|0);
                           $9559 = +HEAPF64[$9558>>3];
                           $9560 = $iij5147;
                           $9561 = (($sj5array144) + ($9560<<3)|0);
                           $9562 = +HEAPF64[$9561>>3];
                           $9563 = $9559 - $9562;
                           $9564 = (+__Z5IKabsd($9563));
                           $9565 = $9564 < 9.9999999999999995E-7;
                           if ($9565) {
                            label = 1184;
                            break L550;
                           }
                          }
                         } while(0);
                         $9572 = $iij5147;
                         $9573 = (($9572) + 1)|0;
                         $iij5147 = $9573;
                        }
                        if ((label|0) == 1184) {
                         label = 0;
                         $9566 = $iij5147;
                         $9567 = (($j5valid145) + ($9566)|0);
                         HEAP8[$9567>>0] = 0;
                         $9568 = $iij5147;
                         $9569 = $9568&255;
                         $9570 = (($4) + 551|0);
                         $9571 = (($9570) + 1|0);
                         HEAP8[$9571>>0] = $9569;
                        }
                        $9574 = $ij5146;
                        $9575 = (($j5array142) + ($9574<<3)|0);
                        $9576 = +HEAPF64[$9575>>3];
                        $9577 = (($4) + 200|0);
                        HEAPF64[$9577>>3] = $9576;
                        $9578 = $ij5146;
                        $9579 = (($cj5array143) + ($9578<<3)|0);
                        $9580 = +HEAPF64[$9579>>3];
                        $9581 = (($4) + 208|0);
                        HEAPF64[$9581>>3] = $9580;
                        $9582 = $ij5146;
                        $9583 = (($sj5array144) + ($9582<<3)|0);
                        $9584 = +HEAPF64[$9583>>3];
                        $9585 = (($4) + 216|0);
                        HEAPF64[$9585>>3] = $9584;
                        $9586 = (($4) + 200|0);
                        $9587 = +HEAPF64[$9586>>3];
                        $9588 = (+__Z5IKsind($9587));
                        $x308 = $9588;
                        $9589 = (($4) + 200|0);
                        $9590 = +HEAPF64[$9589>>3];
                        $9591 = (+__Z5IKcosd($9590));
                        $x309 = $9591;
                        $9592 = (($4) + 432|0);
                        $9593 = +HEAPF64[$9592>>3];
                        $9594 = 1.0 * $9593;
                        $x310 = $9594;
                        $9595 = $x309;
                        $9596 = 1.0 * $9595;
                        $x311 = $9596;
                        $9597 = (($4) + 360|0);
                        $9598 = +HEAPF64[$9597>>3];
                        $9599 = $x308;
                        $9600 = $9598 * $9599;
                        $9601 = (($4) + 408|0);
                        $9602 = +HEAPF64[$9601>>3];
                        $9603 = $9600 + $9602;
                        HEAPF64[$evalcond148>>3] = $9603;
                        $9604 = $x308;
                        $9605 = (($4) + 240|0);
                        $9606 = +HEAPF64[$9605>>3];
                        $9607 = -1.0 * $9606;
                        $9608 = $9604 + $9607;
                        $9609 = (($evalcond148) + 8|0);
                        HEAPF64[$9609>>3] = $9608;
                        $9610 = $x309;
                        $9611 = (($4) + 264|0);
                        $9612 = +HEAPF64[$9611>>3];
                        $9613 = -1.0 * $9612;
                        $9614 = $9610 + $9613;
                        $9615 = (($evalcond148) + 16|0);
                        HEAPF64[$9615>>3] = $9614;
                        $9616 = (($4) + 432|0);
                        $9617 = +HEAPF64[$9616>>3];
                        $9618 = $x309;
                        $9619 = $9617 * $9618;
                        $9620 = (($4) + 312|0);
                        $9621 = +HEAPF64[$9620>>3];
                        $9622 = $9619 + $9621;
                        $9623 = (($evalcond148) + 24|0);
                        HEAPF64[$9623>>3] = $9622;
                        $9624 = (($4) + 360|0);
                        $9625 = +HEAPF64[$9624>>3];
                        $9626 = -1.0 * $9625;
                        $9627 = $x311;
                        $9628 = $9626 * $9627;
                        $9629 = (($4) + 384|0);
                        $9630 = +HEAPF64[$9629>>3];
                        $9631 = $9628 + $9630;
                        $9632 = (($evalcond148) + 32|0);
                        HEAPF64[$9632>>3] = $9631;
                        $9633 = $x308;
                        $9634 = -1.0 * $9633;
                        $9635 = $x310;
                        $9636 = $9634 * $9635;
                        $9637 = (($4) + 336|0);
                        $9638 = +HEAPF64[$9637>>3];
                        $9639 = $9636 + $9638;
                        $9640 = (($evalcond148) + 40|0);
                        HEAPF64[$9640>>3] = $9639;
                        $9641 = (($4) + 336|0);
                        $9642 = +HEAPF64[$9641>>3];
                        $9643 = -1.0 * $9642;
                        $9644 = $x310;
                        $9645 = $9643 * $9644;
                        $9646 = $x308;
                        $9647 = $9645 + $9646;
                        $9648 = (($4) + 360|0);
                        $9649 = +HEAPF64[$9648>>3];
                        $9650 = (($4) + 408|0);
                        $9651 = +HEAPF64[$9650>>3];
                        $9652 = $9649 * $9651;
                        $9653 = $9647 + $9652;
                        $9654 = (($evalcond148) + 48|0);
                        HEAPF64[$9654>>3] = $9653;
                        $9655 = (($4) + 360|0);
                        $9656 = +HEAPF64[$9655>>3];
                        $9657 = (($4) + 384|0);
                        $9658 = +HEAPF64[$9657>>3];
                        $9659 = $9656 * $9658;
                        $9660 = (($4) + 312|0);
                        $9661 = +HEAPF64[$9660>>3];
                        $9662 = -1.0 * $9661;
                        $9663 = $x310;
                        $9664 = $9662 * $9663;
                        $9665 = $9659 + $9664;
                        $9666 = $x311;
                        $9667 = -1.0 * $9666;
                        $9668 = $9665 + $9667;
                        $9669 = (($evalcond148) + 56|0);
                        HEAPF64[$9669>>3] = $9668;
                        $9670 = +HEAPF64[$evalcond148>>3];
                        $9671 = (+__Z5IKabsd($9670));
                        $9672 = $9671 > 5.0000000000000004E-6;
                        do {
                         if (!($9672)) {
                          $9673 = (($evalcond148) + 8|0);
                          $9674 = +HEAPF64[$9673>>3];
                          $9675 = (+__Z5IKabsd($9674));
                          $9676 = $9675 > 5.0000000000000004E-6;
                          if ($9676) {
                           break;
                          }
                          $9677 = (($evalcond148) + 16|0);
                          $9678 = +HEAPF64[$9677>>3];
                          $9679 = (+__Z5IKabsd($9678));
                          $9680 = $9679 > 5.0000000000000004E-6;
                          if ($9680) {
                           break;
                          }
                          $9681 = (($evalcond148) + 24|0);
                          $9682 = +HEAPF64[$9681>>3];
                          $9683 = (+__Z5IKabsd($9682));
                          $9684 = $9683 > 5.0000000000000004E-6;
                          if ($9684) {
                           break;
                          }
                          $9685 = (($evalcond148) + 32|0);
                          $9686 = +HEAPF64[$9685>>3];
                          $9687 = (+__Z5IKabsd($9686));
                          $9688 = $9687 > 5.0000000000000004E-6;
                          if ($9688) {
                           break;
                          }
                          $9689 = (($evalcond148) + 40|0);
                          $9690 = +HEAPF64[$9689>>3];
                          $9691 = (+__Z5IKabsd($9690));
                          $9692 = $9691 > 5.0000000000000004E-6;
                          if ($9692) {
                           break;
                          }
                          $9693 = (($evalcond148) + 48|0);
                          $9694 = +HEAPF64[$9693>>3];
                          $9695 = (+__Z5IKabsd($9694));
                          $9696 = $9695 > 5.0000000000000004E-6;
                          if ($9696) {
                           break;
                          }
                          $9697 = (($evalcond148) + 56|0);
                          $9698 = +HEAPF64[$9697>>3];
                          $9699 = (+__Z5IKabsd($9698));
                          $9700 = $9699 > 5.0000000000000004E-6;
                          if ($9700) {
                           break;
                          }
                          __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos149,6);
                          __THREW__ = 0;
                          $9701 = (invoke_iii(381,($vinfos149|0),0)|0);
                          $9702 = __THREW__; __THREW__ = 0;
                          $9703 = $9702&1;
                          if ($9703) {
                           label = 1231;
                           break L1;
                          }
                          $9704 = (($9701) + 17|0);
                          HEAP8[$9704>>0] = 1;
                          $9705 = +HEAPF64[$4>>3];
                          __THREW__ = 0;
                          $9706 = (invoke_iii(381,($vinfos149|0),0)|0);
                          $9707 = __THREW__; __THREW__ = 0;
                          $9708 = $9707&1;
                          if ($9708) {
                           label = 1231;
                           break L1;
                          }
                          $9709 = (($9706) + 8|0);
                          HEAPF64[$9709>>3] = $9705;
                          $9710 = (($4) + 536|0);
                          $9711 = HEAP8[$9710>>0]|0;
                          __THREW__ = 0;
                          $9712 = (invoke_iii(381,($vinfos149|0),0)|0);
                          $9713 = __THREW__; __THREW__ = 0;
                          $9714 = $9713&1;
                          if ($9714) {
                           label = 1231;
                           break L1;
                          }
                          $9715 = (($9712) + 19|0);
                          HEAP8[$9715>>0] = $9711;
                          $9716 = (($4) + 536|0);
                          $9717 = (($9716) + 1|0);
                          $9718 = HEAP8[$9717>>0]|0;
                          __THREW__ = 0;
                          $9719 = (invoke_iii(381,($vinfos149|0),0)|0);
                          $9720 = __THREW__; __THREW__ = 0;
                          $9721 = $9720&1;
                          if ($9721) {
                           label = 1231;
                           break L1;
                          }
                          $9722 = (($9719) + 19|0);
                          $9723 = (($9722) + 1|0);
                          HEAP8[$9723>>0] = $9718;
                          $9724 = (($4) + 538|0);
                          $9725 = HEAP8[$9724>>0]|0;
                          __THREW__ = 0;
                          $9726 = (invoke_iii(381,($vinfos149|0),0)|0);
                          $9727 = __THREW__; __THREW__ = 0;
                          $9728 = $9727&1;
                          if ($9728) {
                           label = 1231;
                           break L1;
                          }
                          $9729 = (($9726) + 18|0);
                          HEAP8[$9729>>0] = $9725;
                          __THREW__ = 0;
                          $9730 = (invoke_iii(381,($vinfos149|0),1)|0);
                          $9731 = __THREW__; __THREW__ = 0;
                          $9732 = $9731&1;
                          if ($9732) {
                           label = 1231;
                           break L1;
                          }
                          $9733 = (($9730) + 17|0);
                          HEAP8[$9733>>0] = 1;
                          $9734 = (($4) + 40|0);
                          $9735 = +HEAPF64[$9734>>3];
                          __THREW__ = 0;
                          $9736 = (invoke_iii(381,($vinfos149|0),1)|0);
                          $9737 = __THREW__; __THREW__ = 0;
                          $9738 = $9737&1;
                          if ($9738) {
                           label = 1231;
                           break L1;
                          }
                          $9739 = (($9736) + 8|0);
                          HEAPF64[$9739>>3] = $9735;
                          $9740 = (($4) + 539|0);
                          $9741 = HEAP8[$9740>>0]|0;
                          __THREW__ = 0;
                          $9742 = (invoke_iii(381,($vinfos149|0),1)|0);
                          $9743 = __THREW__; __THREW__ = 0;
                          $9744 = $9743&1;
                          if ($9744) {
                           label = 1231;
                           break L1;
                          }
                          $9745 = (($9742) + 19|0);
                          HEAP8[$9745>>0] = $9741;
                          $9746 = (($4) + 539|0);
                          $9747 = (($9746) + 1|0);
                          $9748 = HEAP8[$9747>>0]|0;
                          __THREW__ = 0;
                          $9749 = (invoke_iii(381,($vinfos149|0),1)|0);
                          $9750 = __THREW__; __THREW__ = 0;
                          $9751 = $9750&1;
                          if ($9751) {
                           label = 1231;
                           break L1;
                          }
                          $9752 = (($9749) + 19|0);
                          $9753 = (($9752) + 1|0);
                          HEAP8[$9753>>0] = $9748;
                          $9754 = (($4) + 541|0);
                          $9755 = HEAP8[$9754>>0]|0;
                          __THREW__ = 0;
                          $9756 = (invoke_iii(381,($vinfos149|0),1)|0);
                          $9757 = __THREW__; __THREW__ = 0;
                          $9758 = $9757&1;
                          if ($9758) {
                           label = 1231;
                           break L1;
                          }
                          $9759 = (($9756) + 18|0);
                          HEAP8[$9759>>0] = $9755;
                          __THREW__ = 0;
                          $9760 = (invoke_iii(381,($vinfos149|0),2)|0);
                          $9761 = __THREW__; __THREW__ = 0;
                          $9762 = $9761&1;
                          if ($9762) {
                           label = 1231;
                           break L1;
                          }
                          $9763 = (($9760) + 17|0);
                          HEAP8[$9763>>0] = 1;
                          $9764 = (($4) + 80|0);
                          $9765 = +HEAPF64[$9764>>3];
                          __THREW__ = 0;
                          $9766 = (invoke_iii(381,($vinfos149|0),2)|0);
                          $9767 = __THREW__; __THREW__ = 0;
                          $9768 = $9767&1;
                          if ($9768) {
                           label = 1231;
                           break L1;
                          }
                          $9769 = (($9766) + 8|0);
                          HEAPF64[$9769>>3] = $9765;
                          $9770 = (($4) + 542|0);
                          $9771 = HEAP8[$9770>>0]|0;
                          __THREW__ = 0;
                          $9772 = (invoke_iii(381,($vinfos149|0),2)|0);
                          $9773 = __THREW__; __THREW__ = 0;
                          $9774 = $9773&1;
                          if ($9774) {
                           label = 1231;
                           break L1;
                          }
                          $9775 = (($9772) + 19|0);
                          HEAP8[$9775>>0] = $9771;
                          $9776 = (($4) + 542|0);
                          $9777 = (($9776) + 1|0);
                          $9778 = HEAP8[$9777>>0]|0;
                          __THREW__ = 0;
                          $9779 = (invoke_iii(381,($vinfos149|0),2)|0);
                          $9780 = __THREW__; __THREW__ = 0;
                          $9781 = $9780&1;
                          if ($9781) {
                           label = 1231;
                           break L1;
                          }
                          $9782 = (($9779) + 19|0);
                          $9783 = (($9782) + 1|0);
                          HEAP8[$9783>>0] = $9778;
                          $9784 = (($4) + 544|0);
                          $9785 = HEAP8[$9784>>0]|0;
                          __THREW__ = 0;
                          $9786 = (invoke_iii(381,($vinfos149|0),2)|0);
                          $9787 = __THREW__; __THREW__ = 0;
                          $9788 = $9787&1;
                          if ($9788) {
                           label = 1231;
                           break L1;
                          }
                          $9789 = (($9786) + 18|0);
                          HEAP8[$9789>>0] = $9785;
                          __THREW__ = 0;
                          $9790 = (invoke_iii(381,($vinfos149|0),3)|0);
                          $9791 = __THREW__; __THREW__ = 0;
                          $9792 = $9791&1;
                          if ($9792) {
                           label = 1231;
                           break L1;
                          }
                          $9793 = (($9790) + 17|0);
                          HEAP8[$9793>>0] = 1;
                          $9794 = (($4) + 120|0);
                          $9795 = +HEAPF64[$9794>>3];
                          __THREW__ = 0;
                          $9796 = (invoke_iii(381,($vinfos149|0),3)|0);
                          $9797 = __THREW__; __THREW__ = 0;
                          $9798 = $9797&1;
                          if ($9798) {
                           label = 1231;
                           break L1;
                          }
                          $9799 = (($9796) + 8|0);
                          HEAPF64[$9799>>3] = $9795;
                          $9800 = (($4) + 545|0);
                          $9801 = HEAP8[$9800>>0]|0;
                          __THREW__ = 0;
                          $9802 = (invoke_iii(381,($vinfos149|0),3)|0);
                          $9803 = __THREW__; __THREW__ = 0;
                          $9804 = $9803&1;
                          if ($9804) {
                           label = 1231;
                           break L1;
                          }
                          $9805 = (($9802) + 19|0);
                          HEAP8[$9805>>0] = $9801;
                          $9806 = (($4) + 545|0);
                          $9807 = (($9806) + 1|0);
                          $9808 = HEAP8[$9807>>0]|0;
                          __THREW__ = 0;
                          $9809 = (invoke_iii(381,($vinfos149|0),3)|0);
                          $9810 = __THREW__; __THREW__ = 0;
                          $9811 = $9810&1;
                          if ($9811) {
                           label = 1231;
                           break L1;
                          }
                          $9812 = (($9809) + 19|0);
                          $9813 = (($9812) + 1|0);
                          HEAP8[$9813>>0] = $9808;
                          $9814 = (($4) + 547|0);
                          $9815 = HEAP8[$9814>>0]|0;
                          __THREW__ = 0;
                          $9816 = (invoke_iii(381,($vinfos149|0),3)|0);
                          $9817 = __THREW__; __THREW__ = 0;
                          $9818 = $9817&1;
                          if ($9818) {
                           label = 1231;
                           break L1;
                          }
                          $9819 = (($9816) + 18|0);
                          HEAP8[$9819>>0] = $9815;
                          __THREW__ = 0;
                          $9820 = (invoke_iii(381,($vinfos149|0),4)|0);
                          $9821 = __THREW__; __THREW__ = 0;
                          $9822 = $9821&1;
                          if ($9822) {
                           label = 1231;
                           break L1;
                          }
                          $9823 = (($9820) + 17|0);
                          HEAP8[$9823>>0] = 1;
                          $9824 = (($4) + 160|0);
                          $9825 = +HEAPF64[$9824>>3];
                          __THREW__ = 0;
                          $9826 = (invoke_iii(381,($vinfos149|0),4)|0);
                          $9827 = __THREW__; __THREW__ = 0;
                          $9828 = $9827&1;
                          if ($9828) {
                           label = 1231;
                           break L1;
                          }
                          $9829 = (($9826) + 8|0);
                          HEAPF64[$9829>>3] = $9825;
                          $9830 = (($4) + 548|0);
                          $9831 = HEAP8[$9830>>0]|0;
                          __THREW__ = 0;
                          $9832 = (invoke_iii(381,($vinfos149|0),4)|0);
                          $9833 = __THREW__; __THREW__ = 0;
                          $9834 = $9833&1;
                          if ($9834) {
                           label = 1231;
                           break L1;
                          }
                          $9835 = (($9832) + 19|0);
                          HEAP8[$9835>>0] = $9831;
                          $9836 = (($4) + 548|0);
                          $9837 = (($9836) + 1|0);
                          $9838 = HEAP8[$9837>>0]|0;
                          __THREW__ = 0;
                          $9839 = (invoke_iii(381,($vinfos149|0),4)|0);
                          $9840 = __THREW__; __THREW__ = 0;
                          $9841 = $9840&1;
                          if ($9841) {
                           label = 1231;
                           break L1;
                          }
                          $9842 = (($9839) + 19|0);
                          $9843 = (($9842) + 1|0);
                          HEAP8[$9843>>0] = $9838;
                          $9844 = (($4) + 550|0);
                          $9845 = HEAP8[$9844>>0]|0;
                          __THREW__ = 0;
                          $9846 = (invoke_iii(381,($vinfos149|0),4)|0);
                          $9847 = __THREW__; __THREW__ = 0;
                          $9848 = $9847&1;
                          if ($9848) {
                           label = 1231;
                           break L1;
                          }
                          $9849 = (($9846) + 18|0);
                          HEAP8[$9849>>0] = $9845;
                          __THREW__ = 0;
                          $9850 = (invoke_iii(381,($vinfos149|0),5)|0);
                          $9851 = __THREW__; __THREW__ = 0;
                          $9852 = $9851&1;
                          if ($9852) {
                           label = 1231;
                           break L1;
                          }
                          $9853 = (($9850) + 17|0);
                          HEAP8[$9853>>0] = 1;
                          $9854 = (($4) + 200|0);
                          $9855 = +HEAPF64[$9854>>3];
                          __THREW__ = 0;
                          $9856 = (invoke_iii(381,($vinfos149|0),5)|0);
                          $9857 = __THREW__; __THREW__ = 0;
                          $9858 = $9857&1;
                          if ($9858) {
                           label = 1231;
                           break L1;
                          }
                          $9859 = (($9856) + 8|0);
                          HEAPF64[$9859>>3] = $9855;
                          $9860 = (($4) + 551|0);
                          $9861 = HEAP8[$9860>>0]|0;
                          __THREW__ = 0;
                          $9862 = (invoke_iii(381,($vinfos149|0),5)|0);
                          $9863 = __THREW__; __THREW__ = 0;
                          $9864 = $9863&1;
                          if ($9864) {
                           label = 1231;
                           break L1;
                          }
                          $9865 = (($9862) + 19|0);
                          HEAP8[$9865>>0] = $9861;
                          $9866 = (($4) + 551|0);
                          $9867 = (($9866) + 1|0);
                          $9868 = HEAP8[$9867>>0]|0;
                          __THREW__ = 0;
                          $9869 = (invoke_iii(381,($vinfos149|0),5)|0);
                          $9870 = __THREW__; __THREW__ = 0;
                          $9871 = $9870&1;
                          if ($9871) {
                           label = 1231;
                           break L1;
                          }
                          $9872 = (($9869) + 19|0);
                          $9873 = (($9872) + 1|0);
                          HEAP8[$9873>>0] = $9868;
                          $9874 = (($4) + 553|0);
                          $9875 = HEAP8[$9874>>0]|0;
                          __THREW__ = 0;
                          $9876 = (invoke_iii(381,($vinfos149|0),5)|0);
                          $9877 = __THREW__; __THREW__ = 0;
                          $9878 = $9877&1;
                          if ($9878) {
                           label = 1231;
                           break L1;
                          }
                          $9879 = (($9876) + 18|0);
                          HEAP8[$9879>>0] = $9875;
                          __THREW__ = 0;
                          invoke_vii(382,($vfree150|0),0);
                          $9880 = __THREW__; __THREW__ = 0;
                          $9881 = $9880&1;
                          if ($9881) {
                           label = 1231;
                           break L1;
                          }
                          $9882 = $1;
                          $9883 = HEAP32[$9882>>2]|0;
                          $9884 = (($9883) + 8|0);
                          $9885 = HEAP32[$9884>>2]|0;
                          __THREW__ = 0;
                          (invoke_iiii($9885|0,($9882|0),($vinfos149|0),($vfree150|0))|0);
                          $9886 = __THREW__; __THREW__ = 0;
                          $9887 = $9886&1;
                          if ($9887) {
                           label = 1232;
                           break L1;
                          }
                          __THREW__ = 0;
                          invoke_vi(366,($vfree150|0));
                          $9888 = __THREW__; __THREW__ = 0;
                          $9889 = $9888&1;
                          if ($9889) {
                           label = 1231;
                           break L1;
                          }
                          __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos149);
                          break L547;
                         }
                        } while(0);
                       } else {
                       }
                      } while(0);
                      $9890 = $ij5146;
                      $9891 = (($9890) + 1)|0;
                      $ij5146 = $9891;
                     }
                     label = 1237;
                    } else {
                     label = 1237;
                    }
                   } while(0);
                   if ((label|0) == 1237) {
                    label = 0;
                   }
                   $9900 = $bgotonextstatement141;
                   $9901 = $9900&1;
                   if ($9901) {
                    $bgotonextstatement151 = 1;
                    $bgotonextstatement151 = 0;
                    $9902 = $bgotonextstatement151;
                    $9903 = $9902&1;
                    if ($9903) {
                    }
                   }
                  }
                 }
                }
               }
              } else {
               ;HEAP8[$j5valid164+0>>0]=0|0;
               $10506 = (($4) + 553|0);
               HEAP8[$10506>>0] = 1;
               $10507 = (($4) + 176|0);
               $10508 = +HEAPF64[$10507>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x326,$10508,-1);
               $10509 = (($x326) + 8|0);
               $10510 = HEAP8[$10509>>0]|0;
               $10511 = $10510&1;
               if (!($10511)) {
                break L49;
               }
               $10512 = (($4) + 408|0);
               $10513 = +HEAPF64[$10512>>3];
               $10514 = -1.0 * $10513;
               $10515 = +HEAPF64[$x326>>3];
               $10516 = $10514 * $10515;
               $10517 = (+__Z5IKabsd($10516));
               $10518 = $10517 < 1.9999999999999999E-6;
               do {
                if ($10518) {
                 $10519 = (($4) + 128|0);
                 $10520 = +HEAPF64[$10519>>3];
                 $10521 = -1.0 * $10520;
                 $10522 = (($4) + 264|0);
                 $10523 = +HEAPF64[$10522>>3];
                 $10524 = $10521 * $10523;
                 $10525 = (($4) + 336|0);
                 $10526 = +HEAPF64[$10525>>3];
                 $10527 = -1.0 * $10526;
                 $10528 = (($4) + 136|0);
                 $10529 = +HEAPF64[$10528>>3];
                 $10530 = $10527 * $10529;
                 $10531 = $10524 + $10530;
                 $10532 = (+__Z5IKabsd($10531));
                 $10533 = $10532 < 1.9999999999999999E-6;
                 if (!($10533)) {
                  break;
                 }
                 $10534 = (($4) + 408|0);
                 $10535 = +HEAPF64[$10534>>3];
                 $10536 = -1.0 * $10535;
                 $10537 = +HEAPF64[$x326>>3];
                 $10538 = $10536 * $10537;
                 $10539 = (+__Z5IKsqrd($10538));
                 $10540 = (($4) + 128|0);
                 $10541 = +HEAPF64[$10540>>3];
                 $10542 = -1.0 * $10541;
                 $10543 = (($4) + 264|0);
                 $10544 = +HEAPF64[$10543>>3];
                 $10545 = $10542 * $10544;
                 $10546 = (($4) + 336|0);
                 $10547 = +HEAPF64[$10546>>3];
                 $10548 = -1.0 * $10547;
                 $10549 = (($4) + 136|0);
                 $10550 = +HEAPF64[$10549>>3];
                 $10551 = $10548 * $10550;
                 $10552 = $10545 + $10551;
                 $10553 = (+__Z5IKsqrd($10552));
                 $10554 = $10539 + $10553;
                 $10555 = $10554 - 1.0;
                 $10556 = (+__Z5IKabsd($10555));
                 $10557 = $10556 <= 1.9999999999999999E-6;
                 if (!($10557)) {
                  break;
                 }
                 break L49;
                }
               } while(0);
               $10558 = (($4) + 408|0);
               $10559 = +HEAPF64[$10558>>3];
               $10560 = -1.0 * $10559;
               $10561 = +HEAPF64[$x326>>3];
               $10562 = $10560 * $10561;
               $10563 = (($4) + 128|0);
               $10564 = +HEAPF64[$10563>>3];
               $10565 = -1.0 * $10564;
               $10566 = (($4) + 264|0);
               $10567 = +HEAPF64[$10566>>3];
               $10568 = $10565 * $10567;
               $10569 = (($4) + 336|0);
               $10570 = +HEAPF64[$10569>>3];
               $10571 = -1.0 * $10570;
               $10572 = (($4) + 136|0);
               $10573 = +HEAPF64[$10572>>3];
               $10574 = $10571 * $10573;
               $10575 = $10568 + $10574;
               $10576 = (+__Z7IKatan2dd($10562,$10575));
               HEAPF64[$j5array161>>3] = $10576;
               $10577 = +HEAPF64[$j5array161>>3];
               $10578 = (+__Z5IKsind($10577));
               HEAPF64[$sj5array163>>3] = $10578;
               $10579 = +HEAPF64[$j5array161>>3];
               $10580 = (+__Z5IKcosd($10579));
               HEAPF64[$cj5array162>>3] = $10580;
               $10581 = +HEAPF64[$j5array161>>3];
               $10582 = $10581 > 3.14159265358979;
               if ($10582) {
                $10583 = +HEAPF64[$j5array161>>3];
                $10584 = $10583 - 6.2831853071795898;
                HEAPF64[$j5array161>>3] = $10584;
               } else {
                $10585 = +HEAPF64[$j5array161>>3];
                $10586 = $10585 < -3.14159265358979;
                if ($10586) {
                 $10587 = +HEAPF64[$j5array161>>3];
                 $10588 = $10587 + 6.2831853071795898;
                 HEAPF64[$j5array161>>3] = $10588;
                }
               }
               HEAP8[$j5valid164>>0] = 1;
               $ij5165 = 0;
               while(1) {
                $10589 = $ij5165;
                $10590 = ($10589|0)<(1);
                if (!($10590)) {
                 break;
                }
                $10591 = $ij5165;
                $10592 = (($j5valid164) + ($10591)|0);
                $10593 = HEAP8[$10592>>0]|0;
                $10594 = $10593&1;
                L640: do {
                 if ($10594) {
                  $10595 = $ij5165;
                  $10596 = $10595&255;
                  $10597 = (($4) + 551|0);
                  HEAP8[$10597>>0] = $10596;
                  $10598 = (($4) + 551|0);
                  $10599 = (($10598) + 1|0);
                  HEAP8[$10599>>0] = -1;
                  $10600 = $ij5165;
                  $10601 = (($10600) + 1)|0;
                  $iij5166 = $10601;
                  L643: while(1) {
                   $10602 = $iij5166;
                   $10603 = ($10602|0)<(1);
                   if (!($10603)) {
                    break;
                   }
                   $10604 = $iij5166;
                   $10605 = (($j5valid164) + ($10604)|0);
                   $10606 = HEAP8[$10605>>0]|0;
                   $10607 = $10606&1;
                   do {
                    if ($10607) {
                     $10608 = $ij5165;
                     $10609 = (($cj5array162) + ($10608<<3)|0);
                     $10610 = +HEAPF64[$10609>>3];
                     $10611 = $iij5166;
                     $10612 = (($cj5array162) + ($10611<<3)|0);
                     $10613 = +HEAPF64[$10612>>3];
                     $10614 = $10610 - $10613;
                     $10615 = (+__Z5IKabsd($10614));
                     $10616 = $10615 < 9.9999999999999995E-7;
                     if (!($10616)) {
                      break;
                     }
                     $10617 = $ij5165;
                     $10618 = (($sj5array163) + ($10617<<3)|0);
                     $10619 = +HEAPF64[$10618>>3];
                     $10620 = $iij5166;
                     $10621 = (($sj5array163) + ($10620<<3)|0);
                     $10622 = +HEAPF64[$10621>>3];
                     $10623 = $10619 - $10622;
                     $10624 = (+__Z5IKabsd($10623));
                     $10625 = $10624 < 9.9999999999999995E-7;
                     if ($10625) {
                      label = 1348;
                      break L643;
                     }
                    }
                   } while(0);
                   $10632 = $iij5166;
                   $10633 = (($10632) + 1)|0;
                   $iij5166 = $10633;
                  }
                  if ((label|0) == 1348) {
                   label = 0;
                   $10626 = $iij5166;
                   $10627 = (($j5valid164) + ($10626)|0);
                   HEAP8[$10627>>0] = 0;
                   $10628 = $iij5166;
                   $10629 = $10628&255;
                   $10630 = (($4) + 551|0);
                   $10631 = (($10630) + 1|0);
                   HEAP8[$10631>>0] = $10629;
                  }
                  $10634 = $ij5165;
                  $10635 = (($j5array161) + ($10634<<3)|0);
                  $10636 = +HEAPF64[$10635>>3];
                  $10637 = (($4) + 200|0);
                  HEAPF64[$10637>>3] = $10636;
                  $10638 = $ij5165;
                  $10639 = (($cj5array162) + ($10638<<3)|0);
                  $10640 = +HEAPF64[$10639>>3];
                  $10641 = (($4) + 208|0);
                  HEAPF64[$10641>>3] = $10640;
                  $10642 = $ij5165;
                  $10643 = (($sj5array163) + ($10642<<3)|0);
                  $10644 = +HEAPF64[$10643>>3];
                  $10645 = (($4) + 216|0);
                  HEAPF64[$10645>>3] = $10644;
                  $10646 = (($4) + 200|0);
                  $10647 = +HEAPF64[$10646>>3];
                  $10648 = (+__Z5IKsind($10647));
                  $x327 = $10648;
                  $10649 = (($4) + 200|0);
                  $10650 = +HEAPF64[$10649>>3];
                  $10651 = (+__Z5IKcosd($10650));
                  $x328 = $10651;
                  $10652 = (($4) + 168|0);
                  $10653 = +HEAPF64[$10652>>3];
                  $10654 = (($4) + 136|0);
                  $10655 = +HEAPF64[$10654>>3];
                  $10656 = $10653 * $10655;
                  $x329 = $10656;
                  $10657 = (($4) + 128|0);
                  $10658 = +HEAPF64[$10657>>3];
                  $10659 = (($4) + 312|0);
                  $10660 = +HEAPF64[$10659>>3];
                  $10661 = $10658 * $10660;
                  $x330 = $10661;
                  $10662 = (($4) + 264|0);
                  $10663 = +HEAPF64[$10662>>3];
                  $10664 = 1.0 * $10663;
                  $x331 = $10664;
                  $10665 = (($4) + 168|0);
                  $10666 = +HEAPF64[$10665>>3];
                  $10667 = 1.0 * $10666;
                  $x332 = $10667;
                  $10668 = (($4) + 240|0);
                  $10669 = +HEAPF64[$10668>>3];
                  $10670 = 1.0 * $10669;
                  $x333 = $10670;
                  $10671 = (($4) + 128|0);
                  $10672 = +HEAPF64[$10671>>3];
                  $10673 = (($4) + 336|0);
                  $10674 = +HEAPF64[$10673>>3];
                  $10675 = $10672 * $10674;
                  $x334 = $10675;
                  $10676 = (($4) + 128|0);
                  $10677 = +HEAPF64[$10676>>3];
                  $10678 = $x328;
                  $10679 = $10677 * $10678;
                  $x335 = $10679;
                  $10680 = (($4) + 128|0);
                  $10681 = +HEAPF64[$10680>>3];
                  $10682 = $x327;
                  $10683 = $10681 * $10682;
                  $x336 = $10683;
                  $10684 = $x328;
                  $10685 = 1.0 * $10684;
                  $x337 = $10685;
                  $10686 = (($4) + 176|0);
                  $10687 = +HEAPF64[$10686>>3];
                  $10688 = $x327;
                  $10689 = $10687 * $10688;
                  $10690 = (($4) + 408|0);
                  $10691 = +HEAPF64[$10690>>3];
                  $10692 = $10689 + $10691;
                  HEAPF64[$evalcond167>>3] = $10692;
                  $10693 = (($4) + 176|0);
                  $10694 = +HEAPF64[$10693>>3];
                  $10695 = -1.0 * $10694;
                  $10696 = $x337;
                  $10697 = $10695 * $10696;
                  $10698 = (($4) + 384|0);
                  $10699 = +HEAPF64[$10698>>3];
                  $10700 = $10697 + $10699;
                  $10701 = (($evalcond167) + 8|0);
                  HEAPF64[$10701>>3] = $10700;
                  $10702 = (($4) + 312|0);
                  $10703 = +HEAPF64[$10702>>3];
                  $10704 = (($4) + 136|0);
                  $10705 = +HEAPF64[$10704>>3];
                  $10706 = $10703 * $10705;
                  $10707 = $x327;
                  $10708 = $10706 + $10707;
                  $10709 = (($4) + 128|0);
                  $10710 = +HEAPF64[$10709>>3];
                  $10711 = (($4) + 240|0);
                  $10712 = +HEAPF64[$10711>>3];
                  $10713 = $10710 * $10712;
                  $10714 = $10708 + $10713;
                  $10715 = (($evalcond167) + 16|0);
                  HEAPF64[$10715>>3] = $10714;
                  $10716 = (($4) + 336|0);
                  $10717 = +HEAPF64[$10716>>3];
                  $10718 = (($4) + 136|0);
                  $10719 = +HEAPF64[$10718>>3];
                  $10720 = $10717 * $10719;
                  $10721 = $x328;
                  $10722 = $10720 + $10721;
                  $10723 = (($4) + 128|0);
                  $10724 = +HEAPF64[$10723>>3];
                  $10725 = (($4) + 264|0);
                  $10726 = +HEAPF64[$10725>>3];
                  $10727 = $10724 * $10726;
                  $10728 = $10722 + $10727;
                  $10729 = (($evalcond167) + 24|0);
                  HEAPF64[$10729>>3] = $10728;
                  $10730 = $x328;
                  $10731 = $x329;
                  $10732 = $10730 * $10731;
                  $10733 = $x336;
                  $10734 = $10732 + $10733;
                  $10735 = (($4) + 240|0);
                  $10736 = +HEAPF64[$10735>>3];
                  $10737 = $10734 + $10736;
                  $10738 = (($evalcond167) + 32|0);
                  HEAPF64[$10738>>3] = $10737;
                  $10739 = (($4) + 136|0);
                  $10740 = +HEAPF64[$10739>>3];
                  $10741 = $x328;
                  $10742 = $10740 * $10741;
                  $10743 = (($4) + 168|0);
                  $10744 = +HEAPF64[$10743>>3];
                  $10745 = $x336;
                  $10746 = $10744 * $10745;
                  $10747 = $10742 + $10746;
                  $10748 = (($4) + 336|0);
                  $10749 = +HEAPF64[$10748>>3];
                  $10750 = $10747 + $10749;
                  $10751 = (($evalcond167) + 40|0);
                  HEAPF64[$10751>>3] = $10750;
                  $10752 = (($4) + 136|0);
                  $10753 = +HEAPF64[$10752>>3];
                  $10754 = -1.0 * $10753;
                  $10755 = $x331;
                  $10756 = $10754 * $10755;
                  $10757 = $x334;
                  $10758 = $10756 + $10757;
                  $10759 = (($4) + 168|0);
                  $10760 = +HEAPF64[$10759>>3];
                  $10761 = $x327;
                  $10762 = $10760 * $10761;
                  $10763 = $10758 + $10762;
                  $10764 = (($evalcond167) + 48|0);
                  HEAPF64[$10764>>3] = $10763;
                  $10765 = $x335;
                  $10766 = $x327;
                  $10767 = -1.0 * $10766;
                  $10768 = $x329;
                  $10769 = $10767 * $10768;
                  $10770 = $10765 + $10769;
                  $10771 = (($4) + 264|0);
                  $10772 = +HEAPF64[$10771>>3];
                  $10773 = $10770 + $10772;
                  $10774 = (($evalcond167) + 56|0);
                  HEAPF64[$10774>>3] = $10773;
                  $10775 = (($4) + 136|0);
                  $10776 = +HEAPF64[$10775>>3];
                  $10777 = $x327;
                  $10778 = $10776 * $10777;
                  $10779 = $x332;
                  $10780 = -1.0 * $10779;
                  $10781 = $x335;
                  $10782 = $10780 * $10781;
                  $10783 = $10778 + $10782;
                  $10784 = (($4) + 312|0);
                  $10785 = +HEAPF64[$10784>>3];
                  $10786 = $10783 + $10785;
                  $10787 = (($evalcond167) + 64|0);
                  HEAPF64[$10787>>3] = $10786;
                  $10788 = (($4) + 136|0);
                  $10789 = +HEAPF64[$10788>>3];
                  $10790 = -1.0 * $10789;
                  $10791 = $x333;
                  $10792 = $10790 * $10791;
                  $10793 = $x328;
                  $10794 = -1.0 * $10793;
                  $10795 = $x332;
                  $10796 = $10794 * $10795;
                  $10797 = $10792 + $10796;
                  $10798 = $x330;
                  $10799 = $10797 + $10798;
                  $10800 = (($evalcond167) + 72|0);
                  HEAPF64[$10800>>3] = $10799;
                  $10801 = $x329;
                  $10802 = -1.0 * $10801;
                  $10803 = $x331;
                  $10804 = $10802 * $10803;
                  $10805 = $x327;
                  $10806 = $10804 + $10805;
                  $10807 = (($4) + 168|0);
                  $10808 = +HEAPF64[$10807>>3];
                  $10809 = $x334;
                  $10810 = $10808 * $10809;
                  $10811 = $10806 + $10810;
                  $10812 = (($4) + 408|0);
                  $10813 = +HEAPF64[$10812>>3];
                  $10814 = (($4) + 176|0);
                  $10815 = +HEAPF64[$10814>>3];
                  $10816 = $10813 * $10815;
                  $10817 = $10811 + $10816;
                  $10818 = (($evalcond167) + 80|0);
                  HEAPF64[$10818>>3] = $10817;
                  $10819 = (($4) + 384|0);
                  $10820 = +HEAPF64[$10819>>3];
                  $10821 = (($4) + 176|0);
                  $10822 = +HEAPF64[$10821>>3];
                  $10823 = $10820 * $10822;
                  $10824 = $x329;
                  $10825 = -1.0 * $10824;
                  $10826 = $x333;
                  $10827 = $10825 * $10826;
                  $10828 = $10823 + $10827;
                  $10829 = $x337;
                  $10830 = -1.0 * $10829;
                  $10831 = $10828 + $10830;
                  $10832 = (($4) + 168|0);
                  $10833 = +HEAPF64[$10832>>3];
                  $10834 = $x330;
                  $10835 = $10833 * $10834;
                  $10836 = $10831 + $10835;
                  $10837 = (($evalcond167) + 88|0);
                  HEAPF64[$10837>>3] = $10836;
                  $10838 = +HEAPF64[$evalcond167>>3];
                  $10839 = (+__Z5IKabsd($10838));
                  $10840 = $10839 > 5.0000000000000004E-6;
                  do {
                   if (!($10840)) {
                    $10841 = (($evalcond167) + 8|0);
                    $10842 = +HEAPF64[$10841>>3];
                    $10843 = (+__Z5IKabsd($10842));
                    $10844 = $10843 > 5.0000000000000004E-6;
                    if ($10844) {
                     break;
                    }
                    $10845 = (($evalcond167) + 16|0);
                    $10846 = +HEAPF64[$10845>>3];
                    $10847 = (+__Z5IKabsd($10846));
                    $10848 = $10847 > 5.0000000000000004E-6;
                    if ($10848) {
                     break;
                    }
                    $10849 = (($evalcond167) + 24|0);
                    $10850 = +HEAPF64[$10849>>3];
                    $10851 = (+__Z5IKabsd($10850));
                    $10852 = $10851 > 5.0000000000000004E-6;
                    if ($10852) {
                     break;
                    }
                    $10853 = (($evalcond167) + 32|0);
                    $10854 = +HEAPF64[$10853>>3];
                    $10855 = (+__Z5IKabsd($10854));
                    $10856 = $10855 > 5.0000000000000004E-6;
                    if ($10856) {
                     break;
                    }
                    $10857 = (($evalcond167) + 40|0);
                    $10858 = +HEAPF64[$10857>>3];
                    $10859 = (+__Z5IKabsd($10858));
                    $10860 = $10859 > 5.0000000000000004E-6;
                    if ($10860) {
                     break;
                    }
                    $10861 = (($evalcond167) + 48|0);
                    $10862 = +HEAPF64[$10861>>3];
                    $10863 = (+__Z5IKabsd($10862));
                    $10864 = $10863 > 5.0000000000000004E-6;
                    if ($10864) {
                     break;
                    }
                    $10865 = (($evalcond167) + 56|0);
                    $10866 = +HEAPF64[$10865>>3];
                    $10867 = (+__Z5IKabsd($10866));
                    $10868 = $10867 > 5.0000000000000004E-6;
                    if ($10868) {
                     break;
                    }
                    $10869 = (($evalcond167) + 64|0);
                    $10870 = +HEAPF64[$10869>>3];
                    $10871 = (+__Z5IKabsd($10870));
                    $10872 = $10871 > 5.0000000000000004E-6;
                    if ($10872) {
                     break;
                    }
                    $10873 = (($evalcond167) + 72|0);
                    $10874 = +HEAPF64[$10873>>3];
                    $10875 = (+__Z5IKabsd($10874));
                    $10876 = $10875 > 5.0000000000000004E-6;
                    if ($10876) {
                     break;
                    }
                    $10877 = (($evalcond167) + 80|0);
                    $10878 = +HEAPF64[$10877>>3];
                    $10879 = (+__Z5IKabsd($10878));
                    $10880 = $10879 > 5.0000000000000004E-6;
                    if ($10880) {
                     break;
                    }
                    $10881 = (($evalcond167) + 88|0);
                    $10882 = +HEAPF64[$10881>>3];
                    $10883 = (+__Z5IKabsd($10882));
                    $10884 = $10883 > 5.0000000000000004E-6;
                    if ($10884) {
                     break;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos168,6);
                    __THREW__ = 0;
                    $10885 = (invoke_iii(381,($vinfos168|0),0)|0);
                    $10886 = __THREW__; __THREW__ = 0;
                    $10887 = $10886&1;
                    if ($10887) {
                     label = 1399;
                     break L1;
                    }
                    $10888 = (($10885) + 17|0);
                    HEAP8[$10888>>0] = 1;
                    $10889 = +HEAPF64[$4>>3];
                    __THREW__ = 0;
                    $10890 = (invoke_iii(381,($vinfos168|0),0)|0);
                    $10891 = __THREW__; __THREW__ = 0;
                    $10892 = $10891&1;
                    if ($10892) {
                     label = 1399;
                     break L1;
                    }
                    $10893 = (($10890) + 8|0);
                    HEAPF64[$10893>>3] = $10889;
                    $10894 = (($4) + 536|0);
                    $10895 = HEAP8[$10894>>0]|0;
                    __THREW__ = 0;
                    $10896 = (invoke_iii(381,($vinfos168|0),0)|0);
                    $10897 = __THREW__; __THREW__ = 0;
                    $10898 = $10897&1;
                    if ($10898) {
                     label = 1399;
                     break L1;
                    }
                    $10899 = (($10896) + 19|0);
                    HEAP8[$10899>>0] = $10895;
                    $10900 = (($4) + 536|0);
                    $10901 = (($10900) + 1|0);
                    $10902 = HEAP8[$10901>>0]|0;
                    __THREW__ = 0;
                    $10903 = (invoke_iii(381,($vinfos168|0),0)|0);
                    $10904 = __THREW__; __THREW__ = 0;
                    $10905 = $10904&1;
                    if ($10905) {
                     label = 1399;
                     break L1;
                    }
                    $10906 = (($10903) + 19|0);
                    $10907 = (($10906) + 1|0);
                    HEAP8[$10907>>0] = $10902;
                    $10908 = (($4) + 538|0);
                    $10909 = HEAP8[$10908>>0]|0;
                    __THREW__ = 0;
                    $10910 = (invoke_iii(381,($vinfos168|0),0)|0);
                    $10911 = __THREW__; __THREW__ = 0;
                    $10912 = $10911&1;
                    if ($10912) {
                     label = 1399;
                     break L1;
                    }
                    $10913 = (($10910) + 18|0);
                    HEAP8[$10913>>0] = $10909;
                    __THREW__ = 0;
                    $10914 = (invoke_iii(381,($vinfos168|0),1)|0);
                    $10915 = __THREW__; __THREW__ = 0;
                    $10916 = $10915&1;
                    if ($10916) {
                     label = 1399;
                     break L1;
                    }
                    $10917 = (($10914) + 17|0);
                    HEAP8[$10917>>0] = 1;
                    $10918 = (($4) + 40|0);
                    $10919 = +HEAPF64[$10918>>3];
                    __THREW__ = 0;
                    $10920 = (invoke_iii(381,($vinfos168|0),1)|0);
                    $10921 = __THREW__; __THREW__ = 0;
                    $10922 = $10921&1;
                    if ($10922) {
                     label = 1399;
                     break L1;
                    }
                    $10923 = (($10920) + 8|0);
                    HEAPF64[$10923>>3] = $10919;
                    $10924 = (($4) + 539|0);
                    $10925 = HEAP8[$10924>>0]|0;
                    __THREW__ = 0;
                    $10926 = (invoke_iii(381,($vinfos168|0),1)|0);
                    $10927 = __THREW__; __THREW__ = 0;
                    $10928 = $10927&1;
                    if ($10928) {
                     label = 1399;
                     break L1;
                    }
                    $10929 = (($10926) + 19|0);
                    HEAP8[$10929>>0] = $10925;
                    $10930 = (($4) + 539|0);
                    $10931 = (($10930) + 1|0);
                    $10932 = HEAP8[$10931>>0]|0;
                    __THREW__ = 0;
                    $10933 = (invoke_iii(381,($vinfos168|0),1)|0);
                    $10934 = __THREW__; __THREW__ = 0;
                    $10935 = $10934&1;
                    if ($10935) {
                     label = 1399;
                     break L1;
                    }
                    $10936 = (($10933) + 19|0);
                    $10937 = (($10936) + 1|0);
                    HEAP8[$10937>>0] = $10932;
                    $10938 = (($4) + 541|0);
                    $10939 = HEAP8[$10938>>0]|0;
                    __THREW__ = 0;
                    $10940 = (invoke_iii(381,($vinfos168|0),1)|0);
                    $10941 = __THREW__; __THREW__ = 0;
                    $10942 = $10941&1;
                    if ($10942) {
                     label = 1399;
                     break L1;
                    }
                    $10943 = (($10940) + 18|0);
                    HEAP8[$10943>>0] = $10939;
                    __THREW__ = 0;
                    $10944 = (invoke_iii(381,($vinfos168|0),2)|0);
                    $10945 = __THREW__; __THREW__ = 0;
                    $10946 = $10945&1;
                    if ($10946) {
                     label = 1399;
                     break L1;
                    }
                    $10947 = (($10944) + 17|0);
                    HEAP8[$10947>>0] = 1;
                    $10948 = (($4) + 80|0);
                    $10949 = +HEAPF64[$10948>>3];
                    __THREW__ = 0;
                    $10950 = (invoke_iii(381,($vinfos168|0),2)|0);
                    $10951 = __THREW__; __THREW__ = 0;
                    $10952 = $10951&1;
                    if ($10952) {
                     label = 1399;
                     break L1;
                    }
                    $10953 = (($10950) + 8|0);
                    HEAPF64[$10953>>3] = $10949;
                    $10954 = (($4) + 542|0);
                    $10955 = HEAP8[$10954>>0]|0;
                    __THREW__ = 0;
                    $10956 = (invoke_iii(381,($vinfos168|0),2)|0);
                    $10957 = __THREW__; __THREW__ = 0;
                    $10958 = $10957&1;
                    if ($10958) {
                     label = 1399;
                     break L1;
                    }
                    $10959 = (($10956) + 19|0);
                    HEAP8[$10959>>0] = $10955;
                    $10960 = (($4) + 542|0);
                    $10961 = (($10960) + 1|0);
                    $10962 = HEAP8[$10961>>0]|0;
                    __THREW__ = 0;
                    $10963 = (invoke_iii(381,($vinfos168|0),2)|0);
                    $10964 = __THREW__; __THREW__ = 0;
                    $10965 = $10964&1;
                    if ($10965) {
                     label = 1399;
                     break L1;
                    }
                    $10966 = (($10963) + 19|0);
                    $10967 = (($10966) + 1|0);
                    HEAP8[$10967>>0] = $10962;
                    $10968 = (($4) + 544|0);
                    $10969 = HEAP8[$10968>>0]|0;
                    __THREW__ = 0;
                    $10970 = (invoke_iii(381,($vinfos168|0),2)|0);
                    $10971 = __THREW__; __THREW__ = 0;
                    $10972 = $10971&1;
                    if ($10972) {
                     label = 1399;
                     break L1;
                    }
                    $10973 = (($10970) + 18|0);
                    HEAP8[$10973>>0] = $10969;
                    __THREW__ = 0;
                    $10974 = (invoke_iii(381,($vinfos168|0),3)|0);
                    $10975 = __THREW__; __THREW__ = 0;
                    $10976 = $10975&1;
                    if ($10976) {
                     label = 1399;
                     break L1;
                    }
                    $10977 = (($10974) + 17|0);
                    HEAP8[$10977>>0] = 1;
                    $10978 = (($4) + 120|0);
                    $10979 = +HEAPF64[$10978>>3];
                    __THREW__ = 0;
                    $10980 = (invoke_iii(381,($vinfos168|0),3)|0);
                    $10981 = __THREW__; __THREW__ = 0;
                    $10982 = $10981&1;
                    if ($10982) {
                     label = 1399;
                     break L1;
                    }
                    $10983 = (($10980) + 8|0);
                    HEAPF64[$10983>>3] = $10979;
                    $10984 = (($4) + 545|0);
                    $10985 = HEAP8[$10984>>0]|0;
                    __THREW__ = 0;
                    $10986 = (invoke_iii(381,($vinfos168|0),3)|0);
                    $10987 = __THREW__; __THREW__ = 0;
                    $10988 = $10987&1;
                    if ($10988) {
                     label = 1399;
                     break L1;
                    }
                    $10989 = (($10986) + 19|0);
                    HEAP8[$10989>>0] = $10985;
                    $10990 = (($4) + 545|0);
                    $10991 = (($10990) + 1|0);
                    $10992 = HEAP8[$10991>>0]|0;
                    __THREW__ = 0;
                    $10993 = (invoke_iii(381,($vinfos168|0),3)|0);
                    $10994 = __THREW__; __THREW__ = 0;
                    $10995 = $10994&1;
                    if ($10995) {
                     label = 1399;
                     break L1;
                    }
                    $10996 = (($10993) + 19|0);
                    $10997 = (($10996) + 1|0);
                    HEAP8[$10997>>0] = $10992;
                    $10998 = (($4) + 547|0);
                    $10999 = HEAP8[$10998>>0]|0;
                    __THREW__ = 0;
                    $11000 = (invoke_iii(381,($vinfos168|0),3)|0);
                    $11001 = __THREW__; __THREW__ = 0;
                    $11002 = $11001&1;
                    if ($11002) {
                     label = 1399;
                     break L1;
                    }
                    $11003 = (($11000) + 18|0);
                    HEAP8[$11003>>0] = $10999;
                    __THREW__ = 0;
                    $11004 = (invoke_iii(381,($vinfos168|0),4)|0);
                    $11005 = __THREW__; __THREW__ = 0;
                    $11006 = $11005&1;
                    if ($11006) {
                     label = 1399;
                     break L1;
                    }
                    $11007 = (($11004) + 17|0);
                    HEAP8[$11007>>0] = 1;
                    $11008 = (($4) + 160|0);
                    $11009 = +HEAPF64[$11008>>3];
                    __THREW__ = 0;
                    $11010 = (invoke_iii(381,($vinfos168|0),4)|0);
                    $11011 = __THREW__; __THREW__ = 0;
                    $11012 = $11011&1;
                    if ($11012) {
                     label = 1399;
                     break L1;
                    }
                    $11013 = (($11010) + 8|0);
                    HEAPF64[$11013>>3] = $11009;
                    $11014 = (($4) + 548|0);
                    $11015 = HEAP8[$11014>>0]|0;
                    __THREW__ = 0;
                    $11016 = (invoke_iii(381,($vinfos168|0),4)|0);
                    $11017 = __THREW__; __THREW__ = 0;
                    $11018 = $11017&1;
                    if ($11018) {
                     label = 1399;
                     break L1;
                    }
                    $11019 = (($11016) + 19|0);
                    HEAP8[$11019>>0] = $11015;
                    $11020 = (($4) + 548|0);
                    $11021 = (($11020) + 1|0);
                    $11022 = HEAP8[$11021>>0]|0;
                    __THREW__ = 0;
                    $11023 = (invoke_iii(381,($vinfos168|0),4)|0);
                    $11024 = __THREW__; __THREW__ = 0;
                    $11025 = $11024&1;
                    if ($11025) {
                     label = 1399;
                     break L1;
                    }
                    $11026 = (($11023) + 19|0);
                    $11027 = (($11026) + 1|0);
                    HEAP8[$11027>>0] = $11022;
                    $11028 = (($4) + 550|0);
                    $11029 = HEAP8[$11028>>0]|0;
                    __THREW__ = 0;
                    $11030 = (invoke_iii(381,($vinfos168|0),4)|0);
                    $11031 = __THREW__; __THREW__ = 0;
                    $11032 = $11031&1;
                    if ($11032) {
                     label = 1399;
                     break L1;
                    }
                    $11033 = (($11030) + 18|0);
                    HEAP8[$11033>>0] = $11029;
                    __THREW__ = 0;
                    $11034 = (invoke_iii(381,($vinfos168|0),5)|0);
                    $11035 = __THREW__; __THREW__ = 0;
                    $11036 = $11035&1;
                    if ($11036) {
                     label = 1399;
                     break L1;
                    }
                    $11037 = (($11034) + 17|0);
                    HEAP8[$11037>>0] = 1;
                    $11038 = (($4) + 200|0);
                    $11039 = +HEAPF64[$11038>>3];
                    __THREW__ = 0;
                    $11040 = (invoke_iii(381,($vinfos168|0),5)|0);
                    $11041 = __THREW__; __THREW__ = 0;
                    $11042 = $11041&1;
                    if ($11042) {
                     label = 1399;
                     break L1;
                    }
                    $11043 = (($11040) + 8|0);
                    HEAPF64[$11043>>3] = $11039;
                    $11044 = (($4) + 551|0);
                    $11045 = HEAP8[$11044>>0]|0;
                    __THREW__ = 0;
                    $11046 = (invoke_iii(381,($vinfos168|0),5)|0);
                    $11047 = __THREW__; __THREW__ = 0;
                    $11048 = $11047&1;
                    if ($11048) {
                     label = 1399;
                     break L1;
                    }
                    $11049 = (($11046) + 19|0);
                    HEAP8[$11049>>0] = $11045;
                    $11050 = (($4) + 551|0);
                    $11051 = (($11050) + 1|0);
                    $11052 = HEAP8[$11051>>0]|0;
                    __THREW__ = 0;
                    $11053 = (invoke_iii(381,($vinfos168|0),5)|0);
                    $11054 = __THREW__; __THREW__ = 0;
                    $11055 = $11054&1;
                    if ($11055) {
                     label = 1399;
                     break L1;
                    }
                    $11056 = (($11053) + 19|0);
                    $11057 = (($11056) + 1|0);
                    HEAP8[$11057>>0] = $11052;
                    $11058 = (($4) + 553|0);
                    $11059 = HEAP8[$11058>>0]|0;
                    __THREW__ = 0;
                    $11060 = (invoke_iii(381,($vinfos168|0),5)|0);
                    $11061 = __THREW__; __THREW__ = 0;
                    $11062 = $11061&1;
                    if ($11062) {
                     label = 1399;
                     break L1;
                    }
                    $11063 = (($11060) + 18|0);
                    HEAP8[$11063>>0] = $11059;
                    __THREW__ = 0;
                    invoke_vii(382,($vfree169|0),0);
                    $11064 = __THREW__; __THREW__ = 0;
                    $11065 = $11064&1;
                    if ($11065) {
                     label = 1399;
                     break L1;
                    }
                    $11066 = $1;
                    $11067 = HEAP32[$11066>>2]|0;
                    $11068 = (($11067) + 8|0);
                    $11069 = HEAP32[$11068>>2]|0;
                    __THREW__ = 0;
                    (invoke_iiii($11069|0,($11066|0),($vinfos168|0),($vfree169|0))|0);
                    $11070 = __THREW__; __THREW__ = 0;
                    $11071 = $11070&1;
                    if ($11071) {
                     label = 1400;
                     break L1;
                    }
                    __THREW__ = 0;
                    invoke_vi(366,($vfree169|0));
                    $11072 = __THREW__; __THREW__ = 0;
                    $11073 = $11072&1;
                    if ($11073) {
                     label = 1399;
                     break L1;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos168);
                    break L640;
                   }
                  } while(0);
                 } else {
                 }
                } while(0);
                $11074 = $ij5165;
                $11075 = (($11074) + 1)|0;
                $ij5165 = $11075;
               }
              }
             }
             break L49;
            }
           }
          } while(0);
         } else {
         }
        } while(0);
        $11611 = $ij3104;
        $11612 = (($11611) + 1)|0;
        $ij3104 = $11612;
       }
      }
     }
     if ((label|0) == 23) {
      label = 0;
      $470 = (($4) + 8|0);
      $471 = +HEAPF64[$470>>3];
      $472 = (($4) + 320|0);
      $473 = +HEAPF64[$472>>3];
      $474 = $471 * $473;
      $x98 = $474;
      $475 = (($4) + 16|0);
      $476 = +HEAPF64[$475>>3];
      $477 = 1.0 * $476;
      $x99 = $477;
      $478 = (($4) + 8|0);
      $479 = +HEAPF64[$478>>3];
      $480 = (($4) + 344|0);
      $481 = +HEAPF64[$480>>3];
      $482 = $479 * $481;
      $x100 = $482;
      $483 = (($4) + 88|0);
      $484 = +HEAPF64[$483>>3];
      $485 = 1.0 * $484;
      $x101 = $485;
      $486 = (($4) + 48|0);
      $487 = +HEAPF64[$486>>3];
      $488 = (($4) + 96|0);
      $489 = +HEAPF64[$488>>3];
      $490 = $487 * $489;
      $x102 = $490;
      $491 = (($4) + 8|0);
      $492 = +HEAPF64[$491>>3];
      $493 = (($4) + 368|0);
      $494 = +HEAPF64[$493>>3];
      $495 = $492 * $494;
      $x103 = $495;
      $496 = $x84;
      $x104 = $496;
      $497 = (($4) + 88|0);
      $498 = +HEAPF64[$497>>3];
      $499 = (($4) + 56|0);
      $500 = +HEAPF64[$499>>3];
      $501 = $498 * $500;
      $502 = $x102;
      $503 = $501 + $502;
      $x105 = $503;
      $504 = (($4) + 8|0);
      $505 = +HEAPF64[$504>>3];
      $506 = $x104;
      $507 = $505 * $506;
      $x106 = $507;
      $508 = $x87;
      $x107 = $508;
      $509 = $x107;
      $510 = $x98;
      $511 = $509 * $510;
      $512 = (($4) + 392|0);
      $513 = +HEAPF64[$512>>3];
      $514 = $x104;
      $515 = $513 * $514;
      $516 = $511 + $515;
      $517 = (($4) + 248|0);
      $518 = +HEAPF64[$517>>3];
      $519 = -1.0 * $518;
      $520 = $x107;
      $521 = $519 * $520;
      $522 = $x99;
      $523 = $521 * $522;
      $524 = $516 + $523;
      $525 = (($4) + 240|0);
      HEAPF64[$525>>3] = $524;
      $526 = (($4) + 272|0);
      $527 = +HEAPF64[$526>>3];
      $528 = -1.0 * $527;
      $529 = $x107;
      $530 = $528 * $529;
      $531 = $x99;
      $532 = $530 * $531;
      $533 = (($4) + 416|0);
      $534 = +HEAPF64[$533>>3];
      $535 = $x104;
      $536 = $534 * $535;
      $537 = $532 + $536;
      $538 = $x100;
      $539 = $x107;
      $540 = $538 * $539;
      $541 = $537 + $540;
      $542 = (($4) + 264|0);
      HEAPF64[$542>>3] = $541;
      $543 = (($4) + 440|0);
      $544 = +HEAPF64[$543>>3];
      $545 = $x104;
      $546 = $544 * $545;
      $547 = $x103;
      $548 = $x107;
      $549 = $547 * $548;
      $550 = $546 + $549;
      $551 = (($4) + 296|0);
      $552 = +HEAPF64[$551>>3];
      $553 = -1.0 * $552;
      $554 = $x107;
      $555 = $553 * $554;
      $556 = $x99;
      $557 = $555 * $556;
      $558 = $550 + $557;
      $559 = (($4) + 288|0);
      HEAPF64[$559>>3] = $558;
      $560 = (($4) + 320|0);
      $561 = +HEAPF64[$560>>3];
      $562 = (($4) + 16|0);
      $563 = +HEAPF64[$562>>3];
      $564 = $561 * $563;
      $565 = (($4) + 8|0);
      $566 = +HEAPF64[$565>>3];
      $567 = (($4) + 248|0);
      $568 = +HEAPF64[$567>>3];
      $569 = $566 * $568;
      $570 = $564 + $569;
      $571 = (($4) + 312|0);
      HEAPF64[$571>>3] = $570;
      $572 = (($4) + 344|0);
      $573 = +HEAPF64[$572>>3];
      $574 = (($4) + 16|0);
      $575 = +HEAPF64[$574>>3];
      $576 = $573 * $575;
      $577 = (($4) + 8|0);
      $578 = +HEAPF64[$577>>3];
      $579 = (($4) + 272|0);
      $580 = +HEAPF64[$579>>3];
      $581 = $578 * $580;
      $582 = $576 + $581;
      $583 = (($4) + 336|0);
      HEAPF64[$583>>3] = $582;
      $584 = (($4) + 368|0);
      $585 = +HEAPF64[$584>>3];
      $586 = (($4) + 16|0);
      $587 = +HEAPF64[$586>>3];
      $588 = $585 * $587;
      $589 = (($4) + 8|0);
      $590 = +HEAPF64[$589>>3];
      $591 = (($4) + 296|0);
      $592 = +HEAPF64[$591>>3];
      $593 = $590 * $592;
      $594 = $588 + $593;
      $595 = (($4) + 360|0);
      HEAPF64[$595>>3] = $594;
      $596 = (($4) + 248|0);
      $597 = +HEAPF64[$596>>3];
      $598 = -1.0 * $597;
      $599 = $x104;
      $600 = $598 * $599;
      $601 = $x99;
      $602 = $600 * $601;
      $603 = (($4) + 392|0);
      $604 = +HEAPF64[$603>>3];
      $605 = $x105;
      $606 = $604 * $605;
      $607 = $602 + $606;
      $608 = $x104;
      $609 = $x98;
      $610 = $608 * $609;
      $611 = $607 + $610;
      $612 = (($4) + 384|0);
      HEAPF64[$612>>3] = $611;
      $613 = (($4) + 272|0);
      $614 = +HEAPF64[$613>>3];
      $615 = -1.0 * $614;
      $616 = $x104;
      $617 = $615 * $616;
      $618 = $x99;
      $619 = $617 * $618;
      $620 = (($4) + 416|0);
      $621 = +HEAPF64[$620>>3];
      $622 = $x105;
      $623 = $621 * $622;
      $624 = $619 + $623;
      $625 = $x100;
      $626 = $x104;
      $627 = $625 * $626;
      $628 = $624 + $627;
      $629 = (($4) + 408|0);
      HEAPF64[$629>>3] = $628;
      $630 = (($4) + 440|0);
      $631 = +HEAPF64[$630>>3];
      $632 = $x105;
      $633 = $631 * $632;
      $634 = (($4) + 296|0);
      $635 = +HEAPF64[$634>>3];
      $636 = -1.0 * $635;
      $637 = $x104;
      $638 = $636 * $637;
      $639 = $x99;
      $640 = $638 * $639;
      $641 = $633 + $640;
      $642 = $x103;
      $643 = $x104;
      $644 = $642 * $643;
      $645 = $641 + $644;
      $646 = (($4) + 432|0);
      HEAPF64[$646>>3] = $645;
      $647 = (($4) + 176|0);
      $648 = +HEAPF64[$647>>3];
      HEAPF64[$j3eval1>>3] = $648;
      $649 = +HEAPF64[$j3eval1>>3];
      $650 = (+__Z5IKabsd($649));
      $651 = $650 < 9.9999999999999995E-7;
      if ($651) {
       $bgotonextstatement = 1;
       $652 = (($4) + 160|0);
       $653 = +HEAPF64[$652>>3];
       $654 = (+__Z5IKabsd($653));
       $655 = 3.14159265358979 + $654;
       $656 = (+__Z6IKfmoddd($655,6.2831853071795898));
       $657 = -3.14159265358979 + $656;
       HEAPF64[$evalcond>>3] = $657;
       $658 = (($4) + 432|0);
       $659 = +HEAPF64[$658>>3];
       $660 = -1.0 + $659;
       $661 = (($evalcond) + 8|0);
       HEAPF64[$661>>3] = $660;
       $662 = (($4) + 360|0);
       $663 = +HEAPF64[$662>>3];
       $664 = (($evalcond) + 16|0);
       HEAPF64[$664>>3] = $663;
       $665 = (($4) + 408|0);
       $666 = +HEAPF64[$665>>3];
       $667 = (($evalcond) + 24|0);
       HEAPF64[$667>>3] = $666;
       $668 = (($4) + 288|0);
       $669 = +HEAPF64[$668>>3];
       $670 = (($evalcond) + 32|0);
       HEAPF64[$670>>3] = $669;
       $671 = (($4) + 384|0);
       $672 = +HEAPF64[$671>>3];
       $673 = (($evalcond) + 40|0);
       HEAPF64[$673>>3] = $672;
       $674 = +HEAPF64[$evalcond>>3];
       $675 = (+__Z5IKabsd($674));
       $676 = $675 < 9.9999999999999995E-7;
       do {
        if ($676) {
         $677 = (($evalcond) + 8|0);
         $678 = +HEAPF64[$677>>3];
         $679 = (+__Z5IKabsd($678));
         $680 = $679 < 9.9999999999999995E-7;
         if ($680) {
          $681 = (($evalcond) + 16|0);
          $682 = +HEAPF64[$681>>3];
          $683 = (+__Z5IKabsd($682));
          $684 = $683 < 9.9999999999999995E-7;
          if ($684) {
           $685 = (($evalcond) + 24|0);
           $686 = +HEAPF64[$685>>3];
           $687 = (+__Z5IKabsd($686));
           $688 = $687 < 9.9999999999999995E-7;
           if ($688) {
            $689 = (($evalcond) + 32|0);
            $690 = +HEAPF64[$689>>3];
            $691 = (+__Z5IKabsd($690));
            $692 = $691 < 9.9999999999999995E-7;
            if ($692) {
             $693 = (($evalcond) + 40|0);
             $694 = +HEAPF64[$693>>3];
             $695 = (+__Z5IKabsd($694));
             $696 = $695 < 9.9999999999999995E-7;
             if ($696) {
              $bgotonextstatement = 0;
              ;HEAP8[$j3valid+0>>0]=0|0;HEAP8[$j3valid+1>>0]=0|0;
              $697 = (($4) + 547|0);
              HEAP8[$697>>0] = 2;
              $698 = (($4) + 288|0);
              $699 = +HEAPF64[$698>>3];
              $700 = (($4) + 360|0);
              $701 = +HEAPF64[$700>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x109,$699,$701,1.9999999999999999E-6);
              $702 = (($x109) + 8|0);
              $703 = HEAP8[$702>>0]|0;
              $704 = $703&1;
              if (!($704)) {
               break;
              }
              $705 = +HEAPF64[$x109>>3];
              $x108 = $705;
              $706 = $x108;
              $707 = -1.0 * $706;
              HEAPF64[$j3array>>3] = $707;
              $708 = +HEAPF64[$j3array>>3];
              $709 = (+__Z5IKsind($708));
              HEAPF64[$sj3array>>3] = $709;
              $710 = +HEAPF64[$j3array>>3];
              $711 = (+__Z5IKcosd($710));
              HEAPF64[$cj3array>>3] = $711;
              $712 = $x108;
              $713 = -1.0 * $712;
              $714 = 3.14159265358979 + $713;
              $715 = (($j3array) + 8|0);
              HEAPF64[$715>>3] = $714;
              $716 = (($j3array) + 8|0);
              $717 = +HEAPF64[$716>>3];
              $718 = (+__Z5IKsind($717));
              $719 = (($sj3array) + 8|0);
              HEAPF64[$719>>3] = $718;
              $720 = (($j3array) + 8|0);
              $721 = +HEAPF64[$720>>3];
              $722 = (+__Z5IKcosd($721));
              $723 = (($cj3array) + 8|0);
              HEAPF64[$723>>3] = $722;
              $724 = +HEAPF64[$j3array>>3];
              $725 = $724 > 3.14159265358979;
              if ($725) {
               $726 = +HEAPF64[$j3array>>3];
               $727 = $726 - 6.2831853071795898;
               HEAPF64[$j3array>>3] = $727;
              } else {
               $728 = +HEAPF64[$j3array>>3];
               $729 = $728 < -3.14159265358979;
               if ($729) {
                $730 = +HEAPF64[$j3array>>3];
                $731 = $730 + 6.2831853071795898;
                HEAPF64[$j3array>>3] = $731;
               }
              }
              HEAP8[$j3valid>>0] = 1;
              $732 = (($j3array) + 8|0);
              $733 = +HEAPF64[$732>>3];
              $734 = $733 > 3.14159265358979;
              if ($734) {
               $735 = (($j3array) + 8|0);
               $736 = +HEAPF64[$735>>3];
               $737 = $736 - 6.2831853071795898;
               HEAPF64[$735>>3] = $737;
              } else {
               $738 = (($j3array) + 8|0);
               $739 = +HEAPF64[$738>>3];
               $740 = $739 < -3.14159265358979;
               if ($740) {
                $741 = (($j3array) + 8|0);
                $742 = +HEAPF64[$741>>3];
                $743 = $742 + 6.2831853071795898;
                HEAPF64[$741>>3] = $743;
               }
              }
              $744 = (($j3valid) + 1|0);
              HEAP8[$744>>0] = 1;
              $ij3 = 0;
              while(1) {
               $745 = $ij3;
               $746 = ($745|0)<(2);
               if (!($746)) {
                break;
               }
               $747 = $ij3;
               $748 = (($j3valid) + ($747)|0);
               $749 = HEAP8[$748>>0]|0;
               $750 = $749&1;
               L740: do {
                if ($750) {
                 $751 = $ij3;
                 $752 = $751&255;
                 $753 = (($4) + 545|0);
                 HEAP8[$753>>0] = $752;
                 $754 = (($4) + 545|0);
                 $755 = (($754) + 1|0);
                 HEAP8[$755>>0] = -1;
                 $756 = $ij3;
                 $757 = (($756) + 1)|0;
                 $iij3 = $757;
                 L743: while(1) {
                  $758 = $iij3;
                  $759 = ($758|0)<(2);
                  if (!($759)) {
                   break;
                  }
                  $760 = $iij3;
                  $761 = (($j3valid) + ($760)|0);
                  $762 = HEAP8[$761>>0]|0;
                  $763 = $762&1;
                  do {
                   if ($763) {
                    $764 = $ij3;
                    $765 = (($cj3array) + ($764<<3)|0);
                    $766 = +HEAPF64[$765>>3];
                    $767 = $iij3;
                    $768 = (($cj3array) + ($767<<3)|0);
                    $769 = +HEAPF64[$768>>3];
                    $770 = $766 - $769;
                    $771 = (+__Z5IKabsd($770));
                    $772 = $771 < 9.9999999999999995E-7;
                    if (!($772)) {
                     break;
                    }
                    $773 = $ij3;
                    $774 = (($sj3array) + ($773<<3)|0);
                    $775 = +HEAPF64[$774>>3];
                    $776 = $iij3;
                    $777 = (($sj3array) + ($776<<3)|0);
                    $778 = +HEAPF64[$777>>3];
                    $779 = $775 - $778;
                    $780 = (+__Z5IKabsd($779));
                    $781 = $780 < 9.9999999999999995E-7;
                    if ($781) {
                     label = 52;
                     break L743;
                    }
                   }
                  } while(0);
                  $788 = $iij3;
                  $789 = (($788) + 1)|0;
                  $iij3 = $789;
                 }
                 if ((label|0) == 52) {
                  label = 0;
                  $782 = $iij3;
                  $783 = (($j3valid) + ($782)|0);
                  HEAP8[$783>>0] = 0;
                  $784 = $iij3;
                  $785 = $784&255;
                  $786 = (($4) + 545|0);
                  $787 = (($786) + 1|0);
                  HEAP8[$787>>0] = $785;
                 }
                 $790 = $ij3;
                 $791 = (($j3array) + ($790<<3)|0);
                 $792 = +HEAPF64[$791>>3];
                 $793 = (($4) + 120|0);
                 HEAPF64[$793>>3] = $792;
                 $794 = $ij3;
                 $795 = (($cj3array) + ($794<<3)|0);
                 $796 = +HEAPF64[$795>>3];
                 $797 = (($4) + 128|0);
                 HEAPF64[$797>>3] = $796;
                 $798 = $ij3;
                 $799 = (($sj3array) + ($798<<3)|0);
                 $800 = +HEAPF64[$799>>3];
                 $801 = (($4) + 136|0);
                 HEAPF64[$801>>3] = $800;
                 $802 = (($4) + 288|0);
                 $803 = +HEAPF64[$802>>3];
                 $804 = -1.0 * $803;
                 $805 = (($4) + 120|0);
                 $806 = +HEAPF64[$805>>3];
                 $807 = (+__Z5IKsind($806));
                 $808 = $804 * $807;
                 $809 = (($4) + 360|0);
                 $810 = +HEAPF64[$809>>3];
                 $811 = (($4) + 120|0);
                 $812 = +HEAPF64[$811>>3];
                 $813 = (+__Z5IKcosd($812));
                 $814 = $810 * $813;
                 $815 = $808 + $814;
                 HEAPF64[$evalcond2>>3] = $815;
                 $816 = +HEAPF64[$evalcond2>>3];
                 $817 = (+__Z5IKabsd($816));
                 $818 = $817 > 5.0000000000000004E-6;
                 if ($818) {
                  break;
                 }
                 ;HEAP8[$j5valid+0>>0]=0|0;
                 $819 = (($4) + 553|0);
                 HEAP8[$819>>0] = 1;
                 $820 = (($4) + 128|0);
                 $821 = +HEAPF64[$820>>3];
                 $822 = 1.0 * $821;
                 $x110 = $822;
                 $823 = (($4) + 240|0);
                 $824 = +HEAPF64[$823>>3];
                 $825 = -1.0 * $824;
                 $826 = $x110;
                 $827 = $825 * $826;
                 $828 = (($4) + 264|0);
                 $829 = +HEAPF64[$828>>3];
                 $830 = (($4) + 136|0);
                 $831 = +HEAPF64[$830>>3];
                 $832 = $829 * $831;
                 $833 = $827 + $832;
                 $834 = (+__Z5IKabsd($833));
                 $835 = $834 < 1.9999999999999999E-6;
                 do {
                  if ($835) {
                   $836 = (($4) + 264|0);
                   $837 = +HEAPF64[$836>>3];
                   $838 = -1.0 * $837;
                   $839 = $x110;
                   $840 = $838 * $839;
                   $841 = (($4) + 240|0);
                   $842 = +HEAPF64[$841>>3];
                   $843 = -1.0 * $842;
                   $844 = (($4) + 136|0);
                   $845 = +HEAPF64[$844>>3];
                   $846 = $843 * $845;
                   $847 = $840 + $846;
                   $848 = (+__Z5IKabsd($847));
                   $849 = $848 < 1.9999999999999999E-6;
                   if (!($849)) {
                    break;
                   }
                   $850 = (($4) + 240|0);
                   $851 = +HEAPF64[$850>>3];
                   $852 = -1.0 * $851;
                   $853 = $x110;
                   $854 = $852 * $853;
                   $855 = (($4) + 264|0);
                   $856 = +HEAPF64[$855>>3];
                   $857 = (($4) + 136|0);
                   $858 = +HEAPF64[$857>>3];
                   $859 = $856 * $858;
                   $860 = $854 + $859;
                   $861 = (+__Z5IKsqrd($860));
                   $862 = (($4) + 264|0);
                   $863 = +HEAPF64[$862>>3];
                   $864 = -1.0 * $863;
                   $865 = $x110;
                   $866 = $864 * $865;
                   $867 = (($4) + 240|0);
                   $868 = +HEAPF64[$867>>3];
                   $869 = -1.0 * $868;
                   $870 = (($4) + 136|0);
                   $871 = +HEAPF64[$870>>3];
                   $872 = $869 * $871;
                   $873 = $866 + $872;
                   $874 = (+__Z5IKsqrd($873));
                   $875 = $861 + $874;
                   $876 = $875 - 1.0;
                   $877 = (+__Z5IKabsd($876));
                   $878 = $877 <= 1.9999999999999999E-6;
                   if (!($878)) {
                    break;
                   }
                   break L740;
                  }
                 } while(0);
                 $879 = (($4) + 240|0);
                 $880 = +HEAPF64[$879>>3];
                 $881 = -1.0 * $880;
                 $882 = $x110;
                 $883 = $881 * $882;
                 $884 = (($4) + 264|0);
                 $885 = +HEAPF64[$884>>3];
                 $886 = (($4) + 136|0);
                 $887 = +HEAPF64[$886>>3];
                 $888 = $885 * $887;
                 $889 = $883 + $888;
                 $890 = (($4) + 264|0);
                 $891 = +HEAPF64[$890>>3];
                 $892 = -1.0 * $891;
                 $893 = $x110;
                 $894 = $892 * $893;
                 $895 = (($4) + 240|0);
                 $896 = +HEAPF64[$895>>3];
                 $897 = -1.0 * $896;
                 $898 = (($4) + 136|0);
                 $899 = +HEAPF64[$898>>3];
                 $900 = $897 * $899;
                 $901 = $894 + $900;
                 $902 = (+__Z7IKatan2dd($889,$901));
                 HEAPF64[$j5array>>3] = $902;
                 $903 = +HEAPF64[$j5array>>3];
                 $904 = (+__Z5IKsind($903));
                 HEAPF64[$sj5array>>3] = $904;
                 $905 = +HEAPF64[$j5array>>3];
                 $906 = (+__Z5IKcosd($905));
                 HEAPF64[$cj5array>>3] = $906;
                 $907 = +HEAPF64[$j5array>>3];
                 $908 = $907 > 3.14159265358979;
                 if ($908) {
                  $909 = +HEAPF64[$j5array>>3];
                  $910 = $909 - 6.2831853071795898;
                  HEAPF64[$j5array>>3] = $910;
                 } else {
                  $911 = +HEAPF64[$j5array>>3];
                  $912 = $911 < -3.14159265358979;
                  if ($912) {
                   $913 = +HEAPF64[$j5array>>3];
                   $914 = $913 + 6.2831853071795898;
                   HEAPF64[$j5array>>3] = $914;
                  }
                 }
                 HEAP8[$j5valid>>0] = 1;
                 $ij5 = 0;
                 while(1) {
                  $915 = $ij5;
                  $916 = ($915|0)<(1);
                  if (!($916)) {
                   break;
                  }
                  $917 = $ij5;
                  $918 = (($j5valid) + ($917)|0);
                  $919 = HEAP8[$918>>0]|0;
                  $920 = $919&1;
                  L772: do {
                   if ($920) {
                    $921 = $ij5;
                    $922 = $921&255;
                    $923 = (($4) + 551|0);
                    HEAP8[$923>>0] = $922;
                    $924 = (($4) + 551|0);
                    $925 = (($924) + 1|0);
                    HEAP8[$925>>0] = -1;
                    $926 = $ij5;
                    $927 = (($926) + 1)|0;
                    $iij5 = $927;
                    L775: while(1) {
                     $928 = $iij5;
                     $929 = ($928|0)<(1);
                     if (!($929)) {
                      break;
                     }
                     $930 = $iij5;
                     $931 = (($j5valid) + ($930)|0);
                     $932 = HEAP8[$931>>0]|0;
                     $933 = $932&1;
                     do {
                      if ($933) {
                       $934 = $ij5;
                       $935 = (($cj5array) + ($934<<3)|0);
                       $936 = +HEAPF64[$935>>3];
                       $937 = $iij5;
                       $938 = (($cj5array) + ($937<<3)|0);
                       $939 = +HEAPF64[$938>>3];
                       $940 = $936 - $939;
                       $941 = (+__Z5IKabsd($940));
                       $942 = $941 < 9.9999999999999995E-7;
                       if (!($942)) {
                        break;
                       }
                       $943 = $ij5;
                       $944 = (($sj5array) + ($943<<3)|0);
                       $945 = +HEAPF64[$944>>3];
                       $946 = $iij5;
                       $947 = (($sj5array) + ($946<<3)|0);
                       $948 = +HEAPF64[$947>>3];
                       $949 = $945 - $948;
                       $950 = (+__Z5IKabsd($949));
                       $951 = $950 < 9.9999999999999995E-7;
                       if ($951) {
                        label = 75;
                        break L775;
                       }
                      }
                     } while(0);
                     $958 = $iij5;
                     $959 = (($958) + 1)|0;
                     $iij5 = $959;
                    }
                    if ((label|0) == 75) {
                     label = 0;
                     $952 = $iij5;
                     $953 = (($j5valid) + ($952)|0);
                     HEAP8[$953>>0] = 0;
                     $954 = $iij5;
                     $955 = $954&255;
                     $956 = (($4) + 551|0);
                     $957 = (($956) + 1|0);
                     HEAP8[$957>>0] = $955;
                    }
                    $960 = $ij5;
                    $961 = (($j5array) + ($960<<3)|0);
                    $962 = +HEAPF64[$961>>3];
                    $963 = (($4) + 200|0);
                    HEAPF64[$963>>3] = $962;
                    $964 = $ij5;
                    $965 = (($cj5array) + ($964<<3)|0);
                    $966 = +HEAPF64[$965>>3];
                    $967 = (($4) + 208|0);
                    HEAPF64[$967>>3] = $966;
                    $968 = $ij5;
                    $969 = (($sj5array) + ($968<<3)|0);
                    $970 = +HEAPF64[$969>>3];
                    $971 = (($4) + 216|0);
                    HEAPF64[$971>>3] = $970;
                    $972 = (($4) + 200|0);
                    $973 = +HEAPF64[$972>>3];
                    $974 = (+__Z5IKsind($973));
                    $x111 = $974;
                    $975 = (($4) + 200|0);
                    $976 = +HEAPF64[$975>>3];
                    $977 = (+__Z5IKcosd($976));
                    $x112 = $977;
                    $978 = (($4) + 136|0);
                    $979 = +HEAPF64[$978>>3];
                    $980 = 1.0 * $979;
                    $x113 = $980;
                    $981 = (($4) + 128|0);
                    $982 = +HEAPF64[$981>>3];
                    $983 = $x111;
                    $984 = $982 * $983;
                    $x114 = $984;
                    $985 = (($4) + 136|0);
                    $986 = +HEAPF64[$985>>3];
                    $987 = $x112;
                    $988 = $986 * $987;
                    $x115 = $988;
                    $989 = $x112;
                    $990 = 1.0 * $989;
                    $x116 = $990;
                    $991 = $x115;
                    $992 = $x114;
                    $993 = $991 + $992;
                    $x117 = $993;
                    $994 = (($4) + 312|0);
                    $995 = +HEAPF64[$994>>3];
                    $996 = (($4) + 136|0);
                    $997 = +HEAPF64[$996>>3];
                    $998 = $995 * $997;
                    $999 = $x111;
                    $1000 = $998 + $999;
                    $1001 = (($4) + 128|0);
                    $1002 = +HEAPF64[$1001>>3];
                    $1003 = (($4) + 240|0);
                    $1004 = +HEAPF64[$1003>>3];
                    $1005 = $1002 * $1004;
                    $1006 = $1000 + $1005;
                    HEAPF64[$evalcond3>>3] = $1006;
                    $1007 = (($4) + 336|0);
                    $1008 = +HEAPF64[$1007>>3];
                    $1009 = (($4) + 136|0);
                    $1010 = +HEAPF64[$1009>>3];
                    $1011 = $1008 * $1010;
                    $1012 = $x112;
                    $1013 = $1011 + $1012;
                    $1014 = (($4) + 128|0);
                    $1015 = +HEAPF64[$1014>>3];
                    $1016 = (($4) + 264|0);
                    $1017 = +HEAPF64[$1016>>3];
                    $1018 = $1015 * $1017;
                    $1019 = $1013 + $1018;
                    $1020 = (($evalcond3) + 8|0);
                    HEAPF64[$1020>>3] = $1019;
                    $1021 = (($4) + 264|0);
                    $1022 = +HEAPF64[$1021>>3];
                    $1023 = -1.0 * $1022;
                    $1024 = $x113;
                    $1025 = $1023 * $1024;
                    $1026 = $x111;
                    $1027 = $1025 + $1026;
                    $1028 = (($4) + 128|0);
                    $1029 = +HEAPF64[$1028>>3];
                    $1030 = (($4) + 336|0);
                    $1031 = +HEAPF64[$1030>>3];
                    $1032 = $1029 * $1031;
                    $1033 = $1027 + $1032;
                    $1034 = (($evalcond3) + 16|0);
                    HEAPF64[$1034>>3] = $1033;
                    $1035 = $x117;
                    $1036 = (($4) + 240|0);
                    $1037 = +HEAPF64[$1036>>3];
                    $1038 = $1035 + $1037;
                    $1039 = (($evalcond3) + 24|0);
                    HEAPF64[$1039>>3] = $1038;
                    $1040 = $x117;
                    $1041 = (($4) + 336|0);
                    $1042 = +HEAPF64[$1041>>3];
                    $1043 = $1040 + $1042;
                    $1044 = (($evalcond3) + 32|0);
                    HEAPF64[$1044>>3] = $1043;
                    $1045 = $x111;
                    $1046 = -1.0 * $1045;
                    $1047 = $x113;
                    $1048 = $1046 * $1047;
                    $1049 = (($4) + 128|0);
                    $1050 = +HEAPF64[$1049>>3];
                    $1051 = $x112;
                    $1052 = $1050 * $1051;
                    $1053 = $1048 + $1052;
                    $1054 = (($4) + 264|0);
                    $1055 = +HEAPF64[$1054>>3];
                    $1056 = $1053 + $1055;
                    $1057 = (($evalcond3) + 40|0);
                    HEAPF64[$1057>>3] = $1056;
                    $1058 = (($4) + 136|0);
                    $1059 = +HEAPF64[$1058>>3];
                    $1060 = $x111;
                    $1061 = $1059 * $1060;
                    $1062 = (($4) + 128|0);
                    $1063 = +HEAPF64[$1062>>3];
                    $1064 = -1.0 * $1063;
                    $1065 = $x116;
                    $1066 = $1064 * $1065;
                    $1067 = $1061 + $1066;
                    $1068 = (($4) + 312|0);
                    $1069 = +HEAPF64[$1068>>3];
                    $1070 = $1067 + $1069;
                    $1071 = (($evalcond3) + 48|0);
                    HEAPF64[$1071>>3] = $1070;
                    $1072 = (($4) + 240|0);
                    $1073 = +HEAPF64[$1072>>3];
                    $1074 = -1.0 * $1073;
                    $1075 = $x113;
                    $1076 = $1074 * $1075;
                    $1077 = $x116;
                    $1078 = -1.0 * $1077;
                    $1079 = $1076 + $1078;
                    $1080 = (($4) + 128|0);
                    $1081 = +HEAPF64[$1080>>3];
                    $1082 = (($4) + 312|0);
                    $1083 = +HEAPF64[$1082>>3];
                    $1084 = $1081 * $1083;
                    $1085 = $1079 + $1084;
                    $1086 = (($evalcond3) + 56|0);
                    HEAPF64[$1086>>3] = $1085;
                    $1087 = +HEAPF64[$evalcond3>>3];
                    $1088 = (+__Z5IKabsd($1087));
                    $1089 = $1088 > 5.0000000000000004E-6;
                    do {
                     if (!($1089)) {
                      $1090 = (($evalcond3) + 8|0);
                      $1091 = +HEAPF64[$1090>>3];
                      $1092 = (+__Z5IKabsd($1091));
                      $1093 = $1092 > 5.0000000000000004E-6;
                      if ($1093) {
                       break;
                      }
                      $1094 = (($evalcond3) + 16|0);
                      $1095 = +HEAPF64[$1094>>3];
                      $1096 = (+__Z5IKabsd($1095));
                      $1097 = $1096 > 5.0000000000000004E-6;
                      if ($1097) {
                       break;
                      }
                      $1098 = (($evalcond3) + 24|0);
                      $1099 = +HEAPF64[$1098>>3];
                      $1100 = (+__Z5IKabsd($1099));
                      $1101 = $1100 > 5.0000000000000004E-6;
                      if ($1101) {
                       break;
                      }
                      $1102 = (($evalcond3) + 32|0);
                      $1103 = +HEAPF64[$1102>>3];
                      $1104 = (+__Z5IKabsd($1103));
                      $1105 = $1104 > 5.0000000000000004E-6;
                      if ($1105) {
                       break;
                      }
                      $1106 = (($evalcond3) + 40|0);
                      $1107 = +HEAPF64[$1106>>3];
                      $1108 = (+__Z5IKabsd($1107));
                      $1109 = $1108 > 5.0000000000000004E-6;
                      if ($1109) {
                       break;
                      }
                      $1110 = (($evalcond3) + 48|0);
                      $1111 = +HEAPF64[$1110>>3];
                      $1112 = (+__Z5IKabsd($1111));
                      $1113 = $1112 > 5.0000000000000004E-6;
                      if ($1113) {
                       break;
                      }
                      $1114 = (($evalcond3) + 56|0);
                      $1115 = +HEAPF64[$1114>>3];
                      $1116 = (+__Z5IKabsd($1115));
                      $1117 = $1116 > 5.0000000000000004E-6;
                      if ($1117) {
                       break;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos,6);
                      __THREW__ = 0;
                      $1118 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1119 = __THREW__; __THREW__ = 0;
                      $1120 = $1119&1;
                      if ($1120) {
                       label = 122;
                       break L1;
                      }
                      $1121 = (($1118) + 17|0);
                      HEAP8[$1121>>0] = 1;
                      $1122 = +HEAPF64[$4>>3];
                      __THREW__ = 0;
                      $1123 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1124 = __THREW__; __THREW__ = 0;
                      $1125 = $1124&1;
                      if ($1125) {
                       label = 122;
                       break L1;
                      }
                      $1126 = (($1123) + 8|0);
                      HEAPF64[$1126>>3] = $1122;
                      $1127 = (($4) + 536|0);
                      $1128 = HEAP8[$1127>>0]|0;
                      __THREW__ = 0;
                      $1129 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1130 = __THREW__; __THREW__ = 0;
                      $1131 = $1130&1;
                      if ($1131) {
                       label = 122;
                       break L1;
                      }
                      $1132 = (($1129) + 19|0);
                      HEAP8[$1132>>0] = $1128;
                      $1133 = (($4) + 536|0);
                      $1134 = (($1133) + 1|0);
                      $1135 = HEAP8[$1134>>0]|0;
                      __THREW__ = 0;
                      $1136 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1137 = __THREW__; __THREW__ = 0;
                      $1138 = $1137&1;
                      if ($1138) {
                       label = 122;
                       break L1;
                      }
                      $1139 = (($1136) + 19|0);
                      $1140 = (($1139) + 1|0);
                      HEAP8[$1140>>0] = $1135;
                      $1141 = (($4) + 538|0);
                      $1142 = HEAP8[$1141>>0]|0;
                      __THREW__ = 0;
                      $1143 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1144 = __THREW__; __THREW__ = 0;
                      $1145 = $1144&1;
                      if ($1145) {
                       label = 122;
                       break L1;
                      }
                      $1146 = (($1143) + 18|0);
                      HEAP8[$1146>>0] = $1142;
                      __THREW__ = 0;
                      $1147 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1148 = __THREW__; __THREW__ = 0;
                      $1149 = $1148&1;
                      if ($1149) {
                       label = 122;
                       break L1;
                      }
                      $1150 = (($1147) + 17|0);
                      HEAP8[$1150>>0] = 1;
                      $1151 = (($4) + 40|0);
                      $1152 = +HEAPF64[$1151>>3];
                      __THREW__ = 0;
                      $1153 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1154 = __THREW__; __THREW__ = 0;
                      $1155 = $1154&1;
                      if ($1155) {
                       label = 122;
                       break L1;
                      }
                      $1156 = (($1153) + 8|0);
                      HEAPF64[$1156>>3] = $1152;
                      $1157 = (($4) + 539|0);
                      $1158 = HEAP8[$1157>>0]|0;
                      __THREW__ = 0;
                      $1159 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1160 = __THREW__; __THREW__ = 0;
                      $1161 = $1160&1;
                      if ($1161) {
                       label = 122;
                       break L1;
                      }
                      $1162 = (($1159) + 19|0);
                      HEAP8[$1162>>0] = $1158;
                      $1163 = (($4) + 539|0);
                      $1164 = (($1163) + 1|0);
                      $1165 = HEAP8[$1164>>0]|0;
                      __THREW__ = 0;
                      $1166 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1167 = __THREW__; __THREW__ = 0;
                      $1168 = $1167&1;
                      if ($1168) {
                       label = 122;
                       break L1;
                      }
                      $1169 = (($1166) + 19|0);
                      $1170 = (($1169) + 1|0);
                      HEAP8[$1170>>0] = $1165;
                      $1171 = (($4) + 541|0);
                      $1172 = HEAP8[$1171>>0]|0;
                      __THREW__ = 0;
                      $1173 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1174 = __THREW__; __THREW__ = 0;
                      $1175 = $1174&1;
                      if ($1175) {
                       label = 122;
                       break L1;
                      }
                      $1176 = (($1173) + 18|0);
                      HEAP8[$1176>>0] = $1172;
                      __THREW__ = 0;
                      $1177 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1178 = __THREW__; __THREW__ = 0;
                      $1179 = $1178&1;
                      if ($1179) {
                       label = 122;
                       break L1;
                      }
                      $1180 = (($1177) + 17|0);
                      HEAP8[$1180>>0] = 1;
                      $1181 = (($4) + 80|0);
                      $1182 = +HEAPF64[$1181>>3];
                      __THREW__ = 0;
                      $1183 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1184 = __THREW__; __THREW__ = 0;
                      $1185 = $1184&1;
                      if ($1185) {
                       label = 122;
                       break L1;
                      }
                      $1186 = (($1183) + 8|0);
                      HEAPF64[$1186>>3] = $1182;
                      $1187 = (($4) + 542|0);
                      $1188 = HEAP8[$1187>>0]|0;
                      __THREW__ = 0;
                      $1189 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1190 = __THREW__; __THREW__ = 0;
                      $1191 = $1190&1;
                      if ($1191) {
                       label = 122;
                       break L1;
                      }
                      $1192 = (($1189) + 19|0);
                      HEAP8[$1192>>0] = $1188;
                      $1193 = (($4) + 542|0);
                      $1194 = (($1193) + 1|0);
                      $1195 = HEAP8[$1194>>0]|0;
                      __THREW__ = 0;
                      $1196 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1197 = __THREW__; __THREW__ = 0;
                      $1198 = $1197&1;
                      if ($1198) {
                       label = 122;
                       break L1;
                      }
                      $1199 = (($1196) + 19|0);
                      $1200 = (($1199) + 1|0);
                      HEAP8[$1200>>0] = $1195;
                      $1201 = (($4) + 544|0);
                      $1202 = HEAP8[$1201>>0]|0;
                      __THREW__ = 0;
                      $1203 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1204 = __THREW__; __THREW__ = 0;
                      $1205 = $1204&1;
                      if ($1205) {
                       label = 122;
                       break L1;
                      }
                      $1206 = (($1203) + 18|0);
                      HEAP8[$1206>>0] = $1202;
                      __THREW__ = 0;
                      $1207 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1208 = __THREW__; __THREW__ = 0;
                      $1209 = $1208&1;
                      if ($1209) {
                       label = 122;
                       break L1;
                      }
                      $1210 = (($1207) + 17|0);
                      HEAP8[$1210>>0] = 1;
                      $1211 = (($4) + 120|0);
                      $1212 = +HEAPF64[$1211>>3];
                      __THREW__ = 0;
                      $1213 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1214 = __THREW__; __THREW__ = 0;
                      $1215 = $1214&1;
                      if ($1215) {
                       label = 122;
                       break L1;
                      }
                      $1216 = (($1213) + 8|0);
                      HEAPF64[$1216>>3] = $1212;
                      $1217 = (($4) + 545|0);
                      $1218 = HEAP8[$1217>>0]|0;
                      __THREW__ = 0;
                      $1219 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1220 = __THREW__; __THREW__ = 0;
                      $1221 = $1220&1;
                      if ($1221) {
                       label = 122;
                       break L1;
                      }
                      $1222 = (($1219) + 19|0);
                      HEAP8[$1222>>0] = $1218;
                      $1223 = (($4) + 545|0);
                      $1224 = (($1223) + 1|0);
                      $1225 = HEAP8[$1224>>0]|0;
                      __THREW__ = 0;
                      $1226 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1227 = __THREW__; __THREW__ = 0;
                      $1228 = $1227&1;
                      if ($1228) {
                       label = 122;
                       break L1;
                      }
                      $1229 = (($1226) + 19|0);
                      $1230 = (($1229) + 1|0);
                      HEAP8[$1230>>0] = $1225;
                      $1231 = (($4) + 547|0);
                      $1232 = HEAP8[$1231>>0]|0;
                      __THREW__ = 0;
                      $1233 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1234 = __THREW__; __THREW__ = 0;
                      $1235 = $1234&1;
                      if ($1235) {
                       label = 122;
                       break L1;
                      }
                      $1236 = (($1233) + 18|0);
                      HEAP8[$1236>>0] = $1232;
                      __THREW__ = 0;
                      $1237 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1238 = __THREW__; __THREW__ = 0;
                      $1239 = $1238&1;
                      if ($1239) {
                       label = 122;
                       break L1;
                      }
                      $1240 = (($1237) + 17|0);
                      HEAP8[$1240>>0] = 1;
                      $1241 = (($4) + 160|0);
                      $1242 = +HEAPF64[$1241>>3];
                      __THREW__ = 0;
                      $1243 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1244 = __THREW__; __THREW__ = 0;
                      $1245 = $1244&1;
                      if ($1245) {
                       label = 122;
                       break L1;
                      }
                      $1246 = (($1243) + 8|0);
                      HEAPF64[$1246>>3] = $1242;
                      $1247 = (($4) + 548|0);
                      $1248 = HEAP8[$1247>>0]|0;
                      __THREW__ = 0;
                      $1249 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1250 = __THREW__; __THREW__ = 0;
                      $1251 = $1250&1;
                      if ($1251) {
                       label = 122;
                       break L1;
                      }
                      $1252 = (($1249) + 19|0);
                      HEAP8[$1252>>0] = $1248;
                      $1253 = (($4) + 548|0);
                      $1254 = (($1253) + 1|0);
                      $1255 = HEAP8[$1254>>0]|0;
                      __THREW__ = 0;
                      $1256 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1257 = __THREW__; __THREW__ = 0;
                      $1258 = $1257&1;
                      if ($1258) {
                       label = 122;
                       break L1;
                      }
                      $1259 = (($1256) + 19|0);
                      $1260 = (($1259) + 1|0);
                      HEAP8[$1260>>0] = $1255;
                      $1261 = (($4) + 550|0);
                      $1262 = HEAP8[$1261>>0]|0;
                      __THREW__ = 0;
                      $1263 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1264 = __THREW__; __THREW__ = 0;
                      $1265 = $1264&1;
                      if ($1265) {
                       label = 122;
                       break L1;
                      }
                      $1266 = (($1263) + 18|0);
                      HEAP8[$1266>>0] = $1262;
                      __THREW__ = 0;
                      $1267 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1268 = __THREW__; __THREW__ = 0;
                      $1269 = $1268&1;
                      if ($1269) {
                       label = 122;
                       break L1;
                      }
                      $1270 = (($1267) + 17|0);
                      HEAP8[$1270>>0] = 1;
                      $1271 = (($4) + 200|0);
                      $1272 = +HEAPF64[$1271>>3];
                      __THREW__ = 0;
                      $1273 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1274 = __THREW__; __THREW__ = 0;
                      $1275 = $1274&1;
                      if ($1275) {
                       label = 122;
                       break L1;
                      }
                      $1276 = (($1273) + 8|0);
                      HEAPF64[$1276>>3] = $1272;
                      $1277 = (($4) + 551|0);
                      $1278 = HEAP8[$1277>>0]|0;
                      __THREW__ = 0;
                      $1279 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1280 = __THREW__; __THREW__ = 0;
                      $1281 = $1280&1;
                      if ($1281) {
                       label = 122;
                       break L1;
                      }
                      $1282 = (($1279) + 19|0);
                      HEAP8[$1282>>0] = $1278;
                      $1283 = (($4) + 551|0);
                      $1284 = (($1283) + 1|0);
                      $1285 = HEAP8[$1284>>0]|0;
                      __THREW__ = 0;
                      $1286 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1287 = __THREW__; __THREW__ = 0;
                      $1288 = $1287&1;
                      if ($1288) {
                       label = 122;
                       break L1;
                      }
                      $1289 = (($1286) + 19|0);
                      $1290 = (($1289) + 1|0);
                      HEAP8[$1290>>0] = $1285;
                      $1291 = (($4) + 553|0);
                      $1292 = HEAP8[$1291>>0]|0;
                      __THREW__ = 0;
                      $1293 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1294 = __THREW__; __THREW__ = 0;
                      $1295 = $1294&1;
                      if ($1295) {
                       label = 122;
                       break L1;
                      }
                      $1296 = (($1293) + 18|0);
                      HEAP8[$1296>>0] = $1292;
                      __THREW__ = 0;
                      invoke_vii(382,($vfree|0),0);
                      $1297 = __THREW__; __THREW__ = 0;
                      $1298 = $1297&1;
                      if ($1298) {
                       label = 122;
                       break L1;
                      }
                      $1299 = $1;
                      $1300 = HEAP32[$1299>>2]|0;
                      $1301 = (($1300) + 8|0);
                      $1302 = HEAP32[$1301>>2]|0;
                      __THREW__ = 0;
                      (invoke_iiii($1302|0,($1299|0),($vinfos|0),($vfree|0))|0);
                      $1303 = __THREW__; __THREW__ = 0;
                      $1304 = $1303&1;
                      if ($1304) {
                       label = 123;
                       break L1;
                      }
                      __THREW__ = 0;
                      invoke_vi(366,($vfree|0));
                      $1305 = __THREW__; __THREW__ = 0;
                      $1306 = $1305&1;
                      if ($1306) {
                       label = 122;
                       break L1;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos);
                      break L772;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $1307 = $ij5;
                  $1308 = (($1307) + 1)|0;
                  $ij5 = $1308;
                 }
                } else {
                }
               } while(0);
               $1317 = $ij3;
               $1318 = (($1317) + 1)|0;
               $ij3 = $1318;
              }
              label = 130;
             } else {
              label = 130;
             }
            } else {
             label = 130;
            }
           } else {
            label = 130;
           }
          } else {
           label = 130;
          }
         } else {
          label = 130;
         }
        } else {
         label = 130;
        }
       } while(0);
       if ((label|0) == 130) {
        label = 0;
       }
       $1319 = $bgotonextstatement;
       $1320 = $1319&1;
       if ($1320) {
        $bgotonextstatement4 = 1;
        $1321 = (($4) + 160|0);
        $1322 = +HEAPF64[$1321>>3];
        $1323 = -3.14159265358979 + $1322;
        $1324 = (+__Z5IKabsd($1323));
        $1325 = 3.14159265358979 + $1324;
        $1326 = (+__Z6IKfmoddd($1325,6.2831853071795898));
        $1327 = -3.14159265358979 + $1326;
        HEAPF64[$evalcond>>3] = $1327;
        $1328 = (($4) + 432|0);
        $1329 = +HEAPF64[$1328>>3];
        $1330 = 1.0 + $1329;
        $1331 = (($evalcond) + 8|0);
        HEAPF64[$1331>>3] = $1330;
        $1332 = (($4) + 360|0);
        $1333 = +HEAPF64[$1332>>3];
        $1334 = (($evalcond) + 16|0);
        HEAPF64[$1334>>3] = $1333;
        $1335 = (($4) + 408|0);
        $1336 = +HEAPF64[$1335>>3];
        $1337 = (($evalcond) + 24|0);
        HEAPF64[$1337>>3] = $1336;
        $1338 = (($4) + 288|0);
        $1339 = +HEAPF64[$1338>>3];
        $1340 = (($evalcond) + 32|0);
        HEAPF64[$1340>>3] = $1339;
        $1341 = (($4) + 384|0);
        $1342 = +HEAPF64[$1341>>3];
        $1343 = (($evalcond) + 40|0);
        HEAPF64[$1343>>3] = $1342;
        $1344 = +HEAPF64[$evalcond>>3];
        $1345 = (+__Z5IKabsd($1344));
        $1346 = $1345 < 9.9999999999999995E-7;
        do {
         if ($1346) {
          $1347 = (($evalcond) + 8|0);
          $1348 = +HEAPF64[$1347>>3];
          $1349 = (+__Z5IKabsd($1348));
          $1350 = $1349 < 9.9999999999999995E-7;
          if ($1350) {
           $1351 = (($evalcond) + 16|0);
           $1352 = +HEAPF64[$1351>>3];
           $1353 = (+__Z5IKabsd($1352));
           $1354 = $1353 < 9.9999999999999995E-7;
           if ($1354) {
            $1355 = (($evalcond) + 24|0);
            $1356 = +HEAPF64[$1355>>3];
            $1357 = (+__Z5IKabsd($1356));
            $1358 = $1357 < 9.9999999999999995E-7;
            if ($1358) {
             $1359 = (($evalcond) + 32|0);
             $1360 = +HEAPF64[$1359>>3];
             $1361 = (+__Z5IKabsd($1360));
             $1362 = $1361 < 9.9999999999999995E-7;
             if ($1362) {
              $1363 = (($evalcond) + 40|0);
              $1364 = +HEAPF64[$1363>>3];
              $1365 = (+__Z5IKabsd($1364));
              $1366 = $1365 < 9.9999999999999995E-7;
              if (!($1366)) {
               label = 238;
               break;
              }
              $bgotonextstatement4 = 0;
              ;HEAP8[$j3valid8+0>>0]=0|0;HEAP8[$j3valid8+1>>0]=0|0;
              $1367 = (($4) + 547|0);
              HEAP8[$1367>>0] = 2;
              $1368 = (($4) + 288|0);
              $1369 = +HEAPF64[$1368>>3];
              $1370 = (($4) + 360|0);
              $1371 = +HEAPF64[$1370>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x119,$1369,$1371,1.9999999999999999E-6);
              $1372 = (($x119) + 8|0);
              $1373 = HEAP8[$1372>>0]|0;
              $1374 = $1373&1;
              if (!($1374)) {
               break;
              }
              $1375 = +HEAPF64[$x119>>3];
              $x118 = $1375;
              $1376 = $x118;
              $1377 = -1.0 * $1376;
              HEAPF64[$j3array5>>3] = $1377;
              $1378 = +HEAPF64[$j3array5>>3];
              $1379 = (+__Z5IKsind($1378));
              HEAPF64[$sj3array7>>3] = $1379;
              $1380 = +HEAPF64[$j3array5>>3];
              $1381 = (+__Z5IKcosd($1380));
              HEAPF64[$cj3array6>>3] = $1381;
              $1382 = $x118;
              $1383 = -1.0 * $1382;
              $1384 = 3.14159265358979 + $1383;
              $1385 = (($j3array5) + 8|0);
              HEAPF64[$1385>>3] = $1384;
              $1386 = (($j3array5) + 8|0);
              $1387 = +HEAPF64[$1386>>3];
              $1388 = (+__Z5IKsind($1387));
              $1389 = (($sj3array7) + 8|0);
              HEAPF64[$1389>>3] = $1388;
              $1390 = (($j3array5) + 8|0);
              $1391 = +HEAPF64[$1390>>3];
              $1392 = (+__Z5IKcosd($1391));
              $1393 = (($cj3array6) + 8|0);
              HEAPF64[$1393>>3] = $1392;
              $1394 = +HEAPF64[$j3array5>>3];
              $1395 = $1394 > 3.14159265358979;
              if ($1395) {
               $1396 = +HEAPF64[$j3array5>>3];
               $1397 = $1396 - 6.2831853071795898;
               HEAPF64[$j3array5>>3] = $1397;
              } else {
               $1398 = +HEAPF64[$j3array5>>3];
               $1399 = $1398 < -3.14159265358979;
               if ($1399) {
                $1400 = +HEAPF64[$j3array5>>3];
                $1401 = $1400 + 6.2831853071795898;
                HEAPF64[$j3array5>>3] = $1401;
               }
              }
              HEAP8[$j3valid8>>0] = 1;
              $1402 = (($j3array5) + 8|0);
              $1403 = +HEAPF64[$1402>>3];
              $1404 = $1403 > 3.14159265358979;
              if ($1404) {
               $1405 = (($j3array5) + 8|0);
               $1406 = +HEAPF64[$1405>>3];
               $1407 = $1406 - 6.2831853071795898;
               HEAPF64[$1405>>3] = $1407;
              } else {
               $1408 = (($j3array5) + 8|0);
               $1409 = +HEAPF64[$1408>>3];
               $1410 = $1409 < -3.14159265358979;
               if ($1410) {
                $1411 = (($j3array5) + 8|0);
                $1412 = +HEAPF64[$1411>>3];
                $1413 = $1412 + 6.2831853071795898;
                HEAPF64[$1411>>3] = $1413;
               }
              }
              $1414 = (($j3valid8) + 1|0);
              HEAP8[$1414>>0] = 1;
              $ij39 = 0;
              while(1) {
               $1415 = $ij39;
               $1416 = ($1415|0)<(2);
               if (!($1416)) {
                break;
               }
               $1417 = $ij39;
               $1418 = (($j3valid8) + ($1417)|0);
               $1419 = HEAP8[$1418>>0]|0;
               $1420 = $1419&1;
               L866: do {
                if ($1420) {
                 $1421 = $ij39;
                 $1422 = $1421&255;
                 $1423 = (($4) + 545|0);
                 HEAP8[$1423>>0] = $1422;
                 $1424 = (($4) + 545|0);
                 $1425 = (($1424) + 1|0);
                 HEAP8[$1425>>0] = -1;
                 $1426 = $ij39;
                 $1427 = (($1426) + 1)|0;
                 $iij310 = $1427;
                 L869: while(1) {
                  $1428 = $iij310;
                  $1429 = ($1428|0)<(2);
                  if (!($1429)) {
                   break;
                  }
                  $1430 = $iij310;
                  $1431 = (($j3valid8) + ($1430)|0);
                  $1432 = HEAP8[$1431>>0]|0;
                  $1433 = $1432&1;
                  do {
                   if ($1433) {
                    $1434 = $ij39;
                    $1435 = (($cj3array6) + ($1434<<3)|0);
                    $1436 = +HEAPF64[$1435>>3];
                    $1437 = $iij310;
                    $1438 = (($cj3array6) + ($1437<<3)|0);
                    $1439 = +HEAPF64[$1438>>3];
                    $1440 = $1436 - $1439;
                    $1441 = (+__Z5IKabsd($1440));
                    $1442 = $1441 < 9.9999999999999995E-7;
                    if (!($1442)) {
                     break;
                    }
                    $1443 = $ij39;
                    $1444 = (($sj3array7) + ($1443<<3)|0);
                    $1445 = +HEAPF64[$1444>>3];
                    $1446 = $iij310;
                    $1447 = (($sj3array7) + ($1446<<3)|0);
                    $1448 = +HEAPF64[$1447>>3];
                    $1449 = $1445 - $1448;
                    $1450 = (+__Z5IKabsd($1449));
                    $1451 = $1450 < 9.9999999999999995E-7;
                    if ($1451) {
                     label = 160;
                     break L869;
                    }
                   }
                  } while(0);
                  $1458 = $iij310;
                  $1459 = (($1458) + 1)|0;
                  $iij310 = $1459;
                 }
                 if ((label|0) == 160) {
                  label = 0;
                  $1452 = $iij310;
                  $1453 = (($j3valid8) + ($1452)|0);
                  HEAP8[$1453>>0] = 0;
                  $1454 = $iij310;
                  $1455 = $1454&255;
                  $1456 = (($4) + 545|0);
                  $1457 = (($1456) + 1|0);
                  HEAP8[$1457>>0] = $1455;
                 }
                 $1460 = $ij39;
                 $1461 = (($j3array5) + ($1460<<3)|0);
                 $1462 = +HEAPF64[$1461>>3];
                 $1463 = (($4) + 120|0);
                 HEAPF64[$1463>>3] = $1462;
                 $1464 = $ij39;
                 $1465 = (($cj3array6) + ($1464<<3)|0);
                 $1466 = +HEAPF64[$1465>>3];
                 $1467 = (($4) + 128|0);
                 HEAPF64[$1467>>3] = $1466;
                 $1468 = $ij39;
                 $1469 = (($sj3array7) + ($1468<<3)|0);
                 $1470 = +HEAPF64[$1469>>3];
                 $1471 = (($4) + 136|0);
                 HEAPF64[$1471>>3] = $1470;
                 $1472 = (($4) + 288|0);
                 $1473 = +HEAPF64[$1472>>3];
                 $1474 = -1.0 * $1473;
                 $1475 = (($4) + 120|0);
                 $1476 = +HEAPF64[$1475>>3];
                 $1477 = (+__Z5IKsind($1476));
                 $1478 = $1474 * $1477;
                 $1479 = (($4) + 360|0);
                 $1480 = +HEAPF64[$1479>>3];
                 $1481 = (($4) + 120|0);
                 $1482 = +HEAPF64[$1481>>3];
                 $1483 = (+__Z5IKcosd($1482));
                 $1484 = $1480 * $1483;
                 $1485 = $1478 + $1484;
                 HEAPF64[$evalcond11>>3] = $1485;
                 $1486 = +HEAPF64[$evalcond11>>3];
                 $1487 = (+__Z5IKabsd($1486));
                 $1488 = $1487 > 5.0000000000000004E-6;
                 if ($1488) {
                  break;
                 }
                 ;HEAP8[$j5valid15+0>>0]=0|0;
                 $1489 = (($4) + 553|0);
                 HEAP8[$1489>>0] = 1;
                 $1490 = (($4) + 264|0);
                 $1491 = +HEAPF64[$1490>>3];
                 $1492 = 1.0 * $1491;
                 $x120 = $1492;
                 $1493 = (($4) + 136|0);
                 $1494 = +HEAPF64[$1493>>3];
                 $1495 = -1.0 * $1494;
                 $1496 = $x120;
                 $1497 = $1495 * $1496;
                 $1498 = (($4) + 128|0);
                 $1499 = +HEAPF64[$1498>>3];
                 $1500 = -1.0 * $1499;
                 $1501 = (($4) + 240|0);
                 $1502 = +HEAPF64[$1501>>3];
                 $1503 = $1500 * $1502;
                 $1504 = $1497 + $1503;
                 $1505 = (+__Z5IKabsd($1504));
                 $1506 = $1505 < 1.9999999999999999E-6;
                 do {
                  if ($1506) {
                   $1507 = (($4) + 240|0);
                   $1508 = +HEAPF64[$1507>>3];
                   $1509 = (($4) + 136|0);
                   $1510 = +HEAPF64[$1509>>3];
                   $1511 = $1508 * $1510;
                   $1512 = (($4) + 128|0);
                   $1513 = +HEAPF64[$1512>>3];
                   $1514 = -1.0 * $1513;
                   $1515 = $x120;
                   $1516 = $1514 * $1515;
                   $1517 = $1511 + $1516;
                   $1518 = (+__Z5IKabsd($1517));
                   $1519 = $1518 < 1.9999999999999999E-6;
                   if (!($1519)) {
                    break;
                   }
                   $1520 = (($4) + 136|0);
                   $1521 = +HEAPF64[$1520>>3];
                   $1522 = -1.0 * $1521;
                   $1523 = $x120;
                   $1524 = $1522 * $1523;
                   $1525 = (($4) + 128|0);
                   $1526 = +HEAPF64[$1525>>3];
                   $1527 = -1.0 * $1526;
                   $1528 = (($4) + 240|0);
                   $1529 = +HEAPF64[$1528>>3];
                   $1530 = $1527 * $1529;
                   $1531 = $1524 + $1530;
                   $1532 = (+__Z5IKsqrd($1531));
                   $1533 = (($4) + 240|0);
                   $1534 = +HEAPF64[$1533>>3];
                   $1535 = (($4) + 136|0);
                   $1536 = +HEAPF64[$1535>>3];
                   $1537 = $1534 * $1536;
                   $1538 = (($4) + 128|0);
                   $1539 = +HEAPF64[$1538>>3];
                   $1540 = -1.0 * $1539;
                   $1541 = $x120;
                   $1542 = $1540 * $1541;
                   $1543 = $1537 + $1542;
                   $1544 = (+__Z5IKsqrd($1543));
                   $1545 = $1532 + $1544;
                   $1546 = $1545 - 1.0;
                   $1547 = (+__Z5IKabsd($1546));
                   $1548 = $1547 <= 1.9999999999999999E-6;
                   if (!($1548)) {
                    break;
                   }
                   break L866;
                  }
                 } while(0);
                 $1549 = (($4) + 136|0);
                 $1550 = +HEAPF64[$1549>>3];
                 $1551 = -1.0 * $1550;
                 $1552 = $x120;
                 $1553 = $1551 * $1552;
                 $1554 = (($4) + 128|0);
                 $1555 = +HEAPF64[$1554>>3];
                 $1556 = -1.0 * $1555;
                 $1557 = (($4) + 240|0);
                 $1558 = +HEAPF64[$1557>>3];
                 $1559 = $1556 * $1558;
                 $1560 = $1553 + $1559;
                 $1561 = (($4) + 240|0);
                 $1562 = +HEAPF64[$1561>>3];
                 $1563 = (($4) + 136|0);
                 $1564 = +HEAPF64[$1563>>3];
                 $1565 = $1562 * $1564;
                 $1566 = (($4) + 128|0);
                 $1567 = +HEAPF64[$1566>>3];
                 $1568 = -1.0 * $1567;
                 $1569 = $x120;
                 $1570 = $1568 * $1569;
                 $1571 = $1565 + $1570;
                 $1572 = (+__Z7IKatan2dd($1560,$1571));
                 HEAPF64[$j5array12>>3] = $1572;
                 $1573 = +HEAPF64[$j5array12>>3];
                 $1574 = (+__Z5IKsind($1573));
                 HEAPF64[$sj5array14>>3] = $1574;
                 $1575 = +HEAPF64[$j5array12>>3];
                 $1576 = (+__Z5IKcosd($1575));
                 HEAPF64[$cj5array13>>3] = $1576;
                 $1577 = +HEAPF64[$j5array12>>3];
                 $1578 = $1577 > 3.14159265358979;
                 if ($1578) {
                  $1579 = +HEAPF64[$j5array12>>3];
                  $1580 = $1579 - 6.2831853071795898;
                  HEAPF64[$j5array12>>3] = $1580;
                 } else {
                  $1581 = +HEAPF64[$j5array12>>3];
                  $1582 = $1581 < -3.14159265358979;
                  if ($1582) {
                   $1583 = +HEAPF64[$j5array12>>3];
                   $1584 = $1583 + 6.2831853071795898;
                   HEAPF64[$j5array12>>3] = $1584;
                  }
                 }
                 HEAP8[$j5valid15>>0] = 1;
                 $ij516 = 0;
                 while(1) {
                  $1585 = $ij516;
                  $1586 = ($1585|0)<(1);
                  if (!($1586)) {
                   break;
                  }
                  $1587 = $ij516;
                  $1588 = (($j5valid15) + ($1587)|0);
                  $1589 = HEAP8[$1588>>0]|0;
                  $1590 = $1589&1;
                  L898: do {
                   if ($1590) {
                    $1591 = $ij516;
                    $1592 = $1591&255;
                    $1593 = (($4) + 551|0);
                    HEAP8[$1593>>0] = $1592;
                    $1594 = (($4) + 551|0);
                    $1595 = (($1594) + 1|0);
                    HEAP8[$1595>>0] = -1;
                    $1596 = $ij516;
                    $1597 = (($1596) + 1)|0;
                    $iij517 = $1597;
                    L901: while(1) {
                     $1598 = $iij517;
                     $1599 = ($1598|0)<(1);
                     if (!($1599)) {
                      break;
                     }
                     $1600 = $iij517;
                     $1601 = (($j5valid15) + ($1600)|0);
                     $1602 = HEAP8[$1601>>0]|0;
                     $1603 = $1602&1;
                     do {
                      if ($1603) {
                       $1604 = $ij516;
                       $1605 = (($cj5array13) + ($1604<<3)|0);
                       $1606 = +HEAPF64[$1605>>3];
                       $1607 = $iij517;
                       $1608 = (($cj5array13) + ($1607<<3)|0);
                       $1609 = +HEAPF64[$1608>>3];
                       $1610 = $1606 - $1609;
                       $1611 = (+__Z5IKabsd($1610));
                       $1612 = $1611 < 9.9999999999999995E-7;
                       if (!($1612)) {
                        break;
                       }
                       $1613 = $ij516;
                       $1614 = (($sj5array14) + ($1613<<3)|0);
                       $1615 = +HEAPF64[$1614>>3];
                       $1616 = $iij517;
                       $1617 = (($sj5array14) + ($1616<<3)|0);
                       $1618 = +HEAPF64[$1617>>3];
                       $1619 = $1615 - $1618;
                       $1620 = (+__Z5IKabsd($1619));
                       $1621 = $1620 < 9.9999999999999995E-7;
                       if ($1621) {
                        label = 183;
                        break L901;
                       }
                      }
                     } while(0);
                     $1628 = $iij517;
                     $1629 = (($1628) + 1)|0;
                     $iij517 = $1629;
                    }
                    if ((label|0) == 183) {
                     label = 0;
                     $1622 = $iij517;
                     $1623 = (($j5valid15) + ($1622)|0);
                     HEAP8[$1623>>0] = 0;
                     $1624 = $iij517;
                     $1625 = $1624&255;
                     $1626 = (($4) + 551|0);
                     $1627 = (($1626) + 1|0);
                     HEAP8[$1627>>0] = $1625;
                    }
                    $1630 = $ij516;
                    $1631 = (($j5array12) + ($1630<<3)|0);
                    $1632 = +HEAPF64[$1631>>3];
                    $1633 = (($4) + 200|0);
                    HEAPF64[$1633>>3] = $1632;
                    $1634 = $ij516;
                    $1635 = (($cj5array13) + ($1634<<3)|0);
                    $1636 = +HEAPF64[$1635>>3];
                    $1637 = (($4) + 208|0);
                    HEAPF64[$1637>>3] = $1636;
                    $1638 = $ij516;
                    $1639 = (($sj5array14) + ($1638<<3)|0);
                    $1640 = +HEAPF64[$1639>>3];
                    $1641 = (($4) + 216|0);
                    HEAPF64[$1641>>3] = $1640;
                    $1642 = (($4) + 200|0);
                    $1643 = +HEAPF64[$1642>>3];
                    $1644 = (+__Z5IKcosd($1643));
                    $x121 = $1644;
                    $1645 = (($4) + 200|0);
                    $1646 = +HEAPF64[$1645>>3];
                    $1647 = (+__Z5IKsind($1646));
                    $x122 = $1647;
                    $1648 = (($4) + 136|0);
                    $1649 = +HEAPF64[$1648>>3];
                    $1650 = 1.0 * $1649;
                    $x123 = $1650;
                    $1651 = (($4) + 136|0);
                    $1652 = +HEAPF64[$1651>>3];
                    $1653 = $x122;
                    $1654 = $1652 * $1653;
                    $x124 = $1654;
                    $1655 = (($4) + 128|0);
                    $1656 = +HEAPF64[$1655>>3];
                    $1657 = $x121;
                    $1658 = $1656 * $1657;
                    $x125 = $1658;
                    $1659 = $x122;
                    $1660 = 1.0 * $1659;
                    $x126 = $1660;
                    $1661 = $x124;
                    $1662 = $x125;
                    $1663 = $1661 + $1662;
                    $x127 = $1663;
                    $1664 = (($4) + 312|0);
                    $1665 = +HEAPF64[$1664>>3];
                    $1666 = (($4) + 136|0);
                    $1667 = +HEAPF64[$1666>>3];
                    $1668 = $1665 * $1667;
                    $1669 = $x122;
                    $1670 = $1668 + $1669;
                    $1671 = (($4) + 128|0);
                    $1672 = +HEAPF64[$1671>>3];
                    $1673 = (($4) + 240|0);
                    $1674 = +HEAPF64[$1673>>3];
                    $1675 = $1672 * $1674;
                    $1676 = $1670 + $1675;
                    HEAPF64[$evalcond18>>3] = $1676;
                    $1677 = (($4) + 336|0);
                    $1678 = +HEAPF64[$1677>>3];
                    $1679 = (($4) + 136|0);
                    $1680 = +HEAPF64[$1679>>3];
                    $1681 = $1678 * $1680;
                    $1682 = $x121;
                    $1683 = $1681 + $1682;
                    $1684 = (($4) + 128|0);
                    $1685 = +HEAPF64[$1684>>3];
                    $1686 = (($4) + 264|0);
                    $1687 = +HEAPF64[$1686>>3];
                    $1688 = $1685 * $1687;
                    $1689 = $1683 + $1688;
                    $1690 = (($evalcond18) + 8|0);
                    HEAPF64[$1690>>3] = $1689;
                    $1691 = (($4) + 240|0);
                    $1692 = +HEAPF64[$1691>>3];
                    $1693 = -1.0 * $1692;
                    $1694 = $x123;
                    $1695 = $1693 * $1694;
                    $1696 = $x121;
                    $1697 = $1695 + $1696;
                    $1698 = (($4) + 128|0);
                    $1699 = +HEAPF64[$1698>>3];
                    $1700 = (($4) + 312|0);
                    $1701 = +HEAPF64[$1700>>3];
                    $1702 = $1699 * $1701;
                    $1703 = $1697 + $1702;
                    $1704 = (($evalcond18) + 16|0);
                    HEAPF64[$1704>>3] = $1703;
                    $1705 = $x127;
                    $1706 = (($4) + 264|0);
                    $1707 = +HEAPF64[$1706>>3];
                    $1708 = $1705 + $1707;
                    $1709 = (($evalcond18) + 24|0);
                    HEAPF64[$1709>>3] = $1708;
                    $1710 = $x127;
                    $1711 = (($4) + 312|0);
                    $1712 = +HEAPF64[$1711>>3];
                    $1713 = $1710 + $1712;
                    $1714 = (($evalcond18) + 32|0);
                    HEAPF64[$1714>>3] = $1713;
                    $1715 = (($4) + 128|0);
                    $1716 = +HEAPF64[$1715>>3];
                    $1717 = $x122;
                    $1718 = $1716 * $1717;
                    $1719 = $x121;
                    $1720 = -1.0 * $1719;
                    $1721 = $x123;
                    $1722 = $1720 * $1721;
                    $1723 = $1718 + $1722;
                    $1724 = (($4) + 240|0);
                    $1725 = +HEAPF64[$1724>>3];
                    $1726 = $1723 + $1725;
                    $1727 = (($evalcond18) + 40|0);
                    HEAPF64[$1727>>3] = $1726;
                    $1728 = (($4) + 136|0);
                    $1729 = +HEAPF64[$1728>>3];
                    $1730 = $x121;
                    $1731 = $1729 * $1730;
                    $1732 = (($4) + 128|0);
                    $1733 = +HEAPF64[$1732>>3];
                    $1734 = -1.0 * $1733;
                    $1735 = $x126;
                    $1736 = $1734 * $1735;
                    $1737 = $1731 + $1736;
                    $1738 = (($4) + 336|0);
                    $1739 = +HEAPF64[$1738>>3];
                    $1740 = $1737 + $1739;
                    $1741 = (($evalcond18) + 48|0);
                    HEAPF64[$1741>>3] = $1740;
                    $1742 = (($4) + 264|0);
                    $1743 = +HEAPF64[$1742>>3];
                    $1744 = -1.0 * $1743;
                    $1745 = $x123;
                    $1746 = $1744 * $1745;
                    $1747 = $x126;
                    $1748 = -1.0 * $1747;
                    $1749 = $1746 + $1748;
                    $1750 = (($4) + 128|0);
                    $1751 = +HEAPF64[$1750>>3];
                    $1752 = (($4) + 336|0);
                    $1753 = +HEAPF64[$1752>>3];
                    $1754 = $1751 * $1753;
                    $1755 = $1749 + $1754;
                    $1756 = (($evalcond18) + 56|0);
                    HEAPF64[$1756>>3] = $1755;
                    $1757 = +HEAPF64[$evalcond18>>3];
                    $1758 = (+__Z5IKabsd($1757));
                    $1759 = $1758 > 5.0000000000000004E-6;
                    do {
                     if (!($1759)) {
                      $1760 = (($evalcond18) + 8|0);
                      $1761 = +HEAPF64[$1760>>3];
                      $1762 = (+__Z5IKabsd($1761));
                      $1763 = $1762 > 5.0000000000000004E-6;
                      if ($1763) {
                       break;
                      }
                      $1764 = (($evalcond18) + 16|0);
                      $1765 = +HEAPF64[$1764>>3];
                      $1766 = (+__Z5IKabsd($1765));
                      $1767 = $1766 > 5.0000000000000004E-6;
                      if ($1767) {
                       break;
                      }
                      $1768 = (($evalcond18) + 24|0);
                      $1769 = +HEAPF64[$1768>>3];
                      $1770 = (+__Z5IKabsd($1769));
                      $1771 = $1770 > 5.0000000000000004E-6;
                      if ($1771) {
                       break;
                      }
                      $1772 = (($evalcond18) + 32|0);
                      $1773 = +HEAPF64[$1772>>3];
                      $1774 = (+__Z5IKabsd($1773));
                      $1775 = $1774 > 5.0000000000000004E-6;
                      if ($1775) {
                       break;
                      }
                      $1776 = (($evalcond18) + 40|0);
                      $1777 = +HEAPF64[$1776>>3];
                      $1778 = (+__Z5IKabsd($1777));
                      $1779 = $1778 > 5.0000000000000004E-6;
                      if ($1779) {
                       break;
                      }
                      $1780 = (($evalcond18) + 48|0);
                      $1781 = +HEAPF64[$1780>>3];
                      $1782 = (+__Z5IKabsd($1781));
                      $1783 = $1782 > 5.0000000000000004E-6;
                      if ($1783) {
                       break;
                      }
                      $1784 = (($evalcond18) + 56|0);
                      $1785 = +HEAPF64[$1784>>3];
                      $1786 = (+__Z5IKabsd($1785));
                      $1787 = $1786 > 5.0000000000000004E-6;
                      if ($1787) {
                       break;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos19,6);
                      __THREW__ = 0;
                      $1788 = (invoke_iii(381,($vinfos19|0),0)|0);
                      $1789 = __THREW__; __THREW__ = 0;
                      $1790 = $1789&1;
                      if ($1790) {
                       label = 230;
                       break L1;
                      }
                      $1791 = (($1788) + 17|0);
                      HEAP8[$1791>>0] = 1;
                      $1792 = +HEAPF64[$4>>3];
                      __THREW__ = 0;
                      $1793 = (invoke_iii(381,($vinfos19|0),0)|0);
                      $1794 = __THREW__; __THREW__ = 0;
                      $1795 = $1794&1;
                      if ($1795) {
                       label = 230;
                       break L1;
                      }
                      $1796 = (($1793) + 8|0);
                      HEAPF64[$1796>>3] = $1792;
                      $1797 = (($4) + 536|0);
                      $1798 = HEAP8[$1797>>0]|0;
                      __THREW__ = 0;
                      $1799 = (invoke_iii(381,($vinfos19|0),0)|0);
                      $1800 = __THREW__; __THREW__ = 0;
                      $1801 = $1800&1;
                      if ($1801) {
                       label = 230;
                       break L1;
                      }
                      $1802 = (($1799) + 19|0);
                      HEAP8[$1802>>0] = $1798;
                      $1803 = (($4) + 536|0);
                      $1804 = (($1803) + 1|0);
                      $1805 = HEAP8[$1804>>0]|0;
                      __THREW__ = 0;
                      $1806 = (invoke_iii(381,($vinfos19|0),0)|0);
                      $1807 = __THREW__; __THREW__ = 0;
                      $1808 = $1807&1;
                      if ($1808) {
                       label = 230;
                       break L1;
                      }
                      $1809 = (($1806) + 19|0);
                      $1810 = (($1809) + 1|0);
                      HEAP8[$1810>>0] = $1805;
                      $1811 = (($4) + 538|0);
                      $1812 = HEAP8[$1811>>0]|0;
                      __THREW__ = 0;
                      $1813 = (invoke_iii(381,($vinfos19|0),0)|0);
                      $1814 = __THREW__; __THREW__ = 0;
                      $1815 = $1814&1;
                      if ($1815) {
                       label = 230;
                       break L1;
                      }
                      $1816 = (($1813) + 18|0);
                      HEAP8[$1816>>0] = $1812;
                      __THREW__ = 0;
                      $1817 = (invoke_iii(381,($vinfos19|0),1)|0);
                      $1818 = __THREW__; __THREW__ = 0;
                      $1819 = $1818&1;
                      if ($1819) {
                       label = 230;
                       break L1;
                      }
                      $1820 = (($1817) + 17|0);
                      HEAP8[$1820>>0] = 1;
                      $1821 = (($4) + 40|0);
                      $1822 = +HEAPF64[$1821>>3];
                      __THREW__ = 0;
                      $1823 = (invoke_iii(381,($vinfos19|0),1)|0);
                      $1824 = __THREW__; __THREW__ = 0;
                      $1825 = $1824&1;
                      if ($1825) {
                       label = 230;
                       break L1;
                      }
                      $1826 = (($1823) + 8|0);
                      HEAPF64[$1826>>3] = $1822;
                      $1827 = (($4) + 539|0);
                      $1828 = HEAP8[$1827>>0]|0;
                      __THREW__ = 0;
                      $1829 = (invoke_iii(381,($vinfos19|0),1)|0);
                      $1830 = __THREW__; __THREW__ = 0;
                      $1831 = $1830&1;
                      if ($1831) {
                       label = 230;
                       break L1;
                      }
                      $1832 = (($1829) + 19|0);
                      HEAP8[$1832>>0] = $1828;
                      $1833 = (($4) + 539|0);
                      $1834 = (($1833) + 1|0);
                      $1835 = HEAP8[$1834>>0]|0;
                      __THREW__ = 0;
                      $1836 = (invoke_iii(381,($vinfos19|0),1)|0);
                      $1837 = __THREW__; __THREW__ = 0;
                      $1838 = $1837&1;
                      if ($1838) {
                       label = 230;
                       break L1;
                      }
                      $1839 = (($1836) + 19|0);
                      $1840 = (($1839) + 1|0);
                      HEAP8[$1840>>0] = $1835;
                      $1841 = (($4) + 541|0);
                      $1842 = HEAP8[$1841>>0]|0;
                      __THREW__ = 0;
                      $1843 = (invoke_iii(381,($vinfos19|0),1)|0);
                      $1844 = __THREW__; __THREW__ = 0;
                      $1845 = $1844&1;
                      if ($1845) {
                       label = 230;
                       break L1;
                      }
                      $1846 = (($1843) + 18|0);
                      HEAP8[$1846>>0] = $1842;
                      __THREW__ = 0;
                      $1847 = (invoke_iii(381,($vinfos19|0),2)|0);
                      $1848 = __THREW__; __THREW__ = 0;
                      $1849 = $1848&1;
                      if ($1849) {
                       label = 230;
                       break L1;
                      }
                      $1850 = (($1847) + 17|0);
                      HEAP8[$1850>>0] = 1;
                      $1851 = (($4) + 80|0);
                      $1852 = +HEAPF64[$1851>>3];
                      __THREW__ = 0;
                      $1853 = (invoke_iii(381,($vinfos19|0),2)|0);
                      $1854 = __THREW__; __THREW__ = 0;
                      $1855 = $1854&1;
                      if ($1855) {
                       label = 230;
                       break L1;
                      }
                      $1856 = (($1853) + 8|0);
                      HEAPF64[$1856>>3] = $1852;
                      $1857 = (($4) + 542|0);
                      $1858 = HEAP8[$1857>>0]|0;
                      __THREW__ = 0;
                      $1859 = (invoke_iii(381,($vinfos19|0),2)|0);
                      $1860 = __THREW__; __THREW__ = 0;
                      $1861 = $1860&1;
                      if ($1861) {
                       label = 230;
                       break L1;
                      }
                      $1862 = (($1859) + 19|0);
                      HEAP8[$1862>>0] = $1858;
                      $1863 = (($4) + 542|0);
                      $1864 = (($1863) + 1|0);
                      $1865 = HEAP8[$1864>>0]|0;
                      __THREW__ = 0;
                      $1866 = (invoke_iii(381,($vinfos19|0),2)|0);
                      $1867 = __THREW__; __THREW__ = 0;
                      $1868 = $1867&1;
                      if ($1868) {
                       label = 230;
                       break L1;
                      }
                      $1869 = (($1866) + 19|0);
                      $1870 = (($1869) + 1|0);
                      HEAP8[$1870>>0] = $1865;
                      $1871 = (($4) + 544|0);
                      $1872 = HEAP8[$1871>>0]|0;
                      __THREW__ = 0;
                      $1873 = (invoke_iii(381,($vinfos19|0),2)|0);
                      $1874 = __THREW__; __THREW__ = 0;
                      $1875 = $1874&1;
                      if ($1875) {
                       label = 230;
                       break L1;
                      }
                      $1876 = (($1873) + 18|0);
                      HEAP8[$1876>>0] = $1872;
                      __THREW__ = 0;
                      $1877 = (invoke_iii(381,($vinfos19|0),3)|0);
                      $1878 = __THREW__; __THREW__ = 0;
                      $1879 = $1878&1;
                      if ($1879) {
                       label = 230;
                       break L1;
                      }
                      $1880 = (($1877) + 17|0);
                      HEAP8[$1880>>0] = 1;
                      $1881 = (($4) + 120|0);
                      $1882 = +HEAPF64[$1881>>3];
                      __THREW__ = 0;
                      $1883 = (invoke_iii(381,($vinfos19|0),3)|0);
                      $1884 = __THREW__; __THREW__ = 0;
                      $1885 = $1884&1;
                      if ($1885) {
                       label = 230;
                       break L1;
                      }
                      $1886 = (($1883) + 8|0);
                      HEAPF64[$1886>>3] = $1882;
                      $1887 = (($4) + 545|0);
                      $1888 = HEAP8[$1887>>0]|0;
                      __THREW__ = 0;
                      $1889 = (invoke_iii(381,($vinfos19|0),3)|0);
                      $1890 = __THREW__; __THREW__ = 0;
                      $1891 = $1890&1;
                      if ($1891) {
                       label = 230;
                       break L1;
                      }
                      $1892 = (($1889) + 19|0);
                      HEAP8[$1892>>0] = $1888;
                      $1893 = (($4) + 545|0);
                      $1894 = (($1893) + 1|0);
                      $1895 = HEAP8[$1894>>0]|0;
                      __THREW__ = 0;
                      $1896 = (invoke_iii(381,($vinfos19|0),3)|0);
                      $1897 = __THREW__; __THREW__ = 0;
                      $1898 = $1897&1;
                      if ($1898) {
                       label = 230;
                       break L1;
                      }
                      $1899 = (($1896) + 19|0);
                      $1900 = (($1899) + 1|0);
                      HEAP8[$1900>>0] = $1895;
                      $1901 = (($4) + 547|0);
                      $1902 = HEAP8[$1901>>0]|0;
                      __THREW__ = 0;
                      $1903 = (invoke_iii(381,($vinfos19|0),3)|0);
                      $1904 = __THREW__; __THREW__ = 0;
                      $1905 = $1904&1;
                      if ($1905) {
                       label = 230;
                       break L1;
                      }
                      $1906 = (($1903) + 18|0);
                      HEAP8[$1906>>0] = $1902;
                      __THREW__ = 0;
                      $1907 = (invoke_iii(381,($vinfos19|0),4)|0);
                      $1908 = __THREW__; __THREW__ = 0;
                      $1909 = $1908&1;
                      if ($1909) {
                       label = 230;
                       break L1;
                      }
                      $1910 = (($1907) + 17|0);
                      HEAP8[$1910>>0] = 1;
                      $1911 = (($4) + 160|0);
                      $1912 = +HEAPF64[$1911>>3];
                      __THREW__ = 0;
                      $1913 = (invoke_iii(381,($vinfos19|0),4)|0);
                      $1914 = __THREW__; __THREW__ = 0;
                      $1915 = $1914&1;
                      if ($1915) {
                       label = 230;
                       break L1;
                      }
                      $1916 = (($1913) + 8|0);
                      HEAPF64[$1916>>3] = $1912;
                      $1917 = (($4) + 548|0);
                      $1918 = HEAP8[$1917>>0]|0;
                      __THREW__ = 0;
                      $1919 = (invoke_iii(381,($vinfos19|0),4)|0);
                      $1920 = __THREW__; __THREW__ = 0;
                      $1921 = $1920&1;
                      if ($1921) {
                       label = 230;
                       break L1;
                      }
                      $1922 = (($1919) + 19|0);
                      HEAP8[$1922>>0] = $1918;
                      $1923 = (($4) + 548|0);
                      $1924 = (($1923) + 1|0);
                      $1925 = HEAP8[$1924>>0]|0;
                      __THREW__ = 0;
                      $1926 = (invoke_iii(381,($vinfos19|0),4)|0);
                      $1927 = __THREW__; __THREW__ = 0;
                      $1928 = $1927&1;
                      if ($1928) {
                       label = 230;
                       break L1;
                      }
                      $1929 = (($1926) + 19|0);
                      $1930 = (($1929) + 1|0);
                      HEAP8[$1930>>0] = $1925;
                      $1931 = (($4) + 550|0);
                      $1932 = HEAP8[$1931>>0]|0;
                      __THREW__ = 0;
                      $1933 = (invoke_iii(381,($vinfos19|0),4)|0);
                      $1934 = __THREW__; __THREW__ = 0;
                      $1935 = $1934&1;
                      if ($1935) {
                       label = 230;
                       break L1;
                      }
                      $1936 = (($1933) + 18|0);
                      HEAP8[$1936>>0] = $1932;
                      __THREW__ = 0;
                      $1937 = (invoke_iii(381,($vinfos19|0),5)|0);
                      $1938 = __THREW__; __THREW__ = 0;
                      $1939 = $1938&1;
                      if ($1939) {
                       label = 230;
                       break L1;
                      }
                      $1940 = (($1937) + 17|0);
                      HEAP8[$1940>>0] = 1;
                      $1941 = (($4) + 200|0);
                      $1942 = +HEAPF64[$1941>>3];
                      __THREW__ = 0;
                      $1943 = (invoke_iii(381,($vinfos19|0),5)|0);
                      $1944 = __THREW__; __THREW__ = 0;
                      $1945 = $1944&1;
                      if ($1945) {
                       label = 230;
                       break L1;
                      }
                      $1946 = (($1943) + 8|0);
                      HEAPF64[$1946>>3] = $1942;
                      $1947 = (($4) + 551|0);
                      $1948 = HEAP8[$1947>>0]|0;
                      __THREW__ = 0;
                      $1949 = (invoke_iii(381,($vinfos19|0),5)|0);
                      $1950 = __THREW__; __THREW__ = 0;
                      $1951 = $1950&1;
                      if ($1951) {
                       label = 230;
                       break L1;
                      }
                      $1952 = (($1949) + 19|0);
                      HEAP8[$1952>>0] = $1948;
                      $1953 = (($4) + 551|0);
                      $1954 = (($1953) + 1|0);
                      $1955 = HEAP8[$1954>>0]|0;
                      __THREW__ = 0;
                      $1956 = (invoke_iii(381,($vinfos19|0),5)|0);
                      $1957 = __THREW__; __THREW__ = 0;
                      $1958 = $1957&1;
                      if ($1958) {
                       label = 230;
                       break L1;
                      }
                      $1959 = (($1956) + 19|0);
                      $1960 = (($1959) + 1|0);
                      HEAP8[$1960>>0] = $1955;
                      $1961 = (($4) + 553|0);
                      $1962 = HEAP8[$1961>>0]|0;
                      __THREW__ = 0;
                      $1963 = (invoke_iii(381,($vinfos19|0),5)|0);
                      $1964 = __THREW__; __THREW__ = 0;
                      $1965 = $1964&1;
                      if ($1965) {
                       label = 230;
                       break L1;
                      }
                      $1966 = (($1963) + 18|0);
                      HEAP8[$1966>>0] = $1962;
                      __THREW__ = 0;
                      invoke_vii(382,($vfree20|0),0);
                      $1967 = __THREW__; __THREW__ = 0;
                      $1968 = $1967&1;
                      if ($1968) {
                       label = 230;
                       break L1;
                      }
                      $1969 = $1;
                      $1970 = HEAP32[$1969>>2]|0;
                      $1971 = (($1970) + 8|0);
                      $1972 = HEAP32[$1971>>2]|0;
                      __THREW__ = 0;
                      (invoke_iiii($1972|0,($1969|0),($vinfos19|0),($vfree20|0))|0);
                      $1973 = __THREW__; __THREW__ = 0;
                      $1974 = $1973&1;
                      if ($1974) {
                       label = 231;
                       break L1;
                      }
                      __THREW__ = 0;
                      invoke_vi(366,($vfree20|0));
                      $1975 = __THREW__; __THREW__ = 0;
                      $1976 = $1975&1;
                      if ($1976) {
                       label = 230;
                       break L1;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos19);
                      break L898;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $1977 = $ij516;
                  $1978 = (($1977) + 1)|0;
                  $ij516 = $1978;
                 }
                } else {
                }
               } while(0);
               $1987 = $ij39;
               $1988 = (($1987) + 1)|0;
               $ij39 = $1988;
              }
              label = 238;
             } else {
              label = 238;
             }
            } else {
             label = 238;
            }
           } else {
            label = 238;
           }
          } else {
           label = 238;
          }
         } else {
          label = 238;
         }
        } while(0);
        if ((label|0) == 238) {
         label = 0;
        }
        $1989 = $bgotonextstatement4;
        $1990 = $1989&1;
        if ($1990) {
         $bgotonextstatement21 = 1;
         $bgotonextstatement21 = 0;
         $1991 = $bgotonextstatement21;
         $1992 = $1991&1;
         if ($1992) {
         }
        }
       }
      } else {
       ;HEAP8[$j3valid25+0>>0]=0|0;
       $1993 = (($4) + 547|0);
       HEAP8[$1993>>0] = 1;
       $1994 = (($4) + 176|0);
       $1995 = +HEAPF64[$1994>>3];
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x129,$1995,-1);
       $1996 = (($x129) + 8|0);
       $1997 = HEAP8[$1996>>0]|0;
       $1998 = $1997&1;
       if (!($1998)) {
        break;
       }
       $1999 = +HEAPF64[$x129>>3];
       $x128 = $1999;
       $2000 = (($4) + 288|0);
       $2001 = +HEAPF64[$2000>>3];
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x130,$2001,-1);
       $2002 = (($x130) + 8|0);
       $2003 = HEAP8[$2002>>0]|0;
       $2004 = $2003&1;
       if (!($2004)) {
        break;
       }
       $2005 = $x128;
       $2006 = +HEAPF64[$x130>>3];
       $2007 = $2005 * $2006;
       $2008 = (($4) + 168|0);
       $2009 = +HEAPF64[$2008>>3];
       $2010 = (($4) + 168|0);
       $2011 = +HEAPF64[$2010>>3];
       $2012 = $2009 * $2011;
       $2013 = -1.0 * $2012;
       $2014 = 1.0 + $2013;
       $2015 = (($4) + 360|0);
       $2016 = +HEAPF64[$2015>>3];
       $2017 = (($4) + 360|0);
       $2018 = +HEAPF64[$2017>>3];
       $2019 = $2016 * $2018;
       $2020 = -1.0 * $2019;
       $2021 = $2014 + $2020;
       $2022 = $2007 * $2021;
       $2023 = (+__Z5IKabsd($2022));
       $2024 = $2023 < 1.9999999999999999E-6;
       if ($2024) {
        $2025 = (($4) + 360|0);
        $2026 = +HEAPF64[$2025>>3];
        $2027 = -1.0 * $2026;
        $2028 = $x128;
        $2029 = $2027 * $2028;
        $2030 = (+__Z5IKabsd($2029));
        $2031 = $2030 < 1.9999999999999999E-6;
        if ($2031) {
         $2032 = $x128;
         $2033 = +HEAPF64[$x130>>3];
         $2034 = $2032 * $2033;
         $2035 = (($4) + 168|0);
         $2036 = +HEAPF64[$2035>>3];
         $2037 = (($4) + 168|0);
         $2038 = +HEAPF64[$2037>>3];
         $2039 = $2036 * $2038;
         $2040 = -1.0 * $2039;
         $2041 = 1.0 + $2040;
         $2042 = (($4) + 360|0);
         $2043 = +HEAPF64[$2042>>3];
         $2044 = (($4) + 360|0);
         $2045 = +HEAPF64[$2044>>3];
         $2046 = $2043 * $2045;
         $2047 = -1.0 * $2046;
         $2048 = $2041 + $2047;
         $2049 = $2034 * $2048;
         $2050 = (+__Z5IKsqrd($2049));
         $2051 = (($4) + 360|0);
         $2052 = +HEAPF64[$2051>>3];
         $2053 = -1.0 * $2052;
         $2054 = $x128;
         $2055 = $2053 * $2054;
         $2056 = (+__Z5IKsqrd($2055));
         $2057 = $2050 + $2056;
         $2058 = $2057 - 1.0;
         $2059 = (+__Z5IKabsd($2058));
         $2060 = $2059 <= 1.9999999999999999E-6;
         if ($2060) {
          break;
         }
        }
       }
       $2061 = $x128;
       $2062 = +HEAPF64[$x130>>3];
       $2063 = $2061 * $2062;
       $2064 = (($4) + 168|0);
       $2065 = +HEAPF64[$2064>>3];
       $2066 = (($4) + 168|0);
       $2067 = +HEAPF64[$2066>>3];
       $2068 = $2065 * $2067;
       $2069 = -1.0 * $2068;
       $2070 = 1.0 + $2069;
       $2071 = (($4) + 360|0);
       $2072 = +HEAPF64[$2071>>3];
       $2073 = (($4) + 360|0);
       $2074 = +HEAPF64[$2073>>3];
       $2075 = $2072 * $2074;
       $2076 = -1.0 * $2075;
       $2077 = $2070 + $2076;
       $2078 = $2063 * $2077;
       $2079 = (($4) + 360|0);
       $2080 = +HEAPF64[$2079>>3];
       $2081 = -1.0 * $2080;
       $2082 = $x128;
       $2083 = $2081 * $2082;
       $2084 = (+__Z7IKatan2dd($2078,$2083));
       HEAPF64[$j3array22>>3] = $2084;
       $2085 = +HEAPF64[$j3array22>>3];
       $2086 = (+__Z5IKsind($2085));
       HEAPF64[$sj3array24>>3] = $2086;
       $2087 = +HEAPF64[$j3array22>>3];
       $2088 = (+__Z5IKcosd($2087));
       HEAPF64[$cj3array23>>3] = $2088;
       $2089 = +HEAPF64[$j3array22>>3];
       $2090 = $2089 > 3.14159265358979;
       if ($2090) {
        $2091 = +HEAPF64[$j3array22>>3];
        $2092 = $2091 - 6.2831853071795898;
        HEAPF64[$j3array22>>3] = $2092;
       } else {
        $2093 = +HEAPF64[$j3array22>>3];
        $2094 = $2093 < -3.14159265358979;
        if ($2094) {
         $2095 = +HEAPF64[$j3array22>>3];
         $2096 = $2095 + 6.2831853071795898;
         HEAPF64[$j3array22>>3] = $2096;
        }
       }
       HEAP8[$j3valid25>>0] = 1;
       $ij326 = 0;
       while(1) {
        $2097 = $ij326;
        $2098 = ($2097|0)<(1);
        if (!($2098)) {
         break;
        }
        $2099 = $ij326;
        $2100 = (($j3valid25) + ($2099)|0);
        $2101 = HEAP8[$2100>>0]|0;
        $2102 = $2101&1;
        L993: do {
         if ($2102) {
          $2103 = $ij326;
          $2104 = $2103&255;
          $2105 = (($4) + 545|0);
          HEAP8[$2105>>0] = $2104;
          $2106 = (($4) + 545|0);
          $2107 = (($2106) + 1|0);
          HEAP8[$2107>>0] = -1;
          $2108 = $ij326;
          $2109 = (($2108) + 1)|0;
          $iij327 = $2109;
          L996: while(1) {
           $2110 = $iij327;
           $2111 = ($2110|0)<(1);
           if (!($2111)) {
            break;
           }
           $2112 = $iij327;
           $2113 = (($j3valid25) + ($2112)|0);
           $2114 = HEAP8[$2113>>0]|0;
           $2115 = $2114&1;
           do {
            if ($2115) {
             $2116 = $ij326;
             $2117 = (($cj3array23) + ($2116<<3)|0);
             $2118 = +HEAPF64[$2117>>3];
             $2119 = $iij327;
             $2120 = (($cj3array23) + ($2119<<3)|0);
             $2121 = +HEAPF64[$2120>>3];
             $2122 = $2118 - $2121;
             $2123 = (+__Z5IKabsd($2122));
             $2124 = $2123 < 9.9999999999999995E-7;
             if (!($2124)) {
              break;
             }
             $2125 = $ij326;
             $2126 = (($sj3array24) + ($2125<<3)|0);
             $2127 = +HEAPF64[$2126>>3];
             $2128 = $iij327;
             $2129 = (($sj3array24) + ($2128<<3)|0);
             $2130 = +HEAPF64[$2129>>3];
             $2131 = $2127 - $2130;
             $2132 = (+__Z5IKabsd($2131));
             $2133 = $2132 < 9.9999999999999995E-7;
             if ($2133) {
              label = 269;
              break L996;
             }
            }
           } while(0);
           $2140 = $iij327;
           $2141 = (($2140) + 1)|0;
           $iij327 = $2141;
          }
          if ((label|0) == 269) {
           label = 0;
           $2134 = $iij327;
           $2135 = (($j3valid25) + ($2134)|0);
           HEAP8[$2135>>0] = 0;
           $2136 = $iij327;
           $2137 = $2136&255;
           $2138 = (($4) + 545|0);
           $2139 = (($2138) + 1|0);
           HEAP8[$2139>>0] = $2137;
          }
          $2142 = $ij326;
          $2143 = (($j3array22) + ($2142<<3)|0);
          $2144 = +HEAPF64[$2143>>3];
          $2145 = (($4) + 120|0);
          HEAPF64[$2145>>3] = $2144;
          $2146 = $ij326;
          $2147 = (($cj3array23) + ($2146<<3)|0);
          $2148 = +HEAPF64[$2147>>3];
          $2149 = (($4) + 128|0);
          HEAPF64[$2149>>3] = $2148;
          $2150 = $ij326;
          $2151 = (($sj3array24) + ($2150<<3)|0);
          $2152 = +HEAPF64[$2151>>3];
          $2153 = (($4) + 136|0);
          HEAPF64[$2153>>3] = $2152;
          $2154 = (($4) + 120|0);
          $2155 = +HEAPF64[$2154>>3];
          $2156 = (+__Z5IKsind($2155));
          $x131 = $2156;
          $2157 = (($4) + 120|0);
          $2158 = +HEAPF64[$2157>>3];
          $2159 = (+__Z5IKcosd($2158));
          $x132 = $2159;
          $2160 = (($4) + 176|0);
          $2161 = +HEAPF64[$2160>>3];
          $2162 = 1.0 * $2161;
          $x133 = $2162;
          $2163 = (($4) + 360|0);
          $2164 = +HEAPF64[$2163>>3];
          $2165 = $x132;
          $2166 = $2164 * $2165;
          $x134 = $2166;
          $2167 = (($4) + 176|0);
          $2168 = +HEAPF64[$2167>>3];
          $2169 = $x131;
          $2170 = $2168 * $2169;
          $x135 = $2170;
          $2171 = (($4) + 288|0);
          $2172 = +HEAPF64[$2171>>3];
          $2173 = 1.0 * $2172;
          $2174 = $x131;
          $2175 = $2173 * $2174;
          $x136 = $2175;
          $2176 = (($4) + 176|0);
          $2177 = +HEAPF64[$2176>>3];
          $2178 = $x132;
          $2179 = $2177 * $2178;
          $2180 = (($4) + 360|0);
          $2181 = +HEAPF64[$2180>>3];
          $2182 = $2179 + $2181;
          HEAPF64[$evalcond28>>3] = $2182;
          $2183 = (($4) + 288|0);
          $2184 = +HEAPF64[$2183>>3];
          $2185 = $x131;
          $2186 = -1.0 * $2185;
          $2187 = $x133;
          $2188 = $2186 * $2187;
          $2189 = $2184 + $2188;
          $2190 = (($evalcond28) + 8|0);
          HEAPF64[$2190>>3] = $2189;
          $2191 = (($4) + 360|0);
          $2192 = +HEAPF64[$2191>>3];
          $2193 = $x131;
          $2194 = $2192 * $2193;
          $2195 = (($4) + 288|0);
          $2196 = +HEAPF64[$2195>>3];
          $2197 = $x132;
          $2198 = $2196 * $2197;
          $2199 = $2194 + $2198;
          $2200 = (($evalcond28) + 16|0);
          HEAPF64[$2200>>3] = $2199;
          $2201 = (($4) + 176|0);
          $2202 = +HEAPF64[$2201>>3];
          $2203 = $x134;
          $2204 = $2202 + $2203;
          $2205 = $x136;
          $2206 = -1.0 * $2205;
          $2207 = $2204 + $2206;
          $2208 = (($evalcond28) + 24|0);
          HEAPF64[$2208>>3] = $2207;
          $2209 = (($4) + 432|0);
          $2210 = +HEAPF64[$2209>>3];
          $2211 = (($4) + 176|0);
          $2212 = +HEAPF64[$2211>>3];
          $2213 = $2210 * $2212;
          $2214 = (($4) + 168|0);
          $2215 = +HEAPF64[$2214>>3];
          $2216 = -1.0 * $2215;
          $2217 = $x136;
          $2218 = $2216 * $2217;
          $2219 = $2213 + $2218;
          $2220 = (($4) + 168|0);
          $2221 = +HEAPF64[$2220>>3];
          $2222 = $x134;
          $2223 = $2221 * $2222;
          $2224 = $2219 + $2223;
          $2225 = (($evalcond28) + 32|0);
          HEAPF64[$2225>>3] = $2224;
          $2226 = (($4) + 168|0);
          $2227 = +HEAPF64[$2226>>3];
          $2228 = (($4) + 384|0);
          $2229 = +HEAPF64[$2228>>3];
          $2230 = $2227 * $2229;
          $2231 = (($4) + 240|0);
          $2232 = +HEAPF64[$2231>>3];
          $2233 = $x135;
          $2234 = $2232 * $2233;
          $2235 = $2230 + $2234;
          $2236 = (($4) + 312|0);
          $2237 = +HEAPF64[$2236>>3];
          $2238 = -1.0 * $2237;
          $2239 = $x132;
          $2240 = $2238 * $2239;
          $2241 = $x133;
          $2242 = $2240 * $2241;
          $2243 = $2235 + $2242;
          $2244 = (($evalcond28) + 40|0);
          HEAPF64[$2244>>3] = $2243;
          $2245 = (($4) + 264|0);
          $2246 = +HEAPF64[$2245>>3];
          $2247 = $x135;
          $2248 = $2246 * $2247;
          $2249 = (($4) + 336|0);
          $2250 = +HEAPF64[$2249>>3];
          $2251 = -1.0 * $2250;
          $2252 = $x132;
          $2253 = $2251 * $2252;
          $2254 = $x133;
          $2255 = $2253 * $2254;
          $2256 = $2248 + $2255;
          $2257 = (($4) + 168|0);
          $2258 = +HEAPF64[$2257>>3];
          $2259 = (($4) + 408|0);
          $2260 = +HEAPF64[$2259>>3];
          $2261 = $2258 * $2260;
          $2262 = $2256 + $2261;
          $2263 = (($evalcond28) + 48|0);
          HEAPF64[$2263>>3] = $2262;
          $2264 = (($4) + 168|0);
          $2265 = +HEAPF64[$2264>>3];
          $2266 = (($4) + 432|0);
          $2267 = +HEAPF64[$2266>>3];
          $2268 = $2265 * $2267;
          $2269 = -1.0 + $2268;
          $2270 = $x133;
          $2271 = -1.0 * $2270;
          $2272 = $x134;
          $2273 = $2271 * $2272;
          $2274 = $2269 + $2273;
          $2275 = (($4) + 288|0);
          $2276 = +HEAPF64[$2275>>3];
          $2277 = $x135;
          $2278 = $2276 * $2277;
          $2279 = $2274 + $2278;
          $2280 = (($evalcond28) + 56|0);
          HEAPF64[$2280>>3] = $2279;
          $2281 = +HEAPF64[$evalcond28>>3];
          $2282 = (+__Z5IKabsd($2281));
          $2283 = $2282 > 5.0000000000000004E-6;
          do {
           if (!($2283)) {
            $2284 = (($evalcond28) + 8|0);
            $2285 = +HEAPF64[$2284>>3];
            $2286 = (+__Z5IKabsd($2285));
            $2287 = $2286 > 5.0000000000000004E-6;
            if ($2287) {
             break;
            }
            $2288 = (($evalcond28) + 16|0);
            $2289 = +HEAPF64[$2288>>3];
            $2290 = (+__Z5IKabsd($2289));
            $2291 = $2290 > 5.0000000000000004E-6;
            if ($2291) {
             break;
            }
            $2292 = (($evalcond28) + 24|0);
            $2293 = +HEAPF64[$2292>>3];
            $2294 = (+__Z5IKabsd($2293));
            $2295 = $2294 > 5.0000000000000004E-6;
            if ($2295) {
             break;
            }
            $2296 = (($evalcond28) + 32|0);
            $2297 = +HEAPF64[$2296>>3];
            $2298 = (+__Z5IKabsd($2297));
            $2299 = $2298 > 5.0000000000000004E-6;
            if ($2299) {
             break;
            }
            $2300 = (($evalcond28) + 40|0);
            $2301 = +HEAPF64[$2300>>3];
            $2302 = (+__Z5IKabsd($2301));
            $2303 = $2302 > 5.0000000000000004E-6;
            if ($2303) {
             break;
            }
            $2304 = (($evalcond28) + 48|0);
            $2305 = +HEAPF64[$2304>>3];
            $2306 = (+__Z5IKabsd($2305));
            $2307 = $2306 > 5.0000000000000004E-6;
            if ($2307) {
             break;
            }
            $2308 = (($evalcond28) + 56|0);
            $2309 = +HEAPF64[$2308>>3];
            $2310 = (+__Z5IKabsd($2309));
            $2311 = $2310 > 5.0000000000000004E-6;
            if ($2311) {
             break;
            }
            $2312 = (($4) + 8|0);
            $2313 = +HEAPF64[$2312>>3];
            $2314 = (($4) + 320|0);
            $2315 = +HEAPF64[$2314>>3];
            $2316 = $2313 * $2315;
            $x137 = $2316;
            $2317 = (($4) + 16|0);
            $2318 = +HEAPF64[$2317>>3];
            $2319 = 1.0 * $2318;
            $x138 = $2319;
            $2320 = (($4) + 8|0);
            $2321 = +HEAPF64[$2320>>3];
            $2322 = (($4) + 344|0);
            $2323 = +HEAPF64[$2322>>3];
            $2324 = $2321 * $2323;
            $x139 = $2324;
            $2325 = (($4) + 88|0);
            $2326 = +HEAPF64[$2325>>3];
            $2327 = 1.0 * $2326;
            $x140 = $2327;
            $2328 = (($4) + 48|0);
            $2329 = +HEAPF64[$2328>>3];
            $2330 = (($4) + 96|0);
            $2331 = +HEAPF64[$2330>>3];
            $2332 = $2329 * $2331;
            $x141 = $2332;
            $2333 = (($4) + 8|0);
            $2334 = +HEAPF64[$2333>>3];
            $2335 = (($4) + 368|0);
            $2336 = +HEAPF64[$2335>>3];
            $2337 = $2334 * $2336;
            $x142 = $2337;
            $2338 = $x84;
            $x143 = $2338;
            $2339 = (($4) + 88|0);
            $2340 = +HEAPF64[$2339>>3];
            $2341 = (($4) + 56|0);
            $2342 = +HEAPF64[$2341>>3];
            $2343 = $2340 * $2342;
            $2344 = $x141;
            $2345 = $2343 + $2344;
            $x144 = $2345;
            $2346 = (($4) + 8|0);
            $2347 = +HEAPF64[$2346>>3];
            $2348 = $x143;
            $2349 = $2347 * $2348;
            $x145 = $2349;
            $2350 = $x87;
            $x146 = $2350;
            $2351 = (($4) + 392|0);
            $2352 = +HEAPF64[$2351>>3];
            $2353 = $x143;
            $2354 = $2352 * $2353;
            $2355 = $x137;
            $2356 = $x146;
            $2357 = $2355 * $2356;
            $2358 = $2354 + $2357;
            $2359 = (($4) + 248|0);
            $2360 = +HEAPF64[$2359>>3];
            $2361 = -1.0 * $2360;
            $2362 = $x138;
            $2363 = $2361 * $2362;
            $2364 = $x146;
            $2365 = $2363 * $2364;
            $2366 = $2358 + $2365;
            $2367 = (($4) + 240|0);
            HEAPF64[$2367>>3] = $2366;
            $2368 = (($4) + 416|0);
            $2369 = +HEAPF64[$2368>>3];
            $2370 = $x143;
            $2371 = $2369 * $2370;
            $2372 = (($4) + 272|0);
            $2373 = +HEAPF64[$2372>>3];
            $2374 = -1.0 * $2373;
            $2375 = $x138;
            $2376 = $2374 * $2375;
            $2377 = $x146;
            $2378 = $2376 * $2377;
            $2379 = $2371 + $2378;
            $2380 = $x139;
            $2381 = $x146;
            $2382 = $2380 * $2381;
            $2383 = $2379 + $2382;
            $2384 = (($4) + 264|0);
            HEAPF64[$2384>>3] = $2383;
            $2385 = $x142;
            $2386 = $x146;
            $2387 = $2385 * $2386;
            $2388 = (($4) + 440|0);
            $2389 = +HEAPF64[$2388>>3];
            $2390 = $x143;
            $2391 = $2389 * $2390;
            $2392 = $2387 + $2391;
            $2393 = (($4) + 296|0);
            $2394 = +HEAPF64[$2393>>3];
            $2395 = -1.0 * $2394;
            $2396 = $x138;
            $2397 = $2395 * $2396;
            $2398 = $x146;
            $2399 = $2397 * $2398;
            $2400 = $2392 + $2399;
            $2401 = (($4) + 288|0);
            HEAPF64[$2401>>3] = $2400;
            $2402 = (($4) + 320|0);
            $2403 = +HEAPF64[$2402>>3];
            $2404 = (($4) + 16|0);
            $2405 = +HEAPF64[$2404>>3];
            $2406 = $2403 * $2405;
            $2407 = (($4) + 8|0);
            $2408 = +HEAPF64[$2407>>3];
            $2409 = (($4) + 248|0);
            $2410 = +HEAPF64[$2409>>3];
            $2411 = $2408 * $2410;
            $2412 = $2406 + $2411;
            $2413 = (($4) + 312|0);
            HEAPF64[$2413>>3] = $2412;
            $2414 = (($4) + 344|0);
            $2415 = +HEAPF64[$2414>>3];
            $2416 = (($4) + 16|0);
            $2417 = +HEAPF64[$2416>>3];
            $2418 = $2415 * $2417;
            $2419 = (($4) + 8|0);
            $2420 = +HEAPF64[$2419>>3];
            $2421 = (($4) + 272|0);
            $2422 = +HEAPF64[$2421>>3];
            $2423 = $2420 * $2422;
            $2424 = $2418 + $2423;
            $2425 = (($4) + 336|0);
            HEAPF64[$2425>>3] = $2424;
            $2426 = (($4) + 368|0);
            $2427 = +HEAPF64[$2426>>3];
            $2428 = (($4) + 16|0);
            $2429 = +HEAPF64[$2428>>3];
            $2430 = $2427 * $2429;
            $2431 = (($4) + 8|0);
            $2432 = +HEAPF64[$2431>>3];
            $2433 = (($4) + 296|0);
            $2434 = +HEAPF64[$2433>>3];
            $2435 = $2432 * $2434;
            $2436 = $2430 + $2435;
            $2437 = (($4) + 360|0);
            HEAPF64[$2437>>3] = $2436;
            $2438 = (($4) + 392|0);
            $2439 = +HEAPF64[$2438>>3];
            $2440 = $x144;
            $2441 = $2439 * $2440;
            $2442 = $x137;
            $2443 = $x143;
            $2444 = $2442 * $2443;
            $2445 = $2441 + $2444;
            $2446 = (($4) + 248|0);
            $2447 = +HEAPF64[$2446>>3];
            $2448 = -1.0 * $2447;
            $2449 = $x138;
            $2450 = $2448 * $2449;
            $2451 = $x143;
            $2452 = $2450 * $2451;
            $2453 = $2445 + $2452;
            $2454 = (($4) + 384|0);
            HEAPF64[$2454>>3] = $2453;
            $2455 = (($4) + 416|0);
            $2456 = +HEAPF64[$2455>>3];
            $2457 = $x144;
            $2458 = $2456 * $2457;
            $2459 = (($4) + 272|0);
            $2460 = +HEAPF64[$2459>>3];
            $2461 = -1.0 * $2460;
            $2462 = $x138;
            $2463 = $2461 * $2462;
            $2464 = $x143;
            $2465 = $2463 * $2464;
            $2466 = $2458 + $2465;
            $2467 = $x139;
            $2468 = $x143;
            $2469 = $2467 * $2468;
            $2470 = $2466 + $2469;
            $2471 = (($4) + 408|0);
            HEAPF64[$2471>>3] = $2470;
            $2472 = $x142;
            $2473 = $x143;
            $2474 = $2472 * $2473;
            $2475 = (($4) + 440|0);
            $2476 = +HEAPF64[$2475>>3];
            $2477 = $x144;
            $2478 = $2476 * $2477;
            $2479 = $2474 + $2478;
            $2480 = (($4) + 296|0);
            $2481 = +HEAPF64[$2480>>3];
            $2482 = -1.0 * $2481;
            $2483 = $x138;
            $2484 = $2482 * $2483;
            $2485 = $x143;
            $2486 = $2484 * $2485;
            $2487 = $2479 + $2486;
            $2488 = (($4) + 432|0);
            HEAPF64[$2488>>3] = $2487;
            $2489 = (($4) + 176|0);
            $2490 = +HEAPF64[$2489>>3];
            HEAPF64[$j5eval>>3] = $2490;
            $2491 = (($4) + 176|0);
            $2492 = +HEAPF64[$2491>>3];
            $2493 = (+__Z6IKsignd($2492));
            $2494 = (($j5eval) + 8|0);
            HEAPF64[$2494>>3] = $2493;
            $2495 = +HEAPF64[$j5eval>>3];
            $2496 = (+__Z5IKabsd($2495));
            $2497 = $2496 < 9.9999999999999995E-7;
            do {
             if ($2497) {
              label = 283;
             } else {
              $2498 = (($j5eval) + 8|0);
              $2499 = +HEAPF64[$2498>>3];
              $2500 = (+__Z5IKabsd($2499));
              $2501 = $2500 < 9.9999999999999995E-7;
              if ($2501) {
               label = 283;
               break;
              }
              ;HEAP8[$j5valid94+0>>0]=0|0;
              $6310 = (($4) + 553|0);
              HEAP8[$6310>>0] = 1;
              $6311 = (($4) + 408|0);
              $6312 = +HEAPF64[$6311>>3];
              $6313 = -1.0 * $6312;
              $6314 = (($4) + 384|0);
              $6315 = +HEAPF64[$6314>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x227,$6313,$6315,1.9999999999999999E-6);
              $6316 = (($x227) + 8|0);
              $6317 = HEAP8[$6316>>0]|0;
              $6318 = $6317&1;
              if (!($6318)) {
               break L993;
              }
              $6319 = (($4) + 176|0);
              $6320 = +HEAPF64[$6319>>3];
              $6321 = (+__Z6IKsignd($6320));
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x228,$6321,-1);
              $6322 = (($x228) + 8|0);
              $6323 = HEAP8[$6322>>0]|0;
              $6324 = $6323&1;
              if (!($6324)) {
               break L993;
              }
              $6325 = +HEAPF64[$x227>>3];
              $6326 = -1.5707963267949001 + $6325;
              $6327 = +HEAPF64[$x228>>3];
              $6328 = 1.5707963267949001 * $6327;
              $6329 = $6326 + $6328;
              HEAPF64[$j5array91>>3] = $6329;
              $6330 = +HEAPF64[$j5array91>>3];
              $6331 = (+__Z5IKsind($6330));
              HEAPF64[$sj5array93>>3] = $6331;
              $6332 = +HEAPF64[$j5array91>>3];
              $6333 = (+__Z5IKcosd($6332));
              HEAPF64[$cj5array92>>3] = $6333;
              $6334 = +HEAPF64[$j5array91>>3];
              $6335 = $6334 > 3.14159265358979;
              if ($6335) {
               $6336 = +HEAPF64[$j5array91>>3];
               $6337 = $6336 - 6.2831853071795898;
               HEAPF64[$j5array91>>3] = $6337;
              } else {
               $6338 = +HEAPF64[$j5array91>>3];
               $6339 = $6338 < -3.14159265358979;
               if ($6339) {
                $6340 = +HEAPF64[$j5array91>>3];
                $6341 = $6340 + 6.2831853071795898;
                HEAPF64[$j5array91>>3] = $6341;
               }
              }
              HEAP8[$j5valid94>>0] = 1;
              $ij595 = 0;
              while(1) {
               $6342 = $ij595;
               $6343 = ($6342|0)<(1);
               if (!($6343)) {
                break;
               }
               $6344 = $ij595;
               $6345 = (($j5valid94) + ($6344)|0);
               $6346 = HEAP8[$6345>>0]|0;
               $6347 = $6346&1;
               L1035: do {
                if ($6347) {
                 $6348 = $ij595;
                 $6349 = $6348&255;
                 $6350 = (($4) + 551|0);
                 HEAP8[$6350>>0] = $6349;
                 $6351 = (($4) + 551|0);
                 $6352 = (($6351) + 1|0);
                 HEAP8[$6352>>0] = -1;
                 $6353 = $ij595;
                 $6354 = (($6353) + 1)|0;
                 $iij596 = $6354;
                 L1038: while(1) {
                  $6355 = $iij596;
                  $6356 = ($6355|0)<(1);
                  if (!($6356)) {
                   break;
                  }
                  $6357 = $iij596;
                  $6358 = (($j5valid94) + ($6357)|0);
                  $6359 = HEAP8[$6358>>0]|0;
                  $6360 = $6359&1;
                  do {
                   if ($6360) {
                    $6361 = $ij595;
                    $6362 = (($cj5array92) + ($6361<<3)|0);
                    $6363 = +HEAPF64[$6362>>3];
                    $6364 = $iij596;
                    $6365 = (($cj5array92) + ($6364<<3)|0);
                    $6366 = +HEAPF64[$6365>>3];
                    $6367 = $6363 - $6366;
                    $6368 = (+__Z5IKabsd($6367));
                    $6369 = $6368 < 9.9999999999999995E-7;
                    if (!($6369)) {
                     break;
                    }
                    $6370 = $ij595;
                    $6371 = (($sj5array93) + ($6370<<3)|0);
                    $6372 = +HEAPF64[$6371>>3];
                    $6373 = $iij596;
                    $6374 = (($sj5array93) + ($6373<<3)|0);
                    $6375 = +HEAPF64[$6374>>3];
                    $6376 = $6372 - $6375;
                    $6377 = (+__Z5IKabsd($6376));
                    $6378 = $6377 < 9.9999999999999995E-7;
                    if ($6378) {
                     label = 807;
                     break L1038;
                    }
                   }
                  } while(0);
                  $6385 = $iij596;
                  $6386 = (($6385) + 1)|0;
                  $iij596 = $6386;
                 }
                 if ((label|0) == 807) {
                  label = 0;
                  $6379 = $iij596;
                  $6380 = (($j5valid94) + ($6379)|0);
                  HEAP8[$6380>>0] = 0;
                  $6381 = $iij596;
                  $6382 = $6381&255;
                  $6383 = (($4) + 551|0);
                  $6384 = (($6383) + 1|0);
                  HEAP8[$6384>>0] = $6382;
                 }
                 $6387 = $ij595;
                 $6388 = (($j5array91) + ($6387<<3)|0);
                 $6389 = +HEAPF64[$6388>>3];
                 $6390 = (($4) + 200|0);
                 HEAPF64[$6390>>3] = $6389;
                 $6391 = $ij595;
                 $6392 = (($cj5array92) + ($6391<<3)|0);
                 $6393 = +HEAPF64[$6392>>3];
                 $6394 = (($4) + 208|0);
                 HEAPF64[$6394>>3] = $6393;
                 $6395 = $ij595;
                 $6396 = (($sj5array93) + ($6395<<3)|0);
                 $6397 = +HEAPF64[$6396>>3];
                 $6398 = (($4) + 216|0);
                 HEAPF64[$6398>>3] = $6397;
                 $6399 = (($4) + 200|0);
                 $6400 = +HEAPF64[$6399>>3];
                 $6401 = (+__Z5IKsind($6400));
                 $x229 = $6401;
                 $6402 = (($4) + 200|0);
                 $6403 = +HEAPF64[$6402>>3];
                 $6404 = (+__Z5IKcosd($6403));
                 $x230 = $6404;
                 $6405 = (($4) + 168|0);
                 $6406 = +HEAPF64[$6405>>3];
                 $6407 = (($4) + 136|0);
                 $6408 = +HEAPF64[$6407>>3];
                 $6409 = $6406 * $6408;
                 $x231 = $6409;
                 $6410 = (($4) + 128|0);
                 $6411 = +HEAPF64[$6410>>3];
                 $6412 = (($4) + 312|0);
                 $6413 = +HEAPF64[$6412>>3];
                 $6414 = $6411 * $6413;
                 $x232 = $6414;
                 $6415 = (($4) + 264|0);
                 $6416 = +HEAPF64[$6415>>3];
                 $6417 = 1.0 * $6416;
                 $x233 = $6417;
                 $6418 = (($4) + 168|0);
                 $6419 = +HEAPF64[$6418>>3];
                 $6420 = 1.0 * $6419;
                 $x234 = $6420;
                 $6421 = (($4) + 240|0);
                 $6422 = +HEAPF64[$6421>>3];
                 $6423 = 1.0 * $6422;
                 $x235 = $6423;
                 $6424 = (($4) + 128|0);
                 $6425 = +HEAPF64[$6424>>3];
                 $6426 = (($4) + 336|0);
                 $6427 = +HEAPF64[$6426>>3];
                 $6428 = $6425 * $6427;
                 $x236 = $6428;
                 $6429 = (($4) + 128|0);
                 $6430 = +HEAPF64[$6429>>3];
                 $6431 = $x230;
                 $6432 = $6430 * $6431;
                 $x237 = $6432;
                 $6433 = (($4) + 128|0);
                 $6434 = +HEAPF64[$6433>>3];
                 $6435 = $x229;
                 $6436 = $6434 * $6435;
                 $x238 = $6436;
                 $6437 = $x230;
                 $6438 = 1.0 * $6437;
                 $x239 = $6438;
                 $6439 = (($4) + 176|0);
                 $6440 = +HEAPF64[$6439>>3];
                 $6441 = $x229;
                 $6442 = $6440 * $6441;
                 $6443 = (($4) + 408|0);
                 $6444 = +HEAPF64[$6443>>3];
                 $6445 = $6442 + $6444;
                 HEAPF64[$evalcond97>>3] = $6445;
                 $6446 = (($4) + 176|0);
                 $6447 = +HEAPF64[$6446>>3];
                 $6448 = -1.0 * $6447;
                 $6449 = $x239;
                 $6450 = $6448 * $6449;
                 $6451 = (($4) + 384|0);
                 $6452 = +HEAPF64[$6451>>3];
                 $6453 = $6450 + $6452;
                 $6454 = (($evalcond97) + 8|0);
                 HEAPF64[$6454>>3] = $6453;
                 $6455 = (($4) + 312|0);
                 $6456 = +HEAPF64[$6455>>3];
                 $6457 = (($4) + 136|0);
                 $6458 = +HEAPF64[$6457>>3];
                 $6459 = $6456 * $6458;
                 $6460 = $x229;
                 $6461 = $6459 + $6460;
                 $6462 = (($4) + 128|0);
                 $6463 = +HEAPF64[$6462>>3];
                 $6464 = (($4) + 240|0);
                 $6465 = +HEAPF64[$6464>>3];
                 $6466 = $6463 * $6465;
                 $6467 = $6461 + $6466;
                 $6468 = (($evalcond97) + 16|0);
                 HEAPF64[$6468>>3] = $6467;
                 $6469 = (($4) + 336|0);
                 $6470 = +HEAPF64[$6469>>3];
                 $6471 = (($4) + 136|0);
                 $6472 = +HEAPF64[$6471>>3];
                 $6473 = $6470 * $6472;
                 $6474 = $x230;
                 $6475 = $6473 + $6474;
                 $6476 = (($4) + 128|0);
                 $6477 = +HEAPF64[$6476>>3];
                 $6478 = (($4) + 264|0);
                 $6479 = +HEAPF64[$6478>>3];
                 $6480 = $6477 * $6479;
                 $6481 = $6475 + $6480;
                 $6482 = (($evalcond97) + 24|0);
                 HEAPF64[$6482>>3] = $6481;
                 $6483 = $x230;
                 $6484 = $x231;
                 $6485 = $6483 * $6484;
                 $6486 = $x238;
                 $6487 = $6485 + $6486;
                 $6488 = (($4) + 240|0);
                 $6489 = +HEAPF64[$6488>>3];
                 $6490 = $6487 + $6489;
                 $6491 = (($evalcond97) + 32|0);
                 HEAPF64[$6491>>3] = $6490;
                 $6492 = (($4) + 168|0);
                 $6493 = +HEAPF64[$6492>>3];
                 $6494 = $x238;
                 $6495 = $6493 * $6494;
                 $6496 = (($4) + 336|0);
                 $6497 = +HEAPF64[$6496>>3];
                 $6498 = $6495 + $6497;
                 $6499 = (($4) + 136|0);
                 $6500 = +HEAPF64[$6499>>3];
                 $6501 = $x230;
                 $6502 = $6500 * $6501;
                 $6503 = $6498 + $6502;
                 $6504 = (($evalcond97) + 40|0);
                 HEAPF64[$6504>>3] = $6503;
                 $6505 = $x236;
                 $6506 = (($4) + 168|0);
                 $6507 = +HEAPF64[$6506>>3];
                 $6508 = $x229;
                 $6509 = $6507 * $6508;
                 $6510 = $6505 + $6509;
                 $6511 = (($4) + 136|0);
                 $6512 = +HEAPF64[$6511>>3];
                 $6513 = -1.0 * $6512;
                 $6514 = $x233;
                 $6515 = $6513 * $6514;
                 $6516 = $6510 + $6515;
                 $6517 = (($evalcond97) + 48|0);
                 HEAPF64[$6517>>3] = $6516;
                 $6518 = $x237;
                 $6519 = $x229;
                 $6520 = -1.0 * $6519;
                 $6521 = $x231;
                 $6522 = $6520 * $6521;
                 $6523 = $6518 + $6522;
                 $6524 = (($4) + 264|0);
                 $6525 = +HEAPF64[$6524>>3];
                 $6526 = $6523 + $6525;
                 $6527 = (($evalcond97) + 56|0);
                 HEAPF64[$6527>>3] = $6526;
                 $6528 = (($4) + 136|0);
                 $6529 = +HEAPF64[$6528>>3];
                 $6530 = $x229;
                 $6531 = $6529 * $6530;
                 $6532 = (($4) + 312|0);
                 $6533 = +HEAPF64[$6532>>3];
                 $6534 = $6531 + $6533;
                 $6535 = $x234;
                 $6536 = -1.0 * $6535;
                 $6537 = $x237;
                 $6538 = $6536 * $6537;
                 $6539 = $6534 + $6538;
                 $6540 = (($evalcond97) + 64|0);
                 HEAPF64[$6540>>3] = $6539;
                 $6541 = $x230;
                 $6542 = -1.0 * $6541;
                 $6543 = $x234;
                 $6544 = $6542 * $6543;
                 $6545 = $x232;
                 $6546 = $6544 + $6545;
                 $6547 = (($4) + 136|0);
                 $6548 = +HEAPF64[$6547>>3];
                 $6549 = -1.0 * $6548;
                 $6550 = $x235;
                 $6551 = $6549 * $6550;
                 $6552 = $6546 + $6551;
                 $6553 = (($evalcond97) + 72|0);
                 HEAPF64[$6553>>3] = $6552;
                 $6554 = $x229;
                 $6555 = (($4) + 168|0);
                 $6556 = +HEAPF64[$6555>>3];
                 $6557 = $x236;
                 $6558 = $6556 * $6557;
                 $6559 = $6554 + $6558;
                 $6560 = $x231;
                 $6561 = -1.0 * $6560;
                 $6562 = $x233;
                 $6563 = $6561 * $6562;
                 $6564 = $6559 + $6563;
                 $6565 = (($4) + 408|0);
                 $6566 = +HEAPF64[$6565>>3];
                 $6567 = (($4) + 176|0);
                 $6568 = +HEAPF64[$6567>>3];
                 $6569 = $6566 * $6568;
                 $6570 = $6564 + $6569;
                 $6571 = (($evalcond97) + 80|0);
                 HEAPF64[$6571>>3] = $6570;
                 $6572 = (($4) + 384|0);
                 $6573 = +HEAPF64[$6572>>3];
                 $6574 = (($4) + 176|0);
                 $6575 = +HEAPF64[$6574>>3];
                 $6576 = $6573 * $6575;
                 $6577 = $x239;
                 $6578 = -1.0 * $6577;
                 $6579 = $6576 + $6578;
                 $6580 = (($4) + 168|0);
                 $6581 = +HEAPF64[$6580>>3];
                 $6582 = $x232;
                 $6583 = $6581 * $6582;
                 $6584 = $6579 + $6583;
                 $6585 = $x231;
                 $6586 = -1.0 * $6585;
                 $6587 = $x235;
                 $6588 = $6586 * $6587;
                 $6589 = $6584 + $6588;
                 $6590 = (($evalcond97) + 88|0);
                 HEAPF64[$6590>>3] = $6589;
                 $6591 = +HEAPF64[$evalcond97>>3];
                 $6592 = (+__Z5IKabsd($6591));
                 $6593 = $6592 > 5.0000000000000004E-6;
                 do {
                  if (!($6593)) {
                   $6594 = (($evalcond97) + 8|0);
                   $6595 = +HEAPF64[$6594>>3];
                   $6596 = (+__Z5IKabsd($6595));
                   $6597 = $6596 > 5.0000000000000004E-6;
                   if ($6597) {
                    break;
                   }
                   $6598 = (($evalcond97) + 16|0);
                   $6599 = +HEAPF64[$6598>>3];
                   $6600 = (+__Z5IKabsd($6599));
                   $6601 = $6600 > 5.0000000000000004E-6;
                   if ($6601) {
                    break;
                   }
                   $6602 = (($evalcond97) + 24|0);
                   $6603 = +HEAPF64[$6602>>3];
                   $6604 = (+__Z5IKabsd($6603));
                   $6605 = $6604 > 5.0000000000000004E-6;
                   if ($6605) {
                    break;
                   }
                   $6606 = (($evalcond97) + 32|0);
                   $6607 = +HEAPF64[$6606>>3];
                   $6608 = (+__Z5IKabsd($6607));
                   $6609 = $6608 > 5.0000000000000004E-6;
                   if ($6609) {
                    break;
                   }
                   $6610 = (($evalcond97) + 40|0);
                   $6611 = +HEAPF64[$6610>>3];
                   $6612 = (+__Z5IKabsd($6611));
                   $6613 = $6612 > 5.0000000000000004E-6;
                   if ($6613) {
                    break;
                   }
                   $6614 = (($evalcond97) + 48|0);
                   $6615 = +HEAPF64[$6614>>3];
                   $6616 = (+__Z5IKabsd($6615));
                   $6617 = $6616 > 5.0000000000000004E-6;
                   if ($6617) {
                    break;
                   }
                   $6618 = (($evalcond97) + 56|0);
                   $6619 = +HEAPF64[$6618>>3];
                   $6620 = (+__Z5IKabsd($6619));
                   $6621 = $6620 > 5.0000000000000004E-6;
                   if ($6621) {
                    break;
                   }
                   $6622 = (($evalcond97) + 64|0);
                   $6623 = +HEAPF64[$6622>>3];
                   $6624 = (+__Z5IKabsd($6623));
                   $6625 = $6624 > 5.0000000000000004E-6;
                   if ($6625) {
                    break;
                   }
                   $6626 = (($evalcond97) + 72|0);
                   $6627 = +HEAPF64[$6626>>3];
                   $6628 = (+__Z5IKabsd($6627));
                   $6629 = $6628 > 5.0000000000000004E-6;
                   if ($6629) {
                    break;
                   }
                   $6630 = (($evalcond97) + 80|0);
                   $6631 = +HEAPF64[$6630>>3];
                   $6632 = (+__Z5IKabsd($6631));
                   $6633 = $6632 > 5.0000000000000004E-6;
                   if ($6633) {
                    break;
                   }
                   $6634 = (($evalcond97) + 88|0);
                   $6635 = +HEAPF64[$6634>>3];
                   $6636 = (+__Z5IKabsd($6635));
                   $6637 = $6636 > 5.0000000000000004E-6;
                   if ($6637) {
                    break;
                   }
                   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos98,6);
                   __THREW__ = 0;
                   $6638 = (invoke_iii(381,($vinfos98|0),0)|0);
                   $6639 = __THREW__; __THREW__ = 0;
                   $6640 = $6639&1;
                   if ($6640) {
                    label = 858;
                    break L1;
                   }
                   $6641 = (($6638) + 17|0);
                   HEAP8[$6641>>0] = 1;
                   $6642 = +HEAPF64[$4>>3];
                   __THREW__ = 0;
                   $6643 = (invoke_iii(381,($vinfos98|0),0)|0);
                   $6644 = __THREW__; __THREW__ = 0;
                   $6645 = $6644&1;
                   if ($6645) {
                    label = 858;
                    break L1;
                   }
                   $6646 = (($6643) + 8|0);
                   HEAPF64[$6646>>3] = $6642;
                   $6647 = (($4) + 536|0);
                   $6648 = HEAP8[$6647>>0]|0;
                   __THREW__ = 0;
                   $6649 = (invoke_iii(381,($vinfos98|0),0)|0);
                   $6650 = __THREW__; __THREW__ = 0;
                   $6651 = $6650&1;
                   if ($6651) {
                    label = 858;
                    break L1;
                   }
                   $6652 = (($6649) + 19|0);
                   HEAP8[$6652>>0] = $6648;
                   $6653 = (($4) + 536|0);
                   $6654 = (($6653) + 1|0);
                   $6655 = HEAP8[$6654>>0]|0;
                   __THREW__ = 0;
                   $6656 = (invoke_iii(381,($vinfos98|0),0)|0);
                   $6657 = __THREW__; __THREW__ = 0;
                   $6658 = $6657&1;
                   if ($6658) {
                    label = 858;
                    break L1;
                   }
                   $6659 = (($6656) + 19|0);
                   $6660 = (($6659) + 1|0);
                   HEAP8[$6660>>0] = $6655;
                   $6661 = (($4) + 538|0);
                   $6662 = HEAP8[$6661>>0]|0;
                   __THREW__ = 0;
                   $6663 = (invoke_iii(381,($vinfos98|0),0)|0);
                   $6664 = __THREW__; __THREW__ = 0;
                   $6665 = $6664&1;
                   if ($6665) {
                    label = 858;
                    break L1;
                   }
                   $6666 = (($6663) + 18|0);
                   HEAP8[$6666>>0] = $6662;
                   __THREW__ = 0;
                   $6667 = (invoke_iii(381,($vinfos98|0),1)|0);
                   $6668 = __THREW__; __THREW__ = 0;
                   $6669 = $6668&1;
                   if ($6669) {
                    label = 858;
                    break L1;
                   }
                   $6670 = (($6667) + 17|0);
                   HEAP8[$6670>>0] = 1;
                   $6671 = (($4) + 40|0);
                   $6672 = +HEAPF64[$6671>>3];
                   __THREW__ = 0;
                   $6673 = (invoke_iii(381,($vinfos98|0),1)|0);
                   $6674 = __THREW__; __THREW__ = 0;
                   $6675 = $6674&1;
                   if ($6675) {
                    label = 858;
                    break L1;
                   }
                   $6676 = (($6673) + 8|0);
                   HEAPF64[$6676>>3] = $6672;
                   $6677 = (($4) + 539|0);
                   $6678 = HEAP8[$6677>>0]|0;
                   __THREW__ = 0;
                   $6679 = (invoke_iii(381,($vinfos98|0),1)|0);
                   $6680 = __THREW__; __THREW__ = 0;
                   $6681 = $6680&1;
                   if ($6681) {
                    label = 858;
                    break L1;
                   }
                   $6682 = (($6679) + 19|0);
                   HEAP8[$6682>>0] = $6678;
                   $6683 = (($4) + 539|0);
                   $6684 = (($6683) + 1|0);
                   $6685 = HEAP8[$6684>>0]|0;
                   __THREW__ = 0;
                   $6686 = (invoke_iii(381,($vinfos98|0),1)|0);
                   $6687 = __THREW__; __THREW__ = 0;
                   $6688 = $6687&1;
                   if ($6688) {
                    label = 858;
                    break L1;
                   }
                   $6689 = (($6686) + 19|0);
                   $6690 = (($6689) + 1|0);
                   HEAP8[$6690>>0] = $6685;
                   $6691 = (($4) + 541|0);
                   $6692 = HEAP8[$6691>>0]|0;
                   __THREW__ = 0;
                   $6693 = (invoke_iii(381,($vinfos98|0),1)|0);
                   $6694 = __THREW__; __THREW__ = 0;
                   $6695 = $6694&1;
                   if ($6695) {
                    label = 858;
                    break L1;
                   }
                   $6696 = (($6693) + 18|0);
                   HEAP8[$6696>>0] = $6692;
                   __THREW__ = 0;
                   $6697 = (invoke_iii(381,($vinfos98|0),2)|0);
                   $6698 = __THREW__; __THREW__ = 0;
                   $6699 = $6698&1;
                   if ($6699) {
                    label = 858;
                    break L1;
                   }
                   $6700 = (($6697) + 17|0);
                   HEAP8[$6700>>0] = 1;
                   $6701 = (($4) + 80|0);
                   $6702 = +HEAPF64[$6701>>3];
                   __THREW__ = 0;
                   $6703 = (invoke_iii(381,($vinfos98|0),2)|0);
                   $6704 = __THREW__; __THREW__ = 0;
                   $6705 = $6704&1;
                   if ($6705) {
                    label = 858;
                    break L1;
                   }
                   $6706 = (($6703) + 8|0);
                   HEAPF64[$6706>>3] = $6702;
                   $6707 = (($4) + 542|0);
                   $6708 = HEAP8[$6707>>0]|0;
                   __THREW__ = 0;
                   $6709 = (invoke_iii(381,($vinfos98|0),2)|0);
                   $6710 = __THREW__; __THREW__ = 0;
                   $6711 = $6710&1;
                   if ($6711) {
                    label = 858;
                    break L1;
                   }
                   $6712 = (($6709) + 19|0);
                   HEAP8[$6712>>0] = $6708;
                   $6713 = (($4) + 542|0);
                   $6714 = (($6713) + 1|0);
                   $6715 = HEAP8[$6714>>0]|0;
                   __THREW__ = 0;
                   $6716 = (invoke_iii(381,($vinfos98|0),2)|0);
                   $6717 = __THREW__; __THREW__ = 0;
                   $6718 = $6717&1;
                   if ($6718) {
                    label = 858;
                    break L1;
                   }
                   $6719 = (($6716) + 19|0);
                   $6720 = (($6719) + 1|0);
                   HEAP8[$6720>>0] = $6715;
                   $6721 = (($4) + 544|0);
                   $6722 = HEAP8[$6721>>0]|0;
                   __THREW__ = 0;
                   $6723 = (invoke_iii(381,($vinfos98|0),2)|0);
                   $6724 = __THREW__; __THREW__ = 0;
                   $6725 = $6724&1;
                   if ($6725) {
                    label = 858;
                    break L1;
                   }
                   $6726 = (($6723) + 18|0);
                   HEAP8[$6726>>0] = $6722;
                   __THREW__ = 0;
                   $6727 = (invoke_iii(381,($vinfos98|0),3)|0);
                   $6728 = __THREW__; __THREW__ = 0;
                   $6729 = $6728&1;
                   if ($6729) {
                    label = 858;
                    break L1;
                   }
                   $6730 = (($6727) + 17|0);
                   HEAP8[$6730>>0] = 1;
                   $6731 = (($4) + 120|0);
                   $6732 = +HEAPF64[$6731>>3];
                   __THREW__ = 0;
                   $6733 = (invoke_iii(381,($vinfos98|0),3)|0);
                   $6734 = __THREW__; __THREW__ = 0;
                   $6735 = $6734&1;
                   if ($6735) {
                    label = 858;
                    break L1;
                   }
                   $6736 = (($6733) + 8|0);
                   HEAPF64[$6736>>3] = $6732;
                   $6737 = (($4) + 545|0);
                   $6738 = HEAP8[$6737>>0]|0;
                   __THREW__ = 0;
                   $6739 = (invoke_iii(381,($vinfos98|0),3)|0);
                   $6740 = __THREW__; __THREW__ = 0;
                   $6741 = $6740&1;
                   if ($6741) {
                    label = 858;
                    break L1;
                   }
                   $6742 = (($6739) + 19|0);
                   HEAP8[$6742>>0] = $6738;
                   $6743 = (($4) + 545|0);
                   $6744 = (($6743) + 1|0);
                   $6745 = HEAP8[$6744>>0]|0;
                   __THREW__ = 0;
                   $6746 = (invoke_iii(381,($vinfos98|0),3)|0);
                   $6747 = __THREW__; __THREW__ = 0;
                   $6748 = $6747&1;
                   if ($6748) {
                    label = 858;
                    break L1;
                   }
                   $6749 = (($6746) + 19|0);
                   $6750 = (($6749) + 1|0);
                   HEAP8[$6750>>0] = $6745;
                   $6751 = (($4) + 547|0);
                   $6752 = HEAP8[$6751>>0]|0;
                   __THREW__ = 0;
                   $6753 = (invoke_iii(381,($vinfos98|0),3)|0);
                   $6754 = __THREW__; __THREW__ = 0;
                   $6755 = $6754&1;
                   if ($6755) {
                    label = 858;
                    break L1;
                   }
                   $6756 = (($6753) + 18|0);
                   HEAP8[$6756>>0] = $6752;
                   __THREW__ = 0;
                   $6757 = (invoke_iii(381,($vinfos98|0),4)|0);
                   $6758 = __THREW__; __THREW__ = 0;
                   $6759 = $6758&1;
                   if ($6759) {
                    label = 858;
                    break L1;
                   }
                   $6760 = (($6757) + 17|0);
                   HEAP8[$6760>>0] = 1;
                   $6761 = (($4) + 160|0);
                   $6762 = +HEAPF64[$6761>>3];
                   __THREW__ = 0;
                   $6763 = (invoke_iii(381,($vinfos98|0),4)|0);
                   $6764 = __THREW__; __THREW__ = 0;
                   $6765 = $6764&1;
                   if ($6765) {
                    label = 858;
                    break L1;
                   }
                   $6766 = (($6763) + 8|0);
                   HEAPF64[$6766>>3] = $6762;
                   $6767 = (($4) + 548|0);
                   $6768 = HEAP8[$6767>>0]|0;
                   __THREW__ = 0;
                   $6769 = (invoke_iii(381,($vinfos98|0),4)|0);
                   $6770 = __THREW__; __THREW__ = 0;
                   $6771 = $6770&1;
                   if ($6771) {
                    label = 858;
                    break L1;
                   }
                   $6772 = (($6769) + 19|0);
                   HEAP8[$6772>>0] = $6768;
                   $6773 = (($4) + 548|0);
                   $6774 = (($6773) + 1|0);
                   $6775 = HEAP8[$6774>>0]|0;
                   __THREW__ = 0;
                   $6776 = (invoke_iii(381,($vinfos98|0),4)|0);
                   $6777 = __THREW__; __THREW__ = 0;
                   $6778 = $6777&1;
                   if ($6778) {
                    label = 858;
                    break L1;
                   }
                   $6779 = (($6776) + 19|0);
                   $6780 = (($6779) + 1|0);
                   HEAP8[$6780>>0] = $6775;
                   $6781 = (($4) + 550|0);
                   $6782 = HEAP8[$6781>>0]|0;
                   __THREW__ = 0;
                   $6783 = (invoke_iii(381,($vinfos98|0),4)|0);
                   $6784 = __THREW__; __THREW__ = 0;
                   $6785 = $6784&1;
                   if ($6785) {
                    label = 858;
                    break L1;
                   }
                   $6786 = (($6783) + 18|0);
                   HEAP8[$6786>>0] = $6782;
                   __THREW__ = 0;
                   $6787 = (invoke_iii(381,($vinfos98|0),5)|0);
                   $6788 = __THREW__; __THREW__ = 0;
                   $6789 = $6788&1;
                   if ($6789) {
                    label = 858;
                    break L1;
                   }
                   $6790 = (($6787) + 17|0);
                   HEAP8[$6790>>0] = 1;
                   $6791 = (($4) + 200|0);
                   $6792 = +HEAPF64[$6791>>3];
                   __THREW__ = 0;
                   $6793 = (invoke_iii(381,($vinfos98|0),5)|0);
                   $6794 = __THREW__; __THREW__ = 0;
                   $6795 = $6794&1;
                   if ($6795) {
                    label = 858;
                    break L1;
                   }
                   $6796 = (($6793) + 8|0);
                   HEAPF64[$6796>>3] = $6792;
                   $6797 = (($4) + 551|0);
                   $6798 = HEAP8[$6797>>0]|0;
                   __THREW__ = 0;
                   $6799 = (invoke_iii(381,($vinfos98|0),5)|0);
                   $6800 = __THREW__; __THREW__ = 0;
                   $6801 = $6800&1;
                   if ($6801) {
                    label = 858;
                    break L1;
                   }
                   $6802 = (($6799) + 19|0);
                   HEAP8[$6802>>0] = $6798;
                   $6803 = (($4) + 551|0);
                   $6804 = (($6803) + 1|0);
                   $6805 = HEAP8[$6804>>0]|0;
                   __THREW__ = 0;
                   $6806 = (invoke_iii(381,($vinfos98|0),5)|0);
                   $6807 = __THREW__; __THREW__ = 0;
                   $6808 = $6807&1;
                   if ($6808) {
                    label = 858;
                    break L1;
                   }
                   $6809 = (($6806) + 19|0);
                   $6810 = (($6809) + 1|0);
                   HEAP8[$6810>>0] = $6805;
                   $6811 = (($4) + 553|0);
                   $6812 = HEAP8[$6811>>0]|0;
                   __THREW__ = 0;
                   $6813 = (invoke_iii(381,($vinfos98|0),5)|0);
                   $6814 = __THREW__; __THREW__ = 0;
                   $6815 = $6814&1;
                   if ($6815) {
                    label = 858;
                    break L1;
                   }
                   $6816 = (($6813) + 18|0);
                   HEAP8[$6816>>0] = $6812;
                   __THREW__ = 0;
                   invoke_vii(382,($vfree99|0),0);
                   $6817 = __THREW__; __THREW__ = 0;
                   $6818 = $6817&1;
                   if ($6818) {
                    label = 858;
                    break L1;
                   }
                   $6819 = $1;
                   $6820 = HEAP32[$6819>>2]|0;
                   $6821 = (($6820) + 8|0);
                   $6822 = HEAP32[$6821>>2]|0;
                   __THREW__ = 0;
                   (invoke_iiii($6822|0,($6819|0),($vinfos98|0),($vfree99|0))|0);
                   $6823 = __THREW__; __THREW__ = 0;
                   $6824 = $6823&1;
                   if ($6824) {
                    label = 859;
                    break L1;
                   }
                   __THREW__ = 0;
                   invoke_vi(366,($vfree99|0));
                   $6825 = __THREW__; __THREW__ = 0;
                   $6826 = $6825&1;
                   if ($6826) {
                    label = 858;
                    break L1;
                   }
                   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos98);
                   break L1035;
                  }
                 } while(0);
                } else {
                }
               } while(0);
               $6827 = $ij595;
               $6828 = (($6827) + 1)|0;
               $ij595 = $6828;
              }
             }
            } while(0);
            if ((label|0) == 283) {
             label = 0;
             $2502 = (($4) + 8|0);
             $2503 = +HEAPF64[$2502>>3];
             $2504 = (($4) + 320|0);
             $2505 = +HEAPF64[$2504>>3];
             $2506 = $2503 * $2505;
             $x147 = $2506;
             $2507 = (($4) + 16|0);
             $2508 = +HEAPF64[$2507>>3];
             $2509 = 1.0 * $2508;
             $x148 = $2509;
             $2510 = (($4) + 8|0);
             $2511 = +HEAPF64[$2510>>3];
             $2512 = (($4) + 344|0);
             $2513 = +HEAPF64[$2512>>3];
             $2514 = $2511 * $2513;
             $x149 = $2514;
             $2515 = (($4) + 88|0);
             $2516 = +HEAPF64[$2515>>3];
             $2517 = 1.0 * $2516;
             $x150 = $2517;
             $2518 = (($4) + 48|0);
             $2519 = +HEAPF64[$2518>>3];
             $2520 = (($4) + 96|0);
             $2521 = +HEAPF64[$2520>>3];
             $2522 = $2519 * $2521;
             $x151 = $2522;
             $2523 = (($4) + 8|0);
             $2524 = +HEAPF64[$2523>>3];
             $2525 = (($4) + 368|0);
             $2526 = +HEAPF64[$2525>>3];
             $2527 = $2524 * $2526;
             $x152 = $2527;
             $2528 = $x84;
             $x153 = $2528;
             $2529 = (($4) + 88|0);
             $2530 = +HEAPF64[$2529>>3];
             $2531 = (($4) + 56|0);
             $2532 = +HEAPF64[$2531>>3];
             $2533 = $2530 * $2532;
             $2534 = $x151;
             $2535 = $2533 + $2534;
             $x154 = $2535;
             $2536 = (($4) + 8|0);
             $2537 = +HEAPF64[$2536>>3];
             $2538 = $x153;
             $2539 = $2537 * $2538;
             $x155 = $2539;
             $2540 = $x87;
             $x156 = $2540;
             $2541 = (($4) + 248|0);
             $2542 = +HEAPF64[$2541>>3];
             $2543 = -1.0 * $2542;
             $2544 = $x148;
             $2545 = $2543 * $2544;
             $2546 = $x156;
             $2547 = $2545 * $2546;
             $2548 = (($4) + 392|0);
             $2549 = +HEAPF64[$2548>>3];
             $2550 = $x153;
             $2551 = $2549 * $2550;
             $2552 = $2547 + $2551;
             $2553 = $x147;
             $2554 = $x156;
             $2555 = $2553 * $2554;
             $2556 = $2552 + $2555;
             $2557 = (($4) + 240|0);
             HEAPF64[$2557>>3] = $2556;
             $2558 = $x149;
             $2559 = $x156;
             $2560 = $2558 * $2559;
             $2561 = (($4) + 272|0);
             $2562 = +HEAPF64[$2561>>3];
             $2563 = -1.0 * $2562;
             $2564 = $x148;
             $2565 = $2563 * $2564;
             $2566 = $x156;
             $2567 = $2565 * $2566;
             $2568 = $2560 + $2567;
             $2569 = (($4) + 416|0);
             $2570 = +HEAPF64[$2569>>3];
             $2571 = $x153;
             $2572 = $2570 * $2571;
             $2573 = $2568 + $2572;
             $2574 = (($4) + 264|0);
             HEAPF64[$2574>>3] = $2573;
             $2575 = (($4) + 296|0);
             $2576 = +HEAPF64[$2575>>3];
             $2577 = -1.0 * $2576;
             $2578 = $x148;
             $2579 = $2577 * $2578;
             $2580 = $x156;
             $2581 = $2579 * $2580;
             $2582 = $x152;
             $2583 = $x156;
             $2584 = $2582 * $2583;
             $2585 = $2581 + $2584;
             $2586 = (($4) + 440|0);
             $2587 = +HEAPF64[$2586>>3];
             $2588 = $x153;
             $2589 = $2587 * $2588;
             $2590 = $2585 + $2589;
             $2591 = (($4) + 288|0);
             HEAPF64[$2591>>3] = $2590;
             $2592 = (($4) + 320|0);
             $2593 = +HEAPF64[$2592>>3];
             $2594 = (($4) + 16|0);
             $2595 = +HEAPF64[$2594>>3];
             $2596 = $2593 * $2595;
             $2597 = (($4) + 8|0);
             $2598 = +HEAPF64[$2597>>3];
             $2599 = (($4) + 248|0);
             $2600 = +HEAPF64[$2599>>3];
             $2601 = $2598 * $2600;
             $2602 = $2596 + $2601;
             $2603 = (($4) + 312|0);
             HEAPF64[$2603>>3] = $2602;
             $2604 = (($4) + 344|0);
             $2605 = +HEAPF64[$2604>>3];
             $2606 = (($4) + 16|0);
             $2607 = +HEAPF64[$2606>>3];
             $2608 = $2605 * $2607;
             $2609 = (($4) + 8|0);
             $2610 = +HEAPF64[$2609>>3];
             $2611 = (($4) + 272|0);
             $2612 = +HEAPF64[$2611>>3];
             $2613 = $2610 * $2612;
             $2614 = $2608 + $2613;
             $2615 = (($4) + 336|0);
             HEAPF64[$2615>>3] = $2614;
             $2616 = (($4) + 368|0);
             $2617 = +HEAPF64[$2616>>3];
             $2618 = (($4) + 16|0);
             $2619 = +HEAPF64[$2618>>3];
             $2620 = $2617 * $2619;
             $2621 = (($4) + 8|0);
             $2622 = +HEAPF64[$2621>>3];
             $2623 = (($4) + 296|0);
             $2624 = +HEAPF64[$2623>>3];
             $2625 = $2622 * $2624;
             $2626 = $2620 + $2625;
             $2627 = (($4) + 360|0);
             HEAPF64[$2627>>3] = $2626;
             $2628 = (($4) + 248|0);
             $2629 = +HEAPF64[$2628>>3];
             $2630 = -1.0 * $2629;
             $2631 = $x148;
             $2632 = $2630 * $2631;
             $2633 = $x153;
             $2634 = $2632 * $2633;
             $2635 = (($4) + 392|0);
             $2636 = +HEAPF64[$2635>>3];
             $2637 = $x154;
             $2638 = $2636 * $2637;
             $2639 = $2634 + $2638;
             $2640 = $x147;
             $2641 = $x153;
             $2642 = $2640 * $2641;
             $2643 = $2639 + $2642;
             $2644 = (($4) + 384|0);
             HEAPF64[$2644>>3] = $2643;
             $2645 = $x149;
             $2646 = $x153;
             $2647 = $2645 * $2646;
             $2648 = (($4) + 272|0);
             $2649 = +HEAPF64[$2648>>3];
             $2650 = -1.0 * $2649;
             $2651 = $x148;
             $2652 = $2650 * $2651;
             $2653 = $x153;
             $2654 = $2652 * $2653;
             $2655 = $2647 + $2654;
             $2656 = (($4) + 416|0);
             $2657 = +HEAPF64[$2656>>3];
             $2658 = $x154;
             $2659 = $2657 * $2658;
             $2660 = $2655 + $2659;
             $2661 = (($4) + 408|0);
             HEAPF64[$2661>>3] = $2660;
             $2662 = (($4) + 296|0);
             $2663 = +HEAPF64[$2662>>3];
             $2664 = -1.0 * $2663;
             $2665 = $x148;
             $2666 = $2664 * $2665;
             $2667 = $x153;
             $2668 = $2666 * $2667;
             $2669 = $x152;
             $2670 = $x153;
             $2671 = $2669 * $2670;
             $2672 = $2668 + $2671;
             $2673 = (($4) + 440|0);
             $2674 = +HEAPF64[$2673>>3];
             $2675 = $x154;
             $2676 = $2674 * $2675;
             $2677 = $2672 + $2676;
             $2678 = (($4) + 432|0);
             HEAPF64[$2678>>3] = $2677;
             $2679 = (($4) + 176|0);
             $2680 = +HEAPF64[$2679>>3];
             HEAPF64[$j5eval29>>3] = $2680;
             $2681 = +HEAPF64[$j5eval29>>3];
             $2682 = (+__Z5IKabsd($2681));
             $2683 = $2682 < 9.9999999999999995E-7;
             if ($2683) {
              $2684 = (($4) + 8|0);
              $2685 = +HEAPF64[$2684>>3];
              $2686 = (($4) + 320|0);
              $2687 = +HEAPF64[$2686>>3];
              $2688 = $2685 * $2687;
              $x157 = $2688;
              $2689 = (($4) + 16|0);
              $2690 = +HEAPF64[$2689>>3];
              $2691 = 1.0 * $2690;
              $x158 = $2691;
              $2692 = (($4) + 8|0);
              $2693 = +HEAPF64[$2692>>3];
              $2694 = (($4) + 344|0);
              $2695 = +HEAPF64[$2694>>3];
              $2696 = $2693 * $2695;
              $x159 = $2696;
              $2697 = (($4) + 88|0);
              $2698 = +HEAPF64[$2697>>3];
              $2699 = 1.0 * $2698;
              $x160 = $2699;
              $2700 = (($4) + 48|0);
              $2701 = +HEAPF64[$2700>>3];
              $2702 = (($4) + 96|0);
              $2703 = +HEAPF64[$2702>>3];
              $2704 = $2701 * $2703;
              $x161 = $2704;
              $2705 = (($4) + 8|0);
              $2706 = +HEAPF64[$2705>>3];
              $2707 = (($4) + 368|0);
              $2708 = +HEAPF64[$2707>>3];
              $2709 = $2706 * $2708;
              $x162 = $2709;
              $2710 = $x84;
              $x163 = $2710;
              $2711 = (($4) + 88|0);
              $2712 = +HEAPF64[$2711>>3];
              $2713 = (($4) + 56|0);
              $2714 = +HEAPF64[$2713>>3];
              $2715 = $2712 * $2714;
              $2716 = $x161;
              $2717 = $2715 + $2716;
              $x164 = $2717;
              $2718 = (($4) + 8|0);
              $2719 = +HEAPF64[$2718>>3];
              $2720 = $x163;
              $2721 = $2719 * $2720;
              $x165 = $2721;
              $2722 = $x87;
              $x166 = $2722;
              $2723 = $x157;
              $2724 = $x166;
              $2725 = $2723 * $2724;
              $2726 = (($4) + 392|0);
              $2727 = +HEAPF64[$2726>>3];
              $2728 = $x163;
              $2729 = $2727 * $2728;
              $2730 = $2725 + $2729;
              $2731 = (($4) + 248|0);
              $2732 = +HEAPF64[$2731>>3];
              $2733 = -1.0 * $2732;
              $2734 = $x158;
              $2735 = $2733 * $2734;
              $2736 = $x166;
              $2737 = $2735 * $2736;
              $2738 = $2730 + $2737;
              $2739 = (($4) + 240|0);
              HEAPF64[$2739>>3] = $2738;
              $2740 = (($4) + 416|0);
              $2741 = +HEAPF64[$2740>>3];
              $2742 = $x163;
              $2743 = $2741 * $2742;
              $2744 = (($4) + 272|0);
              $2745 = +HEAPF64[$2744>>3];
              $2746 = -1.0 * $2745;
              $2747 = $x158;
              $2748 = $2746 * $2747;
              $2749 = $x166;
              $2750 = $2748 * $2749;
              $2751 = $2743 + $2750;
              $2752 = $x159;
              $2753 = $x166;
              $2754 = $2752 * $2753;
              $2755 = $2751 + $2754;
              $2756 = (($4) + 264|0);
              HEAPF64[$2756>>3] = $2755;
              $2757 = (($4) + 440|0);
              $2758 = +HEAPF64[$2757>>3];
              $2759 = $x163;
              $2760 = $2758 * $2759;
              $2761 = $x162;
              $2762 = $x166;
              $2763 = $2761 * $2762;
              $2764 = $2760 + $2763;
              $2765 = (($4) + 296|0);
              $2766 = +HEAPF64[$2765>>3];
              $2767 = -1.0 * $2766;
              $2768 = $x158;
              $2769 = $2767 * $2768;
              $2770 = $x166;
              $2771 = $2769 * $2770;
              $2772 = $2764 + $2771;
              $2773 = (($4) + 288|0);
              HEAPF64[$2773>>3] = $2772;
              $2774 = (($4) + 320|0);
              $2775 = +HEAPF64[$2774>>3];
              $2776 = (($4) + 16|0);
              $2777 = +HEAPF64[$2776>>3];
              $2778 = $2775 * $2777;
              $2779 = (($4) + 8|0);
              $2780 = +HEAPF64[$2779>>3];
              $2781 = (($4) + 248|0);
              $2782 = +HEAPF64[$2781>>3];
              $2783 = $2780 * $2782;
              $2784 = $2778 + $2783;
              $2785 = (($4) + 312|0);
              HEAPF64[$2785>>3] = $2784;
              $2786 = (($4) + 344|0);
              $2787 = +HEAPF64[$2786>>3];
              $2788 = (($4) + 16|0);
              $2789 = +HEAPF64[$2788>>3];
              $2790 = $2787 * $2789;
              $2791 = (($4) + 8|0);
              $2792 = +HEAPF64[$2791>>3];
              $2793 = (($4) + 272|0);
              $2794 = +HEAPF64[$2793>>3];
              $2795 = $2792 * $2794;
              $2796 = $2790 + $2795;
              $2797 = (($4) + 336|0);
              HEAPF64[$2797>>3] = $2796;
              $2798 = (($4) + 368|0);
              $2799 = +HEAPF64[$2798>>3];
              $2800 = (($4) + 16|0);
              $2801 = +HEAPF64[$2800>>3];
              $2802 = $2799 * $2801;
              $2803 = (($4) + 8|0);
              $2804 = +HEAPF64[$2803>>3];
              $2805 = (($4) + 296|0);
              $2806 = +HEAPF64[$2805>>3];
              $2807 = $2804 * $2806;
              $2808 = $2802 + $2807;
              $2809 = (($4) + 360|0);
              HEAPF64[$2809>>3] = $2808;
              $2810 = $x157;
              $2811 = $x163;
              $2812 = $2810 * $2811;
              $2813 = (($4) + 392|0);
              $2814 = +HEAPF64[$2813>>3];
              $2815 = $x164;
              $2816 = $2814 * $2815;
              $2817 = $2812 + $2816;
              $2818 = (($4) + 248|0);
              $2819 = +HEAPF64[$2818>>3];
              $2820 = -1.0 * $2819;
              $2821 = $x158;
              $2822 = $2820 * $2821;
              $2823 = $x163;
              $2824 = $2822 * $2823;
              $2825 = $2817 + $2824;
              $2826 = (($4) + 384|0);
              HEAPF64[$2826>>3] = $2825;
              $2827 = (($4) + 416|0);
              $2828 = +HEAPF64[$2827>>3];
              $2829 = $x164;
              $2830 = $2828 * $2829;
              $2831 = (($4) + 272|0);
              $2832 = +HEAPF64[$2831>>3];
              $2833 = -1.0 * $2832;
              $2834 = $x158;
              $2835 = $2833 * $2834;
              $2836 = $x163;
              $2837 = $2835 * $2836;
              $2838 = $2830 + $2837;
              $2839 = $x159;
              $2840 = $x163;
              $2841 = $2839 * $2840;
              $2842 = $2838 + $2841;
              $2843 = (($4) + 408|0);
              HEAPF64[$2843>>3] = $2842;
              $2844 = (($4) + 440|0);
              $2845 = +HEAPF64[$2844>>3];
              $2846 = $x164;
              $2847 = $2845 * $2846;
              $2848 = $x162;
              $2849 = $x163;
              $2850 = $2848 * $2849;
              $2851 = $2847 + $2850;
              $2852 = (($4) + 296|0);
              $2853 = +HEAPF64[$2852>>3];
              $2854 = -1.0 * $2853;
              $2855 = $x158;
              $2856 = $2854 * $2855;
              $2857 = $x163;
              $2858 = $2856 * $2857;
              $2859 = $2851 + $2858;
              $2860 = (($4) + 432|0);
              HEAPF64[$2860>>3] = $2859;
              $2861 = (($4) + 176|0);
              $2862 = +HEAPF64[$2861>>3];
              HEAPF64[$j5eval30>>3] = $2862;
              $2863 = (($4) + 136|0);
              $2864 = +HEAPF64[$2863>>3];
              $2865 = (($j5eval30) + 8|0);
              HEAPF64[$2865>>3] = $2864;
              $2866 = +HEAPF64[$j5eval30>>3];
              $2867 = (+__Z5IKabsd($2866));
              $2868 = $2867 < 9.9999999999999995E-7;
              do {
               if ($2868) {
                label = 286;
               } else {
                $2869 = (($j5eval30) + 8|0);
                $2870 = +HEAPF64[$2869>>3];
                $2871 = (+__Z5IKabsd($2870));
                $2872 = $2871 < 9.9999999999999995E-7;
                if ($2872) {
                 label = 286;
                 break;
                }
                ;HEAP8[$j5valid76+0>>0]=0|0;
                $5130 = (($4) + 553|0);
                HEAP8[$5130>>0] = 1;
                $5131 = (($4) + 176|0);
                $5132 = +HEAPF64[$5131>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x202,$5132,-1);
                $5133 = (($x202) + 8|0);
                $5134 = HEAP8[$5133>>0]|0;
                $5135 = $5134&1;
                if (!($5135)) {
                 break L993;
                }
                $5136 = +HEAPF64[$x202>>3];
                $x201 = $5136;
                $5137 = (($4) + 136|0);
                $5138 = +HEAPF64[$5137>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x203,$5138,-1);
                $5139 = (($x203) + 8|0);
                $5140 = HEAP8[$5139>>0]|0;
                $5141 = $5140&1;
                if (!($5141)) {
                 break L993;
                }
                $5142 = (($4) + 408|0);
                $5143 = +HEAPF64[$5142>>3];
                $5144 = -1.0 * $5143;
                $5145 = $x201;
                $5146 = $5144 * $5145;
                $5147 = (+__Z5IKabsd($5146));
                $5148 = $5147 < 1.9999999999999999E-6;
                do {
                 if ($5148) {
                  $5149 = $x201;
                  $5150 = +HEAPF64[$x203>>3];
                  $5151 = $5149 * $5150;
                  $5152 = (($4) + 128|0);
                  $5153 = +HEAPF64[$5152>>3];
                  $5154 = (($4) + 168|0);
                  $5155 = +HEAPF64[$5154>>3];
                  $5156 = $5153 * $5155;
                  $5157 = (($4) + 408|0);
                  $5158 = +HEAPF64[$5157>>3];
                  $5159 = $5156 * $5158;
                  $5160 = (($4) + 336|0);
                  $5161 = +HEAPF64[$5160>>3];
                  $5162 = -1.0 * $5161;
                  $5163 = (($4) + 176|0);
                  $5164 = +HEAPF64[$5163>>3];
                  $5165 = $5162 * $5164;
                  $5166 = $5159 + $5165;
                  $5167 = $5151 * $5166;
                  $5168 = (+__Z5IKabsd($5167));
                  $5169 = $5168 < 1.9999999999999999E-6;
                  if (!($5169)) {
                   break;
                  }
                  $5170 = (($4) + 408|0);
                  $5171 = +HEAPF64[$5170>>3];
                  $5172 = -1.0 * $5171;
                  $5173 = $x201;
                  $5174 = $5172 * $5173;
                  $5175 = (+__Z5IKsqrd($5174));
                  $5176 = $x201;
                  $5177 = +HEAPF64[$x203>>3];
                  $5178 = $5176 * $5177;
                  $5179 = (($4) + 128|0);
                  $5180 = +HEAPF64[$5179>>3];
                  $5181 = (($4) + 168|0);
                  $5182 = +HEAPF64[$5181>>3];
                  $5183 = $5180 * $5182;
                  $5184 = (($4) + 408|0);
                  $5185 = +HEAPF64[$5184>>3];
                  $5186 = $5183 * $5185;
                  $5187 = (($4) + 336|0);
                  $5188 = +HEAPF64[$5187>>3];
                  $5189 = -1.0 * $5188;
                  $5190 = (($4) + 176|0);
                  $5191 = +HEAPF64[$5190>>3];
                  $5192 = $5189 * $5191;
                  $5193 = $5186 + $5192;
                  $5194 = $5178 * $5193;
                  $5195 = (+__Z5IKsqrd($5194));
                  $5196 = $5175 + $5195;
                  $5197 = $5196 - 1.0;
                  $5198 = (+__Z5IKabsd($5197));
                  $5199 = $5198 <= 1.9999999999999999E-6;
                  if (!($5199)) {
                   break;
                  }
                  break L993;
                 }
                } while(0);
                $5200 = (($4) + 408|0);
                $5201 = +HEAPF64[$5200>>3];
                $5202 = -1.0 * $5201;
                $5203 = $x201;
                $5204 = $5202 * $5203;
                $5205 = $x201;
                $5206 = +HEAPF64[$x203>>3];
                $5207 = $5205 * $5206;
                $5208 = (($4) + 128|0);
                $5209 = +HEAPF64[$5208>>3];
                $5210 = (($4) + 168|0);
                $5211 = +HEAPF64[$5210>>3];
                $5212 = $5209 * $5211;
                $5213 = (($4) + 408|0);
                $5214 = +HEAPF64[$5213>>3];
                $5215 = $5212 * $5214;
                $5216 = (($4) + 336|0);
                $5217 = +HEAPF64[$5216>>3];
                $5218 = -1.0 * $5217;
                $5219 = (($4) + 176|0);
                $5220 = +HEAPF64[$5219>>3];
                $5221 = $5218 * $5220;
                $5222 = $5215 + $5221;
                $5223 = $5207 * $5222;
                $5224 = (+__Z7IKatan2dd($5204,$5223));
                HEAPF64[$j5array73>>3] = $5224;
                $5225 = +HEAPF64[$j5array73>>3];
                $5226 = (+__Z5IKsind($5225));
                HEAPF64[$sj5array75>>3] = $5226;
                $5227 = +HEAPF64[$j5array73>>3];
                $5228 = (+__Z5IKcosd($5227));
                HEAPF64[$cj5array74>>3] = $5228;
                $5229 = +HEAPF64[$j5array73>>3];
                $5230 = $5229 > 3.14159265358979;
                if ($5230) {
                 $5231 = +HEAPF64[$j5array73>>3];
                 $5232 = $5231 - 6.2831853071795898;
                 HEAPF64[$j5array73>>3] = $5232;
                } else {
                 $5233 = +HEAPF64[$j5array73>>3];
                 $5234 = $5233 < -3.14159265358979;
                 if ($5234) {
                  $5235 = +HEAPF64[$j5array73>>3];
                  $5236 = $5235 + 6.2831853071795898;
                  HEAPF64[$j5array73>>3] = $5236;
                 }
                }
                HEAP8[$j5valid76>>0] = 1;
                $ij577 = 0;
                while(1) {
                 $5237 = $ij577;
                 $5238 = ($5237|0)<(1);
                 if (!($5238)) {
                  break;
                 }
                 $5239 = $ij577;
                 $5240 = (($j5valid76) + ($5239)|0);
                 $5241 = HEAP8[$5240>>0]|0;
                 $5242 = $5241&1;
                 L1126: do {
                  if ($5242) {
                   $5243 = $ij577;
                   $5244 = $5243&255;
                   $5245 = (($4) + 551|0);
                   HEAP8[$5245>>0] = $5244;
                   $5246 = (($4) + 551|0);
                   $5247 = (($5246) + 1|0);
                   HEAP8[$5247>>0] = -1;
                   $5248 = $ij577;
                   $5249 = (($5248) + 1)|0;
                   $iij578 = $5249;
                   L1129: while(1) {
                    $5250 = $iij578;
                    $5251 = ($5250|0)<(1);
                    if (!($5251)) {
                     break;
                    }
                    $5252 = $iij578;
                    $5253 = (($j5valid76) + ($5252)|0);
                    $5254 = HEAP8[$5253>>0]|0;
                    $5255 = $5254&1;
                    do {
                     if ($5255) {
                      $5256 = $ij577;
                      $5257 = (($cj5array74) + ($5256<<3)|0);
                      $5258 = +HEAPF64[$5257>>3];
                      $5259 = $iij578;
                      $5260 = (($cj5array74) + ($5259<<3)|0);
                      $5261 = +HEAPF64[$5260>>3];
                      $5262 = $5258 - $5261;
                      $5263 = (+__Z5IKabsd($5262));
                      $5264 = $5263 < 9.9999999999999995E-7;
                      if (!($5264)) {
                       break;
                      }
                      $5265 = $ij577;
                      $5266 = (($sj5array75) + ($5265<<3)|0);
                      $5267 = +HEAPF64[$5266>>3];
                      $5268 = $iij578;
                      $5269 = (($sj5array75) + ($5268<<3)|0);
                      $5270 = +HEAPF64[$5269>>3];
                      $5271 = $5267 - $5270;
                      $5272 = (+__Z5IKabsd($5271));
                      $5273 = $5272 < 9.9999999999999995E-7;
                      if ($5273) {
                       label = 653;
                       break L1129;
                      }
                     }
                    } while(0);
                    $5280 = $iij578;
                    $5281 = (($5280) + 1)|0;
                    $iij578 = $5281;
                   }
                   if ((label|0) == 653) {
                    label = 0;
                    $5274 = $iij578;
                    $5275 = (($j5valid76) + ($5274)|0);
                    HEAP8[$5275>>0] = 0;
                    $5276 = $iij578;
                    $5277 = $5276&255;
                    $5278 = (($4) + 551|0);
                    $5279 = (($5278) + 1|0);
                    HEAP8[$5279>>0] = $5277;
                   }
                   $5282 = $ij577;
                   $5283 = (($j5array73) + ($5282<<3)|0);
                   $5284 = +HEAPF64[$5283>>3];
                   $5285 = (($4) + 200|0);
                   HEAPF64[$5285>>3] = $5284;
                   $5286 = $ij577;
                   $5287 = (($cj5array74) + ($5286<<3)|0);
                   $5288 = +HEAPF64[$5287>>3];
                   $5289 = (($4) + 208|0);
                   HEAPF64[$5289>>3] = $5288;
                   $5290 = $ij577;
                   $5291 = (($sj5array75) + ($5290<<3)|0);
                   $5292 = +HEAPF64[$5291>>3];
                   $5293 = (($4) + 216|0);
                   HEAPF64[$5293>>3] = $5292;
                   $5294 = (($4) + 200|0);
                   $5295 = +HEAPF64[$5294>>3];
                   $5296 = (+__Z5IKsind($5295));
                   $x204 = $5296;
                   $5297 = (($4) + 200|0);
                   $5298 = +HEAPF64[$5297>>3];
                   $5299 = (+__Z5IKcosd($5298));
                   $x205 = $5299;
                   $5300 = (($4) + 168|0);
                   $5301 = +HEAPF64[$5300>>3];
                   $5302 = (($4) + 136|0);
                   $5303 = +HEAPF64[$5302>>3];
                   $5304 = $5301 * $5303;
                   $x206 = $5304;
                   $5305 = (($4) + 128|0);
                   $5306 = +HEAPF64[$5305>>3];
                   $5307 = (($4) + 312|0);
                   $5308 = +HEAPF64[$5307>>3];
                   $5309 = $5306 * $5308;
                   $x207 = $5309;
                   $5310 = (($4) + 264|0);
                   $5311 = +HEAPF64[$5310>>3];
                   $5312 = 1.0 * $5311;
                   $x208 = $5312;
                   $5313 = (($4) + 168|0);
                   $5314 = +HEAPF64[$5313>>3];
                   $5315 = 1.0 * $5314;
                   $x209 = $5315;
                   $5316 = (($4) + 240|0);
                   $5317 = +HEAPF64[$5316>>3];
                   $5318 = 1.0 * $5317;
                   $x210 = $5318;
                   $5319 = (($4) + 128|0);
                   $5320 = +HEAPF64[$5319>>3];
                   $5321 = (($4) + 336|0);
                   $5322 = +HEAPF64[$5321>>3];
                   $5323 = $5320 * $5322;
                   $x211 = $5323;
                   $5324 = (($4) + 128|0);
                   $5325 = +HEAPF64[$5324>>3];
                   $5326 = $x205;
                   $5327 = $5325 * $5326;
                   $x212 = $5327;
                   $5328 = (($4) + 128|0);
                   $5329 = +HEAPF64[$5328>>3];
                   $5330 = $x204;
                   $5331 = $5329 * $5330;
                   $x213 = $5331;
                   $5332 = $x205;
                   $5333 = 1.0 * $5332;
                   $x214 = $5333;
                   $5334 = (($4) + 176|0);
                   $5335 = +HEAPF64[$5334>>3];
                   $5336 = $x204;
                   $5337 = $5335 * $5336;
                   $5338 = (($4) + 408|0);
                   $5339 = +HEAPF64[$5338>>3];
                   $5340 = $5337 + $5339;
                   HEAPF64[$evalcond79>>3] = $5340;
                   $5341 = (($4) + 176|0);
                   $5342 = +HEAPF64[$5341>>3];
                   $5343 = -1.0 * $5342;
                   $5344 = $x214;
                   $5345 = $5343 * $5344;
                   $5346 = (($4) + 384|0);
                   $5347 = +HEAPF64[$5346>>3];
                   $5348 = $5345 + $5347;
                   $5349 = (($evalcond79) + 8|0);
                   HEAPF64[$5349>>3] = $5348;
                   $5350 = (($4) + 312|0);
                   $5351 = +HEAPF64[$5350>>3];
                   $5352 = (($4) + 136|0);
                   $5353 = +HEAPF64[$5352>>3];
                   $5354 = $5351 * $5353;
                   $5355 = $x204;
                   $5356 = $5354 + $5355;
                   $5357 = (($4) + 128|0);
                   $5358 = +HEAPF64[$5357>>3];
                   $5359 = (($4) + 240|0);
                   $5360 = +HEAPF64[$5359>>3];
                   $5361 = $5358 * $5360;
                   $5362 = $5356 + $5361;
                   $5363 = (($evalcond79) + 16|0);
                   HEAPF64[$5363>>3] = $5362;
                   $5364 = (($4) + 336|0);
                   $5365 = +HEAPF64[$5364>>3];
                   $5366 = (($4) + 136|0);
                   $5367 = +HEAPF64[$5366>>3];
                   $5368 = $5365 * $5367;
                   $5369 = $x205;
                   $5370 = $5368 + $5369;
                   $5371 = (($4) + 128|0);
                   $5372 = +HEAPF64[$5371>>3];
                   $5373 = (($4) + 264|0);
                   $5374 = +HEAPF64[$5373>>3];
                   $5375 = $5372 * $5374;
                   $5376 = $5370 + $5375;
                   $5377 = (($evalcond79) + 24|0);
                   HEAPF64[$5377>>3] = $5376;
                   $5378 = $x205;
                   $5379 = $x206;
                   $5380 = $5378 * $5379;
                   $5381 = $x213;
                   $5382 = $5380 + $5381;
                   $5383 = (($4) + 240|0);
                   $5384 = +HEAPF64[$5383>>3];
                   $5385 = $5382 + $5384;
                   $5386 = (($evalcond79) + 32|0);
                   HEAPF64[$5386>>3] = $5385;
                   $5387 = (($4) + 136|0);
                   $5388 = +HEAPF64[$5387>>3];
                   $5389 = $x205;
                   $5390 = $5388 * $5389;
                   $5391 = (($4) + 168|0);
                   $5392 = +HEAPF64[$5391>>3];
                   $5393 = $x213;
                   $5394 = $5392 * $5393;
                   $5395 = $5390 + $5394;
                   $5396 = (($4) + 336|0);
                   $5397 = +HEAPF64[$5396>>3];
                   $5398 = $5395 + $5397;
                   $5399 = (($evalcond79) + 40|0);
                   HEAPF64[$5399>>3] = $5398;
                   $5400 = (($4) + 168|0);
                   $5401 = +HEAPF64[$5400>>3];
                   $5402 = $x204;
                   $5403 = $5401 * $5402;
                   $5404 = $x211;
                   $5405 = $5403 + $5404;
                   $5406 = (($4) + 136|0);
                   $5407 = +HEAPF64[$5406>>3];
                   $5408 = -1.0 * $5407;
                   $5409 = $x208;
                   $5410 = $5408 * $5409;
                   $5411 = $5405 + $5410;
                   $5412 = (($evalcond79) + 48|0);
                   HEAPF64[$5412>>3] = $5411;
                   $5413 = $x212;
                   $5414 = $x204;
                   $5415 = -1.0 * $5414;
                   $5416 = $x206;
                   $5417 = $5415 * $5416;
                   $5418 = $5413 + $5417;
                   $5419 = (($4) + 264|0);
                   $5420 = +HEAPF64[$5419>>3];
                   $5421 = $5418 + $5420;
                   $5422 = (($evalcond79) + 56|0);
                   HEAPF64[$5422>>3] = $5421;
                   $5423 = (($4) + 136|0);
                   $5424 = +HEAPF64[$5423>>3];
                   $5425 = $x204;
                   $5426 = $5424 * $5425;
                   $5427 = (($4) + 312|0);
                   $5428 = +HEAPF64[$5427>>3];
                   $5429 = $5426 + $5428;
                   $5430 = $x209;
                   $5431 = -1.0 * $5430;
                   $5432 = $x212;
                   $5433 = $5431 * $5432;
                   $5434 = $5429 + $5433;
                   $5435 = (($evalcond79) + 64|0);
                   HEAPF64[$5435>>3] = $5434;
                   $5436 = (($4) + 136|0);
                   $5437 = +HEAPF64[$5436>>3];
                   $5438 = -1.0 * $5437;
                   $5439 = $x210;
                   $5440 = $5438 * $5439;
                   $5441 = $x207;
                   $5442 = $5440 + $5441;
                   $5443 = $x205;
                   $5444 = -1.0 * $5443;
                   $5445 = $x209;
                   $5446 = $5444 * $5445;
                   $5447 = $5442 + $5446;
                   $5448 = (($evalcond79) + 72|0);
                   HEAPF64[$5448>>3] = $5447;
                   $5449 = (($4) + 168|0);
                   $5450 = +HEAPF64[$5449>>3];
                   $5451 = $x211;
                   $5452 = $5450 * $5451;
                   $5453 = $x206;
                   $5454 = -1.0 * $5453;
                   $5455 = $x208;
                   $5456 = $5454 * $5455;
                   $5457 = $5452 + $5456;
                   $5458 = $x204;
                   $5459 = $5457 + $5458;
                   $5460 = (($4) + 408|0);
                   $5461 = +HEAPF64[$5460>>3];
                   $5462 = (($4) + 176|0);
                   $5463 = +HEAPF64[$5462>>3];
                   $5464 = $5461 * $5463;
                   $5465 = $5459 + $5464;
                   $5466 = (($evalcond79) + 80|0);
                   HEAPF64[$5466>>3] = $5465;
                   $5467 = (($4) + 384|0);
                   $5468 = +HEAPF64[$5467>>3];
                   $5469 = (($4) + 176|0);
                   $5470 = +HEAPF64[$5469>>3];
                   $5471 = $5468 * $5470;
                   $5472 = $x206;
                   $5473 = -1.0 * $5472;
                   $5474 = $x210;
                   $5475 = $5473 * $5474;
                   $5476 = $5471 + $5475;
                   $5477 = (($4) + 168|0);
                   $5478 = +HEAPF64[$5477>>3];
                   $5479 = $x207;
                   $5480 = $5478 * $5479;
                   $5481 = $5476 + $5480;
                   $5482 = $x214;
                   $5483 = -1.0 * $5482;
                   $5484 = $5481 + $5483;
                   $5485 = (($evalcond79) + 88|0);
                   HEAPF64[$5485>>3] = $5484;
                   $5486 = +HEAPF64[$evalcond79>>3];
                   $5487 = (+__Z5IKabsd($5486));
                   $5488 = $5487 > 5.0000000000000004E-6;
                   do {
                    if (!($5488)) {
                     $5489 = (($evalcond79) + 8|0);
                     $5490 = +HEAPF64[$5489>>3];
                     $5491 = (+__Z5IKabsd($5490));
                     $5492 = $5491 > 5.0000000000000004E-6;
                     if ($5492) {
                      break;
                     }
                     $5493 = (($evalcond79) + 16|0);
                     $5494 = +HEAPF64[$5493>>3];
                     $5495 = (+__Z5IKabsd($5494));
                     $5496 = $5495 > 5.0000000000000004E-6;
                     if ($5496) {
                      break;
                     }
                     $5497 = (($evalcond79) + 24|0);
                     $5498 = +HEAPF64[$5497>>3];
                     $5499 = (+__Z5IKabsd($5498));
                     $5500 = $5499 > 5.0000000000000004E-6;
                     if ($5500) {
                      break;
                     }
                     $5501 = (($evalcond79) + 32|0);
                     $5502 = +HEAPF64[$5501>>3];
                     $5503 = (+__Z5IKabsd($5502));
                     $5504 = $5503 > 5.0000000000000004E-6;
                     if ($5504) {
                      break;
                     }
                     $5505 = (($evalcond79) + 40|0);
                     $5506 = +HEAPF64[$5505>>3];
                     $5507 = (+__Z5IKabsd($5506));
                     $5508 = $5507 > 5.0000000000000004E-6;
                     if ($5508) {
                      break;
                     }
                     $5509 = (($evalcond79) + 48|0);
                     $5510 = +HEAPF64[$5509>>3];
                     $5511 = (+__Z5IKabsd($5510));
                     $5512 = $5511 > 5.0000000000000004E-6;
                     if ($5512) {
                      break;
                     }
                     $5513 = (($evalcond79) + 56|0);
                     $5514 = +HEAPF64[$5513>>3];
                     $5515 = (+__Z5IKabsd($5514));
                     $5516 = $5515 > 5.0000000000000004E-6;
                     if ($5516) {
                      break;
                     }
                     $5517 = (($evalcond79) + 64|0);
                     $5518 = +HEAPF64[$5517>>3];
                     $5519 = (+__Z5IKabsd($5518));
                     $5520 = $5519 > 5.0000000000000004E-6;
                     if ($5520) {
                      break;
                     }
                     $5521 = (($evalcond79) + 72|0);
                     $5522 = +HEAPF64[$5521>>3];
                     $5523 = (+__Z5IKabsd($5522));
                     $5524 = $5523 > 5.0000000000000004E-6;
                     if ($5524) {
                      break;
                     }
                     $5525 = (($evalcond79) + 80|0);
                     $5526 = +HEAPF64[$5525>>3];
                     $5527 = (+__Z5IKabsd($5526));
                     $5528 = $5527 > 5.0000000000000004E-6;
                     if ($5528) {
                      break;
                     }
                     $5529 = (($evalcond79) + 88|0);
                     $5530 = +HEAPF64[$5529>>3];
                     $5531 = (+__Z5IKabsd($5530));
                     $5532 = $5531 > 5.0000000000000004E-6;
                     if ($5532) {
                      break;
                     }
                     __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos80,6);
                     __THREW__ = 0;
                     $5533 = (invoke_iii(381,($vinfos80|0),0)|0);
                     $5534 = __THREW__; __THREW__ = 0;
                     $5535 = $5534&1;
                     if ($5535) {
                      label = 704;
                      break L1;
                     }
                     $5536 = (($5533) + 17|0);
                     HEAP8[$5536>>0] = 1;
                     $5537 = +HEAPF64[$4>>3];
                     __THREW__ = 0;
                     $5538 = (invoke_iii(381,($vinfos80|0),0)|0);
                     $5539 = __THREW__; __THREW__ = 0;
                     $5540 = $5539&1;
                     if ($5540) {
                      label = 704;
                      break L1;
                     }
                     $5541 = (($5538) + 8|0);
                     HEAPF64[$5541>>3] = $5537;
                     $5542 = (($4) + 536|0);
                     $5543 = HEAP8[$5542>>0]|0;
                     __THREW__ = 0;
                     $5544 = (invoke_iii(381,($vinfos80|0),0)|0);
                     $5545 = __THREW__; __THREW__ = 0;
                     $5546 = $5545&1;
                     if ($5546) {
                      label = 704;
                      break L1;
                     }
                     $5547 = (($5544) + 19|0);
                     HEAP8[$5547>>0] = $5543;
                     $5548 = (($4) + 536|0);
                     $5549 = (($5548) + 1|0);
                     $5550 = HEAP8[$5549>>0]|0;
                     __THREW__ = 0;
                     $5551 = (invoke_iii(381,($vinfos80|0),0)|0);
                     $5552 = __THREW__; __THREW__ = 0;
                     $5553 = $5552&1;
                     if ($5553) {
                      label = 704;
                      break L1;
                     }
                     $5554 = (($5551) + 19|0);
                     $5555 = (($5554) + 1|0);
                     HEAP8[$5555>>0] = $5550;
                     $5556 = (($4) + 538|0);
                     $5557 = HEAP8[$5556>>0]|0;
                     __THREW__ = 0;
                     $5558 = (invoke_iii(381,($vinfos80|0),0)|0);
                     $5559 = __THREW__; __THREW__ = 0;
                     $5560 = $5559&1;
                     if ($5560) {
                      label = 704;
                      break L1;
                     }
                     $5561 = (($5558) + 18|0);
                     HEAP8[$5561>>0] = $5557;
                     __THREW__ = 0;
                     $5562 = (invoke_iii(381,($vinfos80|0),1)|0);
                     $5563 = __THREW__; __THREW__ = 0;
                     $5564 = $5563&1;
                     if ($5564) {
                      label = 704;
                      break L1;
                     }
                     $5565 = (($5562) + 17|0);
                     HEAP8[$5565>>0] = 1;
                     $5566 = (($4) + 40|0);
                     $5567 = +HEAPF64[$5566>>3];
                     __THREW__ = 0;
                     $5568 = (invoke_iii(381,($vinfos80|0),1)|0);
                     $5569 = __THREW__; __THREW__ = 0;
                     $5570 = $5569&1;
                     if ($5570) {
                      label = 704;
                      break L1;
                     }
                     $5571 = (($5568) + 8|0);
                     HEAPF64[$5571>>3] = $5567;
                     $5572 = (($4) + 539|0);
                     $5573 = HEAP8[$5572>>0]|0;
                     __THREW__ = 0;
                     $5574 = (invoke_iii(381,($vinfos80|0),1)|0);
                     $5575 = __THREW__; __THREW__ = 0;
                     $5576 = $5575&1;
                     if ($5576) {
                      label = 704;
                      break L1;
                     }
                     $5577 = (($5574) + 19|0);
                     HEAP8[$5577>>0] = $5573;
                     $5578 = (($4) + 539|0);
                     $5579 = (($5578) + 1|0);
                     $5580 = HEAP8[$5579>>0]|0;
                     __THREW__ = 0;
                     $5581 = (invoke_iii(381,($vinfos80|0),1)|0);
                     $5582 = __THREW__; __THREW__ = 0;
                     $5583 = $5582&1;
                     if ($5583) {
                      label = 704;
                      break L1;
                     }
                     $5584 = (($5581) + 19|0);
                     $5585 = (($5584) + 1|0);
                     HEAP8[$5585>>0] = $5580;
                     $5586 = (($4) + 541|0);
                     $5587 = HEAP8[$5586>>0]|0;
                     __THREW__ = 0;
                     $5588 = (invoke_iii(381,($vinfos80|0),1)|0);
                     $5589 = __THREW__; __THREW__ = 0;
                     $5590 = $5589&1;
                     if ($5590) {
                      label = 704;
                      break L1;
                     }
                     $5591 = (($5588) + 18|0);
                     HEAP8[$5591>>0] = $5587;
                     __THREW__ = 0;
                     $5592 = (invoke_iii(381,($vinfos80|0),2)|0);
                     $5593 = __THREW__; __THREW__ = 0;
                     $5594 = $5593&1;
                     if ($5594) {
                      label = 704;
                      break L1;
                     }
                     $5595 = (($5592) + 17|0);
                     HEAP8[$5595>>0] = 1;
                     $5596 = (($4) + 80|0);
                     $5597 = +HEAPF64[$5596>>3];
                     __THREW__ = 0;
                     $5598 = (invoke_iii(381,($vinfos80|0),2)|0);
                     $5599 = __THREW__; __THREW__ = 0;
                     $5600 = $5599&1;
                     if ($5600) {
                      label = 704;
                      break L1;
                     }
                     $5601 = (($5598) + 8|0);
                     HEAPF64[$5601>>3] = $5597;
                     $5602 = (($4) + 542|0);
                     $5603 = HEAP8[$5602>>0]|0;
                     __THREW__ = 0;
                     $5604 = (invoke_iii(381,($vinfos80|0),2)|0);
                     $5605 = __THREW__; __THREW__ = 0;
                     $5606 = $5605&1;
                     if ($5606) {
                      label = 704;
                      break L1;
                     }
                     $5607 = (($5604) + 19|0);
                     HEAP8[$5607>>0] = $5603;
                     $5608 = (($4) + 542|0);
                     $5609 = (($5608) + 1|0);
                     $5610 = HEAP8[$5609>>0]|0;
                     __THREW__ = 0;
                     $5611 = (invoke_iii(381,($vinfos80|0),2)|0);
                     $5612 = __THREW__; __THREW__ = 0;
                     $5613 = $5612&1;
                     if ($5613) {
                      label = 704;
                      break L1;
                     }
                     $5614 = (($5611) + 19|0);
                     $5615 = (($5614) + 1|0);
                     HEAP8[$5615>>0] = $5610;
                     $5616 = (($4) + 544|0);
                     $5617 = HEAP8[$5616>>0]|0;
                     __THREW__ = 0;
                     $5618 = (invoke_iii(381,($vinfos80|0),2)|0);
                     $5619 = __THREW__; __THREW__ = 0;
                     $5620 = $5619&1;
                     if ($5620) {
                      label = 704;
                      break L1;
                     }
                     $5621 = (($5618) + 18|0);
                     HEAP8[$5621>>0] = $5617;
                     __THREW__ = 0;
                     $5622 = (invoke_iii(381,($vinfos80|0),3)|0);
                     $5623 = __THREW__; __THREW__ = 0;
                     $5624 = $5623&1;
                     if ($5624) {
                      label = 704;
                      break L1;
                     }
                     $5625 = (($5622) + 17|0);
                     HEAP8[$5625>>0] = 1;
                     $5626 = (($4) + 120|0);
                     $5627 = +HEAPF64[$5626>>3];
                     __THREW__ = 0;
                     $5628 = (invoke_iii(381,($vinfos80|0),3)|0);
                     $5629 = __THREW__; __THREW__ = 0;
                     $5630 = $5629&1;
                     if ($5630) {
                      label = 704;
                      break L1;
                     }
                     $5631 = (($5628) + 8|0);
                     HEAPF64[$5631>>3] = $5627;
                     $5632 = (($4) + 545|0);
                     $5633 = HEAP8[$5632>>0]|0;
                     __THREW__ = 0;
                     $5634 = (invoke_iii(381,($vinfos80|0),3)|0);
                     $5635 = __THREW__; __THREW__ = 0;
                     $5636 = $5635&1;
                     if ($5636) {
                      label = 704;
                      break L1;
                     }
                     $5637 = (($5634) + 19|0);
                     HEAP8[$5637>>0] = $5633;
                     $5638 = (($4) + 545|0);
                     $5639 = (($5638) + 1|0);
                     $5640 = HEAP8[$5639>>0]|0;
                     __THREW__ = 0;
                     $5641 = (invoke_iii(381,($vinfos80|0),3)|0);
                     $5642 = __THREW__; __THREW__ = 0;
                     $5643 = $5642&1;
                     if ($5643) {
                      label = 704;
                      break L1;
                     }
                     $5644 = (($5641) + 19|0);
                     $5645 = (($5644) + 1|0);
                     HEAP8[$5645>>0] = $5640;
                     $5646 = (($4) + 547|0);
                     $5647 = HEAP8[$5646>>0]|0;
                     __THREW__ = 0;
                     $5648 = (invoke_iii(381,($vinfos80|0),3)|0);
                     $5649 = __THREW__; __THREW__ = 0;
                     $5650 = $5649&1;
                     if ($5650) {
                      label = 704;
                      break L1;
                     }
                     $5651 = (($5648) + 18|0);
                     HEAP8[$5651>>0] = $5647;
                     __THREW__ = 0;
                     $5652 = (invoke_iii(381,($vinfos80|0),4)|0);
                     $5653 = __THREW__; __THREW__ = 0;
                     $5654 = $5653&1;
                     if ($5654) {
                      label = 704;
                      break L1;
                     }
                     $5655 = (($5652) + 17|0);
                     HEAP8[$5655>>0] = 1;
                     $5656 = (($4) + 160|0);
                     $5657 = +HEAPF64[$5656>>3];
                     __THREW__ = 0;
                     $5658 = (invoke_iii(381,($vinfos80|0),4)|0);
                     $5659 = __THREW__; __THREW__ = 0;
                     $5660 = $5659&1;
                     if ($5660) {
                      label = 704;
                      break L1;
                     }
                     $5661 = (($5658) + 8|0);
                     HEAPF64[$5661>>3] = $5657;
                     $5662 = (($4) + 548|0);
                     $5663 = HEAP8[$5662>>0]|0;
                     __THREW__ = 0;
                     $5664 = (invoke_iii(381,($vinfos80|0),4)|0);
                     $5665 = __THREW__; __THREW__ = 0;
                     $5666 = $5665&1;
                     if ($5666) {
                      label = 704;
                      break L1;
                     }
                     $5667 = (($5664) + 19|0);
                     HEAP8[$5667>>0] = $5663;
                     $5668 = (($4) + 548|0);
                     $5669 = (($5668) + 1|0);
                     $5670 = HEAP8[$5669>>0]|0;
                     __THREW__ = 0;
                     $5671 = (invoke_iii(381,($vinfos80|0),4)|0);
                     $5672 = __THREW__; __THREW__ = 0;
                     $5673 = $5672&1;
                     if ($5673) {
                      label = 704;
                      break L1;
                     }
                     $5674 = (($5671) + 19|0);
                     $5675 = (($5674) + 1|0);
                     HEAP8[$5675>>0] = $5670;
                     $5676 = (($4) + 550|0);
                     $5677 = HEAP8[$5676>>0]|0;
                     __THREW__ = 0;
                     $5678 = (invoke_iii(381,($vinfos80|0),4)|0);
                     $5679 = __THREW__; __THREW__ = 0;
                     $5680 = $5679&1;
                     if ($5680) {
                      label = 704;
                      break L1;
                     }
                     $5681 = (($5678) + 18|0);
                     HEAP8[$5681>>0] = $5677;
                     __THREW__ = 0;
                     $5682 = (invoke_iii(381,($vinfos80|0),5)|0);
                     $5683 = __THREW__; __THREW__ = 0;
                     $5684 = $5683&1;
                     if ($5684) {
                      label = 704;
                      break L1;
                     }
                     $5685 = (($5682) + 17|0);
                     HEAP8[$5685>>0] = 1;
                     $5686 = (($4) + 200|0);
                     $5687 = +HEAPF64[$5686>>3];
                     __THREW__ = 0;
                     $5688 = (invoke_iii(381,($vinfos80|0),5)|0);
                     $5689 = __THREW__; __THREW__ = 0;
                     $5690 = $5689&1;
                     if ($5690) {
                      label = 704;
                      break L1;
                     }
                     $5691 = (($5688) + 8|0);
                     HEAPF64[$5691>>3] = $5687;
                     $5692 = (($4) + 551|0);
                     $5693 = HEAP8[$5692>>0]|0;
                     __THREW__ = 0;
                     $5694 = (invoke_iii(381,($vinfos80|0),5)|0);
                     $5695 = __THREW__; __THREW__ = 0;
                     $5696 = $5695&1;
                     if ($5696) {
                      label = 704;
                      break L1;
                     }
                     $5697 = (($5694) + 19|0);
                     HEAP8[$5697>>0] = $5693;
                     $5698 = (($4) + 551|0);
                     $5699 = (($5698) + 1|0);
                     $5700 = HEAP8[$5699>>0]|0;
                     __THREW__ = 0;
                     $5701 = (invoke_iii(381,($vinfos80|0),5)|0);
                     $5702 = __THREW__; __THREW__ = 0;
                     $5703 = $5702&1;
                     if ($5703) {
                      label = 704;
                      break L1;
                     }
                     $5704 = (($5701) + 19|0);
                     $5705 = (($5704) + 1|0);
                     HEAP8[$5705>>0] = $5700;
                     $5706 = (($4) + 553|0);
                     $5707 = HEAP8[$5706>>0]|0;
                     __THREW__ = 0;
                     $5708 = (invoke_iii(381,($vinfos80|0),5)|0);
                     $5709 = __THREW__; __THREW__ = 0;
                     $5710 = $5709&1;
                     if ($5710) {
                      label = 704;
                      break L1;
                     }
                     $5711 = (($5708) + 18|0);
                     HEAP8[$5711>>0] = $5707;
                     __THREW__ = 0;
                     invoke_vii(382,($vfree81|0),0);
                     $5712 = __THREW__; __THREW__ = 0;
                     $5713 = $5712&1;
                     if ($5713) {
                      label = 704;
                      break L1;
                     }
                     $5714 = $1;
                     $5715 = HEAP32[$5714>>2]|0;
                     $5716 = (($5715) + 8|0);
                     $5717 = HEAP32[$5716>>2]|0;
                     __THREW__ = 0;
                     (invoke_iiii($5717|0,($5714|0),($vinfos80|0),($vfree81|0))|0);
                     $5718 = __THREW__; __THREW__ = 0;
                     $5719 = $5718&1;
                     if ($5719) {
                      label = 705;
                      break L1;
                     }
                     __THREW__ = 0;
                     invoke_vi(366,($vfree81|0));
                     $5720 = __THREW__; __THREW__ = 0;
                     $5721 = $5720&1;
                     if ($5721) {
                      label = 704;
                      break L1;
                     }
                     __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos80);
                     break L1126;
                    }
                   } while(0);
                  } else {
                  }
                 } while(0);
                 $5722 = $ij577;
                 $5723 = (($5722) + 1)|0;
                 $ij577 = $5723;
                }
               }
              } while(0);
              if ((label|0) == 286) {
               label = 0;
               $bgotonextstatement32 = 1;
               $2873 = (($4) + 360|0);
               $2874 = +HEAPF64[$2873>>3];
               $2875 = (($4) + 136|0);
               $2876 = +HEAPF64[$2875>>3];
               $2877 = $2874 * $2876;
               $2878 = (($4) + 128|0);
               $2879 = +HEAPF64[$2878>>3];
               $2880 = (($4) + 288|0);
               $2881 = +HEAPF64[$2880>>3];
               $2882 = $2879 * $2881;
               $2883 = $2877 + $2882;
               $x167 = $2883;
               $2884 = (($4) + 288|0);
               $2885 = +HEAPF64[$2884>>3];
               $2886 = -1.0 * $2885;
               $2887 = (($4) + 136|0);
               $2888 = +HEAPF64[$2887>>3];
               $2889 = $2886 * $2888;
               $2890 = (($4) + 128|0);
               $2891 = +HEAPF64[$2890>>3];
               $2892 = (($4) + 360|0);
               $2893 = +HEAPF64[$2892>>3];
               $2894 = $2891 * $2893;
               $2895 = $2889 + $2894;
               $x168 = $2895;
               $2896 = (($4) + 160|0);
               $2897 = +HEAPF64[$2896>>3];
               $2898 = (+__Z5IKabsd($2897));
               $2899 = 3.14159265358979 + $2898;
               $2900 = (+__Z6IKfmoddd($2899,6.2831853071795898));
               $2901 = -3.14159265358979 + $2900;
               HEAPF64[$evalcond31>>3] = $2901;
               $2902 = (($4) + 432|0);
               $2903 = +HEAPF64[$2902>>3];
               $2904 = -1.0 + $2903;
               $2905 = (($evalcond31) + 8|0);
               HEAPF64[$2905>>3] = $2904;
               $2906 = (($4) + 360|0);
               $2907 = +HEAPF64[$2906>>3];
               $2908 = (($evalcond31) + 16|0);
               HEAPF64[$2908>>3] = $2907;
               $2909 = (($4) + 408|0);
               $2910 = +HEAPF64[$2909>>3];
               $2911 = (($evalcond31) + 24|0);
               HEAPF64[$2911>>3] = $2910;
               $2912 = (($4) + 288|0);
               $2913 = +HEAPF64[$2912>>3];
               $2914 = (($evalcond31) + 32|0);
               HEAPF64[$2914>>3] = $2913;
               $2915 = (($4) + 384|0);
               $2916 = +HEAPF64[$2915>>3];
               $2917 = (($evalcond31) + 40|0);
               HEAPF64[$2917>>3] = $2916;
               $2918 = $x167;
               $2919 = (($evalcond31) + 48|0);
               HEAPF64[$2919>>3] = $2918;
               $2920 = $x167;
               $2921 = (($evalcond31) + 56|0);
               HEAPF64[$2921>>3] = $2920;
               $2922 = $x168;
               $2923 = (($evalcond31) + 64|0);
               HEAPF64[$2923>>3] = $2922;
               $2924 = $x168;
               $2925 = (($evalcond31) + 72|0);
               HEAPF64[$2925>>3] = $2924;
               $2926 = +HEAPF64[$evalcond31>>3];
               $2927 = (+__Z5IKabsd($2926));
               $2928 = $2927 < 9.9999999999999995E-7;
               L1192: do {
                if ($2928) {
                 $2929 = (($evalcond31) + 8|0);
                 $2930 = +HEAPF64[$2929>>3];
                 $2931 = (+__Z5IKabsd($2930));
                 $2932 = $2931 < 9.9999999999999995E-7;
                 if (!($2932)) {
                  label = 368;
                  break;
                 }
                 $2933 = (($evalcond31) + 16|0);
                 $2934 = +HEAPF64[$2933>>3];
                 $2935 = (+__Z5IKabsd($2934));
                 $2936 = $2935 < 9.9999999999999995E-7;
                 if (!($2936)) {
                  label = 368;
                  break;
                 }
                 $2937 = (($evalcond31) + 24|0);
                 $2938 = +HEAPF64[$2937>>3];
                 $2939 = (+__Z5IKabsd($2938));
                 $2940 = $2939 < 9.9999999999999995E-7;
                 if (!($2940)) {
                  label = 368;
                  break;
                 }
                 $2941 = (($evalcond31) + 32|0);
                 $2942 = +HEAPF64[$2941>>3];
                 $2943 = (+__Z5IKabsd($2942));
                 $2944 = $2943 < 9.9999999999999995E-7;
                 if (!($2944)) {
                  label = 368;
                  break;
                 }
                 $2945 = (($evalcond31) + 40|0);
                 $2946 = +HEAPF64[$2945>>3];
                 $2947 = (+__Z5IKabsd($2946));
                 $2948 = $2947 < 9.9999999999999995E-7;
                 if (!($2948)) {
                  label = 368;
                  break;
                 }
                 $2949 = (($evalcond31) + 48|0);
                 $2950 = +HEAPF64[$2949>>3];
                 $2951 = (+__Z5IKabsd($2950));
                 $2952 = $2951 < 9.9999999999999995E-7;
                 if (!($2952)) {
                  label = 368;
                  break;
                 }
                 $2953 = (($evalcond31) + 56|0);
                 $2954 = +HEAPF64[$2953>>3];
                 $2955 = (+__Z5IKabsd($2954));
                 $2956 = $2955 < 9.9999999999999995E-7;
                 if (!($2956)) {
                  label = 368;
                  break;
                 }
                 $2957 = (($evalcond31) + 64|0);
                 $2958 = +HEAPF64[$2957>>3];
                 $2959 = (+__Z5IKabsd($2958));
                 $2960 = $2959 < 9.9999999999999995E-7;
                 if (!($2960)) {
                  label = 368;
                  break;
                 }
                 $2961 = (($evalcond31) + 72|0);
                 $2962 = +HEAPF64[$2961>>3];
                 $2963 = (+__Z5IKabsd($2962));
                 $2964 = $2963 < 9.9999999999999995E-7;
                 if (!($2964)) {
                  label = 368;
                  break;
                 }
                 $bgotonextstatement32 = 0;
                 ;HEAP8[$j5valid36+0>>0]=0|0;
                 $2965 = (($4) + 553|0);
                 HEAP8[$2965>>0] = 1;
                 $2966 = (($4) + 128|0);
                 $2967 = +HEAPF64[$2966>>3];
                 $2968 = 1.0 * $2967;
                 $x169 = $2968;
                 $2969 = (($4) + 240|0);
                 $2970 = +HEAPF64[$2969>>3];
                 $2971 = -1.0 * $2970;
                 $2972 = $x169;
                 $2973 = $2971 * $2972;
                 $2974 = (($4) + 264|0);
                 $2975 = +HEAPF64[$2974>>3];
                 $2976 = (($4) + 136|0);
                 $2977 = +HEAPF64[$2976>>3];
                 $2978 = $2975 * $2977;
                 $2979 = $2973 + $2978;
                 $2980 = (+__Z5IKabsd($2979));
                 $2981 = $2980 < 1.9999999999999999E-6;
                 do {
                  if ($2981) {
                   $2982 = (($4) + 240|0);
                   $2983 = +HEAPF64[$2982>>3];
                   $2984 = -1.0 * $2983;
                   $2985 = (($4) + 136|0);
                   $2986 = +HEAPF64[$2985>>3];
                   $2987 = $2984 * $2986;
                   $2988 = (($4) + 264|0);
                   $2989 = +HEAPF64[$2988>>3];
                   $2990 = -1.0 * $2989;
                   $2991 = $x169;
                   $2992 = $2990 * $2991;
                   $2993 = $2987 + $2992;
                   $2994 = (+__Z5IKabsd($2993));
                   $2995 = $2994 < 1.9999999999999999E-6;
                   if (!($2995)) {
                    break;
                   }
                   $2996 = (($4) + 240|0);
                   $2997 = +HEAPF64[$2996>>3];
                   $2998 = -1.0 * $2997;
                   $2999 = $x169;
                   $3000 = $2998 * $2999;
                   $3001 = (($4) + 264|0);
                   $3002 = +HEAPF64[$3001>>3];
                   $3003 = (($4) + 136|0);
                   $3004 = +HEAPF64[$3003>>3];
                   $3005 = $3002 * $3004;
                   $3006 = $3000 + $3005;
                   $3007 = (+__Z5IKsqrd($3006));
                   $3008 = (($4) + 240|0);
                   $3009 = +HEAPF64[$3008>>3];
                   $3010 = -1.0 * $3009;
                   $3011 = (($4) + 136|0);
                   $3012 = +HEAPF64[$3011>>3];
                   $3013 = $3010 * $3012;
                   $3014 = (($4) + 264|0);
                   $3015 = +HEAPF64[$3014>>3];
                   $3016 = -1.0 * $3015;
                   $3017 = $x169;
                   $3018 = $3016 * $3017;
                   $3019 = $3013 + $3018;
                   $3020 = (+__Z5IKsqrd($3019));
                   $3021 = $3007 + $3020;
                   $3022 = $3021 - 1.0;
                   $3023 = (+__Z5IKabsd($3022));
                   $3024 = $3023 <= 1.9999999999999999E-6;
                   if (!($3024)) {
                    break;
                   }
                   break L1192;
                  }
                 } while(0);
                 $3025 = (($4) + 240|0);
                 $3026 = +HEAPF64[$3025>>3];
                 $3027 = -1.0 * $3026;
                 $3028 = $x169;
                 $3029 = $3027 * $3028;
                 $3030 = (($4) + 264|0);
                 $3031 = +HEAPF64[$3030>>3];
                 $3032 = (($4) + 136|0);
                 $3033 = +HEAPF64[$3032>>3];
                 $3034 = $3031 * $3033;
                 $3035 = $3029 + $3034;
                 $3036 = (($4) + 240|0);
                 $3037 = +HEAPF64[$3036>>3];
                 $3038 = -1.0 * $3037;
                 $3039 = (($4) + 136|0);
                 $3040 = +HEAPF64[$3039>>3];
                 $3041 = $3038 * $3040;
                 $3042 = (($4) + 264|0);
                 $3043 = +HEAPF64[$3042>>3];
                 $3044 = -1.0 * $3043;
                 $3045 = $x169;
                 $3046 = $3044 * $3045;
                 $3047 = $3041 + $3046;
                 $3048 = (+__Z7IKatan2dd($3035,$3047));
                 HEAPF64[$j5array33>>3] = $3048;
                 $3049 = +HEAPF64[$j5array33>>3];
                 $3050 = (+__Z5IKsind($3049));
                 HEAPF64[$sj5array35>>3] = $3050;
                 $3051 = +HEAPF64[$j5array33>>3];
                 $3052 = (+__Z5IKcosd($3051));
                 HEAPF64[$cj5array34>>3] = $3052;
                 $3053 = +HEAPF64[$j5array33>>3];
                 $3054 = $3053 > 3.14159265358979;
                 if ($3054) {
                  $3055 = +HEAPF64[$j5array33>>3];
                  $3056 = $3055 - 6.2831853071795898;
                  HEAPF64[$j5array33>>3] = $3056;
                 } else {
                  $3057 = +HEAPF64[$j5array33>>3];
                  $3058 = $3057 < -3.14159265358979;
                  if ($3058) {
                   $3059 = +HEAPF64[$j5array33>>3];
                   $3060 = $3059 + 6.2831853071795898;
                   HEAPF64[$j5array33>>3] = $3060;
                  }
                 }
                 HEAP8[$j5valid36>>0] = 1;
                 $ij537 = 0;
                 while(1) {
                  $3061 = $ij537;
                  $3062 = ($3061|0)<(1);
                  if (!($3062)) {
                   break;
                  }
                  $3063 = $ij537;
                  $3064 = (($j5valid36) + ($3063)|0);
                  $3065 = HEAP8[$3064>>0]|0;
                  $3066 = $3065&1;
                  L1218: do {
                   if ($3066) {
                    $3067 = $ij537;
                    $3068 = $3067&255;
                    $3069 = (($4) + 551|0);
                    HEAP8[$3069>>0] = $3068;
                    $3070 = (($4) + 551|0);
                    $3071 = (($3070) + 1|0);
                    HEAP8[$3071>>0] = -1;
                    $3072 = $ij537;
                    $3073 = (($3072) + 1)|0;
                    $iij538 = $3073;
                    L1221: while(1) {
                     $3074 = $iij538;
                     $3075 = ($3074|0)<(1);
                     if (!($3075)) {
                      break;
                     }
                     $3076 = $iij538;
                     $3077 = (($j5valid36) + ($3076)|0);
                     $3078 = HEAP8[$3077>>0]|0;
                     $3079 = $3078&1;
                     do {
                      if ($3079) {
                       $3080 = $ij537;
                       $3081 = (($cj5array34) + ($3080<<3)|0);
                       $3082 = +HEAPF64[$3081>>3];
                       $3083 = $iij538;
                       $3084 = (($cj5array34) + ($3083<<3)|0);
                       $3085 = +HEAPF64[$3084>>3];
                       $3086 = $3082 - $3085;
                       $3087 = (+__Z5IKabsd($3086));
                       $3088 = $3087 < 9.9999999999999995E-7;
                       if (!($3088)) {
                        break;
                       }
                       $3089 = $ij537;
                       $3090 = (($sj5array35) + ($3089<<3)|0);
                       $3091 = +HEAPF64[$3090>>3];
                       $3092 = $iij538;
                       $3093 = (($sj5array35) + ($3092<<3)|0);
                       $3094 = +HEAPF64[$3093>>3];
                       $3095 = $3091 - $3094;
                       $3096 = (+__Z5IKabsd($3095));
                       $3097 = $3096 < 9.9999999999999995E-7;
                       if ($3097) {
                        label = 315;
                        break L1221;
                       }
                      }
                     } while(0);
                     $3104 = $iij538;
                     $3105 = (($3104) + 1)|0;
                     $iij538 = $3105;
                    }
                    if ((label|0) == 315) {
                     label = 0;
                     $3098 = $iij538;
                     $3099 = (($j5valid36) + ($3098)|0);
                     HEAP8[$3099>>0] = 0;
                     $3100 = $iij538;
                     $3101 = $3100&255;
                     $3102 = (($4) + 551|0);
                     $3103 = (($3102) + 1|0);
                     HEAP8[$3103>>0] = $3101;
                    }
                    $3106 = $ij537;
                    $3107 = (($j5array33) + ($3106<<3)|0);
                    $3108 = +HEAPF64[$3107>>3];
                    $3109 = (($4) + 200|0);
                    HEAPF64[$3109>>3] = $3108;
                    $3110 = $ij537;
                    $3111 = (($cj5array34) + ($3110<<3)|0);
                    $3112 = +HEAPF64[$3111>>3];
                    $3113 = (($4) + 208|0);
                    HEAPF64[$3113>>3] = $3112;
                    $3114 = $ij537;
                    $3115 = (($sj5array35) + ($3114<<3)|0);
                    $3116 = +HEAPF64[$3115>>3];
                    $3117 = (($4) + 216|0);
                    HEAPF64[$3117>>3] = $3116;
                    $3118 = (($4) + 200|0);
                    $3119 = +HEAPF64[$3118>>3];
                    $3120 = (+__Z5IKsind($3119));
                    $x170 = $3120;
                    $3121 = (($4) + 200|0);
                    $3122 = +HEAPF64[$3121>>3];
                    $3123 = (+__Z5IKcosd($3122));
                    $x171 = $3123;
                    $3124 = (($4) + 136|0);
                    $3125 = +HEAPF64[$3124>>3];
                    $3126 = 1.0 * $3125;
                    $x172 = $3126;
                    $3127 = (($4) + 128|0);
                    $3128 = +HEAPF64[$3127>>3];
                    $3129 = $x170;
                    $3130 = $3128 * $3129;
                    $x173 = $3130;
                    $3131 = (($4) + 136|0);
                    $3132 = +HEAPF64[$3131>>3];
                    $3133 = $x171;
                    $3134 = $3132 * $3133;
                    $x174 = $3134;
                    $3135 = $x171;
                    $3136 = 1.0 * $3135;
                    $x175 = $3136;
                    $3137 = $x173;
                    $3138 = $x174;
                    $3139 = $3137 + $3138;
                    $x176 = $3139;
                    $3140 = (($4) + 312|0);
                    $3141 = +HEAPF64[$3140>>3];
                    $3142 = (($4) + 136|0);
                    $3143 = +HEAPF64[$3142>>3];
                    $3144 = $3141 * $3143;
                    $3145 = $x170;
                    $3146 = $3144 + $3145;
                    $3147 = (($4) + 128|0);
                    $3148 = +HEAPF64[$3147>>3];
                    $3149 = (($4) + 240|0);
                    $3150 = +HEAPF64[$3149>>3];
                    $3151 = $3148 * $3150;
                    $3152 = $3146 + $3151;
                    HEAPF64[$evalcond39>>3] = $3152;
                    $3153 = (($4) + 336|0);
                    $3154 = +HEAPF64[$3153>>3];
                    $3155 = (($4) + 136|0);
                    $3156 = +HEAPF64[$3155>>3];
                    $3157 = $3154 * $3156;
                    $3158 = $x171;
                    $3159 = $3157 + $3158;
                    $3160 = (($4) + 128|0);
                    $3161 = +HEAPF64[$3160>>3];
                    $3162 = (($4) + 264|0);
                    $3163 = +HEAPF64[$3162>>3];
                    $3164 = $3161 * $3163;
                    $3165 = $3159 + $3164;
                    $3166 = (($evalcond39) + 8|0);
                    HEAPF64[$3166>>3] = $3165;
                    $3167 = $x170;
                    $3168 = (($4) + 128|0);
                    $3169 = +HEAPF64[$3168>>3];
                    $3170 = (($4) + 336|0);
                    $3171 = +HEAPF64[$3170>>3];
                    $3172 = $3169 * $3171;
                    $3173 = $3167 + $3172;
                    $3174 = (($4) + 264|0);
                    $3175 = +HEAPF64[$3174>>3];
                    $3176 = -1.0 * $3175;
                    $3177 = $x172;
                    $3178 = $3176 * $3177;
                    $3179 = $3173 + $3178;
                    $3180 = (($evalcond39) + 16|0);
                    HEAPF64[$3180>>3] = $3179;
                    $3181 = $x176;
                    $3182 = (($4) + 240|0);
                    $3183 = +HEAPF64[$3182>>3];
                    $3184 = $3181 + $3183;
                    $3185 = (($evalcond39) + 24|0);
                    HEAPF64[$3185>>3] = $3184;
                    $3186 = $x176;
                    $3187 = (($4) + 336|0);
                    $3188 = +HEAPF64[$3187>>3];
                    $3189 = $3186 + $3188;
                    $3190 = (($evalcond39) + 32|0);
                    HEAPF64[$3190>>3] = $3189;
                    $3191 = (($4) + 128|0);
                    $3192 = +HEAPF64[$3191>>3];
                    $3193 = $x171;
                    $3194 = $3192 * $3193;
                    $3195 = $x170;
                    $3196 = -1.0 * $3195;
                    $3197 = $x172;
                    $3198 = $3196 * $3197;
                    $3199 = $3194 + $3198;
                    $3200 = (($4) + 264|0);
                    $3201 = +HEAPF64[$3200>>3];
                    $3202 = $3199 + $3201;
                    $3203 = (($evalcond39) + 40|0);
                    HEAPF64[$3203>>3] = $3202;
                    $3204 = (($4) + 128|0);
                    $3205 = +HEAPF64[$3204>>3];
                    $3206 = -1.0 * $3205;
                    $3207 = $x175;
                    $3208 = $3206 * $3207;
                    $3209 = (($4) + 312|0);
                    $3210 = +HEAPF64[$3209>>3];
                    $3211 = $3208 + $3210;
                    $3212 = (($4) + 136|0);
                    $3213 = +HEAPF64[$3212>>3];
                    $3214 = $x170;
                    $3215 = $3213 * $3214;
                    $3216 = $3211 + $3215;
                    $3217 = (($evalcond39) + 48|0);
                    HEAPF64[$3217>>3] = $3216;
                    $3218 = $x175;
                    $3219 = -1.0 * $3218;
                    $3220 = (($4) + 128|0);
                    $3221 = +HEAPF64[$3220>>3];
                    $3222 = (($4) + 312|0);
                    $3223 = +HEAPF64[$3222>>3];
                    $3224 = $3221 * $3223;
                    $3225 = $3219 + $3224;
                    $3226 = (($4) + 240|0);
                    $3227 = +HEAPF64[$3226>>3];
                    $3228 = -1.0 * $3227;
                    $3229 = $x172;
                    $3230 = $3228 * $3229;
                    $3231 = $3225 + $3230;
                    $3232 = (($evalcond39) + 56|0);
                    HEAPF64[$3232>>3] = $3231;
                    $3233 = +HEAPF64[$evalcond39>>3];
                    $3234 = (+__Z5IKabsd($3233));
                    $3235 = $3234 > 5.0000000000000004E-6;
                    do {
                     if (!($3235)) {
                      $3236 = (($evalcond39) + 8|0);
                      $3237 = +HEAPF64[$3236>>3];
                      $3238 = (+__Z5IKabsd($3237));
                      $3239 = $3238 > 5.0000000000000004E-6;
                      if ($3239) {
                       break;
                      }
                      $3240 = (($evalcond39) + 16|0);
                      $3241 = +HEAPF64[$3240>>3];
                      $3242 = (+__Z5IKabsd($3241));
                      $3243 = $3242 > 5.0000000000000004E-6;
                      if ($3243) {
                       break;
                      }
                      $3244 = (($evalcond39) + 24|0);
                      $3245 = +HEAPF64[$3244>>3];
                      $3246 = (+__Z5IKabsd($3245));
                      $3247 = $3246 > 5.0000000000000004E-6;
                      if ($3247) {
                       break;
                      }
                      $3248 = (($evalcond39) + 32|0);
                      $3249 = +HEAPF64[$3248>>3];
                      $3250 = (+__Z5IKabsd($3249));
                      $3251 = $3250 > 5.0000000000000004E-6;
                      if ($3251) {
                       break;
                      }
                      $3252 = (($evalcond39) + 40|0);
                      $3253 = +HEAPF64[$3252>>3];
                      $3254 = (+__Z5IKabsd($3253));
                      $3255 = $3254 > 5.0000000000000004E-6;
                      if ($3255) {
                       break;
                      }
                      $3256 = (($evalcond39) + 48|0);
                      $3257 = +HEAPF64[$3256>>3];
                      $3258 = (+__Z5IKabsd($3257));
                      $3259 = $3258 > 5.0000000000000004E-6;
                      if ($3259) {
                       break;
                      }
                      $3260 = (($evalcond39) + 56|0);
                      $3261 = +HEAPF64[$3260>>3];
                      $3262 = (+__Z5IKabsd($3261));
                      $3263 = $3262 > 5.0000000000000004E-6;
                      if ($3263) {
                       break;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos40,6);
                      __THREW__ = 0;
                      $3264 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3265 = __THREW__; __THREW__ = 0;
                      $3266 = $3265&1;
                      if ($3266) {
                       label = 362;
                       break L1;
                      }
                      $3267 = (($3264) + 17|0);
                      HEAP8[$3267>>0] = 1;
                      $3268 = +HEAPF64[$4>>3];
                      __THREW__ = 0;
                      $3269 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3270 = __THREW__; __THREW__ = 0;
                      $3271 = $3270&1;
                      if ($3271) {
                       label = 362;
                       break L1;
                      }
                      $3272 = (($3269) + 8|0);
                      HEAPF64[$3272>>3] = $3268;
                      $3273 = (($4) + 536|0);
                      $3274 = HEAP8[$3273>>0]|0;
                      __THREW__ = 0;
                      $3275 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3276 = __THREW__; __THREW__ = 0;
                      $3277 = $3276&1;
                      if ($3277) {
                       label = 362;
                       break L1;
                      }
                      $3278 = (($3275) + 19|0);
                      HEAP8[$3278>>0] = $3274;
                      $3279 = (($4) + 536|0);
                      $3280 = (($3279) + 1|0);
                      $3281 = HEAP8[$3280>>0]|0;
                      __THREW__ = 0;
                      $3282 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3283 = __THREW__; __THREW__ = 0;
                      $3284 = $3283&1;
                      if ($3284) {
                       label = 362;
                       break L1;
                      }
                      $3285 = (($3282) + 19|0);
                      $3286 = (($3285) + 1|0);
                      HEAP8[$3286>>0] = $3281;
                      $3287 = (($4) + 538|0);
                      $3288 = HEAP8[$3287>>0]|0;
                      __THREW__ = 0;
                      $3289 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3290 = __THREW__; __THREW__ = 0;
                      $3291 = $3290&1;
                      if ($3291) {
                       label = 362;
                       break L1;
                      }
                      $3292 = (($3289) + 18|0);
                      HEAP8[$3292>>0] = $3288;
                      __THREW__ = 0;
                      $3293 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3294 = __THREW__; __THREW__ = 0;
                      $3295 = $3294&1;
                      if ($3295) {
                       label = 362;
                       break L1;
                      }
                      $3296 = (($3293) + 17|0);
                      HEAP8[$3296>>0] = 1;
                      $3297 = (($4) + 40|0);
                      $3298 = +HEAPF64[$3297>>3];
                      __THREW__ = 0;
                      $3299 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3300 = __THREW__; __THREW__ = 0;
                      $3301 = $3300&1;
                      if ($3301) {
                       label = 362;
                       break L1;
                      }
                      $3302 = (($3299) + 8|0);
                      HEAPF64[$3302>>3] = $3298;
                      $3303 = (($4) + 539|0);
                      $3304 = HEAP8[$3303>>0]|0;
                      __THREW__ = 0;
                      $3305 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3306 = __THREW__; __THREW__ = 0;
                      $3307 = $3306&1;
                      if ($3307) {
                       label = 362;
                       break L1;
                      }
                      $3308 = (($3305) + 19|0);
                      HEAP8[$3308>>0] = $3304;
                      $3309 = (($4) + 539|0);
                      $3310 = (($3309) + 1|0);
                      $3311 = HEAP8[$3310>>0]|0;
                      __THREW__ = 0;
                      $3312 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3313 = __THREW__; __THREW__ = 0;
                      $3314 = $3313&1;
                      if ($3314) {
                       label = 362;
                       break L1;
                      }
                      $3315 = (($3312) + 19|0);
                      $3316 = (($3315) + 1|0);
                      HEAP8[$3316>>0] = $3311;
                      $3317 = (($4) + 541|0);
                      $3318 = HEAP8[$3317>>0]|0;
                      __THREW__ = 0;
                      $3319 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3320 = __THREW__; __THREW__ = 0;
                      $3321 = $3320&1;
                      if ($3321) {
                       label = 362;
                       break L1;
                      }
                      $3322 = (($3319) + 18|0);
                      HEAP8[$3322>>0] = $3318;
                      __THREW__ = 0;
                      $3323 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3324 = __THREW__; __THREW__ = 0;
                      $3325 = $3324&1;
                      if ($3325) {
                       label = 362;
                       break L1;
                      }
                      $3326 = (($3323) + 17|0);
                      HEAP8[$3326>>0] = 1;
                      $3327 = (($4) + 80|0);
                      $3328 = +HEAPF64[$3327>>3];
                      __THREW__ = 0;
                      $3329 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3330 = __THREW__; __THREW__ = 0;
                      $3331 = $3330&1;
                      if ($3331) {
                       label = 362;
                       break L1;
                      }
                      $3332 = (($3329) + 8|0);
                      HEAPF64[$3332>>3] = $3328;
                      $3333 = (($4) + 542|0);
                      $3334 = HEAP8[$3333>>0]|0;
                      __THREW__ = 0;
                      $3335 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3336 = __THREW__; __THREW__ = 0;
                      $3337 = $3336&1;
                      if ($3337) {
                       label = 362;
                       break L1;
                      }
                      $3338 = (($3335) + 19|0);
                      HEAP8[$3338>>0] = $3334;
                      $3339 = (($4) + 542|0);
                      $3340 = (($3339) + 1|0);
                      $3341 = HEAP8[$3340>>0]|0;
                      __THREW__ = 0;
                      $3342 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3343 = __THREW__; __THREW__ = 0;
                      $3344 = $3343&1;
                      if ($3344) {
                       label = 362;
                       break L1;
                      }
                      $3345 = (($3342) + 19|0);
                      $3346 = (($3345) + 1|0);
                      HEAP8[$3346>>0] = $3341;
                      $3347 = (($4) + 544|0);
                      $3348 = HEAP8[$3347>>0]|0;
                      __THREW__ = 0;
                      $3349 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3350 = __THREW__; __THREW__ = 0;
                      $3351 = $3350&1;
                      if ($3351) {
                       label = 362;
                       break L1;
                      }
                      $3352 = (($3349) + 18|0);
                      HEAP8[$3352>>0] = $3348;
                      __THREW__ = 0;
                      $3353 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3354 = __THREW__; __THREW__ = 0;
                      $3355 = $3354&1;
                      if ($3355) {
                       label = 362;
                       break L1;
                      }
                      $3356 = (($3353) + 17|0);
                      HEAP8[$3356>>0] = 1;
                      $3357 = (($4) + 120|0);
                      $3358 = +HEAPF64[$3357>>3];
                      __THREW__ = 0;
                      $3359 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3360 = __THREW__; __THREW__ = 0;
                      $3361 = $3360&1;
                      if ($3361) {
                       label = 362;
                       break L1;
                      }
                      $3362 = (($3359) + 8|0);
                      HEAPF64[$3362>>3] = $3358;
                      $3363 = (($4) + 545|0);
                      $3364 = HEAP8[$3363>>0]|0;
                      __THREW__ = 0;
                      $3365 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3366 = __THREW__; __THREW__ = 0;
                      $3367 = $3366&1;
                      if ($3367) {
                       label = 362;
                       break L1;
                      }
                      $3368 = (($3365) + 19|0);
                      HEAP8[$3368>>0] = $3364;
                      $3369 = (($4) + 545|0);
                      $3370 = (($3369) + 1|0);
                      $3371 = HEAP8[$3370>>0]|0;
                      __THREW__ = 0;
                      $3372 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3373 = __THREW__; __THREW__ = 0;
                      $3374 = $3373&1;
                      if ($3374) {
                       label = 362;
                       break L1;
                      }
                      $3375 = (($3372) + 19|0);
                      $3376 = (($3375) + 1|0);
                      HEAP8[$3376>>0] = $3371;
                      $3377 = (($4) + 547|0);
                      $3378 = HEAP8[$3377>>0]|0;
                      __THREW__ = 0;
                      $3379 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3380 = __THREW__; __THREW__ = 0;
                      $3381 = $3380&1;
                      if ($3381) {
                       label = 362;
                       break L1;
                      }
                      $3382 = (($3379) + 18|0);
                      HEAP8[$3382>>0] = $3378;
                      __THREW__ = 0;
                      $3383 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3384 = __THREW__; __THREW__ = 0;
                      $3385 = $3384&1;
                      if ($3385) {
                       label = 362;
                       break L1;
                      }
                      $3386 = (($3383) + 17|0);
                      HEAP8[$3386>>0] = 1;
                      $3387 = (($4) + 160|0);
                      $3388 = +HEAPF64[$3387>>3];
                      __THREW__ = 0;
                      $3389 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3390 = __THREW__; __THREW__ = 0;
                      $3391 = $3390&1;
                      if ($3391) {
                       label = 362;
                       break L1;
                      }
                      $3392 = (($3389) + 8|0);
                      HEAPF64[$3392>>3] = $3388;
                      $3393 = (($4) + 548|0);
                      $3394 = HEAP8[$3393>>0]|0;
                      __THREW__ = 0;
                      $3395 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3396 = __THREW__; __THREW__ = 0;
                      $3397 = $3396&1;
                      if ($3397) {
                       label = 362;
                       break L1;
                      }
                      $3398 = (($3395) + 19|0);
                      HEAP8[$3398>>0] = $3394;
                      $3399 = (($4) + 548|0);
                      $3400 = (($3399) + 1|0);
                      $3401 = HEAP8[$3400>>0]|0;
                      __THREW__ = 0;
                      $3402 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3403 = __THREW__; __THREW__ = 0;
                      $3404 = $3403&1;
                      if ($3404) {
                       label = 362;
                       break L1;
                      }
                      $3405 = (($3402) + 19|0);
                      $3406 = (($3405) + 1|0);
                      HEAP8[$3406>>0] = $3401;
                      $3407 = (($4) + 550|0);
                      $3408 = HEAP8[$3407>>0]|0;
                      __THREW__ = 0;
                      $3409 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3410 = __THREW__; __THREW__ = 0;
                      $3411 = $3410&1;
                      if ($3411) {
                       label = 362;
                       break L1;
                      }
                      $3412 = (($3409) + 18|0);
                      HEAP8[$3412>>0] = $3408;
                      __THREW__ = 0;
                      $3413 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3414 = __THREW__; __THREW__ = 0;
                      $3415 = $3414&1;
                      if ($3415) {
                       label = 362;
                       break L1;
                      }
                      $3416 = (($3413) + 17|0);
                      HEAP8[$3416>>0] = 1;
                      $3417 = (($4) + 200|0);
                      $3418 = +HEAPF64[$3417>>3];
                      __THREW__ = 0;
                      $3419 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3420 = __THREW__; __THREW__ = 0;
                      $3421 = $3420&1;
                      if ($3421) {
                       label = 362;
                       break L1;
                      }
                      $3422 = (($3419) + 8|0);
                      HEAPF64[$3422>>3] = $3418;
                      $3423 = (($4) + 551|0);
                      $3424 = HEAP8[$3423>>0]|0;
                      __THREW__ = 0;
                      $3425 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3426 = __THREW__; __THREW__ = 0;
                      $3427 = $3426&1;
                      if ($3427) {
                       label = 362;
                       break L1;
                      }
                      $3428 = (($3425) + 19|0);
                      HEAP8[$3428>>0] = $3424;
                      $3429 = (($4) + 551|0);
                      $3430 = (($3429) + 1|0);
                      $3431 = HEAP8[$3430>>0]|0;
                      __THREW__ = 0;
                      $3432 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3433 = __THREW__; __THREW__ = 0;
                      $3434 = $3433&1;
                      if ($3434) {
                       label = 362;
                       break L1;
                      }
                      $3435 = (($3432) + 19|0);
                      $3436 = (($3435) + 1|0);
                      HEAP8[$3436>>0] = $3431;
                      $3437 = (($4) + 553|0);
                      $3438 = HEAP8[$3437>>0]|0;
                      __THREW__ = 0;
                      $3439 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3440 = __THREW__; __THREW__ = 0;
                      $3441 = $3440&1;
                      if ($3441) {
                       label = 362;
                       break L1;
                      }
                      $3442 = (($3439) + 18|0);
                      HEAP8[$3442>>0] = $3438;
                      __THREW__ = 0;
                      invoke_vii(382,($vfree41|0),0);
                      $3443 = __THREW__; __THREW__ = 0;
                      $3444 = $3443&1;
                      if ($3444) {
                       label = 362;
                       break L1;
                      }
                      $3445 = $1;
                      $3446 = HEAP32[$3445>>2]|0;
                      $3447 = (($3446) + 8|0);
                      $3448 = HEAP32[$3447>>2]|0;
                      __THREW__ = 0;
                      (invoke_iiii($3448|0,($3445|0),($vinfos40|0),($vfree41|0))|0);
                      $3449 = __THREW__; __THREW__ = 0;
                      $3450 = $3449&1;
                      if ($3450) {
                       label = 363;
                       break L1;
                      }
                      __THREW__ = 0;
                      invoke_vi(366,($vfree41|0));
                      $3451 = __THREW__; __THREW__ = 0;
                      $3452 = $3451&1;
                      if ($3452) {
                       label = 362;
                       break L1;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos40);
                      break L1218;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $3453 = $ij537;
                  $3454 = (($3453) + 1)|0;
                  $ij537 = $3454;
                 }
                 label = 368;
                } else {
                 label = 368;
                }
               } while(0);
               if ((label|0) == 368) {
                label = 0;
               }
               $3463 = $bgotonextstatement32;
               $3464 = $3463&1;
               if ($3464) {
                $bgotonextstatement42 = 1;
                $3465 = (($4) + 128|0);
                $3466 = +HEAPF64[$3465>>3];
                $3467 = (($4) + 360|0);
                $3468 = +HEAPF64[$3467>>3];
                $3469 = $3466 * $3468;
                $x177 = $3469;
                $3470 = (($4) + 288|0);
                $3471 = +HEAPF64[$3470>>3];
                $3472 = (($4) + 136|0);
                $3473 = +HEAPF64[$3472>>3];
                $3474 = $3471 * $3473;
                $x178 = $3474;
                $3475 = (($4) + 360|0);
                $3476 = +HEAPF64[$3475>>3];
                $3477 = (($4) + 136|0);
                $3478 = +HEAPF64[$3477>>3];
                $3479 = $3476 * $3478;
                $3480 = (($4) + 128|0);
                $3481 = +HEAPF64[$3480>>3];
                $3482 = (($4) + 288|0);
                $3483 = +HEAPF64[$3482>>3];
                $3484 = $3481 * $3483;
                $3485 = $3479 + $3484;
                $x179 = $3485;
                $3486 = (($4) + 160|0);
                $3487 = +HEAPF64[$3486>>3];
                $3488 = -3.14159265358979 + $3487;
                $3489 = (+__Z5IKabsd($3488));
                $3490 = 3.14159265358979 + $3489;
                $3491 = (+__Z6IKfmoddd($3490,6.2831853071795898));
                $3492 = -3.14159265358979 + $3491;
                HEAPF64[$evalcond31>>3] = $3492;
                $3493 = (($4) + 432|0);
                $3494 = +HEAPF64[$3493>>3];
                $3495 = 1.0 + $3494;
                $3496 = (($evalcond31) + 8|0);
                HEAPF64[$3496>>3] = $3495;
                $3497 = (($4) + 360|0);
                $3498 = +HEAPF64[$3497>>3];
                $3499 = (($evalcond31) + 16|0);
                HEAPF64[$3499>>3] = $3498;
                $3500 = (($4) + 408|0);
                $3501 = +HEAPF64[$3500>>3];
                $3502 = (($evalcond31) + 24|0);
                HEAPF64[$3502>>3] = $3501;
                $3503 = (($4) + 288|0);
                $3504 = +HEAPF64[$3503>>3];
                $3505 = (($evalcond31) + 32|0);
                HEAPF64[$3505>>3] = $3504;
                $3506 = (($4) + 384|0);
                $3507 = +HEAPF64[$3506>>3];
                $3508 = (($evalcond31) + 40|0);
                HEAPF64[$3508>>3] = $3507;
                $3509 = $x179;
                $3510 = (($evalcond31) + 48|0);
                HEAPF64[$3510>>3] = $3509;
                $3511 = $x179;
                $3512 = (($evalcond31) + 56|0);
                HEAPF64[$3512>>3] = $3511;
                $3513 = $x178;
                $3514 = -1.0 * $3513;
                $3515 = $x177;
                $3516 = $3514 + $3515;
                $3517 = (($evalcond31) + 64|0);
                HEAPF64[$3517>>3] = $3516;
                $3518 = $x177;
                $3519 = -1.0 * $3518;
                $3520 = $x178;
                $3521 = $3519 + $3520;
                $3522 = (($evalcond31) + 72|0);
                HEAPF64[$3522>>3] = $3521;
                $3523 = +HEAPF64[$evalcond31>>3];
                $3524 = (+__Z5IKabsd($3523));
                $3525 = $3524 < 9.9999999999999995E-7;
                L1283: do {
                 if ($3525) {
                  $3526 = (($evalcond31) + 8|0);
                  $3527 = +HEAPF64[$3526>>3];
                  $3528 = (+__Z5IKabsd($3527));
                  $3529 = $3528 < 9.9999999999999995E-7;
                  if (!($3529)) {
                   label = 452;
                   break;
                  }
                  $3530 = (($evalcond31) + 16|0);
                  $3531 = +HEAPF64[$3530>>3];
                  $3532 = (+__Z5IKabsd($3531));
                  $3533 = $3532 < 9.9999999999999995E-7;
                  if (!($3533)) {
                   label = 452;
                   break;
                  }
                  $3534 = (($evalcond31) + 24|0);
                  $3535 = +HEAPF64[$3534>>3];
                  $3536 = (+__Z5IKabsd($3535));
                  $3537 = $3536 < 9.9999999999999995E-7;
                  if (!($3537)) {
                   label = 452;
                   break;
                  }
                  $3538 = (($evalcond31) + 32|0);
                  $3539 = +HEAPF64[$3538>>3];
                  $3540 = (+__Z5IKabsd($3539));
                  $3541 = $3540 < 9.9999999999999995E-7;
                  if (!($3541)) {
                   label = 452;
                   break;
                  }
                  $3542 = (($evalcond31) + 40|0);
                  $3543 = +HEAPF64[$3542>>3];
                  $3544 = (+__Z5IKabsd($3543));
                  $3545 = $3544 < 9.9999999999999995E-7;
                  if (!($3545)) {
                   label = 452;
                   break;
                  }
                  $3546 = (($evalcond31) + 48|0);
                  $3547 = +HEAPF64[$3546>>3];
                  $3548 = (+__Z5IKabsd($3547));
                  $3549 = $3548 < 9.9999999999999995E-7;
                  if (!($3549)) {
                   label = 452;
                   break;
                  }
                  $3550 = (($evalcond31) + 56|0);
                  $3551 = +HEAPF64[$3550>>3];
                  $3552 = (+__Z5IKabsd($3551));
                  $3553 = $3552 < 9.9999999999999995E-7;
                  if (!($3553)) {
                   label = 452;
                   break;
                  }
                  $3554 = (($evalcond31) + 64|0);
                  $3555 = +HEAPF64[$3554>>3];
                  $3556 = (+__Z5IKabsd($3555));
                  $3557 = $3556 < 9.9999999999999995E-7;
                  if (!($3557)) {
                   label = 452;
                   break;
                  }
                  $3558 = (($evalcond31) + 72|0);
                  $3559 = +HEAPF64[$3558>>3];
                  $3560 = (+__Z5IKabsd($3559));
                  $3561 = $3560 < 9.9999999999999995E-7;
                  if (!($3561)) {
                   label = 452;
                   break;
                  }
                  $bgotonextstatement42 = 0;
                  ;HEAP8[$j5valid46+0>>0]=0|0;
                  $3562 = (($4) + 553|0);
                  HEAP8[$3562>>0] = 1;
                  $3563 = (($4) + 264|0);
                  $3564 = +HEAPF64[$3563>>3];
                  $3565 = 1.0 * $3564;
                  $x180 = $3565;
                  $3566 = (($4) + 128|0);
                  $3567 = +HEAPF64[$3566>>3];
                  $3568 = -1.0 * $3567;
                  $3569 = (($4) + 240|0);
                  $3570 = +HEAPF64[$3569>>3];
                  $3571 = $3568 * $3570;
                  $3572 = (($4) + 136|0);
                  $3573 = +HEAPF64[$3572>>3];
                  $3574 = -1.0 * $3573;
                  $3575 = $x180;
                  $3576 = $3574 * $3575;
                  $3577 = $3571 + $3576;
                  $3578 = (+__Z5IKabsd($3577));
                  $3579 = $3578 < 1.9999999999999999E-6;
                  do {
                   if ($3579) {
                    $3580 = (($4) + 240|0);
                    $3581 = +HEAPF64[$3580>>3];
                    $3582 = (($4) + 136|0);
                    $3583 = +HEAPF64[$3582>>3];
                    $3584 = $3581 * $3583;
                    $3585 = (($4) + 128|0);
                    $3586 = +HEAPF64[$3585>>3];
                    $3587 = -1.0 * $3586;
                    $3588 = $x180;
                    $3589 = $3587 * $3588;
                    $3590 = $3584 + $3589;
                    $3591 = (+__Z5IKabsd($3590));
                    $3592 = $3591 < 1.9999999999999999E-6;
                    if (!($3592)) {
                     break;
                    }
                    $3593 = (($4) + 128|0);
                    $3594 = +HEAPF64[$3593>>3];
                    $3595 = -1.0 * $3594;
                    $3596 = (($4) + 240|0);
                    $3597 = +HEAPF64[$3596>>3];
                    $3598 = $3595 * $3597;
                    $3599 = (($4) + 136|0);
                    $3600 = +HEAPF64[$3599>>3];
                    $3601 = -1.0 * $3600;
                    $3602 = $x180;
                    $3603 = $3601 * $3602;
                    $3604 = $3598 + $3603;
                    $3605 = (+__Z5IKsqrd($3604));
                    $3606 = (($4) + 240|0);
                    $3607 = +HEAPF64[$3606>>3];
                    $3608 = (($4) + 136|0);
                    $3609 = +HEAPF64[$3608>>3];
                    $3610 = $3607 * $3609;
                    $3611 = (($4) + 128|0);
                    $3612 = +HEAPF64[$3611>>3];
                    $3613 = -1.0 * $3612;
                    $3614 = $x180;
                    $3615 = $3613 * $3614;
                    $3616 = $3610 + $3615;
                    $3617 = (+__Z5IKsqrd($3616));
                    $3618 = $3605 + $3617;
                    $3619 = $3618 - 1.0;
                    $3620 = (+__Z5IKabsd($3619));
                    $3621 = $3620 <= 1.9999999999999999E-6;
                    if (!($3621)) {
                     break;
                    }
                    break L1283;
                   }
                  } while(0);
                  $3622 = (($4) + 128|0);
                  $3623 = +HEAPF64[$3622>>3];
                  $3624 = -1.0 * $3623;
                  $3625 = (($4) + 240|0);
                  $3626 = +HEAPF64[$3625>>3];
                  $3627 = $3624 * $3626;
                  $3628 = (($4) + 136|0);
                  $3629 = +HEAPF64[$3628>>3];
                  $3630 = -1.0 * $3629;
                  $3631 = $x180;
                  $3632 = $3630 * $3631;
                  $3633 = $3627 + $3632;
                  $3634 = (($4) + 240|0);
                  $3635 = +HEAPF64[$3634>>3];
                  $3636 = (($4) + 136|0);
                  $3637 = +HEAPF64[$3636>>3];
                  $3638 = $3635 * $3637;
                  $3639 = (($4) + 128|0);
                  $3640 = +HEAPF64[$3639>>3];
                  $3641 = -1.0 * $3640;
                  $3642 = $x180;
                  $3643 = $3641 * $3642;
                  $3644 = $3638 + $3643;
                  $3645 = (+__Z7IKatan2dd($3633,$3644));
                  HEAPF64[$j5array43>>3] = $3645;
                  $3646 = +HEAPF64[$j5array43>>3];
                  $3647 = (+__Z5IKsind($3646));
                  HEAPF64[$sj5array45>>3] = $3647;
                  $3648 = +HEAPF64[$j5array43>>3];
                  $3649 = (+__Z5IKcosd($3648));
                  HEAPF64[$cj5array44>>3] = $3649;
                  $3650 = +HEAPF64[$j5array43>>3];
                  $3651 = $3650 > 3.14159265358979;
                  if ($3651) {
                   $3652 = +HEAPF64[$j5array43>>3];
                   $3653 = $3652 - 6.2831853071795898;
                   HEAPF64[$j5array43>>3] = $3653;
                  } else {
                   $3654 = +HEAPF64[$j5array43>>3];
                   $3655 = $3654 < -3.14159265358979;
                   if ($3655) {
                    $3656 = +HEAPF64[$j5array43>>3];
                    $3657 = $3656 + 6.2831853071795898;
                    HEAPF64[$j5array43>>3] = $3657;
                   }
                  }
                  HEAP8[$j5valid46>>0] = 1;
                  $ij547 = 0;
                  while(1) {
                   $3658 = $ij547;
                   $3659 = ($3658|0)<(1);
                   if (!($3659)) {
                    break;
                   }
                   $3660 = $ij547;
                   $3661 = (($j5valid46) + ($3660)|0);
                   $3662 = HEAP8[$3661>>0]|0;
                   $3663 = $3662&1;
                   L1309: do {
                    if ($3663) {
                     $3664 = $ij547;
                     $3665 = $3664&255;
                     $3666 = (($4) + 551|0);
                     HEAP8[$3666>>0] = $3665;
                     $3667 = (($4) + 551|0);
                     $3668 = (($3667) + 1|0);
                     HEAP8[$3668>>0] = -1;
                     $3669 = $ij547;
                     $3670 = (($3669) + 1)|0;
                     $iij548 = $3670;
                     L1312: while(1) {
                      $3671 = $iij548;
                      $3672 = ($3671|0)<(1);
                      if (!($3672)) {
                       break;
                      }
                      $3673 = $iij548;
                      $3674 = (($j5valid46) + ($3673)|0);
                      $3675 = HEAP8[$3674>>0]|0;
                      $3676 = $3675&1;
                      do {
                       if ($3676) {
                        $3677 = $ij547;
                        $3678 = (($cj5array44) + ($3677<<3)|0);
                        $3679 = +HEAPF64[$3678>>3];
                        $3680 = $iij548;
                        $3681 = (($cj5array44) + ($3680<<3)|0);
                        $3682 = +HEAPF64[$3681>>3];
                        $3683 = $3679 - $3682;
                        $3684 = (+__Z5IKabsd($3683));
                        $3685 = $3684 < 9.9999999999999995E-7;
                        if (!($3685)) {
                         break;
                        }
                        $3686 = $ij547;
                        $3687 = (($sj5array45) + ($3686<<3)|0);
                        $3688 = +HEAPF64[$3687>>3];
                        $3689 = $iij548;
                        $3690 = (($sj5array45) + ($3689<<3)|0);
                        $3691 = +HEAPF64[$3690>>3];
                        $3692 = $3688 - $3691;
                        $3693 = (+__Z5IKabsd($3692));
                        $3694 = $3693 < 9.9999999999999995E-7;
                        if ($3694) {
                         label = 399;
                         break L1312;
                        }
                       }
                      } while(0);
                      $3701 = $iij548;
                      $3702 = (($3701) + 1)|0;
                      $iij548 = $3702;
                     }
                     if ((label|0) == 399) {
                      label = 0;
                      $3695 = $iij548;
                      $3696 = (($j5valid46) + ($3695)|0);
                      HEAP8[$3696>>0] = 0;
                      $3697 = $iij548;
                      $3698 = $3697&255;
                      $3699 = (($4) + 551|0);
                      $3700 = (($3699) + 1|0);
                      HEAP8[$3700>>0] = $3698;
                     }
                     $3703 = $ij547;
                     $3704 = (($j5array43) + ($3703<<3)|0);
                     $3705 = +HEAPF64[$3704>>3];
                     $3706 = (($4) + 200|0);
                     HEAPF64[$3706>>3] = $3705;
                     $3707 = $ij547;
                     $3708 = (($cj5array44) + ($3707<<3)|0);
                     $3709 = +HEAPF64[$3708>>3];
                     $3710 = (($4) + 208|0);
                     HEAPF64[$3710>>3] = $3709;
                     $3711 = $ij547;
                     $3712 = (($sj5array45) + ($3711<<3)|0);
                     $3713 = +HEAPF64[$3712>>3];
                     $3714 = (($4) + 216|0);
                     HEAPF64[$3714>>3] = $3713;
                     $3715 = (($4) + 200|0);
                     $3716 = +HEAPF64[$3715>>3];
                     $3717 = (+__Z5IKcosd($3716));
                     $x181 = $3717;
                     $3718 = (($4) + 200|0);
                     $3719 = +HEAPF64[$3718>>3];
                     $3720 = (+__Z5IKsind($3719));
                     $x182 = $3720;
                     $3721 = (($4) + 136|0);
                     $3722 = +HEAPF64[$3721>>3];
                     $3723 = 1.0 * $3722;
                     $x183 = $3723;
                     $3724 = (($4) + 136|0);
                     $3725 = +HEAPF64[$3724>>3];
                     $3726 = $x182;
                     $3727 = $3725 * $3726;
                     $x184 = $3727;
                     $3728 = (($4) + 128|0);
                     $3729 = +HEAPF64[$3728>>3];
                     $3730 = $x181;
                     $3731 = $3729 * $3730;
                     $x185 = $3731;
                     $3732 = $x182;
                     $3733 = 1.0 * $3732;
                     $x186 = $3733;
                     $3734 = $x184;
                     $3735 = $x185;
                     $3736 = $3734 + $3735;
                     $x187 = $3736;
                     $3737 = (($4) + 312|0);
                     $3738 = +HEAPF64[$3737>>3];
                     $3739 = (($4) + 136|0);
                     $3740 = +HEAPF64[$3739>>3];
                     $3741 = $3738 * $3740;
                     $3742 = $x182;
                     $3743 = $3741 + $3742;
                     $3744 = (($4) + 128|0);
                     $3745 = +HEAPF64[$3744>>3];
                     $3746 = (($4) + 240|0);
                     $3747 = +HEAPF64[$3746>>3];
                     $3748 = $3745 * $3747;
                     $3749 = $3743 + $3748;
                     HEAPF64[$evalcond49>>3] = $3749;
                     $3750 = (($4) + 336|0);
                     $3751 = +HEAPF64[$3750>>3];
                     $3752 = (($4) + 136|0);
                     $3753 = +HEAPF64[$3752>>3];
                     $3754 = $3751 * $3753;
                     $3755 = $x181;
                     $3756 = $3754 + $3755;
                     $3757 = (($4) + 128|0);
                     $3758 = +HEAPF64[$3757>>3];
                     $3759 = (($4) + 264|0);
                     $3760 = +HEAPF64[$3759>>3];
                     $3761 = $3758 * $3760;
                     $3762 = $3756 + $3761;
                     $3763 = (($evalcond49) + 8|0);
                     HEAPF64[$3763>>3] = $3762;
                     $3764 = $x181;
                     $3765 = (($4) + 128|0);
                     $3766 = +HEAPF64[$3765>>3];
                     $3767 = (($4) + 312|0);
                     $3768 = +HEAPF64[$3767>>3];
                     $3769 = $3766 * $3768;
                     $3770 = $3764 + $3769;
                     $3771 = (($4) + 240|0);
                     $3772 = +HEAPF64[$3771>>3];
                     $3773 = -1.0 * $3772;
                     $3774 = $x183;
                     $3775 = $3773 * $3774;
                     $3776 = $3770 + $3775;
                     $3777 = (($evalcond49) + 16|0);
                     HEAPF64[$3777>>3] = $3776;
                     $3778 = $x187;
                     $3779 = (($4) + 264|0);
                     $3780 = +HEAPF64[$3779>>3];
                     $3781 = $3778 + $3780;
                     $3782 = (($evalcond49) + 24|0);
                     HEAPF64[$3782>>3] = $3781;
                     $3783 = $x187;
                     $3784 = (($4) + 312|0);
                     $3785 = +HEAPF64[$3784>>3];
                     $3786 = $3783 + $3785;
                     $3787 = (($evalcond49) + 32|0);
                     HEAPF64[$3787>>3] = $3786;
                     $3788 = (($4) + 128|0);
                     $3789 = +HEAPF64[$3788>>3];
                     $3790 = $x182;
                     $3791 = $3789 * $3790;
                     $3792 = (($4) + 240|0);
                     $3793 = +HEAPF64[$3792>>3];
                     $3794 = $3791 + $3793;
                     $3795 = $x181;
                     $3796 = -1.0 * $3795;
                     $3797 = $x183;
                     $3798 = $3796 * $3797;
                     $3799 = $3794 + $3798;
                     $3800 = (($evalcond49) + 40|0);
                     HEAPF64[$3800>>3] = $3799;
                     $3801 = (($4) + 136|0);
                     $3802 = +HEAPF64[$3801>>3];
                     $3803 = $x181;
                     $3804 = $3802 * $3803;
                     $3805 = (($4) + 336|0);
                     $3806 = +HEAPF64[$3805>>3];
                     $3807 = $3804 + $3806;
                     $3808 = (($4) + 128|0);
                     $3809 = +HEAPF64[$3808>>3];
                     $3810 = -1.0 * $3809;
                     $3811 = $x186;
                     $3812 = $3810 * $3811;
                     $3813 = $3807 + $3812;
                     $3814 = (($evalcond49) + 48|0);
                     HEAPF64[$3814>>3] = $3813;
                     $3815 = $x186;
                     $3816 = -1.0 * $3815;
                     $3817 = (($4) + 264|0);
                     $3818 = +HEAPF64[$3817>>3];
                     $3819 = -1.0 * $3818;
                     $3820 = $x183;
                     $3821 = $3819 * $3820;
                     $3822 = $3816 + $3821;
                     $3823 = (($4) + 128|0);
                     $3824 = +HEAPF64[$3823>>3];
                     $3825 = (($4) + 336|0);
                     $3826 = +HEAPF64[$3825>>3];
                     $3827 = $3824 * $3826;
                     $3828 = $3822 + $3827;
                     $3829 = (($evalcond49) + 56|0);
                     HEAPF64[$3829>>3] = $3828;
                     $3830 = +HEAPF64[$evalcond49>>3];
                     $3831 = (+__Z5IKabsd($3830));
                     $3832 = $3831 > 5.0000000000000004E-6;
                     do {
                      if (!($3832)) {
                       $3833 = (($evalcond49) + 8|0);
                       $3834 = +HEAPF64[$3833>>3];
                       $3835 = (+__Z5IKabsd($3834));
                       $3836 = $3835 > 5.0000000000000004E-6;
                       if ($3836) {
                        break;
                       }
                       $3837 = (($evalcond49) + 16|0);
                       $3838 = +HEAPF64[$3837>>3];
                       $3839 = (+__Z5IKabsd($3838));
                       $3840 = $3839 > 5.0000000000000004E-6;
                       if ($3840) {
                        break;
                       }
                       $3841 = (($evalcond49) + 24|0);
                       $3842 = +HEAPF64[$3841>>3];
                       $3843 = (+__Z5IKabsd($3842));
                       $3844 = $3843 > 5.0000000000000004E-6;
                       if ($3844) {
                        break;
                       }
                       $3845 = (($evalcond49) + 32|0);
                       $3846 = +HEAPF64[$3845>>3];
                       $3847 = (+__Z5IKabsd($3846));
                       $3848 = $3847 > 5.0000000000000004E-6;
                       if ($3848) {
                        break;
                       }
                       $3849 = (($evalcond49) + 40|0);
                       $3850 = +HEAPF64[$3849>>3];
                       $3851 = (+__Z5IKabsd($3850));
                       $3852 = $3851 > 5.0000000000000004E-6;
                       if ($3852) {
                        break;
                       }
                       $3853 = (($evalcond49) + 48|0);
                       $3854 = +HEAPF64[$3853>>3];
                       $3855 = (+__Z5IKabsd($3854));
                       $3856 = $3855 > 5.0000000000000004E-6;
                       if ($3856) {
                        break;
                       }
                       $3857 = (($evalcond49) + 56|0);
                       $3858 = +HEAPF64[$3857>>3];
                       $3859 = (+__Z5IKabsd($3858));
                       $3860 = $3859 > 5.0000000000000004E-6;
                       if ($3860) {
                        break;
                       }
                       __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos50,6);
                       __THREW__ = 0;
                       $3861 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3862 = __THREW__; __THREW__ = 0;
                       $3863 = $3862&1;
                       if ($3863) {
                        label = 446;
                        break L1;
                       }
                       $3864 = (($3861) + 17|0);
                       HEAP8[$3864>>0] = 1;
                       $3865 = +HEAPF64[$4>>3];
                       __THREW__ = 0;
                       $3866 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3867 = __THREW__; __THREW__ = 0;
                       $3868 = $3867&1;
                       if ($3868) {
                        label = 446;
                        break L1;
                       }
                       $3869 = (($3866) + 8|0);
                       HEAPF64[$3869>>3] = $3865;
                       $3870 = (($4) + 536|0);
                       $3871 = HEAP8[$3870>>0]|0;
                       __THREW__ = 0;
                       $3872 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3873 = __THREW__; __THREW__ = 0;
                       $3874 = $3873&1;
                       if ($3874) {
                        label = 446;
                        break L1;
                       }
                       $3875 = (($3872) + 19|0);
                       HEAP8[$3875>>0] = $3871;
                       $3876 = (($4) + 536|0);
                       $3877 = (($3876) + 1|0);
                       $3878 = HEAP8[$3877>>0]|0;
                       __THREW__ = 0;
                       $3879 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3880 = __THREW__; __THREW__ = 0;
                       $3881 = $3880&1;
                       if ($3881) {
                        label = 446;
                        break L1;
                       }
                       $3882 = (($3879) + 19|0);
                       $3883 = (($3882) + 1|0);
                       HEAP8[$3883>>0] = $3878;
                       $3884 = (($4) + 538|0);
                       $3885 = HEAP8[$3884>>0]|0;
                       __THREW__ = 0;
                       $3886 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3887 = __THREW__; __THREW__ = 0;
                       $3888 = $3887&1;
                       if ($3888) {
                        label = 446;
                        break L1;
                       }
                       $3889 = (($3886) + 18|0);
                       HEAP8[$3889>>0] = $3885;
                       __THREW__ = 0;
                       $3890 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3891 = __THREW__; __THREW__ = 0;
                       $3892 = $3891&1;
                       if ($3892) {
                        label = 446;
                        break L1;
                       }
                       $3893 = (($3890) + 17|0);
                       HEAP8[$3893>>0] = 1;
                       $3894 = (($4) + 40|0);
                       $3895 = +HEAPF64[$3894>>3];
                       __THREW__ = 0;
                       $3896 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3897 = __THREW__; __THREW__ = 0;
                       $3898 = $3897&1;
                       if ($3898) {
                        label = 446;
                        break L1;
                       }
                       $3899 = (($3896) + 8|0);
                       HEAPF64[$3899>>3] = $3895;
                       $3900 = (($4) + 539|0);
                       $3901 = HEAP8[$3900>>0]|0;
                       __THREW__ = 0;
                       $3902 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3903 = __THREW__; __THREW__ = 0;
                       $3904 = $3903&1;
                       if ($3904) {
                        label = 446;
                        break L1;
                       }
                       $3905 = (($3902) + 19|0);
                       HEAP8[$3905>>0] = $3901;
                       $3906 = (($4) + 539|0);
                       $3907 = (($3906) + 1|0);
                       $3908 = HEAP8[$3907>>0]|0;
                       __THREW__ = 0;
                       $3909 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3910 = __THREW__; __THREW__ = 0;
                       $3911 = $3910&1;
                       if ($3911) {
                        label = 446;
                        break L1;
                       }
                       $3912 = (($3909) + 19|0);
                       $3913 = (($3912) + 1|0);
                       HEAP8[$3913>>0] = $3908;
                       $3914 = (($4) + 541|0);
                       $3915 = HEAP8[$3914>>0]|0;
                       __THREW__ = 0;
                       $3916 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3917 = __THREW__; __THREW__ = 0;
                       $3918 = $3917&1;
                       if ($3918) {
                        label = 446;
                        break L1;
                       }
                       $3919 = (($3916) + 18|0);
                       HEAP8[$3919>>0] = $3915;
                       __THREW__ = 0;
                       $3920 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3921 = __THREW__; __THREW__ = 0;
                       $3922 = $3921&1;
                       if ($3922) {
                        label = 446;
                        break L1;
                       }
                       $3923 = (($3920) + 17|0);
                       HEAP8[$3923>>0] = 1;
                       $3924 = (($4) + 80|0);
                       $3925 = +HEAPF64[$3924>>3];
                       __THREW__ = 0;
                       $3926 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3927 = __THREW__; __THREW__ = 0;
                       $3928 = $3927&1;
                       if ($3928) {
                        label = 446;
                        break L1;
                       }
                       $3929 = (($3926) + 8|0);
                       HEAPF64[$3929>>3] = $3925;
                       $3930 = (($4) + 542|0);
                       $3931 = HEAP8[$3930>>0]|0;
                       __THREW__ = 0;
                       $3932 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3933 = __THREW__; __THREW__ = 0;
                       $3934 = $3933&1;
                       if ($3934) {
                        label = 446;
                        break L1;
                       }
                       $3935 = (($3932) + 19|0);
                       HEAP8[$3935>>0] = $3931;
                       $3936 = (($4) + 542|0);
                       $3937 = (($3936) + 1|0);
                       $3938 = HEAP8[$3937>>0]|0;
                       __THREW__ = 0;
                       $3939 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3940 = __THREW__; __THREW__ = 0;
                       $3941 = $3940&1;
                       if ($3941) {
                        label = 446;
                        break L1;
                       }
                       $3942 = (($3939) + 19|0);
                       $3943 = (($3942) + 1|0);
                       HEAP8[$3943>>0] = $3938;
                       $3944 = (($4) + 544|0);
                       $3945 = HEAP8[$3944>>0]|0;
                       __THREW__ = 0;
                       $3946 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3947 = __THREW__; __THREW__ = 0;
                       $3948 = $3947&1;
                       if ($3948) {
                        label = 446;
                        break L1;
                       }
                       $3949 = (($3946) + 18|0);
                       HEAP8[$3949>>0] = $3945;
                       __THREW__ = 0;
                       $3950 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3951 = __THREW__; __THREW__ = 0;
                       $3952 = $3951&1;
                       if ($3952) {
                        label = 446;
                        break L1;
                       }
                       $3953 = (($3950) + 17|0);
                       HEAP8[$3953>>0] = 1;
                       $3954 = (($4) + 120|0);
                       $3955 = +HEAPF64[$3954>>3];
                       __THREW__ = 0;
                       $3956 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3957 = __THREW__; __THREW__ = 0;
                       $3958 = $3957&1;
                       if ($3958) {
                        label = 446;
                        break L1;
                       }
                       $3959 = (($3956) + 8|0);
                       HEAPF64[$3959>>3] = $3955;
                       $3960 = (($4) + 545|0);
                       $3961 = HEAP8[$3960>>0]|0;
                       __THREW__ = 0;
                       $3962 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3963 = __THREW__; __THREW__ = 0;
                       $3964 = $3963&1;
                       if ($3964) {
                        label = 446;
                        break L1;
                       }
                       $3965 = (($3962) + 19|0);
                       HEAP8[$3965>>0] = $3961;
                       $3966 = (($4) + 545|0);
                       $3967 = (($3966) + 1|0);
                       $3968 = HEAP8[$3967>>0]|0;
                       __THREW__ = 0;
                       $3969 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3970 = __THREW__; __THREW__ = 0;
                       $3971 = $3970&1;
                       if ($3971) {
                        label = 446;
                        break L1;
                       }
                       $3972 = (($3969) + 19|0);
                       $3973 = (($3972) + 1|0);
                       HEAP8[$3973>>0] = $3968;
                       $3974 = (($4) + 547|0);
                       $3975 = HEAP8[$3974>>0]|0;
                       __THREW__ = 0;
                       $3976 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3977 = __THREW__; __THREW__ = 0;
                       $3978 = $3977&1;
                       if ($3978) {
                        label = 446;
                        break L1;
                       }
                       $3979 = (($3976) + 18|0);
                       HEAP8[$3979>>0] = $3975;
                       __THREW__ = 0;
                       $3980 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $3981 = __THREW__; __THREW__ = 0;
                       $3982 = $3981&1;
                       if ($3982) {
                        label = 446;
                        break L1;
                       }
                       $3983 = (($3980) + 17|0);
                       HEAP8[$3983>>0] = 1;
                       $3984 = (($4) + 160|0);
                       $3985 = +HEAPF64[$3984>>3];
                       __THREW__ = 0;
                       $3986 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $3987 = __THREW__; __THREW__ = 0;
                       $3988 = $3987&1;
                       if ($3988) {
                        label = 446;
                        break L1;
                       }
                       $3989 = (($3986) + 8|0);
                       HEAPF64[$3989>>3] = $3985;
                       $3990 = (($4) + 548|0);
                       $3991 = HEAP8[$3990>>0]|0;
                       __THREW__ = 0;
                       $3992 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $3993 = __THREW__; __THREW__ = 0;
                       $3994 = $3993&1;
                       if ($3994) {
                        label = 446;
                        break L1;
                       }
                       $3995 = (($3992) + 19|0);
                       HEAP8[$3995>>0] = $3991;
                       $3996 = (($4) + 548|0);
                       $3997 = (($3996) + 1|0);
                       $3998 = HEAP8[$3997>>0]|0;
                       __THREW__ = 0;
                       $3999 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $4000 = __THREW__; __THREW__ = 0;
                       $4001 = $4000&1;
                       if ($4001) {
                        label = 446;
                        break L1;
                       }
                       $4002 = (($3999) + 19|0);
                       $4003 = (($4002) + 1|0);
                       HEAP8[$4003>>0] = $3998;
                       $4004 = (($4) + 550|0);
                       $4005 = HEAP8[$4004>>0]|0;
                       __THREW__ = 0;
                       $4006 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $4007 = __THREW__; __THREW__ = 0;
                       $4008 = $4007&1;
                       if ($4008) {
                        label = 446;
                        break L1;
                       }
                       $4009 = (($4006) + 18|0);
                       HEAP8[$4009>>0] = $4005;
                       __THREW__ = 0;
                       $4010 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $4011 = __THREW__; __THREW__ = 0;
                       $4012 = $4011&1;
                       if ($4012) {
                        label = 446;
                        break L1;
                       }
                       $4013 = (($4010) + 17|0);
                       HEAP8[$4013>>0] = 1;
                       $4014 = (($4) + 200|0);
                       $4015 = +HEAPF64[$4014>>3];
                       __THREW__ = 0;
                       $4016 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $4017 = __THREW__; __THREW__ = 0;
                       $4018 = $4017&1;
                       if ($4018) {
                        label = 446;
                        break L1;
                       }
                       $4019 = (($4016) + 8|0);
                       HEAPF64[$4019>>3] = $4015;
                       $4020 = (($4) + 551|0);
                       $4021 = HEAP8[$4020>>0]|0;
                       __THREW__ = 0;
                       $4022 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $4023 = __THREW__; __THREW__ = 0;
                       $4024 = $4023&1;
                       if ($4024) {
                        label = 446;
                        break L1;
                       }
                       $4025 = (($4022) + 19|0);
                       HEAP8[$4025>>0] = $4021;
                       $4026 = (($4) + 551|0);
                       $4027 = (($4026) + 1|0);
                       $4028 = HEAP8[$4027>>0]|0;
                       __THREW__ = 0;
                       $4029 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $4030 = __THREW__; __THREW__ = 0;
                       $4031 = $4030&1;
                       if ($4031) {
                        label = 446;
                        break L1;
                       }
                       $4032 = (($4029) + 19|0);
                       $4033 = (($4032) + 1|0);
                       HEAP8[$4033>>0] = $4028;
                       $4034 = (($4) + 553|0);
                       $4035 = HEAP8[$4034>>0]|0;
                       __THREW__ = 0;
                       $4036 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $4037 = __THREW__; __THREW__ = 0;
                       $4038 = $4037&1;
                       if ($4038) {
                        label = 446;
                        break L1;
                       }
                       $4039 = (($4036) + 18|0);
                       HEAP8[$4039>>0] = $4035;
                       __THREW__ = 0;
                       invoke_vii(382,($vfree51|0),0);
                       $4040 = __THREW__; __THREW__ = 0;
                       $4041 = $4040&1;
                       if ($4041) {
                        label = 446;
                        break L1;
                       }
                       $4042 = $1;
                       $4043 = HEAP32[$4042>>2]|0;
                       $4044 = (($4043) + 8|0);
                       $4045 = HEAP32[$4044>>2]|0;
                       __THREW__ = 0;
                       (invoke_iiii($4045|0,($4042|0),($vinfos50|0),($vfree51|0))|0);
                       $4046 = __THREW__; __THREW__ = 0;
                       $4047 = $4046&1;
                       if ($4047) {
                        label = 447;
                        break L1;
                       }
                       __THREW__ = 0;
                       invoke_vi(366,($vfree51|0));
                       $4048 = __THREW__; __THREW__ = 0;
                       $4049 = $4048&1;
                       if ($4049) {
                        label = 446;
                        break L1;
                       }
                       __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos50);
                       break L1309;
                      }
                     } while(0);
                    } else {
                    }
                   } while(0);
                   $4050 = $ij547;
                   $4051 = (($4050) + 1)|0;
                   $ij547 = $4051;
                  }
                  label = 452;
                 } else {
                  label = 452;
                 }
                } while(0);
                if ((label|0) == 452) {
                 label = 0;
                }
                $4060 = $bgotonextstatement42;
                $4061 = $4060&1;
                if ($4061) {
                 $bgotonextstatement52 = 1;
                 $4062 = (($4) + 432|0);
                 $4063 = +HEAPF64[$4062>>3];
                 $4064 = (($4) + 168|0);
                 $4065 = +HEAPF64[$4064>>3];
                 $4066 = -1.0 * $4065;
                 $4067 = $4063 + $4066;
                 $x188 = $4067;
                 $4068 = (($4) + 176|0);
                 $4069 = +HEAPF64[$4068>>3];
                 $4070 = (($4) + 360|0);
                 $4071 = +HEAPF64[$4070>>3];
                 $4072 = $4069 + $4071;
                 $x189 = $4072;
                 $4073 = (($4) + 176|0);
                 $4074 = +HEAPF64[$4073>>3];
                 $4075 = 1.0 * $4074;
                 $x190 = $4075;
                 $4076 = (($4) + 120|0);
                 $4077 = +HEAPF64[$4076>>3];
                 $4078 = (+__Z5IKabsd($4077));
                 $4079 = 3.14159265358979 + $4078;
                 $4080 = (+__Z6IKfmoddd($4079,6.2831853071795898));
                 $4081 = -3.14159265358979 + $4080;
                 HEAPF64[$evalcond31>>3] = $4081;
                 $4082 = $x188;
                 $4083 = (($evalcond31) + 8|0);
                 HEAPF64[$4083>>3] = $4082;
                 $4084 = $x188;
                 $4085 = (($evalcond31) + 16|0);
                 HEAPF64[$4085>>3] = $4084;
                 $4086 = $x189;
                 $4087 = (($evalcond31) + 24|0);
                 HEAPF64[$4087>>3] = $4086;
                 $4088 = (($4) + 288|0);
                 $4089 = +HEAPF64[$4088>>3];
                 $4090 = (($evalcond31) + 32|0);
                 HEAPF64[$4090>>3] = $4089;
                 $4091 = $x189;
                 $4092 = (($evalcond31) + 40|0);
                 HEAPF64[$4092>>3] = $4091;
                 $4093 = (($4) + 168|0);
                 $4094 = +HEAPF64[$4093>>3];
                 $4095 = (($4) + 360|0);
                 $4096 = +HEAPF64[$4095>>3];
                 $4097 = $4094 * $4096;
                 $4098 = (($4) + 432|0);
                 $4099 = +HEAPF64[$4098>>3];
                 $4100 = (($4) + 176|0);
                 $4101 = +HEAPF64[$4100>>3];
                 $4102 = $4099 * $4101;
                 $4103 = $4097 + $4102;
                 $4104 = (($evalcond31) + 48|0);
                 HEAPF64[$4104>>3] = $4103;
                 $4105 = (($4) + 168|0);
                 $4106 = +HEAPF64[$4105>>3];
                 $4107 = (($4) + 384|0);
                 $4108 = +HEAPF64[$4107>>3];
                 $4109 = $4106 * $4108;
                 $4110 = (($4) + 312|0);
                 $4111 = +HEAPF64[$4110>>3];
                 $4112 = -1.0 * $4111;
                 $4113 = $x190;
                 $4114 = $4112 * $4113;
                 $4115 = $4109 + $4114;
                 $4116 = (($evalcond31) + 56|0);
                 HEAPF64[$4116>>3] = $4115;
                 $4117 = (($4) + 168|0);
                 $4118 = +HEAPF64[$4117>>3];
                 $4119 = (($4) + 408|0);
                 $4120 = +HEAPF64[$4119>>3];
                 $4121 = $4118 * $4120;
                 $4122 = (($4) + 336|0);
                 $4123 = +HEAPF64[$4122>>3];
                 $4124 = -1.0 * $4123;
                 $4125 = $x190;
                 $4126 = $4124 * $4125;
                 $4127 = $4121 + $4126;
                 $4128 = (($evalcond31) + 64|0);
                 HEAPF64[$4128>>3] = $4127;
                 $4129 = (($4) + 168|0);
                 $4130 = +HEAPF64[$4129>>3];
                 $4131 = (($4) + 432|0);
                 $4132 = +HEAPF64[$4131>>3];
                 $4133 = $4130 * $4132;
                 $4134 = -1.0 + $4133;
                 $4135 = (($4) + 360|0);
                 $4136 = +HEAPF64[$4135>>3];
                 $4137 = -1.0 * $4136;
                 $4138 = $x190;
                 $4139 = $4137 * $4138;
                 $4140 = $4134 + $4139;
                 $4141 = (($evalcond31) + 72|0);
                 HEAPF64[$4141>>3] = $4140;
                 $4142 = +HEAPF64[$evalcond31>>3];
                 $4143 = (+__Z5IKabsd($4142));
                 $4144 = $4143 < 9.9999999999999995E-7;
                 L1374: do {
                  if ($4144) {
                   $4145 = (($evalcond31) + 8|0);
                   $4146 = +HEAPF64[$4145>>3];
                   $4147 = (+__Z5IKabsd($4146));
                   $4148 = $4147 < 9.9999999999999995E-7;
                   if (!($4148)) {
                    label = 536;
                    break;
                   }
                   $4149 = (($evalcond31) + 16|0);
                   $4150 = +HEAPF64[$4149>>3];
                   $4151 = (+__Z5IKabsd($4150));
                   $4152 = $4151 < 9.9999999999999995E-7;
                   if (!($4152)) {
                    label = 536;
                    break;
                   }
                   $4153 = (($evalcond31) + 24|0);
                   $4154 = +HEAPF64[$4153>>3];
                   $4155 = (+__Z5IKabsd($4154));
                   $4156 = $4155 < 9.9999999999999995E-7;
                   if (!($4156)) {
                    label = 536;
                    break;
                   }
                   $4157 = (($evalcond31) + 32|0);
                   $4158 = +HEAPF64[$4157>>3];
                   $4159 = (+__Z5IKabsd($4158));
                   $4160 = $4159 < 9.9999999999999995E-7;
                   if (!($4160)) {
                    label = 536;
                    break;
                   }
                   $4161 = (($evalcond31) + 40|0);
                   $4162 = +HEAPF64[$4161>>3];
                   $4163 = (+__Z5IKabsd($4162));
                   $4164 = $4163 < 9.9999999999999995E-7;
                   if (!($4164)) {
                    label = 536;
                    break;
                   }
                   $4165 = (($evalcond31) + 48|0);
                   $4166 = +HEAPF64[$4165>>3];
                   $4167 = (+__Z5IKabsd($4166));
                   $4168 = $4167 < 9.9999999999999995E-7;
                   if (!($4168)) {
                    label = 536;
                    break;
                   }
                   $4169 = (($evalcond31) + 56|0);
                   $4170 = +HEAPF64[$4169>>3];
                   $4171 = (+__Z5IKabsd($4170));
                   $4172 = $4171 < 9.9999999999999995E-7;
                   if (!($4172)) {
                    label = 536;
                    break;
                   }
                   $4173 = (($evalcond31) + 64|0);
                   $4174 = +HEAPF64[$4173>>3];
                   $4175 = (+__Z5IKabsd($4174));
                   $4176 = $4175 < 9.9999999999999995E-7;
                   if (!($4176)) {
                    label = 536;
                    break;
                   }
                   $4177 = (($evalcond31) + 72|0);
                   $4178 = +HEAPF64[$4177>>3];
                   $4179 = (+__Z5IKabsd($4178));
                   $4180 = $4179 < 9.9999999999999995E-7;
                   if (!($4180)) {
                    label = 536;
                    break;
                   }
                   $bgotonextstatement52 = 0;
                   ;HEAP8[$j5valid56+0>>0]=0|0;
                   $4181 = (($4) + 553|0);
                   HEAP8[$4181>>0] = 1;
                   $4182 = (($4) + 240|0);
                   $4183 = +HEAPF64[$4182>>3];
                   $4184 = -1.0 * $4183;
                   $4185 = (+__Z5IKabsd($4184));
                   $4186 = $4185 < 1.9999999999999999E-6;
                   do {
                    if ($4186) {
                     $4187 = (($4) + 264|0);
                     $4188 = +HEAPF64[$4187>>3];
                     $4189 = -1.0 * $4188;
                     $4190 = (+__Z5IKabsd($4189));
                     $4191 = $4190 < 1.9999999999999999E-6;
                     if (!($4191)) {
                      break;
                     }
                     $4192 = (($4) + 240|0);
                     $4193 = +HEAPF64[$4192>>3];
                     $4194 = -1.0 * $4193;
                     $4195 = (+__Z5IKsqrd($4194));
                     $4196 = (($4) + 264|0);
                     $4197 = +HEAPF64[$4196>>3];
                     $4198 = -1.0 * $4197;
                     $4199 = (+__Z5IKsqrd($4198));
                     $4200 = $4195 + $4199;
                     $4201 = $4200 - 1.0;
                     $4202 = (+__Z5IKabsd($4201));
                     $4203 = $4202 <= 1.9999999999999999E-6;
                     if (!($4203)) {
                      break;
                     }
                     break L1374;
                    }
                   } while(0);
                   $4204 = (($4) + 240|0);
                   $4205 = +HEAPF64[$4204>>3];
                   $4206 = -1.0 * $4205;
                   $4207 = (($4) + 264|0);
                   $4208 = +HEAPF64[$4207>>3];
                   $4209 = -1.0 * $4208;
                   $4210 = (+__Z7IKatan2dd($4206,$4209));
                   HEAPF64[$j5array53>>3] = $4210;
                   $4211 = +HEAPF64[$j5array53>>3];
                   $4212 = (+__Z5IKsind($4211));
                   HEAPF64[$sj5array55>>3] = $4212;
                   $4213 = +HEAPF64[$j5array53>>3];
                   $4214 = (+__Z5IKcosd($4213));
                   HEAPF64[$cj5array54>>3] = $4214;
                   $4215 = +HEAPF64[$j5array53>>3];
                   $4216 = $4215 > 3.14159265358979;
                   if ($4216) {
                    $4217 = +HEAPF64[$j5array53>>3];
                    $4218 = $4217 - 6.2831853071795898;
                    HEAPF64[$j5array53>>3] = $4218;
                   } else {
                    $4219 = +HEAPF64[$j5array53>>3];
                    $4220 = $4219 < -3.14159265358979;
                    if ($4220) {
                     $4221 = +HEAPF64[$j5array53>>3];
                     $4222 = $4221 + 6.2831853071795898;
                     HEAPF64[$j5array53>>3] = $4222;
                    }
                   }
                   HEAP8[$j5valid56>>0] = 1;
                   $ij557 = 0;
                   while(1) {
                    $4223 = $ij557;
                    $4224 = ($4223|0)<(1);
                    if (!($4224)) {
                     break;
                    }
                    $4225 = $ij557;
                    $4226 = (($j5valid56) + ($4225)|0);
                    $4227 = HEAP8[$4226>>0]|0;
                    $4228 = $4227&1;
                    L1400: do {
                     if ($4228) {
                      $4229 = $ij557;
                      $4230 = $4229&255;
                      $4231 = (($4) + 551|0);
                      HEAP8[$4231>>0] = $4230;
                      $4232 = (($4) + 551|0);
                      $4233 = (($4232) + 1|0);
                      HEAP8[$4233>>0] = -1;
                      $4234 = $ij557;
                      $4235 = (($4234) + 1)|0;
                      $iij558 = $4235;
                      L1403: while(1) {
                       $4236 = $iij558;
                       $4237 = ($4236|0)<(1);
                       if (!($4237)) {
                        break;
                       }
                       $4238 = $iij558;
                       $4239 = (($j5valid56) + ($4238)|0);
                       $4240 = HEAP8[$4239>>0]|0;
                       $4241 = $4240&1;
                       do {
                        if ($4241) {
                         $4242 = $ij557;
                         $4243 = (($cj5array54) + ($4242<<3)|0);
                         $4244 = +HEAPF64[$4243>>3];
                         $4245 = $iij558;
                         $4246 = (($cj5array54) + ($4245<<3)|0);
                         $4247 = +HEAPF64[$4246>>3];
                         $4248 = $4244 - $4247;
                         $4249 = (+__Z5IKabsd($4248));
                         $4250 = $4249 < 9.9999999999999995E-7;
                         if (!($4250)) {
                          break;
                         }
                         $4251 = $ij557;
                         $4252 = (($sj5array55) + ($4251<<3)|0);
                         $4253 = +HEAPF64[$4252>>3];
                         $4254 = $iij558;
                         $4255 = (($sj5array55) + ($4254<<3)|0);
                         $4256 = +HEAPF64[$4255>>3];
                         $4257 = $4253 - $4256;
                         $4258 = (+__Z5IKabsd($4257));
                         $4259 = $4258 < 9.9999999999999995E-7;
                         if ($4259) {
                          label = 483;
                          break L1403;
                         }
                        }
                       } while(0);
                       $4266 = $iij558;
                       $4267 = (($4266) + 1)|0;
                       $iij558 = $4267;
                      }
                      if ((label|0) == 483) {
                       label = 0;
                       $4260 = $iij558;
                       $4261 = (($j5valid56) + ($4260)|0);
                       HEAP8[$4261>>0] = 0;
                       $4262 = $iij558;
                       $4263 = $4262&255;
                       $4264 = (($4) + 551|0);
                       $4265 = (($4264) + 1|0);
                       HEAP8[$4265>>0] = $4263;
                      }
                      $4268 = $ij557;
                      $4269 = (($j5array53) + ($4268<<3)|0);
                      $4270 = +HEAPF64[$4269>>3];
                      $4271 = (($4) + 200|0);
                      HEAPF64[$4271>>3] = $4270;
                      $4272 = $ij557;
                      $4273 = (($cj5array54) + ($4272<<3)|0);
                      $4274 = +HEAPF64[$4273>>3];
                      $4275 = (($4) + 208|0);
                      HEAPF64[$4275>>3] = $4274;
                      $4276 = $ij557;
                      $4277 = (($sj5array55) + ($4276<<3)|0);
                      $4278 = +HEAPF64[$4277>>3];
                      $4279 = (($4) + 216|0);
                      HEAPF64[$4279>>3] = $4278;
                      $4280 = (($4) + 200|0);
                      $4281 = +HEAPF64[$4280>>3];
                      $4282 = (+__Z5IKcosd($4281));
                      $x191 = $4282;
                      $4283 = (($4) + 200|0);
                      $4284 = +HEAPF64[$4283>>3];
                      $4285 = (+__Z5IKsind($4284));
                      $x192 = $4285;
                      $4286 = (($4) + 360|0);
                      $4287 = +HEAPF64[$4286>>3];
                      $4288 = 1.0 * $4287;
                      $x193 = $4288;
                      $4289 = $x191;
                      $4290 = 1.0 * $4289;
                      $x194 = $4290;
                      $4291 = $x192;
                      $4292 = (($4) + 240|0);
                      $4293 = +HEAPF64[$4292>>3];
                      $4294 = $4291 + $4293;
                      HEAPF64[$evalcond59>>3] = $4294;
                      $4295 = $x191;
                      $4296 = (($4) + 264|0);
                      $4297 = +HEAPF64[$4296>>3];
                      $4298 = $4295 + $4297;
                      $4299 = (($evalcond59) + 8|0);
                      HEAPF64[$4299>>3] = $4298;
                      $4300 = (($4) + 360|0);
                      $4301 = +HEAPF64[$4300>>3];
                      $4302 = $x191;
                      $4303 = $4301 * $4302;
                      $4304 = (($4) + 384|0);
                      $4305 = +HEAPF64[$4304>>3];
                      $4306 = $4303 + $4305;
                      $4307 = (($evalcond59) + 16|0);
                      HEAPF64[$4307>>3] = $4306;
                      $4308 = (($4) + 432|0);
                      $4309 = +HEAPF64[$4308>>3];
                      $4310 = $x192;
                      $4311 = $4309 * $4310;
                      $4312 = (($4) + 336|0);
                      $4313 = +HEAPF64[$4312>>3];
                      $4314 = $4311 + $4313;
                      $4315 = (($evalcond59) + 24|0);
                      HEAPF64[$4315>>3] = $4314;
                      $4316 = $x192;
                      $4317 = -1.0 * $4316;
                      $4318 = $x193;
                      $4319 = $4317 * $4318;
                      $4320 = (($4) + 408|0);
                      $4321 = +HEAPF64[$4320>>3];
                      $4322 = $4319 + $4321;
                      $4323 = (($evalcond59) + 32|0);
                      HEAPF64[$4323>>3] = $4322;
                      $4324 = (($4) + 432|0);
                      $4325 = +HEAPF64[$4324>>3];
                      $4326 = -1.0 * $4325;
                      $4327 = $x194;
                      $4328 = $4326 * $4327;
                      $4329 = (($4) + 312|0);
                      $4330 = +HEAPF64[$4329>>3];
                      $4331 = $4328 + $4330;
                      $4332 = (($evalcond59) + 40|0);
                      HEAPF64[$4332>>3] = $4331;
                      $4333 = (($4) + 408|0);
                      $4334 = +HEAPF64[$4333>>3];
                      $4335 = -1.0 * $4334;
                      $4336 = $x193;
                      $4337 = $4335 * $4336;
                      $4338 = $x192;
                      $4339 = $4337 + $4338;
                      $4340 = (($4) + 336|0);
                      $4341 = +HEAPF64[$4340>>3];
                      $4342 = (($4) + 432|0);
                      $4343 = +HEAPF64[$4342>>3];
                      $4344 = $4341 * $4343;
                      $4345 = $4339 + $4344;
                      $4346 = (($evalcond59) + 48|0);
                      HEAPF64[$4346>>3] = $4345;
                      $4347 = $x194;
                      $4348 = -1.0 * $4347;
                      $4349 = (($4) + 384|0);
                      $4350 = +HEAPF64[$4349>>3];
                      $4351 = -1.0 * $4350;
                      $4352 = $x193;
                      $4353 = $4351 * $4352;
                      $4354 = $4348 + $4353;
                      $4355 = (($4) + 312|0);
                      $4356 = +HEAPF64[$4355>>3];
                      $4357 = (($4) + 432|0);
                      $4358 = +HEAPF64[$4357>>3];
                      $4359 = $4356 * $4358;
                      $4360 = $4354 + $4359;
                      $4361 = (($evalcond59) + 56|0);
                      HEAPF64[$4361>>3] = $4360;
                      $4362 = +HEAPF64[$evalcond59>>3];
                      $4363 = (+__Z5IKabsd($4362));
                      $4364 = $4363 > 5.0000000000000004E-6;
                      do {
                       if (!($4364)) {
                        $4365 = (($evalcond59) + 8|0);
                        $4366 = +HEAPF64[$4365>>3];
                        $4367 = (+__Z5IKabsd($4366));
                        $4368 = $4367 > 5.0000000000000004E-6;
                        if ($4368) {
                         break;
                        }
                        $4369 = (($evalcond59) + 16|0);
                        $4370 = +HEAPF64[$4369>>3];
                        $4371 = (+__Z5IKabsd($4370));
                        $4372 = $4371 > 5.0000000000000004E-6;
                        if ($4372) {
                         break;
                        }
                        $4373 = (($evalcond59) + 24|0);
                        $4374 = +HEAPF64[$4373>>3];
                        $4375 = (+__Z5IKabsd($4374));
                        $4376 = $4375 > 5.0000000000000004E-6;
                        if ($4376) {
                         break;
                        }
                        $4377 = (($evalcond59) + 32|0);
                        $4378 = +HEAPF64[$4377>>3];
                        $4379 = (+__Z5IKabsd($4378));
                        $4380 = $4379 > 5.0000000000000004E-6;
                        if ($4380) {
                         break;
                        }
                        $4381 = (($evalcond59) + 40|0);
                        $4382 = +HEAPF64[$4381>>3];
                        $4383 = (+__Z5IKabsd($4382));
                        $4384 = $4383 > 5.0000000000000004E-6;
                        if ($4384) {
                         break;
                        }
                        $4385 = (($evalcond59) + 48|0);
                        $4386 = +HEAPF64[$4385>>3];
                        $4387 = (+__Z5IKabsd($4386));
                        $4388 = $4387 > 5.0000000000000004E-6;
                        if ($4388) {
                         break;
                        }
                        $4389 = (($evalcond59) + 56|0);
                        $4390 = +HEAPF64[$4389>>3];
                        $4391 = (+__Z5IKabsd($4390));
                        $4392 = $4391 > 5.0000000000000004E-6;
                        if ($4392) {
                         break;
                        }
                        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos60,6);
                        __THREW__ = 0;
                        $4393 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4394 = __THREW__; __THREW__ = 0;
                        $4395 = $4394&1;
                        if ($4395) {
                         label = 530;
                         break L1;
                        }
                        $4396 = (($4393) + 17|0);
                        HEAP8[$4396>>0] = 1;
                        $4397 = +HEAPF64[$4>>3];
                        __THREW__ = 0;
                        $4398 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4399 = __THREW__; __THREW__ = 0;
                        $4400 = $4399&1;
                        if ($4400) {
                         label = 530;
                         break L1;
                        }
                        $4401 = (($4398) + 8|0);
                        HEAPF64[$4401>>3] = $4397;
                        $4402 = (($4) + 536|0);
                        $4403 = HEAP8[$4402>>0]|0;
                        __THREW__ = 0;
                        $4404 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4405 = __THREW__; __THREW__ = 0;
                        $4406 = $4405&1;
                        if ($4406) {
                         label = 530;
                         break L1;
                        }
                        $4407 = (($4404) + 19|0);
                        HEAP8[$4407>>0] = $4403;
                        $4408 = (($4) + 536|0);
                        $4409 = (($4408) + 1|0);
                        $4410 = HEAP8[$4409>>0]|0;
                        __THREW__ = 0;
                        $4411 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4412 = __THREW__; __THREW__ = 0;
                        $4413 = $4412&1;
                        if ($4413) {
                         label = 530;
                         break L1;
                        }
                        $4414 = (($4411) + 19|0);
                        $4415 = (($4414) + 1|0);
                        HEAP8[$4415>>0] = $4410;
                        $4416 = (($4) + 538|0);
                        $4417 = HEAP8[$4416>>0]|0;
                        __THREW__ = 0;
                        $4418 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4419 = __THREW__; __THREW__ = 0;
                        $4420 = $4419&1;
                        if ($4420) {
                         label = 530;
                         break L1;
                        }
                        $4421 = (($4418) + 18|0);
                        HEAP8[$4421>>0] = $4417;
                        __THREW__ = 0;
                        $4422 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4423 = __THREW__; __THREW__ = 0;
                        $4424 = $4423&1;
                        if ($4424) {
                         label = 530;
                         break L1;
                        }
                        $4425 = (($4422) + 17|0);
                        HEAP8[$4425>>0] = 1;
                        $4426 = (($4) + 40|0);
                        $4427 = +HEAPF64[$4426>>3];
                        __THREW__ = 0;
                        $4428 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4429 = __THREW__; __THREW__ = 0;
                        $4430 = $4429&1;
                        if ($4430) {
                         label = 530;
                         break L1;
                        }
                        $4431 = (($4428) + 8|0);
                        HEAPF64[$4431>>3] = $4427;
                        $4432 = (($4) + 539|0);
                        $4433 = HEAP8[$4432>>0]|0;
                        __THREW__ = 0;
                        $4434 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4435 = __THREW__; __THREW__ = 0;
                        $4436 = $4435&1;
                        if ($4436) {
                         label = 530;
                         break L1;
                        }
                        $4437 = (($4434) + 19|0);
                        HEAP8[$4437>>0] = $4433;
                        $4438 = (($4) + 539|0);
                        $4439 = (($4438) + 1|0);
                        $4440 = HEAP8[$4439>>0]|0;
                        __THREW__ = 0;
                        $4441 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4442 = __THREW__; __THREW__ = 0;
                        $4443 = $4442&1;
                        if ($4443) {
                         label = 530;
                         break L1;
                        }
                        $4444 = (($4441) + 19|0);
                        $4445 = (($4444) + 1|0);
                        HEAP8[$4445>>0] = $4440;
                        $4446 = (($4) + 541|0);
                        $4447 = HEAP8[$4446>>0]|0;
                        __THREW__ = 0;
                        $4448 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4449 = __THREW__; __THREW__ = 0;
                        $4450 = $4449&1;
                        if ($4450) {
                         label = 530;
                         break L1;
                        }
                        $4451 = (($4448) + 18|0);
                        HEAP8[$4451>>0] = $4447;
                        __THREW__ = 0;
                        $4452 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4453 = __THREW__; __THREW__ = 0;
                        $4454 = $4453&1;
                        if ($4454) {
                         label = 530;
                         break L1;
                        }
                        $4455 = (($4452) + 17|0);
                        HEAP8[$4455>>0] = 1;
                        $4456 = (($4) + 80|0);
                        $4457 = +HEAPF64[$4456>>3];
                        __THREW__ = 0;
                        $4458 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4459 = __THREW__; __THREW__ = 0;
                        $4460 = $4459&1;
                        if ($4460) {
                         label = 530;
                         break L1;
                        }
                        $4461 = (($4458) + 8|0);
                        HEAPF64[$4461>>3] = $4457;
                        $4462 = (($4) + 542|0);
                        $4463 = HEAP8[$4462>>0]|0;
                        __THREW__ = 0;
                        $4464 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4465 = __THREW__; __THREW__ = 0;
                        $4466 = $4465&1;
                        if ($4466) {
                         label = 530;
                         break L1;
                        }
                        $4467 = (($4464) + 19|0);
                        HEAP8[$4467>>0] = $4463;
                        $4468 = (($4) + 542|0);
                        $4469 = (($4468) + 1|0);
                        $4470 = HEAP8[$4469>>0]|0;
                        __THREW__ = 0;
                        $4471 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4472 = __THREW__; __THREW__ = 0;
                        $4473 = $4472&1;
                        if ($4473) {
                         label = 530;
                         break L1;
                        }
                        $4474 = (($4471) + 19|0);
                        $4475 = (($4474) + 1|0);
                        HEAP8[$4475>>0] = $4470;
                        $4476 = (($4) + 544|0);
                        $4477 = HEAP8[$4476>>0]|0;
                        __THREW__ = 0;
                        $4478 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4479 = __THREW__; __THREW__ = 0;
                        $4480 = $4479&1;
                        if ($4480) {
                         label = 530;
                         break L1;
                        }
                        $4481 = (($4478) + 18|0);
                        HEAP8[$4481>>0] = $4477;
                        __THREW__ = 0;
                        $4482 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4483 = __THREW__; __THREW__ = 0;
                        $4484 = $4483&1;
                        if ($4484) {
                         label = 530;
                         break L1;
                        }
                        $4485 = (($4482) + 17|0);
                        HEAP8[$4485>>0] = 1;
                        $4486 = (($4) + 120|0);
                        $4487 = +HEAPF64[$4486>>3];
                        __THREW__ = 0;
                        $4488 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4489 = __THREW__; __THREW__ = 0;
                        $4490 = $4489&1;
                        if ($4490) {
                         label = 530;
                         break L1;
                        }
                        $4491 = (($4488) + 8|0);
                        HEAPF64[$4491>>3] = $4487;
                        $4492 = (($4) + 545|0);
                        $4493 = HEAP8[$4492>>0]|0;
                        __THREW__ = 0;
                        $4494 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4495 = __THREW__; __THREW__ = 0;
                        $4496 = $4495&1;
                        if ($4496) {
                         label = 530;
                         break L1;
                        }
                        $4497 = (($4494) + 19|0);
                        HEAP8[$4497>>0] = $4493;
                        $4498 = (($4) + 545|0);
                        $4499 = (($4498) + 1|0);
                        $4500 = HEAP8[$4499>>0]|0;
                        __THREW__ = 0;
                        $4501 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4502 = __THREW__; __THREW__ = 0;
                        $4503 = $4502&1;
                        if ($4503) {
                         label = 530;
                         break L1;
                        }
                        $4504 = (($4501) + 19|0);
                        $4505 = (($4504) + 1|0);
                        HEAP8[$4505>>0] = $4500;
                        $4506 = (($4) + 547|0);
                        $4507 = HEAP8[$4506>>0]|0;
                        __THREW__ = 0;
                        $4508 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4509 = __THREW__; __THREW__ = 0;
                        $4510 = $4509&1;
                        if ($4510) {
                         label = 530;
                         break L1;
                        }
                        $4511 = (($4508) + 18|0);
                        HEAP8[$4511>>0] = $4507;
                        __THREW__ = 0;
                        $4512 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4513 = __THREW__; __THREW__ = 0;
                        $4514 = $4513&1;
                        if ($4514) {
                         label = 530;
                         break L1;
                        }
                        $4515 = (($4512) + 17|0);
                        HEAP8[$4515>>0] = 1;
                        $4516 = (($4) + 160|0);
                        $4517 = +HEAPF64[$4516>>3];
                        __THREW__ = 0;
                        $4518 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4519 = __THREW__; __THREW__ = 0;
                        $4520 = $4519&1;
                        if ($4520) {
                         label = 530;
                         break L1;
                        }
                        $4521 = (($4518) + 8|0);
                        HEAPF64[$4521>>3] = $4517;
                        $4522 = (($4) + 548|0);
                        $4523 = HEAP8[$4522>>0]|0;
                        __THREW__ = 0;
                        $4524 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4525 = __THREW__; __THREW__ = 0;
                        $4526 = $4525&1;
                        if ($4526) {
                         label = 530;
                         break L1;
                        }
                        $4527 = (($4524) + 19|0);
                        HEAP8[$4527>>0] = $4523;
                        $4528 = (($4) + 548|0);
                        $4529 = (($4528) + 1|0);
                        $4530 = HEAP8[$4529>>0]|0;
                        __THREW__ = 0;
                        $4531 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4532 = __THREW__; __THREW__ = 0;
                        $4533 = $4532&1;
                        if ($4533) {
                         label = 530;
                         break L1;
                        }
                        $4534 = (($4531) + 19|0);
                        $4535 = (($4534) + 1|0);
                        HEAP8[$4535>>0] = $4530;
                        $4536 = (($4) + 550|0);
                        $4537 = HEAP8[$4536>>0]|0;
                        __THREW__ = 0;
                        $4538 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4539 = __THREW__; __THREW__ = 0;
                        $4540 = $4539&1;
                        if ($4540) {
                         label = 530;
                         break L1;
                        }
                        $4541 = (($4538) + 18|0);
                        HEAP8[$4541>>0] = $4537;
                        __THREW__ = 0;
                        $4542 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4543 = __THREW__; __THREW__ = 0;
                        $4544 = $4543&1;
                        if ($4544) {
                         label = 530;
                         break L1;
                        }
                        $4545 = (($4542) + 17|0);
                        HEAP8[$4545>>0] = 1;
                        $4546 = (($4) + 200|0);
                        $4547 = +HEAPF64[$4546>>3];
                        __THREW__ = 0;
                        $4548 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4549 = __THREW__; __THREW__ = 0;
                        $4550 = $4549&1;
                        if ($4550) {
                         label = 530;
                         break L1;
                        }
                        $4551 = (($4548) + 8|0);
                        HEAPF64[$4551>>3] = $4547;
                        $4552 = (($4) + 551|0);
                        $4553 = HEAP8[$4552>>0]|0;
                        __THREW__ = 0;
                        $4554 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4555 = __THREW__; __THREW__ = 0;
                        $4556 = $4555&1;
                        if ($4556) {
                         label = 530;
                         break L1;
                        }
                        $4557 = (($4554) + 19|0);
                        HEAP8[$4557>>0] = $4553;
                        $4558 = (($4) + 551|0);
                        $4559 = (($4558) + 1|0);
                        $4560 = HEAP8[$4559>>0]|0;
                        __THREW__ = 0;
                        $4561 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4562 = __THREW__; __THREW__ = 0;
                        $4563 = $4562&1;
                        if ($4563) {
                         label = 530;
                         break L1;
                        }
                        $4564 = (($4561) + 19|0);
                        $4565 = (($4564) + 1|0);
                        HEAP8[$4565>>0] = $4560;
                        $4566 = (($4) + 553|0);
                        $4567 = HEAP8[$4566>>0]|0;
                        __THREW__ = 0;
                        $4568 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4569 = __THREW__; __THREW__ = 0;
                        $4570 = $4569&1;
                        if ($4570) {
                         label = 530;
                         break L1;
                        }
                        $4571 = (($4568) + 18|0);
                        HEAP8[$4571>>0] = $4567;
                        __THREW__ = 0;
                        invoke_vii(382,($vfree61|0),0);
                        $4572 = __THREW__; __THREW__ = 0;
                        $4573 = $4572&1;
                        if ($4573) {
                         label = 530;
                         break L1;
                        }
                        $4574 = $1;
                        $4575 = HEAP32[$4574>>2]|0;
                        $4576 = (($4575) + 8|0);
                        $4577 = HEAP32[$4576>>2]|0;
                        __THREW__ = 0;
                        (invoke_iiii($4577|0,($4574|0),($vinfos60|0),($vfree61|0))|0);
                        $4578 = __THREW__; __THREW__ = 0;
                        $4579 = $4578&1;
                        if ($4579) {
                         label = 531;
                         break L1;
                        }
                        __THREW__ = 0;
                        invoke_vi(366,($vfree61|0));
                        $4580 = __THREW__; __THREW__ = 0;
                        $4581 = $4580&1;
                        if ($4581) {
                         label = 530;
                         break L1;
                        }
                        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos60);
                        break L1400;
                       }
                      } while(0);
                     } else {
                     }
                    } while(0);
                    $4582 = $ij557;
                    $4583 = (($4582) + 1)|0;
                    $ij557 = $4583;
                   }
                   label = 536;
                  } else {
                   label = 536;
                  }
                 } while(0);
                 if ((label|0) == 536) {
                  label = 0;
                 }
                 $4592 = $bgotonextstatement52;
                 $4593 = $4592&1;
                 if ($4593) {
                  $bgotonextstatement62 = 1;
                  $4594 = (($4) + 432|0);
                  $4595 = +HEAPF64[$4594>>3];
                  $4596 = (($4) + 168|0);
                  $4597 = +HEAPF64[$4596>>3];
                  $4598 = -1.0 * $4597;
                  $4599 = $4595 + $4598;
                  $x195 = $4599;
                  $4600 = (($4) + 168|0);
                  $4601 = +HEAPF64[$4600>>3];
                  $4602 = 1.0 * $4601;
                  $x196 = $4602;
                  $4603 = (($4) + 120|0);
                  $4604 = +HEAPF64[$4603>>3];
                  $4605 = -3.14159265358979 + $4604;
                  $4606 = (+__Z5IKabsd($4605));
                  $4607 = 3.14159265358979 + $4606;
                  $4608 = (+__Z6IKfmoddd($4607,6.2831853071795898));
                  $4609 = -3.14159265358979 + $4608;
                  HEAPF64[$evalcond31>>3] = $4609;
                  $4610 = $x195;
                  $4611 = (($evalcond31) + 8|0);
                  HEAPF64[$4611>>3] = $4610;
                  $4612 = $x195;
                  $4613 = (($evalcond31) + 16|0);
                  HEAPF64[$4613>>3] = $4612;
                  $4614 = (($4) + 176|0);
                  $4615 = +HEAPF64[$4614>>3];
                  $4616 = -1.0 * $4615;
                  $4617 = (($4) + 360|0);
                  $4618 = +HEAPF64[$4617>>3];
                  $4619 = $4616 + $4618;
                  $4620 = (($evalcond31) + 24|0);
                  HEAPF64[$4620>>3] = $4619;
                  $4621 = (($4) + 288|0);
                  $4622 = +HEAPF64[$4621>>3];
                  $4623 = (($evalcond31) + 32|0);
                  HEAPF64[$4623>>3] = $4622;
                  $4624 = (($4) + 176|0);
                  $4625 = +HEAPF64[$4624>>3];
                  $4626 = (($4) + 360|0);
                  $4627 = +HEAPF64[$4626>>3];
                  $4628 = -1.0 * $4627;
                  $4629 = $4625 + $4628;
                  $4630 = (($evalcond31) + 40|0);
                  HEAPF64[$4630>>3] = $4629;
                  $4631 = (($4) + 432|0);
                  $4632 = +HEAPF64[$4631>>3];
                  $4633 = (($4) + 176|0);
                  $4634 = +HEAPF64[$4633>>3];
                  $4635 = $4632 * $4634;
                  $4636 = (($4) + 360|0);
                  $4637 = +HEAPF64[$4636>>3];
                  $4638 = -1.0 * $4637;
                  $4639 = $x196;
                  $4640 = $4638 * $4639;
                  $4641 = $4635 + $4640;
                  $4642 = (($evalcond31) + 48|0);
                  HEAPF64[$4642>>3] = $4641;
                  $4643 = (($4) + 312|0);
                  $4644 = +HEAPF64[$4643>>3];
                  $4645 = (($4) + 176|0);
                  $4646 = +HEAPF64[$4645>>3];
                  $4647 = $4644 * $4646;
                  $4648 = (($4) + 168|0);
                  $4649 = +HEAPF64[$4648>>3];
                  $4650 = (($4) + 384|0);
                  $4651 = +HEAPF64[$4650>>3];
                  $4652 = $4649 * $4651;
                  $4653 = $4647 + $4652;
                  $4654 = (($evalcond31) + 56|0);
                  HEAPF64[$4654>>3] = $4653;
                  $4655 = (($4) + 336|0);
                  $4656 = +HEAPF64[$4655>>3];
                  $4657 = (($4) + 176|0);
                  $4658 = +HEAPF64[$4657>>3];
                  $4659 = $4656 * $4658;
                  $4660 = (($4) + 168|0);
                  $4661 = +HEAPF64[$4660>>3];
                  $4662 = (($4) + 408|0);
                  $4663 = +HEAPF64[$4662>>3];
                  $4664 = $4661 * $4663;
                  $4665 = $4659 + $4664;
                  $4666 = (($evalcond31) + 64|0);
                  HEAPF64[$4666>>3] = $4665;
                  $4667 = (($4) + 360|0);
                  $4668 = +HEAPF64[$4667>>3];
                  $4669 = (($4) + 176|0);
                  $4670 = +HEAPF64[$4669>>3];
                  $4671 = $4668 * $4670;
                  $4672 = -1.0 + $4671;
                  $4673 = (($4) + 168|0);
                  $4674 = +HEAPF64[$4673>>3];
                  $4675 = (($4) + 432|0);
                  $4676 = +HEAPF64[$4675>>3];
                  $4677 = $4674 * $4676;
                  $4678 = $4672 + $4677;
                  $4679 = (($evalcond31) + 72|0);
                  HEAPF64[$4679>>3] = $4678;
                  $4680 = +HEAPF64[$evalcond31>>3];
                  $4681 = (+__Z5IKabsd($4680));
                  $4682 = $4681 < 9.9999999999999995E-7;
                  L1465: do {
                   if ($4682) {
                    $4683 = (($evalcond31) + 8|0);
                    $4684 = +HEAPF64[$4683>>3];
                    $4685 = (+__Z5IKabsd($4684));
                    $4686 = $4685 < 9.9999999999999995E-7;
                    if (!($4686)) {
                     label = 620;
                     break;
                    }
                    $4687 = (($evalcond31) + 16|0);
                    $4688 = +HEAPF64[$4687>>3];
                    $4689 = (+__Z5IKabsd($4688));
                    $4690 = $4689 < 9.9999999999999995E-7;
                    if (!($4690)) {
                     label = 620;
                     break;
                    }
                    $4691 = (($evalcond31) + 24|0);
                    $4692 = +HEAPF64[$4691>>3];
                    $4693 = (+__Z5IKabsd($4692));
                    $4694 = $4693 < 9.9999999999999995E-7;
                    if (!($4694)) {
                     label = 620;
                     break;
                    }
                    $4695 = (($evalcond31) + 32|0);
                    $4696 = +HEAPF64[$4695>>3];
                    $4697 = (+__Z5IKabsd($4696));
                    $4698 = $4697 < 9.9999999999999995E-7;
                    if (!($4698)) {
                     label = 620;
                     break;
                    }
                    $4699 = (($evalcond31) + 40|0);
                    $4700 = +HEAPF64[$4699>>3];
                    $4701 = (+__Z5IKabsd($4700));
                    $4702 = $4701 < 9.9999999999999995E-7;
                    if (!($4702)) {
                     label = 620;
                     break;
                    }
                    $4703 = (($evalcond31) + 48|0);
                    $4704 = +HEAPF64[$4703>>3];
                    $4705 = (+__Z5IKabsd($4704));
                    $4706 = $4705 < 9.9999999999999995E-7;
                    if (!($4706)) {
                     label = 620;
                     break;
                    }
                    $4707 = (($evalcond31) + 56|0);
                    $4708 = +HEAPF64[$4707>>3];
                    $4709 = (+__Z5IKabsd($4708));
                    $4710 = $4709 < 9.9999999999999995E-7;
                    if (!($4710)) {
                     label = 620;
                     break;
                    }
                    $4711 = (($evalcond31) + 64|0);
                    $4712 = +HEAPF64[$4711>>3];
                    $4713 = (+__Z5IKabsd($4712));
                    $4714 = $4713 < 9.9999999999999995E-7;
                    if (!($4714)) {
                     label = 620;
                     break;
                    }
                    $4715 = (($evalcond31) + 72|0);
                    $4716 = +HEAPF64[$4715>>3];
                    $4717 = (+__Z5IKabsd($4716));
                    $4718 = $4717 < 9.9999999999999995E-7;
                    if (!($4718)) {
                     label = 620;
                     break;
                    }
                    $bgotonextstatement62 = 0;
                    ;HEAP8[$j5valid66+0>>0]=0|0;
                    $4719 = (($4) + 553|0);
                    HEAP8[$4719>>0] = 1;
                    $4720 = (($4) + 240|0);
                    $4721 = +HEAPF64[$4720>>3];
                    $4722 = (+__Z5IKabsd($4721));
                    $4723 = $4722 < 1.9999999999999999E-6;
                    do {
                     if ($4723) {
                      $4724 = (($4) + 264|0);
                      $4725 = +HEAPF64[$4724>>3];
                      $4726 = (+__Z5IKabsd($4725));
                      $4727 = $4726 < 1.9999999999999999E-6;
                      if (!($4727)) {
                       break;
                      }
                      $4728 = (($4) + 240|0);
                      $4729 = +HEAPF64[$4728>>3];
                      $4730 = (+__Z5IKsqrd($4729));
                      $4731 = (($4) + 264|0);
                      $4732 = +HEAPF64[$4731>>3];
                      $4733 = (+__Z5IKsqrd($4732));
                      $4734 = $4730 + $4733;
                      $4735 = $4734 - 1.0;
                      $4736 = (+__Z5IKabsd($4735));
                      $4737 = $4736 <= 1.9999999999999999E-6;
                      if (!($4737)) {
                       break;
                      }
                      break L1465;
                     }
                    } while(0);
                    $4738 = (($4) + 240|0);
                    $4739 = +HEAPF64[$4738>>3];
                    $4740 = (($4) + 264|0);
                    $4741 = +HEAPF64[$4740>>3];
                    $4742 = (+__Z7IKatan2dd($4739,$4741));
                    HEAPF64[$j5array63>>3] = $4742;
                    $4743 = +HEAPF64[$j5array63>>3];
                    $4744 = (+__Z5IKsind($4743));
                    HEAPF64[$sj5array65>>3] = $4744;
                    $4745 = +HEAPF64[$j5array63>>3];
                    $4746 = (+__Z5IKcosd($4745));
                    HEAPF64[$cj5array64>>3] = $4746;
                    $4747 = +HEAPF64[$j5array63>>3];
                    $4748 = $4747 > 3.14159265358979;
                    if ($4748) {
                     $4749 = +HEAPF64[$j5array63>>3];
                     $4750 = $4749 - 6.2831853071795898;
                     HEAPF64[$j5array63>>3] = $4750;
                    } else {
                     $4751 = +HEAPF64[$j5array63>>3];
                     $4752 = $4751 < -3.14159265358979;
                     if ($4752) {
                      $4753 = +HEAPF64[$j5array63>>3];
                      $4754 = $4753 + 6.2831853071795898;
                      HEAPF64[$j5array63>>3] = $4754;
                     }
                    }
                    HEAP8[$j5valid66>>0] = 1;
                    $ij567 = 0;
                    while(1) {
                     $4755 = $ij567;
                     $4756 = ($4755|0)<(1);
                     if (!($4756)) {
                      break;
                     }
                     $4757 = $ij567;
                     $4758 = (($j5valid66) + ($4757)|0);
                     $4759 = HEAP8[$4758>>0]|0;
                     $4760 = $4759&1;
                     L1491: do {
                      if ($4760) {
                       $4761 = $ij567;
                       $4762 = $4761&255;
                       $4763 = (($4) + 551|0);
                       HEAP8[$4763>>0] = $4762;
                       $4764 = (($4) + 551|0);
                       $4765 = (($4764) + 1|0);
                       HEAP8[$4765>>0] = -1;
                       $4766 = $ij567;
                       $4767 = (($4766) + 1)|0;
                       $iij568 = $4767;
                       L1494: while(1) {
                        $4768 = $iij568;
                        $4769 = ($4768|0)<(1);
                        if (!($4769)) {
                         break;
                        }
                        $4770 = $iij568;
                        $4771 = (($j5valid66) + ($4770)|0);
                        $4772 = HEAP8[$4771>>0]|0;
                        $4773 = $4772&1;
                        do {
                         if ($4773) {
                          $4774 = $ij567;
                          $4775 = (($cj5array64) + ($4774<<3)|0);
                          $4776 = +HEAPF64[$4775>>3];
                          $4777 = $iij568;
                          $4778 = (($cj5array64) + ($4777<<3)|0);
                          $4779 = +HEAPF64[$4778>>3];
                          $4780 = $4776 - $4779;
                          $4781 = (+__Z5IKabsd($4780));
                          $4782 = $4781 < 9.9999999999999995E-7;
                          if (!($4782)) {
                           break;
                          }
                          $4783 = $ij567;
                          $4784 = (($sj5array65) + ($4783<<3)|0);
                          $4785 = +HEAPF64[$4784>>3];
                          $4786 = $iij568;
                          $4787 = (($sj5array65) + ($4786<<3)|0);
                          $4788 = +HEAPF64[$4787>>3];
                          $4789 = $4785 - $4788;
                          $4790 = (+__Z5IKabsd($4789));
                          $4791 = $4790 < 9.9999999999999995E-7;
                          if ($4791) {
                           label = 567;
                           break L1494;
                          }
                         }
                        } while(0);
                        $4798 = $iij568;
                        $4799 = (($4798) + 1)|0;
                        $iij568 = $4799;
                       }
                       if ((label|0) == 567) {
                        label = 0;
                        $4792 = $iij568;
                        $4793 = (($j5valid66) + ($4792)|0);
                        HEAP8[$4793>>0] = 0;
                        $4794 = $iij568;
                        $4795 = $4794&255;
                        $4796 = (($4) + 551|0);
                        $4797 = (($4796) + 1|0);
                        HEAP8[$4797>>0] = $4795;
                       }
                       $4800 = $ij567;
                       $4801 = (($j5array63) + ($4800<<3)|0);
                       $4802 = +HEAPF64[$4801>>3];
                       $4803 = (($4) + 200|0);
                       HEAPF64[$4803>>3] = $4802;
                       $4804 = $ij567;
                       $4805 = (($cj5array64) + ($4804<<3)|0);
                       $4806 = +HEAPF64[$4805>>3];
                       $4807 = (($4) + 208|0);
                       HEAPF64[$4807>>3] = $4806;
                       $4808 = $ij567;
                       $4809 = (($sj5array65) + ($4808<<3)|0);
                       $4810 = +HEAPF64[$4809>>3];
                       $4811 = (($4) + 216|0);
                       HEAPF64[$4811>>3] = $4810;
                       $4812 = (($4) + 200|0);
                       $4813 = +HEAPF64[$4812>>3];
                       $4814 = (+__Z5IKsind($4813));
                       $x197 = $4814;
                       $4815 = (($4) + 200|0);
                       $4816 = +HEAPF64[$4815>>3];
                       $4817 = (+__Z5IKcosd($4816));
                       $x198 = $4817;
                       $4818 = (($4) + 432|0);
                       $4819 = +HEAPF64[$4818>>3];
                       $4820 = 1.0 * $4819;
                       $x199 = $4820;
                       $4821 = $x198;
                       $4822 = 1.0 * $4821;
                       $x200 = $4822;
                       $4823 = (($4) + 360|0);
                       $4824 = +HEAPF64[$4823>>3];
                       $4825 = $x197;
                       $4826 = $4824 * $4825;
                       $4827 = (($4) + 408|0);
                       $4828 = +HEAPF64[$4827>>3];
                       $4829 = $4826 + $4828;
                       HEAPF64[$evalcond69>>3] = $4829;
                       $4830 = $x197;
                       $4831 = (($4) + 240|0);
                       $4832 = +HEAPF64[$4831>>3];
                       $4833 = -1.0 * $4832;
                       $4834 = $4830 + $4833;
                       $4835 = (($evalcond69) + 8|0);
                       HEAPF64[$4835>>3] = $4834;
                       $4836 = $x198;
                       $4837 = (($4) + 264|0);
                       $4838 = +HEAPF64[$4837>>3];
                       $4839 = -1.0 * $4838;
                       $4840 = $4836 + $4839;
                       $4841 = (($evalcond69) + 16|0);
                       HEAPF64[$4841>>3] = $4840;
                       $4842 = (($4) + 432|0);
                       $4843 = +HEAPF64[$4842>>3];
                       $4844 = $x198;
                       $4845 = $4843 * $4844;
                       $4846 = (($4) + 312|0);
                       $4847 = +HEAPF64[$4846>>3];
                       $4848 = $4845 + $4847;
                       $4849 = (($evalcond69) + 24|0);
                       HEAPF64[$4849>>3] = $4848;
                       $4850 = (($4) + 360|0);
                       $4851 = +HEAPF64[$4850>>3];
                       $4852 = -1.0 * $4851;
                       $4853 = $x200;
                       $4854 = $4852 * $4853;
                       $4855 = (($4) + 384|0);
                       $4856 = +HEAPF64[$4855>>3];
                       $4857 = $4854 + $4856;
                       $4858 = (($evalcond69) + 32|0);
                       HEAPF64[$4858>>3] = $4857;
                       $4859 = $x197;
                       $4860 = -1.0 * $4859;
                       $4861 = $x199;
                       $4862 = $4860 * $4861;
                       $4863 = (($4) + 336|0);
                       $4864 = +HEAPF64[$4863>>3];
                       $4865 = $4862 + $4864;
                       $4866 = (($evalcond69) + 40|0);
                       HEAPF64[$4866>>3] = $4865;
                       $4867 = $x197;
                       $4868 = (($4) + 360|0);
                       $4869 = +HEAPF64[$4868>>3];
                       $4870 = (($4) + 408|0);
                       $4871 = +HEAPF64[$4870>>3];
                       $4872 = $4869 * $4871;
                       $4873 = $4867 + $4872;
                       $4874 = (($4) + 336|0);
                       $4875 = +HEAPF64[$4874>>3];
                       $4876 = -1.0 * $4875;
                       $4877 = $x199;
                       $4878 = $4876 * $4877;
                       $4879 = $4873 + $4878;
                       $4880 = (($evalcond69) + 48|0);
                       HEAPF64[$4880>>3] = $4879;
                       $4881 = $x200;
                       $4882 = -1.0 * $4881;
                       $4883 = (($4) + 360|0);
                       $4884 = +HEAPF64[$4883>>3];
                       $4885 = (($4) + 384|0);
                       $4886 = +HEAPF64[$4885>>3];
                       $4887 = $4884 * $4886;
                       $4888 = $4882 + $4887;
                       $4889 = (($4) + 312|0);
                       $4890 = +HEAPF64[$4889>>3];
                       $4891 = -1.0 * $4890;
                       $4892 = $x199;
                       $4893 = $4891 * $4892;
                       $4894 = $4888 + $4893;
                       $4895 = (($evalcond69) + 56|0);
                       HEAPF64[$4895>>3] = $4894;
                       $4896 = +HEAPF64[$evalcond69>>3];
                       $4897 = (+__Z5IKabsd($4896));
                       $4898 = $4897 > 5.0000000000000004E-6;
                       do {
                        if (!($4898)) {
                         $4899 = (($evalcond69) + 8|0);
                         $4900 = +HEAPF64[$4899>>3];
                         $4901 = (+__Z5IKabsd($4900));
                         $4902 = $4901 > 5.0000000000000004E-6;
                         if ($4902) {
                          break;
                         }
                         $4903 = (($evalcond69) + 16|0);
                         $4904 = +HEAPF64[$4903>>3];
                         $4905 = (+__Z5IKabsd($4904));
                         $4906 = $4905 > 5.0000000000000004E-6;
                         if ($4906) {
                          break;
                         }
                         $4907 = (($evalcond69) + 24|0);
                         $4908 = +HEAPF64[$4907>>3];
                         $4909 = (+__Z5IKabsd($4908));
                         $4910 = $4909 > 5.0000000000000004E-6;
                         if ($4910) {
                          break;
                         }
                         $4911 = (($evalcond69) + 32|0);
                         $4912 = +HEAPF64[$4911>>3];
                         $4913 = (+__Z5IKabsd($4912));
                         $4914 = $4913 > 5.0000000000000004E-6;
                         if ($4914) {
                          break;
                         }
                         $4915 = (($evalcond69) + 40|0);
                         $4916 = +HEAPF64[$4915>>3];
                         $4917 = (+__Z5IKabsd($4916));
                         $4918 = $4917 > 5.0000000000000004E-6;
                         if ($4918) {
                          break;
                         }
                         $4919 = (($evalcond69) + 48|0);
                         $4920 = +HEAPF64[$4919>>3];
                         $4921 = (+__Z5IKabsd($4920));
                         $4922 = $4921 > 5.0000000000000004E-6;
                         if ($4922) {
                          break;
                         }
                         $4923 = (($evalcond69) + 56|0);
                         $4924 = +HEAPF64[$4923>>3];
                         $4925 = (+__Z5IKabsd($4924));
                         $4926 = $4925 > 5.0000000000000004E-6;
                         if ($4926) {
                          break;
                         }
                         __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos70,6);
                         __THREW__ = 0;
                         $4927 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4928 = __THREW__; __THREW__ = 0;
                         $4929 = $4928&1;
                         if ($4929) {
                          label = 614;
                          break L1;
                         }
                         $4930 = (($4927) + 17|0);
                         HEAP8[$4930>>0] = 1;
                         $4931 = +HEAPF64[$4>>3];
                         __THREW__ = 0;
                         $4932 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4933 = __THREW__; __THREW__ = 0;
                         $4934 = $4933&1;
                         if ($4934) {
                          label = 614;
                          break L1;
                         }
                         $4935 = (($4932) + 8|0);
                         HEAPF64[$4935>>3] = $4931;
                         $4936 = (($4) + 536|0);
                         $4937 = HEAP8[$4936>>0]|0;
                         __THREW__ = 0;
                         $4938 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4939 = __THREW__; __THREW__ = 0;
                         $4940 = $4939&1;
                         if ($4940) {
                          label = 614;
                          break L1;
                         }
                         $4941 = (($4938) + 19|0);
                         HEAP8[$4941>>0] = $4937;
                         $4942 = (($4) + 536|0);
                         $4943 = (($4942) + 1|0);
                         $4944 = HEAP8[$4943>>0]|0;
                         __THREW__ = 0;
                         $4945 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4946 = __THREW__; __THREW__ = 0;
                         $4947 = $4946&1;
                         if ($4947) {
                          label = 614;
                          break L1;
                         }
                         $4948 = (($4945) + 19|0);
                         $4949 = (($4948) + 1|0);
                         HEAP8[$4949>>0] = $4944;
                         $4950 = (($4) + 538|0);
                         $4951 = HEAP8[$4950>>0]|0;
                         __THREW__ = 0;
                         $4952 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4953 = __THREW__; __THREW__ = 0;
                         $4954 = $4953&1;
                         if ($4954) {
                          label = 614;
                          break L1;
                         }
                         $4955 = (($4952) + 18|0);
                         HEAP8[$4955>>0] = $4951;
                         __THREW__ = 0;
                         $4956 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $4957 = __THREW__; __THREW__ = 0;
                         $4958 = $4957&1;
                         if ($4958) {
                          label = 614;
                          break L1;
                         }
                         $4959 = (($4956) + 17|0);
                         HEAP8[$4959>>0] = 1;
                         $4960 = (($4) + 40|0);
                         $4961 = +HEAPF64[$4960>>3];
                         __THREW__ = 0;
                         $4962 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $4963 = __THREW__; __THREW__ = 0;
                         $4964 = $4963&1;
                         if ($4964) {
                          label = 614;
                          break L1;
                         }
                         $4965 = (($4962) + 8|0);
                         HEAPF64[$4965>>3] = $4961;
                         $4966 = (($4) + 539|0);
                         $4967 = HEAP8[$4966>>0]|0;
                         __THREW__ = 0;
                         $4968 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $4969 = __THREW__; __THREW__ = 0;
                         $4970 = $4969&1;
                         if ($4970) {
                          label = 614;
                          break L1;
                         }
                         $4971 = (($4968) + 19|0);
                         HEAP8[$4971>>0] = $4967;
                         $4972 = (($4) + 539|0);
                         $4973 = (($4972) + 1|0);
                         $4974 = HEAP8[$4973>>0]|0;
                         __THREW__ = 0;
                         $4975 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $4976 = __THREW__; __THREW__ = 0;
                         $4977 = $4976&1;
                         if ($4977) {
                          label = 614;
                          break L1;
                         }
                         $4978 = (($4975) + 19|0);
                         $4979 = (($4978) + 1|0);
                         HEAP8[$4979>>0] = $4974;
                         $4980 = (($4) + 541|0);
                         $4981 = HEAP8[$4980>>0]|0;
                         __THREW__ = 0;
                         $4982 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $4983 = __THREW__; __THREW__ = 0;
                         $4984 = $4983&1;
                         if ($4984) {
                          label = 614;
                          break L1;
                         }
                         $4985 = (($4982) + 18|0);
                         HEAP8[$4985>>0] = $4981;
                         __THREW__ = 0;
                         $4986 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $4987 = __THREW__; __THREW__ = 0;
                         $4988 = $4987&1;
                         if ($4988) {
                          label = 614;
                          break L1;
                         }
                         $4989 = (($4986) + 17|0);
                         HEAP8[$4989>>0] = 1;
                         $4990 = (($4) + 80|0);
                         $4991 = +HEAPF64[$4990>>3];
                         __THREW__ = 0;
                         $4992 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $4993 = __THREW__; __THREW__ = 0;
                         $4994 = $4993&1;
                         if ($4994) {
                          label = 614;
                          break L1;
                         }
                         $4995 = (($4992) + 8|0);
                         HEAPF64[$4995>>3] = $4991;
                         $4996 = (($4) + 542|0);
                         $4997 = HEAP8[$4996>>0]|0;
                         __THREW__ = 0;
                         $4998 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $4999 = __THREW__; __THREW__ = 0;
                         $5000 = $4999&1;
                         if ($5000) {
                          label = 614;
                          break L1;
                         }
                         $5001 = (($4998) + 19|0);
                         HEAP8[$5001>>0] = $4997;
                         $5002 = (($4) + 542|0);
                         $5003 = (($5002) + 1|0);
                         $5004 = HEAP8[$5003>>0]|0;
                         __THREW__ = 0;
                         $5005 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $5006 = __THREW__; __THREW__ = 0;
                         $5007 = $5006&1;
                         if ($5007) {
                          label = 614;
                          break L1;
                         }
                         $5008 = (($5005) + 19|0);
                         $5009 = (($5008) + 1|0);
                         HEAP8[$5009>>0] = $5004;
                         $5010 = (($4) + 544|0);
                         $5011 = HEAP8[$5010>>0]|0;
                         __THREW__ = 0;
                         $5012 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $5013 = __THREW__; __THREW__ = 0;
                         $5014 = $5013&1;
                         if ($5014) {
                          label = 614;
                          break L1;
                         }
                         $5015 = (($5012) + 18|0);
                         HEAP8[$5015>>0] = $5011;
                         __THREW__ = 0;
                         $5016 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $5017 = __THREW__; __THREW__ = 0;
                         $5018 = $5017&1;
                         if ($5018) {
                          label = 614;
                          break L1;
                         }
                         $5019 = (($5016) + 17|0);
                         HEAP8[$5019>>0] = 1;
                         $5020 = (($4) + 120|0);
                         $5021 = +HEAPF64[$5020>>3];
                         __THREW__ = 0;
                         $5022 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $5023 = __THREW__; __THREW__ = 0;
                         $5024 = $5023&1;
                         if ($5024) {
                          label = 614;
                          break L1;
                         }
                         $5025 = (($5022) + 8|0);
                         HEAPF64[$5025>>3] = $5021;
                         $5026 = (($4) + 545|0);
                         $5027 = HEAP8[$5026>>0]|0;
                         __THREW__ = 0;
                         $5028 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $5029 = __THREW__; __THREW__ = 0;
                         $5030 = $5029&1;
                         if ($5030) {
                          label = 614;
                          break L1;
                         }
                         $5031 = (($5028) + 19|0);
                         HEAP8[$5031>>0] = $5027;
                         $5032 = (($4) + 545|0);
                         $5033 = (($5032) + 1|0);
                         $5034 = HEAP8[$5033>>0]|0;
                         __THREW__ = 0;
                         $5035 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $5036 = __THREW__; __THREW__ = 0;
                         $5037 = $5036&1;
                         if ($5037) {
                          label = 614;
                          break L1;
                         }
                         $5038 = (($5035) + 19|0);
                         $5039 = (($5038) + 1|0);
                         HEAP8[$5039>>0] = $5034;
                         $5040 = (($4) + 547|0);
                         $5041 = HEAP8[$5040>>0]|0;
                         __THREW__ = 0;
                         $5042 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $5043 = __THREW__; __THREW__ = 0;
                         $5044 = $5043&1;
                         if ($5044) {
                          label = 614;
                          break L1;
                         }
                         $5045 = (($5042) + 18|0);
                         HEAP8[$5045>>0] = $5041;
                         __THREW__ = 0;
                         $5046 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $5047 = __THREW__; __THREW__ = 0;
                         $5048 = $5047&1;
                         if ($5048) {
                          label = 614;
                          break L1;
                         }
                         $5049 = (($5046) + 17|0);
                         HEAP8[$5049>>0] = 1;
                         $5050 = (($4) + 160|0);
                         $5051 = +HEAPF64[$5050>>3];
                         __THREW__ = 0;
                         $5052 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $5053 = __THREW__; __THREW__ = 0;
                         $5054 = $5053&1;
                         if ($5054) {
                          label = 614;
                          break L1;
                         }
                         $5055 = (($5052) + 8|0);
                         HEAPF64[$5055>>3] = $5051;
                         $5056 = (($4) + 548|0);
                         $5057 = HEAP8[$5056>>0]|0;
                         __THREW__ = 0;
                         $5058 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $5059 = __THREW__; __THREW__ = 0;
                         $5060 = $5059&1;
                         if ($5060) {
                          label = 614;
                          break L1;
                         }
                         $5061 = (($5058) + 19|0);
                         HEAP8[$5061>>0] = $5057;
                         $5062 = (($4) + 548|0);
                         $5063 = (($5062) + 1|0);
                         $5064 = HEAP8[$5063>>0]|0;
                         __THREW__ = 0;
                         $5065 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $5066 = __THREW__; __THREW__ = 0;
                         $5067 = $5066&1;
                         if ($5067) {
                          label = 614;
                          break L1;
                         }
                         $5068 = (($5065) + 19|0);
                         $5069 = (($5068) + 1|0);
                         HEAP8[$5069>>0] = $5064;
                         $5070 = (($4) + 550|0);
                         $5071 = HEAP8[$5070>>0]|0;
                         __THREW__ = 0;
                         $5072 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $5073 = __THREW__; __THREW__ = 0;
                         $5074 = $5073&1;
                         if ($5074) {
                          label = 614;
                          break L1;
                         }
                         $5075 = (($5072) + 18|0);
                         HEAP8[$5075>>0] = $5071;
                         __THREW__ = 0;
                         $5076 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $5077 = __THREW__; __THREW__ = 0;
                         $5078 = $5077&1;
                         if ($5078) {
                          label = 614;
                          break L1;
                         }
                         $5079 = (($5076) + 17|0);
                         HEAP8[$5079>>0] = 1;
                         $5080 = (($4) + 200|0);
                         $5081 = +HEAPF64[$5080>>3];
                         __THREW__ = 0;
                         $5082 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $5083 = __THREW__; __THREW__ = 0;
                         $5084 = $5083&1;
                         if ($5084) {
                          label = 614;
                          break L1;
                         }
                         $5085 = (($5082) + 8|0);
                         HEAPF64[$5085>>3] = $5081;
                         $5086 = (($4) + 551|0);
                         $5087 = HEAP8[$5086>>0]|0;
                         __THREW__ = 0;
                         $5088 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $5089 = __THREW__; __THREW__ = 0;
                         $5090 = $5089&1;
                         if ($5090) {
                          label = 614;
                          break L1;
                         }
                         $5091 = (($5088) + 19|0);
                         HEAP8[$5091>>0] = $5087;
                         $5092 = (($4) + 551|0);
                         $5093 = (($5092) + 1|0);
                         $5094 = HEAP8[$5093>>0]|0;
                         __THREW__ = 0;
                         $5095 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $5096 = __THREW__; __THREW__ = 0;
                         $5097 = $5096&1;
                         if ($5097) {
                          label = 614;
                          break L1;
                         }
                         $5098 = (($5095) + 19|0);
                         $5099 = (($5098) + 1|0);
                         HEAP8[$5099>>0] = $5094;
                         $5100 = (($4) + 553|0);
                         $5101 = HEAP8[$5100>>0]|0;
                         __THREW__ = 0;
                         $5102 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $5103 = __THREW__; __THREW__ = 0;
                         $5104 = $5103&1;
                         if ($5104) {
                          label = 614;
                          break L1;
                         }
                         $5105 = (($5102) + 18|0);
                         HEAP8[$5105>>0] = $5101;
                         __THREW__ = 0;
                         invoke_vii(382,($vfree71|0),0);
                         $5106 = __THREW__; __THREW__ = 0;
                         $5107 = $5106&1;
                         if ($5107) {
                          label = 614;
                          break L1;
                         }
                         $5108 = $1;
                         $5109 = HEAP32[$5108>>2]|0;
                         $5110 = (($5109) + 8|0);
                         $5111 = HEAP32[$5110>>2]|0;
                         __THREW__ = 0;
                         (invoke_iiii($5111|0,($5108|0),($vinfos70|0),($vfree71|0))|0);
                         $5112 = __THREW__; __THREW__ = 0;
                         $5113 = $5112&1;
                         if ($5113) {
                          label = 615;
                          break L1;
                         }
                         __THREW__ = 0;
                         invoke_vi(366,($vfree71|0));
                         $5114 = __THREW__; __THREW__ = 0;
                         $5115 = $5114&1;
                         if ($5115) {
                          label = 614;
                          break L1;
                         }
                         __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos70);
                         break L1491;
                        }
                       } while(0);
                      } else {
                      }
                     } while(0);
                     $5116 = $ij567;
                     $5117 = (($5116) + 1)|0;
                     $ij567 = $5117;
                    }
                    label = 620;
                   } else {
                    label = 620;
                   }
                  } while(0);
                  if ((label|0) == 620) {
                   label = 0;
                  }
                  $5126 = $bgotonextstatement62;
                  $5127 = $5126&1;
                  if ($5127) {
                   $bgotonextstatement72 = 1;
                   $bgotonextstatement72 = 0;
                   $5128 = $bgotonextstatement72;
                   $5129 = $5128&1;
                   if ($5129) {
                   }
                  }
                 }
                }
               }
              }
             } else {
              ;HEAP8[$j5valid85+0>>0]=0|0;
              $5732 = (($4) + 553|0);
              HEAP8[$5732>>0] = 1;
              $5733 = (($4) + 176|0);
              $5734 = +HEAPF64[$5733>>3];
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x215,$5734,-1);
              $5735 = (($x215) + 8|0);
              $5736 = HEAP8[$5735>>0]|0;
              $5737 = $5736&1;
              if (!($5737)) {
               break L993;
              }
              $5738 = (($4) + 408|0);
              $5739 = +HEAPF64[$5738>>3];
              $5740 = -1.0 * $5739;
              $5741 = +HEAPF64[$x215>>3];
              $5742 = $5740 * $5741;
              $5743 = (+__Z5IKabsd($5742));
              $5744 = $5743 < 1.9999999999999999E-6;
              do {
               if ($5744) {
                $5745 = (($4) + 128|0);
                $5746 = +HEAPF64[$5745>>3];
                $5747 = -1.0 * $5746;
                $5748 = (($4) + 264|0);
                $5749 = +HEAPF64[$5748>>3];
                $5750 = $5747 * $5749;
                $5751 = (($4) + 336|0);
                $5752 = +HEAPF64[$5751>>3];
                $5753 = -1.0 * $5752;
                $5754 = (($4) + 136|0);
                $5755 = +HEAPF64[$5754>>3];
                $5756 = $5753 * $5755;
                $5757 = $5750 + $5756;
                $5758 = (+__Z5IKabsd($5757));
                $5759 = $5758 < 1.9999999999999999E-6;
                if (!($5759)) {
                 break;
                }
                $5760 = (($4) + 408|0);
                $5761 = +HEAPF64[$5760>>3];
                $5762 = -1.0 * $5761;
                $5763 = +HEAPF64[$x215>>3];
                $5764 = $5762 * $5763;
                $5765 = (+__Z5IKsqrd($5764));
                $5766 = (($4) + 128|0);
                $5767 = +HEAPF64[$5766>>3];
                $5768 = -1.0 * $5767;
                $5769 = (($4) + 264|0);
                $5770 = +HEAPF64[$5769>>3];
                $5771 = $5768 * $5770;
                $5772 = (($4) + 336|0);
                $5773 = +HEAPF64[$5772>>3];
                $5774 = -1.0 * $5773;
                $5775 = (($4) + 136|0);
                $5776 = +HEAPF64[$5775>>3];
                $5777 = $5774 * $5776;
                $5778 = $5771 + $5777;
                $5779 = (+__Z5IKsqrd($5778));
                $5780 = $5765 + $5779;
                $5781 = $5780 - 1.0;
                $5782 = (+__Z5IKabsd($5781));
                $5783 = $5782 <= 1.9999999999999999E-6;
                if (!($5783)) {
                 break;
                }
                break L993;
               }
              } while(0);
              $5784 = (($4) + 408|0);
              $5785 = +HEAPF64[$5784>>3];
              $5786 = -1.0 * $5785;
              $5787 = +HEAPF64[$x215>>3];
              $5788 = $5786 * $5787;
              $5789 = (($4) + 128|0);
              $5790 = +HEAPF64[$5789>>3];
              $5791 = -1.0 * $5790;
              $5792 = (($4) + 264|0);
              $5793 = +HEAPF64[$5792>>3];
              $5794 = $5791 * $5793;
              $5795 = (($4) + 336|0);
              $5796 = +HEAPF64[$5795>>3];
              $5797 = -1.0 * $5796;
              $5798 = (($4) + 136|0);
              $5799 = +HEAPF64[$5798>>3];
              $5800 = $5797 * $5799;
              $5801 = $5794 + $5800;
              $5802 = (+__Z7IKatan2dd($5788,$5801));
              HEAPF64[$j5array82>>3] = $5802;
              $5803 = +HEAPF64[$j5array82>>3];
              $5804 = (+__Z5IKsind($5803));
              HEAPF64[$sj5array84>>3] = $5804;
              $5805 = +HEAPF64[$j5array82>>3];
              $5806 = (+__Z5IKcosd($5805));
              HEAPF64[$cj5array83>>3] = $5806;
              $5807 = +HEAPF64[$j5array82>>3];
              $5808 = $5807 > 3.14159265358979;
              if ($5808) {
               $5809 = +HEAPF64[$j5array82>>3];
               $5810 = $5809 - 6.2831853071795898;
               HEAPF64[$j5array82>>3] = $5810;
              } else {
               $5811 = +HEAPF64[$j5array82>>3];
               $5812 = $5811 < -3.14159265358979;
               if ($5812) {
                $5813 = +HEAPF64[$j5array82>>3];
                $5814 = $5813 + 6.2831853071795898;
                HEAPF64[$j5array82>>3] = $5814;
               }
              }
              HEAP8[$j5valid85>>0] = 1;
              $ij586 = 0;
              while(1) {
               $5815 = $ij586;
               $5816 = ($5815|0)<(1);
               if (!($5816)) {
                break;
               }
               $5817 = $ij586;
               $5818 = (($j5valid85) + ($5817)|0);
               $5819 = HEAP8[$5818>>0]|0;
               $5820 = $5819&1;
               L1584: do {
                if ($5820) {
                 $5821 = $ij586;
                 $5822 = $5821&255;
                 $5823 = (($4) + 551|0);
                 HEAP8[$5823>>0] = $5822;
                 $5824 = (($4) + 551|0);
                 $5825 = (($5824) + 1|0);
                 HEAP8[$5825>>0] = -1;
                 $5826 = $ij586;
                 $5827 = (($5826) + 1)|0;
                 $iij587 = $5827;
                 L1587: while(1) {
                  $5828 = $iij587;
                  $5829 = ($5828|0)<(1);
                  if (!($5829)) {
                   break;
                  }
                  $5830 = $iij587;
                  $5831 = (($j5valid85) + ($5830)|0);
                  $5832 = HEAP8[$5831>>0]|0;
                  $5833 = $5832&1;
                  do {
                   if ($5833) {
                    $5834 = $ij586;
                    $5835 = (($cj5array83) + ($5834<<3)|0);
                    $5836 = +HEAPF64[$5835>>3];
                    $5837 = $iij587;
                    $5838 = (($cj5array83) + ($5837<<3)|0);
                    $5839 = +HEAPF64[$5838>>3];
                    $5840 = $5836 - $5839;
                    $5841 = (+__Z5IKabsd($5840));
                    $5842 = $5841 < 9.9999999999999995E-7;
                    if (!($5842)) {
                     break;
                    }
                    $5843 = $ij586;
                    $5844 = (($sj5array84) + ($5843<<3)|0);
                    $5845 = +HEAPF64[$5844>>3];
                    $5846 = $iij587;
                    $5847 = (($sj5array84) + ($5846<<3)|0);
                    $5848 = +HEAPF64[$5847>>3];
                    $5849 = $5845 - $5848;
                    $5850 = (+__Z5IKabsd($5849));
                    $5851 = $5850 < 9.9999999999999995E-7;
                    if ($5851) {
                     label = 731;
                     break L1587;
                    }
                   }
                  } while(0);
                  $5858 = $iij587;
                  $5859 = (($5858) + 1)|0;
                  $iij587 = $5859;
                 }
                 if ((label|0) == 731) {
                  label = 0;
                  $5852 = $iij587;
                  $5853 = (($j5valid85) + ($5852)|0);
                  HEAP8[$5853>>0] = 0;
                  $5854 = $iij587;
                  $5855 = $5854&255;
                  $5856 = (($4) + 551|0);
                  $5857 = (($5856) + 1|0);
                  HEAP8[$5857>>0] = $5855;
                 }
                 $5860 = $ij586;
                 $5861 = (($j5array82) + ($5860<<3)|0);
                 $5862 = +HEAPF64[$5861>>3];
                 $5863 = (($4) + 200|0);
                 HEAPF64[$5863>>3] = $5862;
                 $5864 = $ij586;
                 $5865 = (($cj5array83) + ($5864<<3)|0);
                 $5866 = +HEAPF64[$5865>>3];
                 $5867 = (($4) + 208|0);
                 HEAPF64[$5867>>3] = $5866;
                 $5868 = $ij586;
                 $5869 = (($sj5array84) + ($5868<<3)|0);
                 $5870 = +HEAPF64[$5869>>3];
                 $5871 = (($4) + 216|0);
                 HEAPF64[$5871>>3] = $5870;
                 $5872 = (($4) + 200|0);
                 $5873 = +HEAPF64[$5872>>3];
                 $5874 = (+__Z5IKsind($5873));
                 $x216 = $5874;
                 $5875 = (($4) + 200|0);
                 $5876 = +HEAPF64[$5875>>3];
                 $5877 = (+__Z5IKcosd($5876));
                 $x217 = $5877;
                 $5878 = (($4) + 168|0);
                 $5879 = +HEAPF64[$5878>>3];
                 $5880 = (($4) + 136|0);
                 $5881 = +HEAPF64[$5880>>3];
                 $5882 = $5879 * $5881;
                 $x218 = $5882;
                 $5883 = (($4) + 128|0);
                 $5884 = +HEAPF64[$5883>>3];
                 $5885 = (($4) + 312|0);
                 $5886 = +HEAPF64[$5885>>3];
                 $5887 = $5884 * $5886;
                 $x219 = $5887;
                 $5888 = (($4) + 264|0);
                 $5889 = +HEAPF64[$5888>>3];
                 $5890 = 1.0 * $5889;
                 $x220 = $5890;
                 $5891 = (($4) + 168|0);
                 $5892 = +HEAPF64[$5891>>3];
                 $5893 = 1.0 * $5892;
                 $x221 = $5893;
                 $5894 = (($4) + 240|0);
                 $5895 = +HEAPF64[$5894>>3];
                 $5896 = 1.0 * $5895;
                 $x222 = $5896;
                 $5897 = (($4) + 128|0);
                 $5898 = +HEAPF64[$5897>>3];
                 $5899 = (($4) + 336|0);
                 $5900 = +HEAPF64[$5899>>3];
                 $5901 = $5898 * $5900;
                 $x223 = $5901;
                 $5902 = (($4) + 128|0);
                 $5903 = +HEAPF64[$5902>>3];
                 $5904 = $x217;
                 $5905 = $5903 * $5904;
                 $x224 = $5905;
                 $5906 = (($4) + 128|0);
                 $5907 = +HEAPF64[$5906>>3];
                 $5908 = $x216;
                 $5909 = $5907 * $5908;
                 $x225 = $5909;
                 $5910 = $x217;
                 $5911 = 1.0 * $5910;
                 $x226 = $5911;
                 $5912 = (($4) + 408|0);
                 $5913 = +HEAPF64[$5912>>3];
                 $5914 = (($4) + 176|0);
                 $5915 = +HEAPF64[$5914>>3];
                 $5916 = $x216;
                 $5917 = $5915 * $5916;
                 $5918 = $5913 + $5917;
                 HEAPF64[$evalcond88>>3] = $5918;
                 $5919 = (($4) + 176|0);
                 $5920 = +HEAPF64[$5919>>3];
                 $5921 = -1.0 * $5920;
                 $5922 = $x226;
                 $5923 = $5921 * $5922;
                 $5924 = (($4) + 384|0);
                 $5925 = +HEAPF64[$5924>>3];
                 $5926 = $5923 + $5925;
                 $5927 = (($evalcond88) + 8|0);
                 HEAPF64[$5927>>3] = $5926;
                 $5928 = (($4) + 312|0);
                 $5929 = +HEAPF64[$5928>>3];
                 $5930 = (($4) + 136|0);
                 $5931 = +HEAPF64[$5930>>3];
                 $5932 = $5929 * $5931;
                 $5933 = $x216;
                 $5934 = $5932 + $5933;
                 $5935 = (($4) + 128|0);
                 $5936 = +HEAPF64[$5935>>3];
                 $5937 = (($4) + 240|0);
                 $5938 = +HEAPF64[$5937>>3];
                 $5939 = $5936 * $5938;
                 $5940 = $5934 + $5939;
                 $5941 = (($evalcond88) + 16|0);
                 HEAPF64[$5941>>3] = $5940;
                 $5942 = (($4) + 336|0);
                 $5943 = +HEAPF64[$5942>>3];
                 $5944 = (($4) + 136|0);
                 $5945 = +HEAPF64[$5944>>3];
                 $5946 = $5943 * $5945;
                 $5947 = $x217;
                 $5948 = $5946 + $5947;
                 $5949 = (($4) + 128|0);
                 $5950 = +HEAPF64[$5949>>3];
                 $5951 = (($4) + 264|0);
                 $5952 = +HEAPF64[$5951>>3];
                 $5953 = $5950 * $5952;
                 $5954 = $5948 + $5953;
                 $5955 = (($evalcond88) + 24|0);
                 HEAPF64[$5955>>3] = $5954;
                 $5956 = $x225;
                 $5957 = (($4) + 240|0);
                 $5958 = +HEAPF64[$5957>>3];
                 $5959 = $5956 + $5958;
                 $5960 = $x217;
                 $5961 = $x218;
                 $5962 = $5960 * $5961;
                 $5963 = $5959 + $5962;
                 $5964 = (($evalcond88) + 32|0);
                 HEAPF64[$5964>>3] = $5963;
                 $5965 = (($4) + 136|0);
                 $5966 = +HEAPF64[$5965>>3];
                 $5967 = $x217;
                 $5968 = $5966 * $5967;
                 $5969 = (($4) + 168|0);
                 $5970 = +HEAPF64[$5969>>3];
                 $5971 = $x225;
                 $5972 = $5970 * $5971;
                 $5973 = $5968 + $5972;
                 $5974 = (($4) + 336|0);
                 $5975 = +HEAPF64[$5974>>3];
                 $5976 = $5973 + $5975;
                 $5977 = (($evalcond88) + 40|0);
                 HEAPF64[$5977>>3] = $5976;
                 $5978 = (($4) + 168|0);
                 $5979 = +HEAPF64[$5978>>3];
                 $5980 = $x216;
                 $5981 = $5979 * $5980;
                 $5982 = $x223;
                 $5983 = $5981 + $5982;
                 $5984 = (($4) + 136|0);
                 $5985 = +HEAPF64[$5984>>3];
                 $5986 = -1.0 * $5985;
                 $5987 = $x220;
                 $5988 = $5986 * $5987;
                 $5989 = $5983 + $5988;
                 $5990 = (($evalcond88) + 48|0);
                 HEAPF64[$5990>>3] = $5989;
                 $5991 = $x216;
                 $5992 = -1.0 * $5991;
                 $5993 = $x218;
                 $5994 = $5992 * $5993;
                 $5995 = $x224;
                 $5996 = $5994 + $5995;
                 $5997 = (($4) + 264|0);
                 $5998 = +HEAPF64[$5997>>3];
                 $5999 = $5996 + $5998;
                 $6000 = (($evalcond88) + 56|0);
                 HEAPF64[$6000>>3] = $5999;
                 $6001 = (($4) + 136|0);
                 $6002 = +HEAPF64[$6001>>3];
                 $6003 = $x216;
                 $6004 = $6002 * $6003;
                 $6005 = $x221;
                 $6006 = -1.0 * $6005;
                 $6007 = $x224;
                 $6008 = $6006 * $6007;
                 $6009 = $6004 + $6008;
                 $6010 = (($4) + 312|0);
                 $6011 = +HEAPF64[$6010>>3];
                 $6012 = $6009 + $6011;
                 $6013 = (($evalcond88) + 64|0);
                 HEAPF64[$6013>>3] = $6012;
                 $6014 = $x219;
                 $6015 = (($4) + 136|0);
                 $6016 = +HEAPF64[$6015>>3];
                 $6017 = -1.0 * $6016;
                 $6018 = $x222;
                 $6019 = $6017 * $6018;
                 $6020 = $6014 + $6019;
                 $6021 = $x217;
                 $6022 = -1.0 * $6021;
                 $6023 = $x221;
                 $6024 = $6022 * $6023;
                 $6025 = $6020 + $6024;
                 $6026 = (($evalcond88) + 72|0);
                 HEAPF64[$6026>>3] = $6025;
                 $6027 = $x216;
                 $6028 = $x218;
                 $6029 = -1.0 * $6028;
                 $6030 = $x220;
                 $6031 = $6029 * $6030;
                 $6032 = $6027 + $6031;
                 $6033 = (($4) + 168|0);
                 $6034 = +HEAPF64[$6033>>3];
                 $6035 = $x223;
                 $6036 = $6034 * $6035;
                 $6037 = $6032 + $6036;
                 $6038 = (($4) + 408|0);
                 $6039 = +HEAPF64[$6038>>3];
                 $6040 = (($4) + 176|0);
                 $6041 = +HEAPF64[$6040>>3];
                 $6042 = $6039 * $6041;
                 $6043 = $6037 + $6042;
                 $6044 = (($evalcond88) + 80|0);
                 HEAPF64[$6044>>3] = $6043;
                 $6045 = (($4) + 168|0);
                 $6046 = +HEAPF64[$6045>>3];
                 $6047 = $x219;
                 $6048 = $6046 * $6047;
                 $6049 = (($4) + 384|0);
                 $6050 = +HEAPF64[$6049>>3];
                 $6051 = (($4) + 176|0);
                 $6052 = +HEAPF64[$6051>>3];
                 $6053 = $6050 * $6052;
                 $6054 = $6048 + $6053;
                 $6055 = $x218;
                 $6056 = -1.0 * $6055;
                 $6057 = $x222;
                 $6058 = $6056 * $6057;
                 $6059 = $6054 + $6058;
                 $6060 = $x226;
                 $6061 = -1.0 * $6060;
                 $6062 = $6059 + $6061;
                 $6063 = (($evalcond88) + 88|0);
                 HEAPF64[$6063>>3] = $6062;
                 $6064 = +HEAPF64[$evalcond88>>3];
                 $6065 = (+__Z5IKabsd($6064));
                 $6066 = $6065 > 5.0000000000000004E-6;
                 do {
                  if (!($6066)) {
                   $6067 = (($evalcond88) + 8|0);
                   $6068 = +HEAPF64[$6067>>3];
                   $6069 = (+__Z5IKabsd($6068));
                   $6070 = $6069 > 5.0000000000000004E-6;
                   if ($6070) {
                    break;
                   }
                   $6071 = (($evalcond88) + 16|0);
                   $6072 = +HEAPF64[$6071>>3];
                   $6073 = (+__Z5IKabsd($6072));
                   $6074 = $6073 > 5.0000000000000004E-6;
                   if ($6074) {
                    break;
                   }
                   $6075 = (($evalcond88) + 24|0);
                   $6076 = +HEAPF64[$6075>>3];
                   $6077 = (+__Z5IKabsd($6076));
                   $6078 = $6077 > 5.0000000000000004E-6;
                   if ($6078) {
                    break;
                   }
                   $6079 = (($evalcond88) + 32|0);
                   $6080 = +HEAPF64[$6079>>3];
                   $6081 = (+__Z5IKabsd($6080));
                   $6082 = $6081 > 5.0000000000000004E-6;
                   if ($6082) {
                    break;
                   }
                   $6083 = (($evalcond88) + 40|0);
                   $6084 = +HEAPF64[$6083>>3];
                   $6085 = (+__Z5IKabsd($6084));
                   $6086 = $6085 > 5.0000000000000004E-6;
                   if ($6086) {
                    break;
                   }
                   $6087 = (($evalcond88) + 48|0);
                   $6088 = +HEAPF64[$6087>>3];
                   $6089 = (+__Z5IKabsd($6088));
                   $6090 = $6089 > 5.0000000000000004E-6;
                   if ($6090) {
                    break;
                   }
                   $6091 = (($evalcond88) + 56|0);
                   $6092 = +HEAPF64[$6091>>3];
                   $6093 = (+__Z5IKabsd($6092));
                   $6094 = $6093 > 5.0000000000000004E-6;
                   if ($6094) {
                    break;
                   }
                   $6095 = (($evalcond88) + 64|0);
                   $6096 = +HEAPF64[$6095>>3];
                   $6097 = (+__Z5IKabsd($6096));
                   $6098 = $6097 > 5.0000000000000004E-6;
                   if ($6098) {
                    break;
                   }
                   $6099 = (($evalcond88) + 72|0);
                   $6100 = +HEAPF64[$6099>>3];
                   $6101 = (+__Z5IKabsd($6100));
                   $6102 = $6101 > 5.0000000000000004E-6;
                   if ($6102) {
                    break;
                   }
                   $6103 = (($evalcond88) + 80|0);
                   $6104 = +HEAPF64[$6103>>3];
                   $6105 = (+__Z5IKabsd($6104));
                   $6106 = $6105 > 5.0000000000000004E-6;
                   if ($6106) {
                    break;
                   }
                   $6107 = (($evalcond88) + 88|0);
                   $6108 = +HEAPF64[$6107>>3];
                   $6109 = (+__Z5IKabsd($6108));
                   $6110 = $6109 > 5.0000000000000004E-6;
                   if ($6110) {
                    break;
                   }
                   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos89,6);
                   __THREW__ = 0;
                   $6111 = (invoke_iii(381,($vinfos89|0),0)|0);
                   $6112 = __THREW__; __THREW__ = 0;
                   $6113 = $6112&1;
                   if ($6113) {
                    label = 782;
                    break L1;
                   }
                   $6114 = (($6111) + 17|0);
                   HEAP8[$6114>>0] = 1;
                   $6115 = +HEAPF64[$4>>3];
                   __THREW__ = 0;
                   $6116 = (invoke_iii(381,($vinfos89|0),0)|0);
                   $6117 = __THREW__; __THREW__ = 0;
                   $6118 = $6117&1;
                   if ($6118) {
                    label = 782;
                    break L1;
                   }
                   $6119 = (($6116) + 8|0);
                   HEAPF64[$6119>>3] = $6115;
                   $6120 = (($4) + 536|0);
                   $6121 = HEAP8[$6120>>0]|0;
                   __THREW__ = 0;
                   $6122 = (invoke_iii(381,($vinfos89|0),0)|0);
                   $6123 = __THREW__; __THREW__ = 0;
                   $6124 = $6123&1;
                   if ($6124) {
                    label = 782;
                    break L1;
                   }
                   $6125 = (($6122) + 19|0);
                   HEAP8[$6125>>0] = $6121;
                   $6126 = (($4) + 536|0);
                   $6127 = (($6126) + 1|0);
                   $6128 = HEAP8[$6127>>0]|0;
                   __THREW__ = 0;
                   $6129 = (invoke_iii(381,($vinfos89|0),0)|0);
                   $6130 = __THREW__; __THREW__ = 0;
                   $6131 = $6130&1;
                   if ($6131) {
                    label = 782;
                    break L1;
                   }
                   $6132 = (($6129) + 19|0);
                   $6133 = (($6132) + 1|0);
                   HEAP8[$6133>>0] = $6128;
                   $6134 = (($4) + 538|0);
                   $6135 = HEAP8[$6134>>0]|0;
                   __THREW__ = 0;
                   $6136 = (invoke_iii(381,($vinfos89|0),0)|0);
                   $6137 = __THREW__; __THREW__ = 0;
                   $6138 = $6137&1;
                   if ($6138) {
                    label = 782;
                    break L1;
                   }
                   $6139 = (($6136) + 18|0);
                   HEAP8[$6139>>0] = $6135;
                   __THREW__ = 0;
                   $6140 = (invoke_iii(381,($vinfos89|0),1)|0);
                   $6141 = __THREW__; __THREW__ = 0;
                   $6142 = $6141&1;
                   if ($6142) {
                    label = 782;
                    break L1;
                   }
                   $6143 = (($6140) + 17|0);
                   HEAP8[$6143>>0] = 1;
                   $6144 = (($4) + 40|0);
                   $6145 = +HEAPF64[$6144>>3];
                   __THREW__ = 0;
                   $6146 = (invoke_iii(381,($vinfos89|0),1)|0);
                   $6147 = __THREW__; __THREW__ = 0;
                   $6148 = $6147&1;
                   if ($6148) {
                    label = 782;
                    break L1;
                   }
                   $6149 = (($6146) + 8|0);
                   HEAPF64[$6149>>3] = $6145;
                   $6150 = (($4) + 539|0);
                   $6151 = HEAP8[$6150>>0]|0;
                   __THREW__ = 0;
                   $6152 = (invoke_iii(381,($vinfos89|0),1)|0);
                   $6153 = __THREW__; __THREW__ = 0;
                   $6154 = $6153&1;
                   if ($6154) {
                    label = 782;
                    break L1;
                   }
                   $6155 = (($6152) + 19|0);
                   HEAP8[$6155>>0] = $6151;
                   $6156 = (($4) + 539|0);
                   $6157 = (($6156) + 1|0);
                   $6158 = HEAP8[$6157>>0]|0;
                   __THREW__ = 0;
                   $6159 = (invoke_iii(381,($vinfos89|0),1)|0);
                   $6160 = __THREW__; __THREW__ = 0;
                   $6161 = $6160&1;
                   if ($6161) {
                    label = 782;
                    break L1;
                   }
                   $6162 = (($6159) + 19|0);
                   $6163 = (($6162) + 1|0);
                   HEAP8[$6163>>0] = $6158;
                   $6164 = (($4) + 541|0);
                   $6165 = HEAP8[$6164>>0]|0;
                   __THREW__ = 0;
                   $6166 = (invoke_iii(381,($vinfos89|0),1)|0);
                   $6167 = __THREW__; __THREW__ = 0;
                   $6168 = $6167&1;
                   if ($6168) {
                    label = 782;
                    break L1;
                   }
                   $6169 = (($6166) + 18|0);
                   HEAP8[$6169>>0] = $6165;
                   __THREW__ = 0;
                   $6170 = (invoke_iii(381,($vinfos89|0),2)|0);
                   $6171 = __THREW__; __THREW__ = 0;
                   $6172 = $6171&1;
                   if ($6172) {
                    label = 782;
                    break L1;
                   }
                   $6173 = (($6170) + 17|0);
                   HEAP8[$6173>>0] = 1;
                   $6174 = (($4) + 80|0);
                   $6175 = +HEAPF64[$6174>>3];
                   __THREW__ = 0;
                   $6176 = (invoke_iii(381,($vinfos89|0),2)|0);
                   $6177 = __THREW__; __THREW__ = 0;
                   $6178 = $6177&1;
                   if ($6178) {
                    label = 782;
                    break L1;
                   }
                   $6179 = (($6176) + 8|0);
                   HEAPF64[$6179>>3] = $6175;
                   $6180 = (($4) + 542|0);
                   $6181 = HEAP8[$6180>>0]|0;
                   __THREW__ = 0;
                   $6182 = (invoke_iii(381,($vinfos89|0),2)|0);
                   $6183 = __THREW__; __THREW__ = 0;
                   $6184 = $6183&1;
                   if ($6184) {
                    label = 782;
                    break L1;
                   }
                   $6185 = (($6182) + 19|0);
                   HEAP8[$6185>>0] = $6181;
                   $6186 = (($4) + 542|0);
                   $6187 = (($6186) + 1|0);
                   $6188 = HEAP8[$6187>>0]|0;
                   __THREW__ = 0;
                   $6189 = (invoke_iii(381,($vinfos89|0),2)|0);
                   $6190 = __THREW__; __THREW__ = 0;
                   $6191 = $6190&1;
                   if ($6191) {
                    label = 782;
                    break L1;
                   }
                   $6192 = (($6189) + 19|0);
                   $6193 = (($6192) + 1|0);
                   HEAP8[$6193>>0] = $6188;
                   $6194 = (($4) + 544|0);
                   $6195 = HEAP8[$6194>>0]|0;
                   __THREW__ = 0;
                   $6196 = (invoke_iii(381,($vinfos89|0),2)|0);
                   $6197 = __THREW__; __THREW__ = 0;
                   $6198 = $6197&1;
                   if ($6198) {
                    label = 782;
                    break L1;
                   }
                   $6199 = (($6196) + 18|0);
                   HEAP8[$6199>>0] = $6195;
                   __THREW__ = 0;
                   $6200 = (invoke_iii(381,($vinfos89|0),3)|0);
                   $6201 = __THREW__; __THREW__ = 0;
                   $6202 = $6201&1;
                   if ($6202) {
                    label = 782;
                    break L1;
                   }
                   $6203 = (($6200) + 17|0);
                   HEAP8[$6203>>0] = 1;
                   $6204 = (($4) + 120|0);
                   $6205 = +HEAPF64[$6204>>3];
                   __THREW__ = 0;
                   $6206 = (invoke_iii(381,($vinfos89|0),3)|0);
                   $6207 = __THREW__; __THREW__ = 0;
                   $6208 = $6207&1;
                   if ($6208) {
                    label = 782;
                    break L1;
                   }
                   $6209 = (($6206) + 8|0);
                   HEAPF64[$6209>>3] = $6205;
                   $6210 = (($4) + 545|0);
                   $6211 = HEAP8[$6210>>0]|0;
                   __THREW__ = 0;
                   $6212 = (invoke_iii(381,($vinfos89|0),3)|0);
                   $6213 = __THREW__; __THREW__ = 0;
                   $6214 = $6213&1;
                   if ($6214) {
                    label = 782;
                    break L1;
                   }
                   $6215 = (($6212) + 19|0);
                   HEAP8[$6215>>0] = $6211;
                   $6216 = (($4) + 545|0);
                   $6217 = (($6216) + 1|0);
                   $6218 = HEAP8[$6217>>0]|0;
                   __THREW__ = 0;
                   $6219 = (invoke_iii(381,($vinfos89|0),3)|0);
                   $6220 = __THREW__; __THREW__ = 0;
                   $6221 = $6220&1;
                   if ($6221) {
                    label = 782;
                    break L1;
                   }
                   $6222 = (($6219) + 19|0);
                   $6223 = (($6222) + 1|0);
                   HEAP8[$6223>>0] = $6218;
                   $6224 = (($4) + 547|0);
                   $6225 = HEAP8[$6224>>0]|0;
                   __THREW__ = 0;
                   $6226 = (invoke_iii(381,($vinfos89|0),3)|0);
                   $6227 = __THREW__; __THREW__ = 0;
                   $6228 = $6227&1;
                   if ($6228) {
                    label = 782;
                    break L1;
                   }
                   $6229 = (($6226) + 18|0);
                   HEAP8[$6229>>0] = $6225;
                   __THREW__ = 0;
                   $6230 = (invoke_iii(381,($vinfos89|0),4)|0);
                   $6231 = __THREW__; __THREW__ = 0;
                   $6232 = $6231&1;
                   if ($6232) {
                    label = 782;
                    break L1;
                   }
                   $6233 = (($6230) + 17|0);
                   HEAP8[$6233>>0] = 1;
                   $6234 = (($4) + 160|0);
                   $6235 = +HEAPF64[$6234>>3];
                   __THREW__ = 0;
                   $6236 = (invoke_iii(381,($vinfos89|0),4)|0);
                   $6237 = __THREW__; __THREW__ = 0;
                   $6238 = $6237&1;
                   if ($6238) {
                    label = 782;
                    break L1;
                   }
                   $6239 = (($6236) + 8|0);
                   HEAPF64[$6239>>3] = $6235;
                   $6240 = (($4) + 548|0);
                   $6241 = HEAP8[$6240>>0]|0;
                   __THREW__ = 0;
                   $6242 = (invoke_iii(381,($vinfos89|0),4)|0);
                   $6243 = __THREW__; __THREW__ = 0;
                   $6244 = $6243&1;
                   if ($6244) {
                    label = 782;
                    break L1;
                   }
                   $6245 = (($6242) + 19|0);
                   HEAP8[$6245>>0] = $6241;
                   $6246 = (($4) + 548|0);
                   $6247 = (($6246) + 1|0);
                   $6248 = HEAP8[$6247>>0]|0;
                   __THREW__ = 0;
                   $6249 = (invoke_iii(381,($vinfos89|0),4)|0);
                   $6250 = __THREW__; __THREW__ = 0;
                   $6251 = $6250&1;
                   if ($6251) {
                    label = 782;
                    break L1;
                   }
                   $6252 = (($6249) + 19|0);
                   $6253 = (($6252) + 1|0);
                   HEAP8[$6253>>0] = $6248;
                   $6254 = (($4) + 550|0);
                   $6255 = HEAP8[$6254>>0]|0;
                   __THREW__ = 0;
                   $6256 = (invoke_iii(381,($vinfos89|0),4)|0);
                   $6257 = __THREW__; __THREW__ = 0;
                   $6258 = $6257&1;
                   if ($6258) {
                    label = 782;
                    break L1;
                   }
                   $6259 = (($6256) + 18|0);
                   HEAP8[$6259>>0] = $6255;
                   __THREW__ = 0;
                   $6260 = (invoke_iii(381,($vinfos89|0),5)|0);
                   $6261 = __THREW__; __THREW__ = 0;
                   $6262 = $6261&1;
                   if ($6262) {
                    label = 782;
                    break L1;
                   }
                   $6263 = (($6260) + 17|0);
                   HEAP8[$6263>>0] = 1;
                   $6264 = (($4) + 200|0);
                   $6265 = +HEAPF64[$6264>>3];
                   __THREW__ = 0;
                   $6266 = (invoke_iii(381,($vinfos89|0),5)|0);
                   $6267 = __THREW__; __THREW__ = 0;
                   $6268 = $6267&1;
                   if ($6268) {
                    label = 782;
                    break L1;
                   }
                   $6269 = (($6266) + 8|0);
                   HEAPF64[$6269>>3] = $6265;
                   $6270 = (($4) + 551|0);
                   $6271 = HEAP8[$6270>>0]|0;
                   __THREW__ = 0;
                   $6272 = (invoke_iii(381,($vinfos89|0),5)|0);
                   $6273 = __THREW__; __THREW__ = 0;
                   $6274 = $6273&1;
                   if ($6274) {
                    label = 782;
                    break L1;
                   }
                   $6275 = (($6272) + 19|0);
                   HEAP8[$6275>>0] = $6271;
                   $6276 = (($4) + 551|0);
                   $6277 = (($6276) + 1|0);
                   $6278 = HEAP8[$6277>>0]|0;
                   __THREW__ = 0;
                   $6279 = (invoke_iii(381,($vinfos89|0),5)|0);
                   $6280 = __THREW__; __THREW__ = 0;
                   $6281 = $6280&1;
                   if ($6281) {
                    label = 782;
                    break L1;
                   }
                   $6282 = (($6279) + 19|0);
                   $6283 = (($6282) + 1|0);
                   HEAP8[$6283>>0] = $6278;
                   $6284 = (($4) + 553|0);
                   $6285 = HEAP8[$6284>>0]|0;
                   __THREW__ = 0;
                   $6286 = (invoke_iii(381,($vinfos89|0),5)|0);
                   $6287 = __THREW__; __THREW__ = 0;
                   $6288 = $6287&1;
                   if ($6288) {
                    label = 782;
                    break L1;
                   }
                   $6289 = (($6286) + 18|0);
                   HEAP8[$6289>>0] = $6285;
                   __THREW__ = 0;
                   invoke_vii(382,($vfree90|0),0);
                   $6290 = __THREW__; __THREW__ = 0;
                   $6291 = $6290&1;
                   if ($6291) {
                    label = 782;
                    break L1;
                   }
                   $6292 = $1;
                   $6293 = HEAP32[$6292>>2]|0;
                   $6294 = (($6293) + 8|0);
                   $6295 = HEAP32[$6294>>2]|0;
                   __THREW__ = 0;
                   (invoke_iiii($6295|0,($6292|0),($vinfos89|0),($vfree90|0))|0);
                   $6296 = __THREW__; __THREW__ = 0;
                   $6297 = $6296&1;
                   if ($6297) {
                    label = 783;
                    break L1;
                   }
                   __THREW__ = 0;
                   invoke_vi(366,($vfree90|0));
                   $6298 = __THREW__; __THREW__ = 0;
                   $6299 = $6298&1;
                   if ($6299) {
                    label = 782;
                    break L1;
                   }
                   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos89);
                   break L1584;
                  }
                 } while(0);
                } else {
                }
               } while(0);
               $6300 = $ij586;
               $6301 = (($6300) + 1)|0;
               $ij586 = $6301;
              }
             }
            }
            break L993;
           }
          } while(0);
         } else {
         }
        } while(0);
        $6837 = $ij326;
        $6838 = (($6837) + 1)|0;
        $ij326 = $6838;
       }
      }
     }
    } else {
    }
   } while(0);
   $11613 = $ij4;
   $11614 = (($11613) + 1)|0;
   $ij4 = $11614;
  }
  $11615 = $rotationiter;
  $11616 = (($11615) + 1)|0;
  $rotationiter = $11616;
 }
 switch (label|0) {
  case 122: {
   $1309 = ___cxa_find_matching_catch()|0;
   $1310 = tempRet0;
   $2 = $1309;
   $3 = $1310;
   label = 125;
   break;
  }
  case 123: {
   $1311 = ___cxa_find_matching_catch()|0;
   $1312 = tempRet0;
   $2 = $1311;
   $3 = $1312;
   __THREW__ = 0;
   invoke_vi(366,($vfree|0));
   $1313 = __THREW__; __THREW__ = 0;
   $1314 = $1313&1;
   if ($1314) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 125;
    break;
   }
   break;
  }
  case 230: {
   $1979 = ___cxa_find_matching_catch()|0;
   $1980 = tempRet0;
   $2 = $1979;
   $3 = $1980;
   label = 233;
   break;
  }
  case 231: {
   $1981 = ___cxa_find_matching_catch()|0;
   $1982 = tempRet0;
   $2 = $1981;
   $3 = $1982;
   __THREW__ = 0;
   invoke_vi(366,($vfree20|0));
   $1983 = __THREW__; __THREW__ = 0;
   $1984 = $1983&1;
   if ($1984) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 233;
    break;
   }
   break;
  }
  case 362: {
   $3455 = ___cxa_find_matching_catch()|0;
   $3456 = tempRet0;
   $2 = $3455;
   $3 = $3456;
   label = 365;
   break;
  }
  case 363: {
   $3457 = ___cxa_find_matching_catch()|0;
   $3458 = tempRet0;
   $2 = $3457;
   $3 = $3458;
   __THREW__ = 0;
   invoke_vi(366,($vfree41|0));
   $3459 = __THREW__; __THREW__ = 0;
   $3460 = $3459&1;
   if ($3460) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 365;
    break;
   }
   break;
  }
  case 446: {
   $4052 = ___cxa_find_matching_catch()|0;
   $4053 = tempRet0;
   $2 = $4052;
   $3 = $4053;
   label = 449;
   break;
  }
  case 447: {
   $4054 = ___cxa_find_matching_catch()|0;
   $4055 = tempRet0;
   $2 = $4054;
   $3 = $4055;
   __THREW__ = 0;
   invoke_vi(366,($vfree51|0));
   $4056 = __THREW__; __THREW__ = 0;
   $4057 = $4056&1;
   if ($4057) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 449;
    break;
   }
   break;
  }
  case 530: {
   $4584 = ___cxa_find_matching_catch()|0;
   $4585 = tempRet0;
   $2 = $4584;
   $3 = $4585;
   label = 533;
   break;
  }
  case 531: {
   $4586 = ___cxa_find_matching_catch()|0;
   $4587 = tempRet0;
   $2 = $4586;
   $3 = $4587;
   __THREW__ = 0;
   invoke_vi(366,($vfree61|0));
   $4588 = __THREW__; __THREW__ = 0;
   $4589 = $4588&1;
   if ($4589) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 533;
    break;
   }
   break;
  }
  case 614: {
   $5118 = ___cxa_find_matching_catch()|0;
   $5119 = tempRet0;
   $2 = $5118;
   $3 = $5119;
   label = 617;
   break;
  }
  case 615: {
   $5120 = ___cxa_find_matching_catch()|0;
   $5121 = tempRet0;
   $2 = $5120;
   $3 = $5121;
   __THREW__ = 0;
   invoke_vi(366,($vfree71|0));
   $5122 = __THREW__; __THREW__ = 0;
   $5123 = $5122&1;
   if ($5123) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 617;
    break;
   }
   break;
  }
  case 704: {
   $5724 = ___cxa_find_matching_catch()|0;
   $5725 = tempRet0;
   $2 = $5724;
   $3 = $5725;
   label = 707;
   break;
  }
  case 705: {
   $5726 = ___cxa_find_matching_catch()|0;
   $5727 = tempRet0;
   $2 = $5726;
   $3 = $5727;
   __THREW__ = 0;
   invoke_vi(366,($vfree81|0));
   $5728 = __THREW__; __THREW__ = 0;
   $5729 = $5728&1;
   if ($5729) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 707;
    break;
   }
   break;
  }
  case 782: {
   $6302 = ___cxa_find_matching_catch()|0;
   $6303 = tempRet0;
   $2 = $6302;
   $3 = $6303;
   label = 785;
   break;
  }
  case 783: {
   $6304 = ___cxa_find_matching_catch()|0;
   $6305 = tempRet0;
   $2 = $6304;
   $3 = $6305;
   __THREW__ = 0;
   invoke_vi(366,($vfree90|0));
   $6306 = __THREW__; __THREW__ = 0;
   $6307 = $6306&1;
   if ($6307) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 785;
    break;
   }
   break;
  }
  case 858: {
   $6829 = ___cxa_find_matching_catch()|0;
   $6830 = tempRet0;
   $2 = $6829;
   $3 = $6830;
   label = 861;
   break;
  }
  case 859: {
   $6831 = ___cxa_find_matching_catch()|0;
   $6832 = tempRet0;
   $2 = $6831;
   $3 = $6832;
   __THREW__ = 0;
   invoke_vi(366,($vfree99|0));
   $6833 = __THREW__; __THREW__ = 0;
   $6834 = $6833&1;
   if ($6834) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 861;
    break;
   }
   break;
  }
  case 979: {
   $8229 = ___cxa_find_matching_catch()|0;
   $8230 = tempRet0;
   $2 = $8229;
   $3 = $8230;
   label = 982;
   break;
  }
  case 980: {
   $8231 = ___cxa_find_matching_catch()|0;
   $8232 = tempRet0;
   $2 = $8231;
   $3 = $8232;
   __THREW__ = 0;
   invoke_vi(366,($vfree120|0));
   $8233 = __THREW__; __THREW__ = 0;
   $8234 = $8233&1;
   if ($8234) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 982;
    break;
   }
   break;
  }
  case 1063: {
   $8826 = ___cxa_find_matching_catch()|0;
   $8827 = tempRet0;
   $2 = $8826;
   $3 = $8827;
   label = 1066;
   break;
  }
  case 1064: {
   $8828 = ___cxa_find_matching_catch()|0;
   $8829 = tempRet0;
   $2 = $8828;
   $3 = $8829;
   __THREW__ = 0;
   invoke_vi(366,($vfree130|0));
   $8830 = __THREW__; __THREW__ = 0;
   $8831 = $8830&1;
   if ($8831) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 1066;
    break;
   }
   break;
  }
  case 1147: {
   $9358 = ___cxa_find_matching_catch()|0;
   $9359 = tempRet0;
   $2 = $9358;
   $3 = $9359;
   label = 1150;
   break;
  }
  case 1148: {
   $9360 = ___cxa_find_matching_catch()|0;
   $9361 = tempRet0;
   $2 = $9360;
   $3 = $9361;
   __THREW__ = 0;
   invoke_vi(366,($vfree140|0));
   $9362 = __THREW__; __THREW__ = 0;
   $9363 = $9362&1;
   if ($9363) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 1150;
    break;
   }
   break;
  }
  case 1231: {
   $9892 = ___cxa_find_matching_catch()|0;
   $9893 = tempRet0;
   $2 = $9892;
   $3 = $9893;
   label = 1234;
   break;
  }
  case 1232: {
   $9894 = ___cxa_find_matching_catch()|0;
   $9895 = tempRet0;
   $2 = $9894;
   $3 = $9895;
   __THREW__ = 0;
   invoke_vi(366,($vfree150|0));
   $9896 = __THREW__; __THREW__ = 0;
   $9897 = $9896&1;
   if ($9897) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 1234;
    break;
   }
   break;
  }
  case 1321: {
   $10498 = ___cxa_find_matching_catch()|0;
   $10499 = tempRet0;
   $2 = $10498;
   $3 = $10499;
   label = 1324;
   break;
  }
  case 1322: {
   $10500 = ___cxa_find_matching_catch()|0;
   $10501 = tempRet0;
   $2 = $10500;
   $3 = $10501;
   __THREW__ = 0;
   invoke_vi(366,($vfree160|0));
   $10502 = __THREW__; __THREW__ = 0;
   $10503 = $10502&1;
   if ($10503) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 1324;
    break;
   }
   break;
  }
  case 1399: {
   $11076 = ___cxa_find_matching_catch()|0;
   $11077 = tempRet0;
   $2 = $11076;
   $3 = $11077;
   label = 1402;
   break;
  }
  case 1400: {
   $11078 = ___cxa_find_matching_catch()|0;
   $11079 = tempRet0;
   $2 = $11078;
   $3 = $11079;
   __THREW__ = 0;
   invoke_vi(366,($vfree169|0));
   $11080 = __THREW__; __THREW__ = 0;
   $11081 = $11080&1;
   if ($11081) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 1402;
    break;
   }
   break;
  }
  case 1475: {
   $11603 = ___cxa_find_matching_catch()|0;
   $11604 = tempRet0;
   $2 = $11603;
   $3 = $11604;
   label = 1478;
   break;
  }
  case 1476: {
   $11605 = ___cxa_find_matching_catch()|0;
   $11606 = tempRet0;
   $2 = $11605;
   $3 = $11606;
   __THREW__ = 0;
   invoke_vi(366,($vfree178|0));
   $11607 = __THREW__; __THREW__ = 0;
   $11608 = $11607&1;
   if ($11608) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   } else {
    label = 1478;
    break;
   }
   break;
  }
  case 1488: {
   STACKTOP = sp;return;
   break;
  }
 }
 switch (label|0) {
  case 125: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos|0));
   $1315 = __THREW__; __THREW__ = 0;
   $1316 = $1315&1;
   if ($1316) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 233: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos19|0));
   $1985 = __THREW__; __THREW__ = 0;
   $1986 = $1985&1;
   if ($1986) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 365: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos40|0));
   $3461 = __THREW__; __THREW__ = 0;
   $3462 = $3461&1;
   if ($3462) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 449: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos50|0));
   $4058 = __THREW__; __THREW__ = 0;
   $4059 = $4058&1;
   if ($4059) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 533: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos60|0));
   $4590 = __THREW__; __THREW__ = 0;
   $4591 = $4590&1;
   if ($4591) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 617: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos70|0));
   $5124 = __THREW__; __THREW__ = 0;
   $5125 = $5124&1;
   if ($5125) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 707: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos80|0));
   $5730 = __THREW__; __THREW__ = 0;
   $5731 = $5730&1;
   if ($5731) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 785: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos89|0));
   $6308 = __THREW__; __THREW__ = 0;
   $6309 = $6308&1;
   if ($6309) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 861: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos98|0));
   $6835 = __THREW__; __THREW__ = 0;
   $6836 = $6835&1;
   if ($6836) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 982: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos119|0));
   $8235 = __THREW__; __THREW__ = 0;
   $8236 = $8235&1;
   if ($8236) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 1066: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos129|0));
   $8832 = __THREW__; __THREW__ = 0;
   $8833 = $8832&1;
   if ($8833) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 1150: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos139|0));
   $9364 = __THREW__; __THREW__ = 0;
   $9365 = $9364&1;
   if ($9365) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 1234: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos149|0));
   $9898 = __THREW__; __THREW__ = 0;
   $9899 = $9898&1;
   if ($9899) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 1324: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos159|0));
   $10504 = __THREW__; __THREW__ = 0;
   $10505 = $10504&1;
   if ($10505) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 1402: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos168|0));
   $11082 = __THREW__; __THREW__ = 0;
   $11083 = $11082&1;
   if ($11083) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
  case 1478: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos177|0));
   $11609 = __THREW__; __THREW__ = 0;
   $11610 = $11609&1;
   if ($11610) {
    $11619 = ___cxa_find_matching_catch(0|0)|0;
    $11620 = tempRet0;
    ___clang_call_terminate($11619);
    // unreachable;
   }
   $11617 = $2;
   $11618 = $3;
   ___resumeException($11617|0);
   // unreachable;
   break;
  }
 }
}
function __ZN6ikfast18IkSolutionListBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (832 + 8|0);
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 $0 = $this;
 $4 = $0;
 $5 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $5;
 $6 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($1)|0);
 HEAP32[$4>>2] = $6;
 $7 = (($4) + 4|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($2)|0);
 HEAP32[$7>>2] = $9;
 $10 = (($4) + 8|0);
 $11 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $11;
 $12 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($3)|0);
 __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEEC2ES1_($10,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($2)|0);
 $5 = ($3>>>0)>($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2);
  // unreachable;
 } else {
  $6 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
  $7 = $1;
  $8 = (__ZNSt3__116allocator_traitsINS_9allocatorIdEEE8allocateERS2_j($6,$7)|0);
  $9 = (($2) + 4|0);
  HEAP32[$9>>2] = $8;
  HEAP32[$2>>2] = $8;
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = (($10) + ($11<<3)|0);
  $13 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($2)|0);
  HEAP32[$13>>2] = $12;
  __ZNKSt3__16vectorIdNS_9allocatorIdEEE14__annotate_newEj($2,0);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $4 = $__a;
  $5 = (($2) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9constructIdEEvRS2_PT_($4,$7);
  $8 = (($2) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 8|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $4;
 $5 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($1)|0);
 $6 = ($3|0)!=($5|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE5clearEv($2);
 $7 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE8capacityEv($2)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10deallocateERS2_Pdj($7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($agg$result,$1);
 STACKTOP = sp;return;
}
function __ZNSt3__17advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeE($__i,$__n) {
 $__i = $__i|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__i;
 $1 = $__n;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__19__advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeENS_26bidirectional_iterator_tagE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEdeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 8|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $vinfos;
 $2 = $vfree;
 $5 = $0;
 __ZN6ikfast14IkSolutionBaseIdEC2Ev($5);
 $6 = (528 + 8|0);
 HEAP32[$5>>2] = $6;
 $7 = (($5) + 4|0);
 __THREW__ = 0;
 invoke_vi(383,($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 do {
  if ($9) {
   $21 = ___cxa_find_matching_catch()|0;
   $22 = tempRet0;
   $3 = $21;
   $4 = $22;
  } else {
   $10 = (($5) + 16|0);
   __THREW__ = 0;
   invoke_vi(384,($10|0));
   $11 = __THREW__; __THREW__ = 0;
   $12 = $11&1;
   do {
    if ($12) {
     $23 = ___cxa_find_matching_catch()|0;
     $24 = tempRet0;
     $3 = $23;
     $4 = $24;
    } else {
     $13 = (($5) + 4|0);
     $14 = $1;
     __THREW__ = 0;
     (invoke_iii(385,($13|0),($14|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      $17 = (($5) + 16|0);
      $18 = $2;
      __THREW__ = 0;
      (invoke_iii(386,($17|0),($18|0))|0);
      $19 = __THREW__; __THREW__ = 0;
      $20 = $19&1;
      if (!($20)) {
       STACKTOP = sp;return;
      }
     }
     $25 = ___cxa_find_matching_catch()|0;
     $26 = tempRet0;
     $3 = $25;
     $4 = $26;
     __THREW__ = 0;
     invoke_vi(366,($10|0));
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if ($28) {
      $35 = ___cxa_find_matching_catch(0|0)|0;
      $36 = tempRet0;
      ___clang_call_terminate($35);
      // unreachable;
     } else {
      break;
     }
    }
   } while(0);
   __THREW__ = 0;
   invoke_vi(367,($7|0));
   $29 = __THREW__; __THREW__ = 0;
   $30 = $29&1;
   if ($30) {
    $35 = ___cxa_find_matching_catch(0|0)|0;
    $36 = tempRet0;
    ___clang_call_terminate($35);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(15,($5|0));
 $31 = __THREW__; __THREW__ = 0;
 $32 = $31&1;
 if ($32) {
  $35 = ___cxa_find_matching_catch(0|0)|0;
  $36 = tempRet0;
  ___clang_call_terminate($35);
  // unreachable;
 }
 $33 = $3;
 $34 = $4;
 ___resumeException($33|0);
 // unreachable;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hold = 0, $__na = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 40|0;
 $__hold = sp + 16|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__x;
 $5 = $0;
 $6 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE12__node_allocEv($5)|0);
 $__na = $6;
 $7 = $__na;
 $8 = (__ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE8allocateERS8_j($7,1)|0);
 $9 = $__na;
 __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2ERS8_j($2,$9,1);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2EPS6_SA_($__hold,$8,$$byval_copy);
 $10 = $__na;
 $11 = (__ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEptEv($__hold)|0);
 $12 = (($11) + 8|0);
 $13 = (__ZNSt3__19addressofIN6ikfast10IkSolutionIdEEEEPT_RS4_($12)|0);
 $14 = $1;
 __THREW__ = 0;
 invoke_viii(387,($10|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if (!($16)) {
  $17 = (__ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE3getEv($__hold)|0);
  $18 = (__ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE3getEv($__hold)|0);
  __THREW__ = 0;
  invoke_viii(388,($5|0),($17|0),($18|0));
  $19 = __THREW__; __THREW__ = 0;
  $20 = $19&1;
  if (!($20)) {
   $21 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($5)|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = (($22) + 1)|0;
   HEAP32[$21>>2] = $23;
   (__ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE7releaseEv($__hold)|0);
   __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEED2Ev($__hold);
   STACKTOP = sp;return;
  }
 }
 $24 = ___cxa_find_matching_catch()|0;
 $25 = tempRet0;
 $3 = $24;
 $4 = $25;
 __THREW__ = 0;
 invoke_vi(389,($__hold|0));
 $26 = __THREW__; __THREW__ = 0;
 $27 = $26&1;
 if ($27) {
  $30 = ___cxa_find_matching_catch(0|0)|0;
  $31 = tempRet0;
  ___clang_call_terminate($30);
  // unreachable;
 }
 $28 = $3;
 $29 = $4;
 ___resumeException($28|0);
 // unreachable;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + (($3*24)|0)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__sz;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $__cs = $3;
 $4 = $__cs;
 $5 = $1;
 $6 = ($4>>>0)<($5>>>0);
 if ($6) {
  $7 = $1;
  $8 = $__cs;
  $9 = (($7) - ($8))|0;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($2,$9);
  STACKTOP = sp;return;
 }
 $10 = $__cs;
 $11 = $1;
 $12 = ($10>>>0)>($11>>>0);
 if ($12) {
  $13 = HEAP32[$2>>2]|0;
  $14 = $1;
  $15 = (($13) + ($14<<3)|0);
  __ZNSt3__16vectorIdNS_9allocatorIdEEE17__destruct_at_endEPd($2,$15);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $5 = ($3>>>0)>=($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($2);
  // unreachable;
 } else {
  $6 = $1;
  $7 = HEAP32[$2>>2]|0;
  $8 = (($7) + ($6<<3)|0);
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $5 = ($3>>>0)>=($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($2);
  // unreachable;
 } else {
  $6 = $1;
  $7 = HEAP32[$2>>2]|0;
  $8 = (($7) + ($6<<3)|0);
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __Z8isfiniteIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0.0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $1 = $0;
 $2 = (__Z17__libcpp_isfiniteIdEbT_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__sz;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($2)|0);
 $__cs = $3;
 $4 = $__cs;
 $5 = $1;
 $6 = ($4>>>0)<($5>>>0);
 if ($6) {
  $7 = $1;
  $8 = $__cs;
  $9 = (($7) - ($8))|0;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($2,$9);
  STACKTOP = sp;return;
 }
 $10 = $__cs;
 $11 = $1;
 $12 = ($10>>>0)>($11>>>0);
 if ($12) {
  $13 = HEAP32[$2>>2]|0;
  $14 = $1;
  $15 = (($13) + ($14<<2)|0);
  __ZNSt3__16vectorIjNS_9allocatorIjEEE17__destruct_at_endEPj($2,$15);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE9push_backERKj($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 8|0;
 $0 = $this;
 $1 = $__x;
 $2 = $0;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($2)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)!=($6|0);
 if ($7) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $8 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($2)|0);
  $9 = (($2) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($10)|0);
  $12 = $1;
  __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjjEEvRS2_PT_RKT0_($8,$11,$12);
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = (($2) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) + 4|0);
  HEAP32[$13>>2] = $15;
  STACKTOP = sp;return;
 } else {
  $16 = $1;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($2,$16);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + ($3<<2)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $vtt;
 $4 = $0;
 $5 = $1;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$4>>2] = $6;
 $7 = (($5) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$4>>2]|0;
 $10 = (($9) + -12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($4) + ($11)|0);
 HEAP32[$12>>2] = $8;
 $13 = (($5) + 36|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($4) + 8|0);
 HEAP32[$15>>2] = $14;
 $16 = (($4) + 12|0);
 __THREW__ = 0;
 invoke_vi(41,($16|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if (!($18)) {
  STACKTOP = sp;return;
 }
 $19 = ___cxa_find_matching_catch()|0;
 $20 = tempRet0;
 $2 = $19;
 $3 = $20;
 __THREW__ = 0;
 $21 = __THREW__; __THREW__ = 0;
 $22 = $21&1;
 if ($22) {
  $25 = ___cxa_find_matching_catch(0|0)|0;
  $26 = tempRet0;
  ___clang_call_terminate($25);
  // unreachable;
 }
 $23 = $2;
 $24 = $3;
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__14fposI11__mbstate_tEC2Ex($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp;
 $2 = $this;
 $4 = $3;
 $5 = $4;
 HEAP32[$5>>2] = $0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = $1;
 $8 = $2;
 ;HEAP32[$8+0>>2]=0|0;HEAP32[$8+4>>2]=0|0;
 $9 = (($8) + 8|0);
 $10 = $3;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = (($10) + 4)|0;
 $14 = $13;
 $15 = HEAP32[$14>>2]|0;
 $16 = $9;
 $17 = $16;
 HEAP32[$17>>2] = $12;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = $15;
 STACKTOP = sp;return;
}
function __ZNKSt3__14fposI11__mbstate_tEcvxEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 tempRet0 = $8;
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__111char_traitsIcE11to_int_typeEc($__c) {
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c;
 $1 = $0;
 $2 = $1&255;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__111char_traitsIcE3eofEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__111char_traitsIcE11eq_int_typeEii($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)==($3|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__111char_traitsIcE7not_eofEi($__c) {
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c;
 $1 = $0;
 $2 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $3 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($1,$2)|0);
 if ($3) {
  $4 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
  $5 = $4 ^ -1;
  $7 = $5;
  STACKTOP = sp;return ($7|0);
 } else {
  $6 = $0;
  $7 = $6;
  STACKTOP = sp;return ($7|0);
 }
 return (0)|0;
}
function __ZNSt3__111char_traitsIcE12to_char_typeEi($__c) {
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c;
 $1 = $0;
 $2 = $1&255;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__111char_traitsIcE2eqEcc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $0;
 $3 = $2 << 24 >> 24;
 $4 = $1;
 $5 = $4 << 24 >> 24;
 $6 = ($3|0)==($5|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__13maxIPcEERKT_S4_S4_($__a,$__b) {
 $__a = $__a|0;
 $__b = $__b|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__b;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__13maxIPcNS_6__lessIS1_S1_EEEERKT_S6_S6_T0_($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__123__libcpp_numeric_limitsIdLb1EE9quiet_NaNEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return +nan;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($this,$__wch) {
 $this = $this|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__wch;
 $4 = $0;
 $5 = (($4) + 64|0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEEC2Ev($5);
 $6 = (992 + 12|0);
 HEAP32[$4>>2] = $6;
 $7 = (($4) + 64|0);
 $8 = (992 + 52|0);
 HEAP32[$7>>2] = $8;
 $9 = (($4) + 8|0);
 $10 = (992 + 32|0);
 HEAP32[$9>>2] = $10;
 $11 = (($4) + 12|0);
 __THREW__ = 0;
 $12 = (1056 + 4|0);
 invoke_viii(390,($4|0),($12|0),($11|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 do {
  if ($14) {
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   $2 = $24;
   $3 = $25;
  } else {
   $15 = (992 + 12|0);
   HEAP32[$4>>2] = $15;
   $16 = (($4) + 64|0);
   $17 = (992 + 52|0);
   HEAP32[$16>>2] = $17;
   $18 = (($4) + 8|0);
   $19 = (992 + 32|0);
   HEAP32[$18>>2] = $19;
   $20 = (($4) + 12|0);
   $21 = $1;
   __THREW__ = 0;
   invoke_vii(391,($20|0),($21|0));
   $22 = __THREW__; __THREW__ = 0;
   $23 = $22&1;
   if (!($23)) {
    STACKTOP = sp;return;
   }
   $26 = ___cxa_find_matching_catch()|0;
   $27 = tempRet0;
   $2 = $26;
   $3 = $27;
   __THREW__ = 0;
   $28 = __THREW__; __THREW__ = 0;
   $29 = $28&1;
   if ($29) {
    $35 = ___cxa_find_matching_catch(0|0)|0;
    $36 = tempRet0;
    ___clang_call_terminate($35);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 $30 = (($4) + 64|0);
 __THREW__ = 0;
 invoke_vi(87,($30|0));
 $31 = __THREW__; __THREW__ = 0;
 $32 = $31&1;
 if ($32) {
  $35 = ___cxa_find_matching_catch(0|0)|0;
  $36 = tempRet0;
  ___clang_call_terminate($35);
  // unreachable;
 }
 $33 = $2;
 $34 = $3;
 ___resumeException($33|0);
 // unreachable;
}
function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($__os,$__str) {
 $__os = $__os|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__os;
 $1 = $__str;
 $2 = $0;
 $3 = $1;
 $4 = $1;
 $5 = (__ZNSt3__111char_traitsIcE6lengthEPKc($4)|0);
 $6 = (__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($2,$3,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$2);
 STACKTOP = sp;return;
}
function __Z14__libcpp_isnanIdEbT_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $3 = $0;
 __THREW__ = 0;
 $4 = (invoke_id(392,(+$3))|0);
 $5 = tempRet0;
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  $8 = $5 & 2147483647;
  $9 = ($8>>>0)>(2146435072);
  $10 = ($4>>>0)>(0);
  $11 = ($8|0)==(2146435072);
  $12 = $11 & $10;
  $13 = $9 | $12;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $1 = $14;
 $2 = $15;
 $16 = $1;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __Z13IKatan2Simpledd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0.0, $4 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $fy;
 $1 = $fx;
 $2 = $0;
 $3 = $1;
 $4 = (+Math_atan2((+$2),(+$3)));
 STACKTOP = sp;return (+$4);
}
function __Z5IKsqrd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = $0;
 $3 = $1 * $2;
 STACKTOP = sp;return (+$3);
}
function __Z7IKatan2dd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0.0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0;
 var $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ss = sp + 48|0;
 $5 = sp + 24|0;
 $6 = sp + 192|0;
 $1 = $fy;
 $2 = $fx;
 $7 = $1;
 $8 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($7)|0);
 if (!($8)) {
  $56 = $2;
  $57 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($56)|0);
  if ($57) {
   $0 = 0.0;
   $61 = $0;
   STACKTOP = sp;return (+$61);
  }
  $58 = $1;
  $59 = $2;
  $60 = (+Math_atan2((+$58),(+$59)));
  $0 = $60;
  $61 = $0;
  STACKTOP = sp;return (+$61);
 }
 $9 = $2;
 $10 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($9)|0);
 if (!($10)) {
  $0 = 1.5707963267949001;
  $61 = $0;
  STACKTOP = sp;return (+$61);
 }
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($ss,24);
 $11 = (($ss) + 8|0);
 __THREW__ = 0;
 $12 = (invoke_iii(376,($11|0),(864|0))|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  label = 15;
 } else {
  __THREW__ = 0;
  $15 = (invoke_iii(376,($12|0),(888|0))|0);
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if ($17) {
   label = 15;
  } else {
   __THREW__ = 0;
   $18 = (invoke_iii(376,($15|0),(928|0))|0);
   $19 = __THREW__; __THREW__ = 0;
   $20 = $19&1;
   if ($20) {
    label = 15;
   } else {
    __THREW__ = 0;
    $21 = (invoke_iii(377,($18|0),194)|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 15;
    } else {
     __THREW__ = 0;
     $24 = (invoke_iii(376,($21|0),(14728|0))|0);
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if ($26) {
      label = 15;
     } else {
      __THREW__ = 0;
      $27 = (invoke_iii(376,($24|0),(936|0))|0);
      $28 = __THREW__; __THREW__ = 0;
      $29 = $28&1;
      if ($29) {
       label = 15;
      } else {
       __THREW__ = 0;
       $30 = (invoke_iii(376,($27|0),(944|0))|0);
       $31 = __THREW__; __THREW__ = 0;
       $32 = $31&1;
       if ($32) {
        label = 15;
       } else {
        __THREW__ = 0;
        $33 = (invoke_iii(376,($30|0),(960|0))|0);
        $34 = __THREW__; __THREW__ = 0;
        $35 = $34&1;
        if ($35) {
         label = 15;
        } else {
         __THREW__ = 0;
         (invoke_iii(376,($33|0),(976|0))|0);
         $36 = __THREW__; __THREW__ = 0;
         $37 = $36&1;
         if ($37) {
          label = 15;
         } else {
          $38 = (___cxa_allocate_exception(8)|0);
          $$expand_i1_val = 1;
          HEAP8[$6>>0] = $$expand_i1_val;
          __THREW__ = 0;
          invoke_vii(378,($5|0),($ss|0));
          $39 = __THREW__; __THREW__ = 0;
          $40 = $39&1;
          do {
           if ($40) {
            $47 = ___cxa_find_matching_catch()|0;
            $48 = tempRet0;
            $3 = $47;
            $4 = $48;
           } else {
            __THREW__ = 0;
            invoke_vii(379,($38|0),($5|0));
            $41 = __THREW__; __THREW__ = 0;
            $42 = $41&1;
            if (!($42)) {
             $$expand_i1_val2 = 0;
             HEAP8[$6>>0] = $$expand_i1_val2;
             __THREW__ = 0;
             invoke_viii(380,($38|0),(2576|0),(62|0));
             $43 = __THREW__; __THREW__ = 0;
             $44 = $43&1;
             if (!($44)) {
              // unreachable;
             }
            }
            $49 = ___cxa_find_matching_catch()|0;
            $50 = tempRet0;
            $3 = $49;
            $4 = $50;
            __THREW__ = 0;
            invoke_vi(369,($5|0));
            $51 = __THREW__; __THREW__ = 0;
            $52 = $51&1;
            if ($52) {
             $64 = ___cxa_find_matching_catch(0|0)|0;
             $65 = tempRet0;
             ___clang_call_terminate($64);
             // unreachable;
            } else {
             break;
            }
           }
          } while(0);
          $$pre_trunc = HEAP8[$6>>0]|0;
          $53 = $$pre_trunc&1;
          if ($53) {
           ___cxa_free_exception(($38|0));
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 if ((label|0) == 15) {
  $45 = ___cxa_find_matching_catch()|0;
  $46 = tempRet0;
  $3 = $45;
  $4 = $46;
 }
 __THREW__ = 0;
 invoke_vi(21,($ss|0));
 $54 = __THREW__; __THREW__ = 0;
 $55 = $54&1;
 if ($55) {
  $64 = ___cxa_find_matching_catch(0|0)|0;
  $65 = tempRet0;
  ___clang_call_terminate($64);
  // unreachable;
 }
 $62 = $3;
 $63 = $4;
 ___resumeException($62|0);
 // unreachable;
 return +(0.0);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($4);
 $5 = $1;
 $6 = ($5>>>0)>(0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $1;
 __THREW__ = 0;
 invoke_vii(393,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  $10 = $1;
  __THREW__ = 0;
  invoke_vii(394,($4|0),($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 __THREW__ = 0;
 invoke_vi(395,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 }
 $17 = $2;
 $18 = $3;
 ___resumeException($17|0);
 // unreachable;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + (($3*24)|0)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev($4);
 $5 = $1;
 $6 = ($5>>>0)>(0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $1;
 __THREW__ = 0;
 invoke_vii(396,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  $10 = $1;
  __THREW__ = 0;
  invoke_vii(397,($4|0),($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 __THREW__ = 0;
 invoke_vi(398,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 }
 $17 = $2;
 $18 = $3;
 ___resumeException($17|0);
 // unreachable;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvEC2Ev($1);
 $2 = (($1) + 8|0);
 __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2Ej($2,0);
 STACKTOP = sp;return;
}
function __ZNSt3__115__get_nullptr_tEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 __ZNSt3__19nullptr_tC2EMNS0_5__natEi($0,-1);
 $1 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19nullptr_tcvPT_IdEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EEC2ES1_($2,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIdEEE8max_sizeERKS2_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(399,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $3 = $14;
 $4 = $15;
 $16 = $3;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIdE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<3)|0);
 $7 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($2)|0);
 $9 = (($7) + ($8<<3)|0);
 $10 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + ($11<<3)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__116__to_raw_pointerIdEEPT_S2_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9constructIdEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  HEAPF64[$2>>3] = 0.0;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE17__destruct_at_endEPd($1,$2);
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 8)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10deallocateERS2_Pdj($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIdE10deallocateEPdj($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEC2EPNS_11__list_nodeIS3_S4_EE($agg$result,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__19__advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeENS_26bidirectional_iterator_tagE($__i,$__n,$0) {
 $__i = $__i|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__i;
 $2 = $__n;
 $3 = $2;
 $4 = ($3|0)>=(0);
 if ($4) {
  while(1) {
   $5 = $2;
   $6 = ($5|0)>(0);
   if (!($6)) {
    break;
   }
   $7 = $1;
   (__ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEppEv($7)|0);
   $8 = $2;
   $9 = (($8) + -1)|0;
   $2 = $9;
  }
  STACKTOP = sp;return;
 } else {
  while(1) {
   $10 = $2;
   $11 = ($10|0)<(0);
   if (!($11)) {
    break;
   }
   $12 = $1;
   (__ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEmmEv($12)|0);
   $13 = $2;
   $14 = (($13) + 1)|0;
   $2 = $14;
  }
  STACKTOP = sp;return;
 }
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($1);
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (800 + 8|0);
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEaSERKS6_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)!=($3|0);
 if (!($4)) {
  STACKTOP = sp;return ($2|0);
 }
 $5 = $1;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_($2,$5);
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = $1;
 $9 = (($8) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($2,$7,$10);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEaSERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)!=($3|0);
 if (!($4)) {
  STACKTOP = sp;return ($2|0);
 }
 $5 = $1;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_($2,$5);
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = $1;
 $9 = (($8) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($2,$7,$10);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE12__node_allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE8allocateERS8_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2ERS8_j($this,$__a,$__s) {
 $this = $this|0;
 $__a = $__a|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__a;
 $2 = $__s;
 $3 = $0;
 $4 = $1;
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 4|0);
 $6 = $2;
 HEAP32[$5>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2EPS6_SA_($this,$__p,$__d) {
 $this = $this|0;
 $__p = $__p|0;
 $__d = $__d|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 16|0;
 $1 = sp + 8|0;
 $2 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__p;
 $3 = $0;
 $4 = (__ZNSt3__14moveIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_S9_($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNSt3__14moveINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_SC_($__d)|0);
 ;HEAP32[$2+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$2+4>>2]=HEAP32[$6+4>>2]|0;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2ES7_SB_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEptEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19addressofIN6ikfast10IkSolutionIdEEEEPT_RS4_($__x) {
 $__x = $__x|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__x;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9constructIS5_S5_EEvRS8_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = ($3|0)==(0|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = $2;
 __ZN6ikfast10IkSolutionIdEC2ERKS1_($3,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE3getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE20__link_nodes_at_backEPNS_11__list_nodeIS3_PvEESA_($this,$__f,$__l) {
 $this = $this|0;
 $__f = $__f|0;
 $__l = $__l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__f;
 $2 = $__l;
 $3 = $0;
 $4 = (__ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($3)|0);
 $5 = $2;
 $6 = (($5) + 4|0);
 HEAP32[$6>>2] = $4;
 $7 = HEAP32[$3>>2]|0;
 $8 = $1;
 HEAP32[$8>>2] = $7;
 $9 = $1;
 $10 = $1;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 4|0);
 HEAP32[$12>>2] = $9;
 $13 = $2;
 HEAP32[$3>>2] = $13;
 STACKTOP = sp;return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE7releaseEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $__t = $3;
 $4 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 HEAP32[$4>>2] = 0;
 $5 = $__t;
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5resetEPS6_($1,0);
 STACKTOP = sp;return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__f = 0, $__l = 0, $__n = 0, $__na = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5emptyEv($3)|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE12__node_allocEv($3)|0);
 $__na = $5;
 $6 = (($3) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $__f = $7;
 $8 = (__ZNSt3__114pointer_traitsIPNS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEE10pointer_toERS6_($3)|0);
 $__l = $8;
 $9 = $__f;
 $10 = $__l;
 $11 = HEAP32[$10>>2]|0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE14__unlink_nodesEPNS_11__list_nodeIS3_PvEESA_($9,$11);
 $12 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($3)|0);
 HEAP32[$12>>2] = 0;
 while(1) {
  $13 = $__f;
  $14 = $__l;
  $15 = ($13|0)!=($14|0);
  if (!($15)) {
   label = 8;
   break;
  }
  $16 = $__f;
  $__n = $16;
  $17 = $__f;
  $18 = (($17) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  $__f = $19;
  $20 = $__na;
  $21 = $__n;
  $22 = (($21) + 8|0);
  $23 = (__ZNSt3__19addressofIN6ikfast10IkSolutionIdEEEEPT_RS4_($22)|0);
  __THREW__ = 0;
  invoke_vii(400,($20|0),($23|0));
  $24 = __THREW__; __THREW__ = 0;
  $25 = $24&1;
  if ($25) {
   label = 6;
   break;
  }
  $26 = $__na;
  $27 = $__n;
  __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE10deallocateERS8_PS7_j($26,$27,1);
 }
 if ((label|0) == 6) {
  $28 = ___cxa_find_matching_catch()|0;
  $29 = tempRet0;
  $1 = $28;
  $2 = $29;
  $30 = $1;
  ___cxa_call_unexpected(($30|0));
  // unreachable;
 }
 else if ((label|0) == 8) {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $4;
 $5 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($1)|0);
 $6 = ($3|0)!=($5|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv($2);
 $7 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv($2)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pij($7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $4;
 $5 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($1)|0);
 $6 = ($3|0)!=($5|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($2);
 $7 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10deallocateERS5_PS4_j($7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp + 8|0;
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 $5 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $6;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11|0) / 8)&-1;
 $13 = $1;
 $14 = ($12>>>0)>=($13>>>0);
 if ($14) {
  $15 = $1;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($4,$15);
  STACKTOP = sp;return;
 }
 $16 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($4)|0);
 $__a = $16;
 $17 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($4)|0);
 $18 = $1;
 $19 = (($17) + ($18))|0;
 $20 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE11__recommendEj($4,$19)|0);
 $21 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($4)|0);
 $22 = $__a;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($__v,$20,$21,$22);
 $23 = $1;
 __THREW__ = 0;
 invoke_vii(401,($__v|0),($23|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if (!($25)) {
  __THREW__ = 0;
  invoke_vii(402,($4|0),($__v|0));
  $26 = __THREW__; __THREW__ = 0;
  $27 = $26&1;
  if (!($27)) {
   __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($__v);
   STACKTOP = sp;return;
  }
 }
 $28 = ___cxa_find_matching_catch()|0;
 $29 = tempRet0;
 $2 = $28;
 $3 = $29;
 __THREW__ = 0;
 invoke_vi(403,($__v|0));
 $30 = __THREW__; __THREW__ = 0;
 $31 = $30&1;
 if ($31) {
  $34 = ___cxa_find_matching_catch(0|0)|0;
  $35 = tempRet0;
  ___clang_call_terminate($34);
  // unreachable;
 }
 $32 = $2;
 $33 = $3;
 ___resumeException($32|0);
 // unreachable;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE17__destruct_at_endEPd($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE17__destruct_at_endEPd($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(404,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $2 = $10;
 $3 = $11;
 $12 = $2;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __Z17__libcpp_isfiniteIdEbT_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $3 = $0;
 __THREW__ = 0;
 $4 = (invoke_id(392,(+$3))|0);
 $5 = tempRet0;
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  $8 = $5 & 2147483647;
  $9 = ($8>>>0)<(2146435072);
  $10 = ($4>>>0)<(0);
  $11 = ($8|0)==(2146435072);
  $12 = $11 & $10;
  $13 = $9 | $12;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $1 = $14;
 $2 = $15;
 $16 = $1;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp + 8|0;
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 $5 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $6;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11|0) / 4)&-1;
 $13 = $1;
 $14 = ($12>>>0)>=($13>>>0);
 if ($14) {
  $15 = $1;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($4,$15);
  STACKTOP = sp;return;
 }
 $16 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($4)|0);
 $__a = $16;
 $17 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $18 = $1;
 $19 = (($17) + ($18))|0;
 $20 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE11__recommendEj($4,$19)|0);
 $21 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $22 = $__a;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$20,$21,$22);
 $23 = $1;
 __THREW__ = 0;
 invoke_vii(405,($__v|0),($23|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if (!($25)) {
  __THREW__ = 0;
  invoke_vii(406,($4|0),($__v|0));
  $26 = __THREW__; __THREW__ = 0;
  $27 = $26&1;
  if (!($27)) {
   __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
   STACKTOP = sp;return;
  }
 }
 $28 = ___cxa_find_matching_catch()|0;
 $29 = tempRet0;
 $2 = $28;
 $3 = $29;
 __THREW__ = 0;
 invoke_vi(407,($__v|0));
 $30 = __THREW__; __THREW__ = 0;
 $31 = $30&1;
 if ($31) {
  $34 = ___cxa_find_matching_catch(0|0)|0;
  $35 = tempRet0;
  ___clang_call_terminate($34);
  // unreachable;
 }
 $32 = $2;
 $33 = $3;
 ___resumeException($32|0);
 // unreachable;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE17__destruct_at_endEPj($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE17__destruct_at_endEPj($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(408,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $2 = $10;
 $3 = $11;
 $12 = $2;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116__to_raw_pointerIjEEPT_S2_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjjEEvRS2_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = ($3|0)==(0|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$3>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp + 8|0;
 $0 = $this;
 $1 = $__x;
 $4 = $0;
 $5 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($4)|0);
 $__a = $5;
 $6 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $7 = (($6) + 1)|0;
 $8 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE11__recommendEj($4,$7)|0);
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $10 = $__a;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$8,$9,$10);
 $11 = $__a;
 $12 = (($__v) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($13)|0);
 $15 = $1;
 $16 = (__ZNSt3__17forwardIKjEERT_RNS_16remove_referenceIS2_E4typeE($15)|0);
 __THREW__ = 0;
 invoke_viii(409,($11|0),($14|0),($16|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if (!($18)) {
  $19 = (($__v) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (($20) + 4|0);
  HEAP32[$19>>2] = $21;
  __THREW__ = 0;
  invoke_vii(406,($4|0),($__v|0));
  $22 = __THREW__; __THREW__ = 0;
  $23 = $22&1;
  if (!($23)) {
   __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
   STACKTOP = sp;return;
  }
 }
 $24 = ___cxa_find_matching_catch()|0;
 $25 = tempRet0;
 $2 = $24;
 $3 = $25;
 __THREW__ = 0;
 invoke_vi(407,($__v|0));
 $26 = __THREW__; __THREW__ = 0;
 $27 = $26&1;
 if ($27) {
  $30 = ___cxa_find_matching_catch(0|0)|0;
  $31 = tempRet0;
  ___clang_call_terminate($30);
  // unreachable;
 }
 $28 = $2;
 $29 = $3;
 ___resumeException($28|0);
 // unreachable;
}
function __ZNSt3__13maxIPcNS_6__lessIS1_S1_EEEERKT_S6_S6_T0_($__a,$__b,$__comp) {
 $__a = $__a|0;
 $__b = $__b|0;
 $__comp = $__comp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__b;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16__lessIPcS1_EclERKS1_S4_($__comp,$2,$3)|0);
 if ($4) {
  $5 = $1;
  $7 = $5;
  STACKTOP = sp;return ($7|0);
 } else {
  $6 = $0;
  $7 = $6;
  STACKTOP = sp;return ($7|0);
 }
 return (0)|0;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ej($this,$__wch) {
 $this = $this|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp;
 $0 = $this;
 $1 = $__wch;
 $5 = $0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 $6 = (1328 + 8|0);
 HEAP32[$5>>2] = $6;
 $7 = (($5) + 32|0);
 __THREW__ = 0;
 invoke_vi(410,($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 do {
  if ($9) {
   $19 = ___cxa_find_matching_catch()|0;
   $20 = tempRet0;
   $2 = $19;
   $3 = $20;
  } else {
   $10 = (($5) + 44|0);
   HEAP32[$10>>2] = 0;
   $11 = (($5) + 48|0);
   $12 = $1;
   HEAP32[$11>>2] = $12;
   __THREW__ = 0;
   invoke_vi(410,($4|0));
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   do {
    if ($14) {
     label = 7;
    } else {
     __THREW__ = 0;
     invoke_vii(411,($5|0),($4|0));
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      invoke_vi(369,($4|0));
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if ($18) {
       label = 7;
       break;
      }
      STACKTOP = sp;return;
     }
     $23 = ___cxa_find_matching_catch()|0;
     $24 = tempRet0;
     $2 = $23;
     $3 = $24;
     __THREW__ = 0;
     invoke_vi(369,($4|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if ($26) {
      $33 = ___cxa_find_matching_catch(0|0)|0;
      $34 = tempRet0;
      ___clang_call_terminate($33);
      // unreachable;
     } else {
      break;
     }
    }
   } while(0);
   if ((label|0) == 7) {
    $21 = ___cxa_find_matching_catch()|0;
    $22 = tempRet0;
    $2 = $21;
    $3 = $22;
   }
   __THREW__ = 0;
   invoke_vi(369,($7|0));
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    $33 = ___cxa_find_matching_catch(0|0)|0;
    $34 = tempRet0;
    ___clang_call_terminate($33);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(89,($5|0));
 $29 = __THREW__; __THREW__ = 0;
 $30 = $29&1;
 if ($30) {
  $33 = ___cxa_find_matching_catch(0|0)|0;
  $34 = tempRet0;
  ___clang_call_terminate($33);
  // unreachable;
 }
 $31 = $2;
 $32 = $3;
 ___resumeException($31|0);
 // unreachable;
}
function __ZNSt3__111char_traitsIcE6lengthEPKc($__s) {
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__s;
 $1 = $0;
 $2 = (_strlen(($1|0))|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$__len) {
 $__os = $__os|0;
 $__str = $__str|0;
 $__len = $__len|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 36|0;
 $__s = sp + 16|0;
 $5 = sp + 4|0;
 $6 = sp;
 $0 = $__os;
 $1 = $__str;
 $2 = $__len;
 $7 = $0;
 __THREW__ = 0;
 invoke_vii(412,($__s|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L1: do {
  if ($9) {
   label = 13;
  } else {
   __THREW__ = 0;
   $10 = (invoke_ii(413,($__s|0))|0);
   $11 = __THREW__; __THREW__ = 0;
   $12 = $11&1;
   do {
    if (!($12)) {
     if ($10) {
      $13 = $0;
      __ZNSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEEC2ERNS_13basic_ostreamIcS2_EE($5,$13);
      $14 = $1;
      $15 = $0;
      $16 = HEAP32[$15>>2]|0;
      $17 = (($16) + -12|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (($15) + ($18)|0);
      __THREW__ = 0;
      $20 = (invoke_ii(414,($19|0))|0);
      $21 = __THREW__; __THREW__ = 0;
      $22 = $21&1;
      if ($22) {
       break;
      }
      $23 = $20 & 176;
      $24 = ($23|0)==(32);
      if ($24) {
       $25 = $1;
       $26 = $2;
       $27 = (($25) + ($26)|0);
       $45 = $27;
      } else {
       $28 = $1;
       $45 = $28;
      }
      $29 = $1;
      $30 = $2;
      $31 = (($29) + ($30)|0);
      $32 = $0;
      $33 = HEAP32[$32>>2]|0;
      $34 = (($33) + -12|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = (($32) + ($35)|0);
      $37 = $0;
      $38 = HEAP32[$37>>2]|0;
      $39 = (($38) + -12|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = (($37) + ($40)|0);
      __THREW__ = 0;
      $42 = (invoke_ii(415,($41|0))|0);
      $43 = __THREW__; __THREW__ = 0;
      $44 = $43&1;
      if ($44) {
       break;
      }
      __THREW__ = 0;
      ;HEAP32[$$byval_copy+0>>2]=HEAP32[$5+0>>2]|0;
      invoke_viiiiiii(416,($6|0),($$byval_copy|0),($14|0),($45|0),($31|0),($36|0),($42|0));
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       break;
      }
      $48 = (__ZNKSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEE6failedEv($6)|0);
      if ($48) {
       $49 = $0;
       $50 = HEAP32[$49>>2]|0;
       $51 = (($50) + -12|0);
       $52 = HEAP32[$51>>2]|0;
       $53 = (($49) + ($52)|0);
       __THREW__ = 0;
       invoke_vii(417,($53|0),5);
       $54 = __THREW__; __THREW__ = 0;
       $55 = $54&1;
       if ($55) {
        break;
       }
      }
     }
     __THREW__ = 0;
     invoke_vi(418,($__s|0));
     $62 = __THREW__; __THREW__ = 0;
     $63 = $62&1;
     if ($63) {
      label = 13;
      break L1;
     }
     $72 = $0;
     STACKTOP = sp;return ($72|0);
    }
   } while(0);
   $58 = ___cxa_find_matching_catch(0|0)|0;
   $59 = tempRet0;
   $3 = $58;
   $4 = $59;
   __THREW__ = 0;
   invoke_vi(418,($__s|0));
   $60 = __THREW__; __THREW__ = 0;
   $61 = $60&1;
   if ($61) {
    $79 = ___cxa_find_matching_catch(0|0)|0;
    $80 = tempRet0;
    ___clang_call_terminate($79);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 if ((label|0) == 13) {
  $56 = ___cxa_find_matching_catch(0|0)|0;
  $57 = tempRet0;
  $3 = $56;
  $4 = $57;
 }
 $64 = $3;
 (___cxa_begin_catch(($64|0))|0);
 $65 = $0;
 $66 = HEAP32[$65>>2]|0;
 $67 = (($66) + -12|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = (($65) + ($68)|0);
 __THREW__ = 0;
 invoke_vi(419,($69|0));
 $70 = __THREW__; __THREW__ = 0;
 $71 = $70&1;
 if (!($71)) {
  ___cxa_end_catch();
  $72 = $0;
  STACKTOP = sp;return ($72|0);
 }
 $73 = ___cxa_find_matching_catch()|0;
 $74 = tempRet0;
 $3 = $73;
 $4 = $74;
 __THREW__ = 0;
 invoke_v(420);
 $75 = __THREW__; __THREW__ = 0;
 $76 = $75&1;
 if ($76) {
  $79 = ___cxa_find_matching_catch(0|0)|0;
  $80 = tempRet0;
  ___clang_call_terminate($79);
  // unreachable;
 }
 $77 = $3;
 $78 = $4;
 ___resumeException($77|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 6|0;
 $2 = sp + 5|0;
 $3 = sp + 4|0;
 $0 = $this;
 $4 = $0;
 $5 = (($4) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 16;
 $8 = ($7|0)!=(0);
 if ($8) {
  $9 = (($4) + 44|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($4)|0);
  $12 = ($10>>>0)<($11>>>0);
  if ($12) {
   $13 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($4)|0);
   $14 = (($4) + 44|0);
   HEAP32[$14>>2] = $13;
  }
  $15 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($4)|0);
  $16 = (($4) + 44|0);
  $17 = HEAP32[$16>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IPcEET_S8_RKS4_($agg$result,$15,$17,$1);
  STACKTOP = sp;return;
 }
 $18 = (($4) + 48|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $19 & 8;
 $21 = ($20|0)!=(0);
 if ($21) {
  $22 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($4)|0);
  $23 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($4)|0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IPcEET_S8_RKS4_($agg$result,$22,$23,$2);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS4_($agg$result,$3);
 STACKTOP = sp;return;
}
function __Z13__DOUBLE_BITSd($__f) {
 $__f = +$__f;
 var $0 = 0.0, $1 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__u = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__u = sp;
 $0 = $__f;
 $1 = $0;
 HEAPF64[$__u>>3] = $1;
 $2 = $__u;
 $3 = $2;
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + 4)|0;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 tempRet0 = $7;
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 $0 = $this;
 $4 = $0;
 $5 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $5;
 $6 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($1)|0);
 HEAP32[$4>>2] = $6;
 $7 = (($4) + 4|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($2)|0);
 HEAP32[$7>>2] = $9;
 $10 = (($4) + 8|0);
 $11 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $11;
 $12 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($3)|0);
 __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_($10,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($2)|0);
 $5 = ($3>>>0)>($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2);
  // unreachable;
 } else {
  $6 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($2)|0);
  $7 = $1;
  $8 = (__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8allocateERS5_j($6,$7)|0);
  $9 = (($2) + 4|0);
  HEAP32[$9>>2] = $8;
  HEAP32[$2>>2] = $8;
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = (($10) + (($11*24)|0)|0);
  $13 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($2)|0);
  HEAP32[$13>>2] = $12;
  __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE14__annotate_newEj($2,0);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotatorC2ERKS6_j($__annotator,$2,1);
  $4 = $__a;
  $5 = (($2) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_EEvRS5_PT_($4,$7);
  $8 = (($2) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 24|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 $0 = $this;
 $4 = $0;
 $5 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $5;
 $6 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($1)|0);
 HEAP32[$4>>2] = $6;
 $7 = (($4) + 4|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($2)|0);
 HEAP32[$7>>2] = $9;
 $10 = (($4) + 8|0);
 $11 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $11;
 $12 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($3)|0);
 __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_($10,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($2)|0);
 $5 = ($3>>>0)>($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2);
  // unreachable;
 } else {
  $6 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($2)|0);
  $7 = $1;
  $8 = (__ZNSt3__116allocator_traitsINS_9allocatorIiEEE8allocateERS2_j($6,$7)|0);
  $9 = (($2) + 4|0);
  HEAP32[$9>>2] = $8;
  HEAP32[$2>>2] = $8;
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = (($10) + ($11<<2)|0);
  $13 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($2)|0);
  HEAP32[$13>>2] = $12;
  __ZNKSt3__16vectorIiNS_9allocatorIiEEE14__annotate_newEj($2,0);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $4 = $__a;
  $5 = (($2) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiEEvRS2_PT_($4,$7);
  $8 = (($2) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 4|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($1)|0);
 HEAP32[$1>>2] = $2;
 $3 = (($1) + 4|0);
 $4 = (__ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($1)|0);
 HEAP32[$3>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2Ej($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIjEERT_RNS_16remove_referenceIS1_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EEC2Ej($2,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__19nullptr_tC2EMNS0_5__natEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 HEAP32[$3>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorIdEC2Ev($2);
 $3 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE8max_sizeERKS2_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 $5 = (invoke_iii(421,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return ($5|0);
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 $10 = $2;
 ___cxa_call_unexpected(($10|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__114numeric_limitsIjE3maxEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__123__libcpp_numeric_limitsIjLb1EE3maxEv()|0);
 return ($0|0);
}
function __ZNSt3__13minIjEERKT_S3_S3_($__a,$__b) {
 $__a = $__a|0;
 $__b = $__b|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__b;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__13minIjNS_6__lessIjjEEEERKT_S5_S5_T0_($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__19allocatorIdE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4<<3;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE17__destruct_at_endEPd($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = (($4) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 7;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($4)|0);
  $10 = (($4) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -8|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($12)|0);
  __THREW__ = 0;
  invoke_vii(422,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $16 = ___cxa_find_matching_catch()|0;
 $17 = tempRet0;
 $2 = $16;
 $3 = $17;
 $18 = $2;
 ___cxa_call_unexpected(($18|0));
 // unreachable;
}
function __ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19allocatorIdE10deallocateEPdj($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNKSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEC2EPNS_11__list_nodeIS3_S4_EE($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__p;
 $2 = $0;
 $3 = $1;
 HEAP32[$2>>2] = $3;
 STACKTOP = sp;return;
}
function __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEppEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$1>>2] = $4;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEmmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 HEAP32[$1>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__c;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_NS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__growing = 0, $__m = 0, $__mid = 0, $__new_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mid = sp + 4|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = (__ZNSt3__18distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_($4,$5)|0);
 $__new_size = $6;
 $7 = $__new_size;
 $8 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($3)|0);
 $9 = ($7>>>0)<=($8>>>0);
 if (!($9)) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($3);
  $25 = $__new_size;
  $26 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE11__recommendEj($3,$25)|0);
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($3,$26);
  $27 = $1;
  $28 = $2;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($3,$27,$28);
  STACKTOP = sp;return;
 }
 $10 = $2;
 HEAP32[$__mid>>2] = $10;
 $__growing = 0;
 $11 = $__new_size;
 $12 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($3)|0);
 $13 = ($11>>>0)>($12>>>0);
 if ($13) {
  $__growing = 1;
  $14 = $1;
  HEAP32[$__mid>>2] = $14;
  $15 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($3)|0);
  __ZNSt3__17advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeE($__mid,$15);
 }
 $16 = $1;
 $17 = HEAP32[$__mid>>2]|0;
 $18 = HEAP32[$3>>2]|0;
 $19 = (__ZNSt3__14copyIPN6ikfast23IkSingleDOFSolutionBaseIdEES4_EET0_T_S6_S5_($16,$17,$18)|0);
 $__m = $19;
 $20 = $__growing;
 $21 = $20&1;
 if ($21) {
  $22 = HEAP32[$__mid>>2]|0;
  $23 = $2;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($3,$22,$23);
 } else {
  $24 = $__m;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($3,$24);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__c;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_NS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__growing = 0, $__m = 0, $__mid = 0, $__new_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mid = sp + 4|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = (__ZNSt3__18distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_($4,$5)|0);
 $__new_size = $6;
 $7 = $__new_size;
 $8 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($3)|0);
 $9 = ($7>>>0)<=($8>>>0);
 if (!($9)) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($3);
  $25 = $__new_size;
  $26 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE11__recommendEj($3,$25)|0);
  __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($3,$26);
  $27 = $1;
  $28 = $2;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($3,$27,$28);
  STACKTOP = sp;return;
 }
 $10 = $2;
 HEAP32[$__mid>>2] = $10;
 $__growing = 0;
 $11 = $__new_size;
 $12 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($3)|0);
 $13 = ($11>>>0)>($12>>>0);
 if ($13) {
  $__growing = 1;
  $14 = $1;
  HEAP32[$__mid>>2] = $14;
  $15 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($3)|0);
  __ZNSt3__17advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeE($__mid,$15);
 }
 $16 = $1;
 $17 = HEAP32[$__mid>>2]|0;
 $18 = HEAP32[$3>>2]|0;
 $19 = (__ZNSt3__14copyIPiS1_EET0_T_S3_S2_($16,$17,$18)|0);
 $__m = $19;
 $20 = $__growing;
 $21 = $20&1;
 if ($21) {
  $22 = HEAP32[$__mid>>2]|0;
  $23 = $2;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($3,$22,$23);
 } else {
  $24 = $__m;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE17__destruct_at_endEPi($3,$24);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = ($4*36)|0;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__14moveIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_S9_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__14moveINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_SC_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2ES7_SB_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 16|0;
 $1 = sp + 8|0;
 $2 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_RNS_16remove_referenceIS8_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNSt3__17forwardINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_RNS_16remove_referenceISB_E4typeE($__t2)|0);
 ;HEAP32[$2+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$2+4>>2]=HEAP32[$6+4>>2]|0;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EEC2ES7_SB_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN6ikfast10IkSolutionIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $5 = $1;
 $6 = $2;
 __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($5,$6);
 $7 = (528 + 8|0);
 HEAP32[$5>>2] = $7;
 $8 = (($5) + 4|0);
 $9 = $2;
 $10 = (($9) + 4|0);
 __THREW__ = 0;
 invoke_vii(424,($8|0),($10|0));
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 do {
  if ($12) {
   $18 = ___cxa_find_matching_catch()|0;
   $19 = tempRet0;
   $3 = $18;
   $4 = $19;
  } else {
   $13 = (($5) + 16|0);
   $14 = $2;
   $15 = (($14) + 16|0);
   __THREW__ = 0;
   invoke_vii(425,($13|0),($15|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    STACKTOP = sp;return;
   }
   $20 = ___cxa_find_matching_catch()|0;
   $21 = tempRet0;
   $3 = $20;
   $4 = $21;
   __THREW__ = 0;
   invoke_vi(367,($8|0));
   $22 = __THREW__; __THREW__ = 0;
   $23 = $22&1;
   if ($23) {
    $28 = ___cxa_find_matching_catch(0|0)|0;
    $29 = tempRet0;
    ___clang_call_terminate($28);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(15,($5|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $28 = ___cxa_find_matching_catch(0|0)|0;
  $29 = tempRet0;
  ___clang_call_terminate($28);
  // unreachable;
 }
 $26 = $3;
 $27 = $4;
 ___resumeException($26|0);
 // unreachable;
}
function __ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__114pointer_traitsIPNS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEE10pointer_toERS6_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5resetEPS6_($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__p;
 $2 = $0;
 $3 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($2)|0);
 $4 = HEAP32[$3>>2]|0;
 $__tmp = $4;
 $5 = $1;
 $6 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($2)|0);
 HEAP32[$6>>2] = $5;
 $7 = $__tmp;
 $8 = ($7|0)!=(0|0);
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE6secondEv($2)|0);
 $10 = $__tmp;
 __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEclEPS7_($9,$10);
 STACKTOP = sp;return;
}
function __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5emptyEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__114pointer_traitsIPNS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEE10pointer_toERS6_($__r) {
 $__r = $__r|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__r;
 $1 = $0;
 $2 = (__ZNSt3__19addressofINS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEEEPT_RS7_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE14__unlink_nodesEPNS_11__list_nodeIS3_PvEESA_($__f,$__l) {
 $__f = $__f|0;
 $__l = $__l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__f;
 $1 = $__l;
 $2 = $1;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $0;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 4|0);
 HEAP32[$7>>2] = $4;
 $8 = $0;
 $9 = HEAP32[$8>>2]|0;
 $10 = $1;
 $11 = (($10) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 HEAP32[$12>>2] = $9;
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE7destroyIS5_EEvRS8_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9__destroyIS5_EEvNS_17integral_constantIbLb0EEERS8_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE10deallocateERS8_PS7_j($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE10deallocateEPS6_j($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__19nullptr_tcvPT_IiEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi($1,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pij($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIiE10deallocateEPij($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($1,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10deallocateERS5_PS4_j($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE10deallocateEPS3_j($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp + 4|0;
 $5 = sp;
 $0 = $this;
 $1 = $__cap;
 $2 = $__start;
 $3 = $__a;
 $6 = $0;
 $7 = (($6) + 12|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($4)|0);
 $10 = $3;
 __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEEC2ES1_S4_($7,$9,$10);
 $11 = $1;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($6)|0);
  $14 = $1;
  $15 = (__ZNSt3__116allocator_traitsINS_9allocatorIdEEE8allocateERS2_j($13,$14)|0);
  $18 = $15;
 } else {
  $16 = (__ZNSt3__115__get_nullptr_tEv()|0);
  HEAP32[$5>>2] = $16;
  $17 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($5)|0);
  $18 = $17;
 }
 HEAP32[$6>>2] = $18;
 $19 = HEAP32[$6>>2]|0;
 $20 = $2;
 $21 = (($19) + ($20<<3)|0);
 $22 = (($6) + 8|0);
 HEAP32[$22>>2] = $21;
 $23 = (($6) + 4|0);
 HEAP32[$23>>2] = $21;
 $24 = HEAP32[$6>>2]|0;
 $25 = $1;
 $26 = (($24) + ($25<<3)|0);
 $27 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($6)|0);
 HEAP32[$27>>2] = $26;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  $4 = $__a;
  $5 = (($2) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9constructIdEEvRS2_PT_($4,$7);
  $8 = (($2) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 8|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__v;
 $2 = $0;
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_deleteEv($2);
 $3 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
 $4 = HEAP32[$2>>2]|0;
 $5 = (($2) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $1;
 $8 = (($7) + 4|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE20__construct_backwardIdEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($3,$4,$6,$8);
 $9 = $1;
 $10 = (($9) + 4|0);
 __ZNSt3__14swapIPdEEvRT_S3_($2,$10);
 $11 = (($2) + 4|0);
 $12 = $1;
 $13 = (($12) + 8|0);
 __ZNSt3__14swapIPdEEvRT_S3_($11,$13);
 $14 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($2)|0);
 $15 = $1;
 $16 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($15)|0);
 __ZNSt3__14swapIPdEEvRT_S3_($14,$16);
 $17 = $1;
 $18 = (($17) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $1;
 HEAP32[$20>>2] = $19;
 $21 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE14__annotate_newEj($2,$21);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE26__invalidate_all_iteratorsEv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE5clearEv($1);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($1)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = (__ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE8capacityEv($1)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10deallocateERS2_Pdj($4,$5,$6);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<3)|0);
 $7 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + ($8<<3)|0);
 $10 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $12 = (($10) + ($11<<3)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $4 = $__a;
  $5 = (($2) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjEEvRS2_PT_($4,$7);
  $8 = (($2) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 4|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp + 4|0;
 $5 = sp;
 $0 = $this;
 $1 = $__cap;
 $2 = $__start;
 $3 = $__a;
 $6 = $0;
 $7 = (($6) + 12|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IjEEv($4)|0);
 $10 = $3;
 __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEEC2ES1_S4_($7,$9,$10);
 $11 = $1;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($6)|0);
  $14 = $1;
  $15 = (__ZNSt3__116allocator_traitsINS_9allocatorIjEEE8allocateERS2_j($13,$14)|0);
  $18 = $15;
 } else {
  $16 = (__ZNSt3__115__get_nullptr_tEv()|0);
  HEAP32[$5>>2] = $16;
  $17 = (__ZNKSt3__19nullptr_tcvPT_IjEEv($5)|0);
  $18 = $17;
 }
 HEAP32[$6>>2] = $18;
 $19 = HEAP32[$6>>2]|0;
 $20 = $2;
 $21 = (($19) + ($20<<2)|0);
 $22 = (($6) + 8|0);
 HEAP32[$22>>2] = $21;
 $23 = (($6) + 4|0);
 HEAP32[$23>>2] = $21;
 $24 = HEAP32[$6>>2]|0;
 $25 = $1;
 $26 = (($24) + ($25<<2)|0);
 $27 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($6)|0);
 HEAP32[$27>>2] = $26;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  $4 = $__a;
  $5 = (($2) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjEEvRS2_PT_($4,$7);
  $8 = (($2) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 4|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__v;
 $2 = $0;
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_deleteEv($2);
 $3 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($2)|0);
 $4 = HEAP32[$2>>2]|0;
 $5 = (($2) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $1;
 $8 = (($7) + 4|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIjEEE20__construct_backwardIjEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($3,$4,$6,$8);
 $9 = $1;
 $10 = (($9) + 4|0);
 __ZNSt3__14swapIPjEEvRT_S3_($2,$10);
 $11 = (($2) + 4|0);
 $12 = $1;
 $13 = (($12) + 8|0);
 __ZNSt3__14swapIPjEEvRT_S3_($11,$13);
 $14 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($2)|0);
 $15 = $1;
 $16 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($15)|0);
 __ZNSt3__14swapIPjEEvRT_S3_($14,$16);
 $17 = $1;
 $18 = (($17) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $1;
 HEAP32[$20>>2] = $19;
 $21 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE14__annotate_newEj($2,$21);
 __ZNSt3__16vectorIjNS_9allocatorIjEEE26__invalidate_all_iteratorsEv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE5clearEv($1);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($1)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = (__ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE8capacityEv($1)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIjEEE10deallocateERS2_Pjj($4,$5,$6);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE17__destruct_at_endEPj($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = (($4) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 7;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($4)|0);
  $10 = (($4) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -4|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($12)|0);
  __THREW__ = 0;
  invoke_vii(426,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $16 = ___cxa_find_matching_catch()|0;
 $17 = tempRet0;
 $2 = $16;
 $3 = $17;
 $18 = $2;
 ___cxa_call_unexpected(($18|0));
 // unreachable;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($2)|0);
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__17forwardIKjEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__16__lessIPcS1_EclERKS1_S4_($this,$__x,$__y) {
 $this = $this|0;
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $__y;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__sz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__s;
 $2 = $0;
 $3 = (($2) + 32|0);
 $4 = $1;
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($3,$4)|0);
 $5 = (($2) + 44|0);
 HEAP32[$5>>2] = 0;
 $6 = (($2) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 & 8;
 $9 = ($8|0)!=(0);
 if ($9) {
  $10 = (($2) + 32|0);
  $11 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($10)|0);
  $12 = (($2) + 32|0);
  $13 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($12)|0);
  $14 = (($11) + ($13)|0);
  $15 = (($2) + 44|0);
  HEAP32[$15>>2] = $14;
  $16 = (($2) + 32|0);
  $17 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($16)|0);
  $18 = (($2) + 32|0);
  $19 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($18)|0);
  $20 = (($2) + 44|0);
  $21 = HEAP32[$20>>2]|0;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($2,$17,$19,$21);
 }
 $22 = (($2) + 48|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = $23 & 16;
 $25 = ($24|0)!=(0);
 if (!($25)) {
  STACKTOP = sp;return;
 }
 $26 = (($2) + 32|0);
 $27 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($26)|0);
 $__sz = $27;
 $28 = (($2) + 32|0);
 $29 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($28)|0);
 $30 = $__sz;
 $31 = (($29) + ($30)|0);
 $32 = (($2) + 44|0);
 HEAP32[$32>>2] = $31;
 $33 = (($2) + 32|0);
 $34 = (($2) + 32|0);
 $35 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8capacityEv($34)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEj($33,$35);
 $36 = (($2) + 32|0);
 $37 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($36)|0);
 $38 = (($2) + 32|0);
 $39 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($38)|0);
 $40 = (($2) + 32|0);
 $41 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($40)|0);
 $42 = (($39) + ($41)|0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_($2,$37,$42);
 $43 = (($2) + 48|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = $44 & 3;
 $46 = ($45|0)!=(0);
 if ($46) {
  $47 = $__sz;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi($2,$47);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEEC2ERNS_13basic_ostreamIcS2_EE($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__s;
 $4 = $0;
 $5 = $1;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + -12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($5) + ($8)|0);
 __THREW__ = 0;
 $10 = (invoke_ii(427,($9|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  HEAP32[$4>>2] = $10;
  STACKTOP = sp;return;
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 $15 = $2;
 ___cxa_call_unexpected(($15|0));
 // unreachable;
}
function __ZNKSt3__18ios_base5flagsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $agg$result = $agg$result|0;
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $__np = 0, $__ns = 0, $__sp = 0, $__sz = 0, $cleanup$dest = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 48|0;
 $6 = sp + 32|0;
 $__sp = sp + 20|0;
 $9 = sp + 8|0;
 $11 = sp;
 $0 = $__ob;
 $1 = $__op;
 $2 = $__oe;
 $3 = $__iob;
 $4 = $__fl;
 $12 = HEAP32[$__s>>2]|0;
 $13 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$5>>2] = $13;
 $14 = (__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($5)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
  STACKTOP = sp;return;
 }
 $16 = $2;
 $17 = $0;
 $18 = $16;
 $19 = $17;
 $20 = (($18) - ($19))|0;
 $__sz = $20;
 $21 = $3;
 $22 = (__ZNKSt3__18ios_base5widthEv($21)|0);
 $__ns = $22;
 $23 = $__ns;
 $24 = $__sz;
 $25 = ($23|0)>($24|0);
 if ($25) {
  $26 = $__sz;
  $27 = $__ns;
  $28 = (($27) - ($26))|0;
  $__ns = $28;
 } else {
  $__ns = 0;
 }
 $29 = $1;
 $30 = $0;
 $31 = $29;
 $32 = $30;
 $33 = (($31) - ($32))|0;
 $__np = $33;
 $34 = $__np;
 $35 = ($34|0)>(0);
 do {
  if ($35) {
   $36 = HEAP32[$__s>>2]|0;
   $37 = $0;
   $38 = $__np;
   $39 = (__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci($36,$37,$38)|0);
   $40 = $__np;
   $41 = ($39|0)!=($40|0);
   if (!($41)) {
    break;
   }
   $42 = (__ZNSt3__115__get_nullptr_tEv()|0);
   HEAP32[$6>>2] = $42;
   $43 = (__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($6)|0);
   HEAP32[$__s>>2] = $43;
   ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
   STACKTOP = sp;return;
  }
 } while(0);
 $44 = $__ns;
 $45 = ($44|0)>(0);
 L16: do {
  if ($45) {
   $46 = $__ns;
   $47 = $4;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ejc($__sp,$46,$47);
   $48 = HEAP32[$__s>>2]|0;
   $49 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($__sp)|0);
   $50 = $__ns;
   __THREW__ = 0;
   $51 = (invoke_iiii(428,($48|0),($49|0),($50|0))|0);
   $52 = __THREW__; __THREW__ = 0;
   $53 = $52&1;
   do {
    if (!($53)) {
     $54 = $__ns;
     $55 = ($51|0)!=($54|0);
     if ($55) {
      __THREW__ = 0;
      $56 = (invoke_i(429)|0);
      $57 = __THREW__; __THREW__ = 0;
      $58 = $57&1;
      if ($58) {
       break;
      }
      HEAP32[$9>>2] = $56;
      __THREW__ = 0;
      $59 = (invoke_ii(430,($9|0))|0);
      $60 = __THREW__; __THREW__ = 0;
      $61 = $60&1;
      if ($61) {
       break;
      }
      HEAP32[$__s>>2] = $59;
      ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
      $10 = 1;
     } else {
      $10 = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
     $cleanup$dest = $10;
     if ((($cleanup$dest|0) == 0)) {
      break L16;
     } else if ((($cleanup$dest|0) == 1)) {
      STACKTOP = sp;return;
     } else {
      // unreachable;
     }
    }
   } while(0);
   $62 = ___cxa_find_matching_catch()|0;
   $63 = tempRet0;
   $7 = $62;
   $8 = $63;
   __THREW__ = 0;
   invoke_vi(369,($__sp|0));
   $64 = __THREW__; __THREW__ = 0;
   $65 = $64&1;
   if ($65) {
    $84 = ___cxa_find_matching_catch(0|0)|0;
    $85 = tempRet0;
    ___clang_call_terminate($84);
    // unreachable;
   }
   $82 = $7;
   $83 = $8;
   ___resumeException($82|0);
   // unreachable;
  }
 } while(0);
 $66 = $2;
 $67 = $1;
 $68 = $66;
 $69 = $67;
 $70 = (($68) - ($69))|0;
 $__np = $70;
 $71 = $__np;
 $72 = ($71|0)>(0);
 do {
  if ($72) {
   $73 = HEAP32[$__s>>2]|0;
   $74 = $1;
   $75 = $__np;
   $76 = (__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci($73,$74,$75)|0);
   $77 = $__np;
   $78 = ($76|0)!=($77|0);
   if (!($78)) {
    break;
   }
   $79 = (__ZNSt3__115__get_nullptr_tEv()|0);
   HEAP32[$11>>2] = $79;
   $80 = (__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($11)|0);
   HEAP32[$__s>>2] = $80;
   ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
   STACKTOP = sp;return;
  }
 } while(0);
 $81 = $3;
 (__ZNSt3__18ios_base5widthEi($81,0)|0);
 ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEE6failedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IPcEET_S8_RKS4_($this,$__first,$__last,$__a) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 17|0;
 $4 = sp + 16|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $__a;
 $5 = $0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$4+0>>0]|0;
 __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2ES5_($5,$$byval_copy);
 $6 = $1;
 $7 = $2;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($5,$6,$7);
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_($2,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8max_sizeERKS5_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(399,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $3 = $14;
 $4 = $15;
 $16 = $3;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8allocateERS5_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 $6 = (($4) + (($5*24)|0)|0);
 $7 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 $9 = (($7) + (($8*24)|0)|0);
 $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + (($11*24)|0)|0);
 __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE31__annotate_contiguous_containerEPKvS8_S8_S8_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotatorC2ERKS6_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_EEvRS5_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if ($3) {
  STACKTOP = sp;return;
 }
 __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_($2,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIiEEE8max_sizeERKS2_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(399,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $3 = $14;
 $4 = $15;
 $16 = $3;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIiE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($2)|0);
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__116__to_raw_pointerIiEEPT_S2_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  HEAP32[$2>>2] = 0;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIjEERT_RNS_16remove_referenceIS1_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EEC2Ej($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEC2Ev($2);
 $3 = (__ZNSt3__17forwardIjEERT_RNS_16remove_referenceIS1_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIdE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__123__libcpp_numeric_limitsIjLb1EE3maxEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__13minIjNS_6__lessIjjEEEERKT_S5_S5_T0_($__a,$__b,$__comp) {
 $__a = $__a|0;
 $__b = $__b|0;
 $__comp = $__comp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__b;
 $2 = $1;
 $3 = $0;
 $4 = (__ZNKSt3__16__lessIjjEclERKjS3_($__comp,$2,$3)|0);
 if ($4) {
  $5 = $1;
  $7 = $5;
 } else {
  $6 = $0;
  $7 = $6;
 }
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__110__allocateEj($__size) {
 $__size = $__size|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__size;
 $1 = $0;
 $2 = (__Znwj($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE7destroyIdEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9__destroyIdEEvNS_17integral_constantIbLb0EEERS2_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__112__deallocateEPv($__ptr) {
 $__ptr = $__ptr|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__ptr;
 $1 = $0;
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_NS_17integral_constantIbLb0EEE($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $this;
 $3 = $0;
 STACKTOP = sp;return;
}
function __ZNSt3__18distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_($__first,$__last) {
 $__first = $__first|0;
 $__last = $__last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__first;
 $1 = $__last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__110__distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_NS_26random_access_iterator_tagE($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__17advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeE($__i,$__n) {
 $__i = $__i|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__i;
 $1 = $__n;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__19__advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeENS_26random_access_iterator_tagE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__14copyIPN6ikfast23IkSingleDOFSolutionBaseIdEES4_EET0_T_S6_S5_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $0;
 $4 = (__ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($3)|0);
 $5 = $1;
 $6 = (__ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($5)|0);
 $7 = $2;
 $8 = (__ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($7)|0);
 $9 = (__ZNSt3__16__copyIN6ikfast23IkSingleDOFSolutionBaseIdEES3_EENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS9_EE5valueEPS9_E4typeEPS6_SD_SA_($4,$6,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 16|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($3)|0);
 $__a = $4;
 while(1) {
  $5 = $1;
  $6 = $2;
  $7 = ($5|0)!=($6|0);
  if (!($7)) {
   break;
  }
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotatorC2ERKS6_j($__annotator,$3,1);
  $8 = $__a;
  $9 = (($3) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($10)|0);
  $12 = $1;
  __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_S4_EEvRS5_PT_RKT0_($8,$11,$12);
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = (($3) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) + 24|0);
  HEAP32[$13>>2] = $15;
  $16 = $1;
  $17 = (($16) + 24|0);
  $1 = $17;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(431,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $2 = $10;
 $3 = $11;
 $12 = $2;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 4|0;
 $4 = sp;
 $0 = $this;
 $5 = $0;
 $6 = HEAP32[$5>>2]|0;
 __THREW__ = 0;
 $7 = (invoke_i(429)|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  HEAP32[$3>>2] = $7;
  __THREW__ = 0;
  $10 = (invoke_ii(432,($3|0))|0);
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = ($6|0)!=($10|0);
   if (!($13)) {
    STACKTOP = sp;return;
   }
   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($5);
   $14 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($5)|0);
   $15 = HEAP32[$5>>2]|0;
   $16 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($5)|0);
   __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10deallocateERS5_PS4_j($14,$15,$16);
   __THREW__ = 0;
   $17 = (invoke_i(429)|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if (!($19)) {
    HEAP32[$4>>2] = $17;
    __THREW__ = 0;
    $20 = (invoke_ii(432,($4|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     $23 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($5)|0);
     HEAP32[$23>>2] = $20;
     $24 = (($5) + 4|0);
     HEAP32[$24>>2] = $20;
     HEAP32[$5>>2] = $20;
     STACKTOP = sp;return;
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch()|0;
 $26 = tempRet0;
 $1 = $25;
 $2 = $26;
 $27 = $1;
 ___cxa_call_unexpected(($27|0));
 // unreachable;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_NS_17integral_constantIbLb0EEE($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $this;
 $3 = $0;
 STACKTOP = sp;return;
}
function __ZNSt3__18distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_($__first,$__last) {
 $__first = $__first|0;
 $__last = $__last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__first;
 $1 = $__last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__110__distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__17advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeE($__i,$__n) {
 $__i = $__i|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__i;
 $1 = $__n;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__19__advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeENS_26random_access_iterator_tagE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__14copyIPiS1_EET0_T_S3_S2_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $0;
 $4 = (__ZNSt3__113__unwrap_iterIPiEET_S2_($3)|0);
 $5 = $1;
 $6 = (__ZNSt3__113__unwrap_iterIPiEET_S2_($5)|0);
 $7 = $2;
 $8 = (__ZNSt3__113__unwrap_iterIPiEET_S2_($7)|0);
 $9 = (__ZNSt3__16__copyIiiEENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS6_EE5valueEPS6_E4typeEPS3_SA_S7_($4,$6,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 16|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($3)|0);
 $__a = $4;
 while(1) {
  $5 = $1;
  $6 = $2;
  $7 = ($5|0)!=($6|0);
  if (!($7)) {
   break;
  }
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$3,1);
  $8 = $__a;
  $9 = (($3) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($10)|0);
  $12 = $1;
  __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiiEEvRS2_PT_RKT0_($8,$11,$12);
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = (($3) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) + 4|0);
  HEAP32[$13>>2] = $15;
  $16 = $1;
  $17 = (($16) + 4|0);
  $1 = $17;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE17__destruct_at_endEPi($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(433,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $2 = $10;
 $3 = $11;
 $12 = $2;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 4|0;
 $4 = sp;
 $0 = $this;
 $5 = $0;
 $6 = HEAP32[$5>>2]|0;
 __THREW__ = 0;
 $7 = (invoke_i(429)|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  HEAP32[$3>>2] = $7;
  __THREW__ = 0;
  $10 = (invoke_ii(434,($3|0))|0);
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = ($6|0)!=($10|0);
   if (!($13)) {
    STACKTOP = sp;return;
   }
   __ZNSt3__16vectorIiNS_9allocatorIiEEE5clearEv($5);
   $14 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($5)|0);
   $15 = HEAP32[$5>>2]|0;
   $16 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($5)|0);
   __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pij($14,$15,$16);
   __THREW__ = 0;
   $17 = (invoke_i(429)|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if (!($19)) {
    HEAP32[$4>>2] = $17;
    __THREW__ = 0;
    $20 = (invoke_ii(434,($4|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     $23 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($5)|0);
     HEAP32[$23>>2] = $20;
     $24 = (($5) + 4|0);
     HEAP32[$24>>2] = $20;
     HEAP32[$5>>2] = $20;
     STACKTOP = sp;return;
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch()|0;
 $26 = tempRet0;
 $1 = $25;
 $2 = $26;
 $27 = $1;
 ___cxa_call_unexpected(($27|0));
 // unreachable;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_RNS_16remove_referenceIS8_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_RNS_16remove_referenceISB_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EEC2ES7_SB_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_RNS_16remove_referenceIS8_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 $5 = (($2) + 4|0);
 $6 = (__ZNSt3__17forwardINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_RNS_16remove_referenceISB_E4typeE($__t2)|0);
 ;HEAP32[$5+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$5+4>>2]=HEAP32[$6+4>>2]|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = (800 + 8|0);
 HEAP32[$3>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 20|0;
 $0 = $this;
 $1 = $__x;
 $5 = $0;
 $6 = $1;
 $7 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($6)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionERKS5_($2,$7);
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS5_($5,$2);
 $8 = $1;
 $9 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($8)|0);
 $__n = $9;
 $10 = $__n;
 $11 = ($10>>>0)>(0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = $__n;
 __THREW__ = 0;
 invoke_vii(393,($5|0),($12|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if (!($14)) {
  $15 = $1;
  $16 = HEAP32[$15>>2]|0;
  $17 = $1;
  $18 = (($17) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  __THREW__ = 0;
  invoke_viii(435,($5|0),($16|0),($19|0));
  $20 = __THREW__; __THREW__ = 0;
  $21 = $20&1;
  if (!($21)) {
   STACKTOP = sp;return;
  }
 }
 $22 = ___cxa_find_matching_catch()|0;
 $23 = tempRet0;
 $3 = $22;
 $4 = $23;
 __THREW__ = 0;
 invoke_vi(395,($5|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $28 = ___cxa_find_matching_catch(0|0)|0;
  $29 = tempRet0;
  ___clang_call_terminate($28);
  // unreachable;
 }
 $26 = $3;
 $27 = $4;
 ___resumeException($26|0);
 // unreachable;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 20|0;
 $0 = $this;
 $1 = $__x;
 $5 = $0;
 $6 = $1;
 $7 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($6)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionERKS2_($2,$7);
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2ERKS2_($5,$2);
 $8 = $1;
 $9 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($8)|0);
 $__n = $9;
 $10 = $__n;
 $11 = ($10>>>0)>(0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = $__n;
 __THREW__ = 0;
 invoke_vii(396,($5|0),($12|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if (!($14)) {
  $15 = $1;
  $16 = HEAP32[$15>>2]|0;
  $17 = $1;
  $18 = (($17) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  __THREW__ = 0;
  invoke_viii(436,($5|0),($16|0),($19|0));
  $20 = __THREW__; __THREW__ = 0;
  $21 = $20&1;
  if (!($21)) {
   STACKTOP = sp;return;
  }
 }
 $22 = ___cxa_find_matching_catch()|0;
 $23 = tempRet0;
 $3 = $22;
 $4 = $23;
 __THREW__ = 0;
 invoke_vi(398,($5|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $28 = ___cxa_find_matching_catch(0|0)|0;
  $29 = tempRet0;
  ___clang_call_terminate($28);
  // unreachable;
 }
 $26 = $3;
 $27 = $4;
 ___resumeException($26|0);
 // unreachable;
}
function __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEclEPS7_($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__p;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = (($2) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE10deallocateERS8_PS7_j($3,$4,$6);
 STACKTOP = sp;return;
}
function __ZNSt3__19addressofINS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEEEPT_RS7_($__x) {
 $__x = $__x|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__x;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9__destroyIS5_EEvNS_17integral_constantIbLb0EEERS8_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 FUNCTION_TABLE_vi[$6 & 1023]($4);
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE10deallocateEPS6_j($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = (($4) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 7;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($4)|0);
  $10 = (($4) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -4|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($12)|0);
  __THREW__ = 0;
  invoke_vii(437,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $16 = ___cxa_find_matching_catch()|0;
 $17 = tempRet0;
 $2 = $16;
 $3 = $17;
 $18 = $2;
 ___cxa_call_unexpected(($18|0));
 // unreachable;
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19allocatorIiE10deallocateEPij($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = (($4) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 7;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($4)|0);
  $10 = (($4) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -24|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($12)|0);
  __THREW__ = 0;
  invoke_vii(438,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $16 = ___cxa_find_matching_catch()|0;
 $17 = tempRet0;
 $2 = $16;
 $3 = $17;
 $18 = $2;
 ___cxa_call_unexpected(($18|0));
 // unreachable;
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE10deallocateEPS3_j($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNSt3__13maxIjEERKT_S3_S3_($__a,$__b) {
 $__a = $__a|0;
 $__b = $__b|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__b;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__13maxIjNS_6__lessIjjEEEERKT_S5_S5_T0_($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $2;
 $7 = (__ZNSt3__17forwardIRNS_9allocatorIdEEEERT_RNS_16remove_referenceIS4_E4typeE($6)|0);
 __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EEC2ES1_S4_($3,$5,$7);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($1)|0);
 $5 = (($3) + ($4<<3)|0);
 $6 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $7 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($1)|0);
 $8 = (($6) + ($7<<3)|0);
 $9 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $10 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($1)|0);
 $11 = (($9) + ($10<<3)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($1,$2,$5,$8,$11);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE20__construct_backwardIdEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($__a,$__begin1,$__end1,$__end2) {
 $__a = $__a|0;
 $__begin1 = $__begin1|0;
 $__end1 = $__end1|0;
 $__end2 = $__end2|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $_Np = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__begin1;
 $2 = $__end1;
 $3 = $__end2;
 $4 = $2;
 $5 = $1;
 $6 = $4;
 $7 = $5;
 $8 = (($6) - ($7))|0;
 $9 = (($8|0) / 8)&-1;
 $_Np = $9;
 $10 = $_Np;
 $11 = $3;
 $12 = HEAP32[$11>>2]|0;
 $13 = (0 - ($10))|0;
 $14 = (($12) + ($13<<3)|0);
 HEAP32[$11>>2] = $14;
 $15 = $3;
 $16 = HEAP32[$15>>2]|0;
 $17 = $1;
 $18 = $_Np;
 $19 = $18<<3;
 _memcpy(($16|0),($17|0),($19|0))|0;
 STACKTOP = sp;return;
}
function __ZNSt3__14swapIPdEEvRT_S3_($__x,$__y) {
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__t = sp;
 $0 = $__x;
 $1 = $__y;
 $2 = $0;
 $3 = (__ZNSt3__14moveIPdEERT_S3_($2)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$__t>>2] = $4;
 $5 = $1;
 $6 = (__ZNSt3__14moveIPdEERT_S3_($5)|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $0;
 HEAP32[$8>>2] = $7;
 $9 = (__ZNSt3__14moveIPdEERT_S3_($__t)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $1;
 HEAP32[$11>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPd($1,$3);
 STACKTOP = sp;return;
}
function __ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 8)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  HEAP32[$2>>2] = 0;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIjEEE8max_sizeERKS2_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(399,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $3 = $14;
 $4 = $15;
 $16 = $3;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__19nullptr_tcvPT_IjEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPjEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $2;
 $7 = (__ZNSt3__17forwardIRNS_9allocatorIjEEEERT_RNS_16remove_referenceIS4_E4typeE($6)|0);
 __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EEC2ES1_S4_($3,$5,$7);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIjE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $4 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($1)|0);
 $5 = (($3) + ($4<<2)|0);
 $6 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $7 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($1)|0);
 $8 = (($6) + ($7<<2)|0);
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $10 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($1)|0);
 $11 = (($9) + ($10<<2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($1,$2,$5,$8,$11);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE20__construct_backwardIjEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($__a,$__begin1,$__end1,$__end2) {
 $__a = $__a|0;
 $__begin1 = $__begin1|0;
 $__end1 = $__end1|0;
 $__end2 = $__end2|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $_Np = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__begin1;
 $2 = $__end1;
 $3 = $__end2;
 $4 = $2;
 $5 = $1;
 $6 = $4;
 $7 = $5;
 $8 = (($6) - ($7))|0;
 $9 = (($8|0) / 4)&-1;
 $_Np = $9;
 $10 = $_Np;
 $11 = $3;
 $12 = HEAP32[$11>>2]|0;
 $13 = (0 - ($10))|0;
 $14 = (($12) + ($13<<2)|0);
 HEAP32[$11>>2] = $14;
 $15 = $3;
 $16 = HEAP32[$15>>2]|0;
 $17 = $1;
 $18 = $_Np;
 $19 = $18<<2;
 _memcpy(($16|0),($17|0),($19|0))|0;
 STACKTOP = sp;return;
}
function __ZNSt3__14swapIPjEEvRT_S3_($__x,$__y) {
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__t = sp;
 $0 = $__x;
 $1 = $__y;
 $2 = $0;
 $3 = (__ZNSt3__14moveIPjEERT_S3_($2)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$__t>>2] = $4;
 $5 = $1;
 $6 = (__ZNSt3__14moveIPjEERT_S3_($5)|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $0;
 HEAP32[$8>>2] = $7;
 $9 = (__ZNSt3__14moveIPjEERT_S3_($__t)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $1;
 HEAP32[$11>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($2)|0);
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPj($1,$3);
 STACKTOP = sp;return;
}
function __ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE10deallocateERS2_Pjj($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIjE10deallocateEPjj($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE7destroyIjEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9__destroyIjEEvNS_17integral_constantIbLb0EEERS2_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNKSt3__18ios_base5widthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__18ios_base5widthEi($this,$__wide) {
 $this = $this|0;
 $__wide = $__wide|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__wide;
 $2 = $0;
 $3 = (($2) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $__r = $4;
 $5 = $1;
 $6 = (($2) + 12|0);
 HEAP32[$6>>2] = $5;
 $7 = $__r;
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2ES5_($this,$__t2) {
 $this = $this|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 5|0;
 $1 = sp + 4|0;
 $0 = $this;
 $2 = $0;
 (__ZNSt3__17forwardINS_9allocatorIcEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 __ZNSt3__128__libcpp_compressed_pair_impINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_Lj2EEC2ES5_($2,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap = 0, $__p = 0, $__sz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 24|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = (__ZNSt3__18distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_($5,$6)|0);
 $__sz = $7;
 $8 = $__sz;
 $9 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8max_sizeEv($4)|0);
 $10 = ($8>>>0)>($9>>>0);
 if ($10) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $11 = $__sz;
 $12 = ($11>>>0)<(11);
 if ($12) {
  $13 = $__sz;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE16__set_short_sizeEj($4,$13);
  $14 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE19__get_short_pointerEv($4)|0);
  $__p = $14;
 } else {
  $15 = $__sz;
  $16 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE11__recommendEj($15)|0);
  $__cap = $16;
  $17 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7__allocEv($4)|0);
  $18 = $__cap;
  $19 = (($18) + 1)|0;
  $20 = (__ZNSt3__116allocator_traitsINS_9allocatorIcEEE8allocateERS2_j($17,$19)|0);
  $__p = $20;
  $21 = $__p;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE18__set_long_pointerEPc($4,$21);
  $22 = $__cap;
  $23 = (($22) + 1)|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE14__set_long_capEj($4,$23);
  $24 = $__sz;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE15__set_long_sizeEj($4,$24);
 }
 while(1) {
  $25 = $1;
  $26 = $2;
  $27 = ($25|0)!=($26|0);
  if (!($27)) {
   break;
  }
  $28 = $__p;
  $29 = $1;
  __ZNSt3__111char_traitsIcE6assignERcRKc($28,$29);
  $30 = $1;
  $31 = (($30) + 1|0);
  $1 = $31;
  $32 = $__p;
  $33 = (($32) + 1|0);
  $__p = $33;
 }
 $34 = $__p;
 HEAP8[$3>>0] = 0;
 __ZNSt3__111char_traitsIcE6assignERcRKc($34,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEC2Ev($2);
 $3 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8max_sizeERKS5_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 $5 = (invoke_iii(439,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return ($5|0);
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 $10 = $2;
 ___cxa_call_unexpected(($10|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = ($4*24)|0;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE31__annotate_contiguous_containerEPKvS8_S8_S8_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 HEAPF64[$1>>3] = 0.0;
 $2 = (($1) + 8|0);
 HEAPF64[$2>>3] = 0.0;
 $3 = (($1) + 16|0);
 HEAP8[$3>>0] = -1;
 $4 = (($1) + 18|0);
 HEAP8[$4>>0] = 1;
 $5 = (($1) + 19|0);
 $6 = (($5) + 4|0);
 HEAP8[$6>>0] = -1;
 $7 = (($1) + 19|0);
 $8 = (($7) + 3|0);
 HEAP8[$8>>0] = -1;
 $9 = (($1) + 19|0);
 $10 = (($9) + 2|0);
 HEAP8[$10>>0] = -1;
 $11 = (($1) + 19|0);
 $12 = (($11) + 1|0);
 HEAP8[$12>>0] = -1;
 $13 = (($1) + 19|0);
 HEAP8[$13>>0] = -1;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorIiEC2Ev($2);
 $3 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE8max_sizeERKS2_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 $5 = (invoke_iii(440,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return ($5|0);
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 $10 = $2;
 ___cxa_call_unexpected(($10|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19allocatorIiE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4<<2;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19allocatorIdE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 536870911;
}
function __ZNKSt3__16__lessIjjEclERKjS3_($this,$__x,$__y) {
 $this = $this|0;
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $__y;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9__destroyIdEEvNS_17integral_constantIbLb0EEERS2_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__110__distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_NS_26random_access_iterator_tagE($__first,$__last,$0) {
 $__first = $__first|0;
 $__last = $__last|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__first;
 $2 = $__last;
 $3 = $2;
 $4 = $1;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__19__advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeENS_26random_access_iterator_tagE($__i,$__n,$0) {
 $__i = $__i|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__i;
 $2 = $__n;
 $3 = $2;
 $4 = $1;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + (($3*24)|0)|0);
 HEAP32[$4>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($__i) {
 $__i = $__i|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__i;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16__copyIN6ikfast23IkSingleDOFSolutionBaseIdEES3_EENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS9_EE5valueEPS9_E4typeEPS6_SD_SA_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $1;
 $4 = $0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 $__n = $8;
 $9 = $2;
 $10 = $0;
 $11 = $__n;
 $12 = ($11*24)|0;
 _memmove(($9|0),($10|0),($12|0))|0;
 $13 = $2;
 $14 = $__n;
 $15 = (($13) + (($14*24)|0)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_S4_EEvRS5_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = ($3|0)==(0|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = $2;
 ;HEAP32[$3+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$3+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$5+8>>2]|0;HEAP32[$3+12>>2]=HEAP32[$5+12>>2]|0;HEAP32[$3+16>>2]=HEAP32[$5+16>>2]|0;HEAP32[$3+20>>2]=HEAP32[$5+20>>2]|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 $6 = (($4) + (($5*24)|0)|0);
 $7 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + (($8*24)|0)|0);
 $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($2)|0);
 $12 = (($10) + (($11*24)|0)|0);
 __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE31__annotate_contiguous_containerEPKvS8_S8_S8_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($3)|0);
 $__old_size = $4;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($3);
 $5 = $__old_size;
 __THREW__ = 0;
 invoke_vii(431,($3|0),($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __THREW__ = 0;
  invoke_vi(441,($3|0));
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if (!($9)) {
   STACKTOP = sp;return;
  }
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $1 = $10;
 $2 = $11;
 $12 = $1;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__110__distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($__first,$__last,$0) {
 $__first = $__first|0;
 $__last = $__last|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__first;
 $2 = $__last;
 $3 = $2;
 $4 = $1;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__19__advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeENS_26random_access_iterator_tagE($__i,$__n,$0) {
 $__i = $__i|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__i;
 $2 = $__n;
 $3 = $2;
 $4 = $1;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + ($3<<2)|0);
 HEAP32[$4>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__113__unwrap_iterIPiEET_S2_($__i) {
 $__i = $__i|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__i;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16__copyIiiEENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS6_EE5valueEPS6_E4typeEPS3_SA_S7_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $1;
 $4 = $0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 $__n = $8;
 $9 = $2;
 $10 = $0;
 $11 = $__n;
 $12 = $11<<2;
 _memmove(($9|0),($10|0),($12|0))|0;
 $13 = $2;
 $14 = $__n;
 $15 = (($13) + ($14<<2)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiiEEvRS2_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = ($3|0)==(0|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$3>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($2)|0);
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($3)|0);
 $__old_size = $4;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv($3);
 $5 = $__old_size;
 __THREW__ = 0;
 invoke_vii(433,($3|0),($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __THREW__ = 0;
  invoke_vi(442,($3|0));
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if (!($9)) {
   STACKTOP = sp;return;
  }
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $1 = $10;
 $2 = $11;
 $12 = $1;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionERKS5_($agg$result,$__a) {
 $agg$result = $agg$result|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 5|0;
 $1 = sp + 4|0;
 $0 = $__a;
 $2 = $0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS5_($agg$result,$$byval_copy,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS5_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 21|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 $5 = sp + 20|0;
 $0 = $this;
 $1 = $__a;
 $6 = $0;
 $7 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $7;
 $8 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($2)|0);
 HEAP32[$6>>2] = $8;
 $9 = (($6) + 4|0);
 $10 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $10;
 $11 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($3)|0);
 HEAP32[$9>>2] = $11;
 $12 = (($6) + 8|0);
 $13 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $13;
 $14 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($4)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$5+0>>0]|0;
 __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_S6_($12,$14,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionERKS2_($agg$result,$__a) {
 $agg$result = $agg$result|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 5|0;
 $1 = sp + 4|0;
 $0 = $__a;
 $2 = $0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS2_($agg$result,$$byval_copy,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2ERKS2_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 21|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 $5 = sp + 20|0;
 $0 = $this;
 $1 = $__a;
 $6 = $0;
 $7 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $7;
 $8 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($2)|0);
 HEAP32[$6>>2] = $8;
 $9 = (($6) + 4|0);
 $10 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $10;
 $11 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($3)|0);
 HEAP32[$9>>2] = $11;
 $12 = (($6) + 8|0);
 $13 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $13;
 $14 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($4)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$5+0>>0]|0;
 __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_S3_($12,$14,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE7destroyIiEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9__destroyIiEEvNS_17integral_constantIbLb0EEERS2_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE7destroyIS4_EEvRS5_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9__destroyIS4_EEvNS_17integral_constantIbLb0EEERS5_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__13maxIjNS_6__lessIjjEEEERKT_S5_S5_T0_($__a,$__b,$__comp) {
 $__a = $__a|0;
 $__b = $__b|0;
 $__comp = $__comp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__b;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16__lessIjjEclERKjS3_($__comp,$2,$3)|0);
 if ($4) {
  $5 = $1;
  $7 = $5;
 } else {
  $6 = $0;
  $7 = $6;
 }
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__17forwardIRNS_9allocatorIdEEEERT_RNS_16remove_referenceIS4_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = (($3) + 4|0);
 $7 = $2;
 $8 = (__ZNSt3__17forwardIRNS_9allocatorIdEEEERT_RNS_16remove_referenceIS4_E4typeE($7)|0);
 HEAP32[$6>>2] = $8;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__14moveIPdEERT_S3_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPd($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__new_last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPdNS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNKSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE8max_sizeERKS2_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 $5 = (invoke_iii(443,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return ($5|0);
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 $10 = $2;
 ___cxa_call_unexpected(($10|0));
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__17forwardIPjEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardIRNS_9allocatorIjEEEERT_RNS_16remove_referenceIS4_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPjEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = (($3) + 4|0);
 $7 = $2;
 $8 = (__ZNSt3__17forwardIRNS_9allocatorIjEEEERT_RNS_16remove_referenceIS4_E4typeE($7)|0);
 HEAP32[$6>>2] = $8;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__19allocatorIjE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4<<2;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__14moveIPjEERT_S3_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPj($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__new_last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPjNS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNKSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19allocatorIjE10deallocateEPjj($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9__destroyIjEEvNS_17integral_constantIbLb0EEERS2_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardINS_9allocatorIcEEEERT_RNS_16remove_referenceIS3_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_Lj2EEC2ES5_($this,$__t2) {
 $this = $this|0;
 $__t2 = $__t2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 (__ZNSt3__17forwardINS_9allocatorIcEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__18distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_($__first,$__last) {
 $__first = $__first|0;
 $__last = $__last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__first;
 $1 = $__last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__110__distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIcEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIcE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__111char_traitsIcE6assignERcRKc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $1;
 $3 = HEAP8[$2>>0]|0;
 $4 = $0;
 HEAP8[$4>>0] = $3;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10__max_sizeENS_17integral_constantIbLb1EEERKS5_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__19allocatorIiEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIiE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS5_($agg$result,$0,$__a) {
 $agg$result = $agg$result|0;
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_S6_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $1 = sp;
 $2 = sp + 8|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 (__ZNSt3__17forwardINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEEERT_RNS_16remove_referenceIS6_E4typeE($__t2)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_S6_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS2_($agg$result,$0,$__a) {
 $agg$result = $agg$result|0;
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_S3_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $1 = sp;
 $2 = sp + 8|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 (__ZNSt3__17forwardINS_9allocatorIiEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_S3_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9__destroyIiEEvNS_17integral_constantIbLb0EEERS2_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9__destroyIS4_EEvNS_17integral_constantIbLb0EEERS5_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPdNS_17integral_constantIbLb0EEE($this,$__new_last,$0) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__new_last;
 $5 = $1;
 while(1) {
  $6 = $2;
  $7 = (($5) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6|0)!=($8|0);
  if (!($9)) {
   label = 7;
   break;
  }
  $10 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($5)|0);
  $11 = (($5) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($12) + -8|0);
  HEAP32[$11>>2] = $13;
  $14 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($13)|0);
  __THREW__ = 0;
  invoke_vii(422,($10|0),($14|0));
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $17 = ___cxa_find_matching_catch()|0;
 $18 = tempRet0;
 $3 = $17;
 $4 = $18;
 $19 = $3;
 ___cxa_call_unexpected(($19|0));
 // unreachable;
}
function __ZNKSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIjE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPjNS_17integral_constantIbLb0EEE($this,$__new_last,$0) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__new_last;
 $5 = $1;
 while(1) {
  $6 = $2;
  $7 = (($5) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6|0)!=($8|0);
  if (!($9)) {
   label = 7;
   break;
  }
  $10 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($5)|0);
  $11 = (($5) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($12) + -4|0);
  HEAP32[$11>>2] = $13;
  $14 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($13)|0);
  __THREW__ = 0;
  invoke_vii(426,($10|0),($14|0));
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $17 = ___cxa_find_matching_catch()|0;
 $18 = tempRet0;
 $3 = $17;
 $4 = $18;
 $19 = $3;
 ___cxa_call_unexpected(($19|0));
 // unreachable;
}
function __ZNKSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__110__distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($__first,$__last,$0) {
 $__first = $__first|0;
 $__last = $__last|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__first;
 $2 = $__last;
 $3 = $2;
 $4 = $1;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__19allocatorIcE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 178956970;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19allocatorIiE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 1073741823;
}
function __ZNSt3__17forwardINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEEERT_RNS_16remove_referenceIS6_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_S6_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 (__ZNSt3__17forwardINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEEERT_RNS_16remove_referenceIS6_E4typeE($__t2)|0);
 $3 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardINS_9allocatorIiEEEERT_RNS_16remove_referenceIS3_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_S3_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 (__ZNSt3__17forwardINS_9allocatorIiEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 $3 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19allocatorIjE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 1073741823;
}
function __ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function _strtoull_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoull($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = $1;
 return ($0|0);
}
function _strtoll_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoll($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = $1;
 return ($0|0);
}
function _isdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 $0 = $isdigit&1;
 return ($0|0);
}
function _isxdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_isxdigit($c)|0);
 return ($0|0);
}
function _mbrlen($s,$n,$st) {
 $s = $s|0;
 $n = $n|0;
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)!=(0|0);
 $1 = $0 ? $st : 1768;
 $2 = (_mbrtowc(0,$s,$n,$1)|0);
 return ($2|0);
}
function _mbrtowc($wc,$src,$n,$st) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$lcssa = 0, $$lcssa22 = 0, $$lcssa24 = 0, $$st = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c$04 = 0, $c$1 = 0, $c$2 = 0, $s$05 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($st|0)==(0|0);
 $$st = $1 ? 1776 : $st;
 $2 = HEAP32[$$st>>2]|0;
 $3 = ($src|0)==(0|0);
 L1: do {
  if ($3) {
   $4 = ($2|0)==(0);
   if ($4) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $5 = ($wc|0)==(0|0);
   if ($5) {
    HEAP32[$0>>2] = $0;
    $11 = $0;
   } else {
    $11 = $wc;
   }
   $6 = ($n|0)==(0);
   if ($6) {
    $$0 = -2;
    STACKTOP = sp;return ($$0|0);
   }
   $7 = ($2|0)==(0);
   do {
    if ($7) {
     $8 = HEAP8[$src>>0]|0;
     $9 = $8&255;
     $10 = ($8<<24>>24)>(-1);
     if ($10) {
      HEAP32[$11>>2] = $9;
      $12 = ($8<<24>>24)!=(0);
      $13 = $12&1;
      $$0 = $13;
      STACKTOP = sp;return ($$0|0);
     } else {
      $14 = (($9) + -194)|0;
      $15 = ($14>>>0)>(50);
      if ($15) {
       break L1;
      }
      $16 = (($src) + 1|0);
      $17 = (1560 + ($14<<2)|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (($n) + -1)|0;
      $20 = ($19|0)==(0);
      if ($20) {
       $c$2 = $18;
       break;
      } else {
       $$023 = $19;$c$04 = $18;$s$05 = $16;
       label = 11;
       break;
      }
     }
    } else {
     $$023 = $n;$c$04 = $2;$s$05 = $src;
     label = 11;
    }
   } while(0);
   do {
    if ((label|0) == 11) {
     $21 = HEAP8[$s$05>>0]|0;
     $22 = $21&255;
     $23 = $22 >>> 3;
     $24 = (($23) + -16)|0;
     $25 = $c$04 >> 26;
     $26 = (($23) + ($25))|0;
     $27 = $24 | $26;
     $28 = ($27>>>0)>(7);
     if ($28) {
      break L1;
     }
     $$1 = $$023;$32 = $21;$c$1 = $c$04;$s$1 = $s$05;
     while(1) {
      $29 = $c$1 << 6;
      $30 = (($s$1) + 1|0);
      $31 = $32&255;
      $33 = (($31) + -128)|0;
      $34 = $33 | $29;
      $35 = (($$1) + -1)|0;
      $36 = ($34|0)<(0);
      if (!($36)) {
       $$lcssa = $34;$$lcssa24 = $35;
       label = 14;
       break;
      }
      $38 = ($35|0)==(0);
      if ($38) {
       $$lcssa22 = $34;
       label = 17;
       break;
      }
      $39 = HEAP8[$30>>0]|0;
      $40 = $39 & -64;
      $41 = ($40<<24>>24)==(-128);
      if ($41) {
       $$1 = $35;$32 = $39;$c$1 = $34;$s$1 = $30;
      } else {
       label = 19;
       break;
      }
     }
     if ((label|0) == 14) {
      HEAP32[$$st>>2] = 0;
      HEAP32[$11>>2] = $$lcssa;
      $37 = (($n) - ($$lcssa24))|0;
      $$0 = $37;
      STACKTOP = sp;return ($$0|0);
     }
     else if ((label|0) == 17) {
      $c$2 = $$lcssa22;
      break;
     }
     else if ((label|0) == 19) {
      break L1;
     }
    }
   } while(0);
   HEAP32[$$st>>2] = $c$2;
   $$0 = -2;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 HEAP32[$$st>>2] = 0;
 $42 = (___errno_location()|0);
 HEAP32[$42>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _mbsinit($st) {
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)==(0|0);
 if ($0) {
  $4 = 1;
 } else {
  $1 = HEAP32[$st>>2]|0;
  $2 = ($1|0)==(0);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function _mbsnrtowcs($wcs,$src,$n,$wn,$st) {
 $wcs = $wcs|0;
 $src = $src|0;
 $n = $n|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0$lcssa = 0, $$0$lcssa$ph = 0, $$014$ = 0, $$014$lcssa = 0, $$014$lcssa$ph = 0, $$01428 = 0, $$031 = 0, $$115 = 0, $$2 = 0, $$3 = 0, $$lcssa = 0, $$lcssa61 = 0, $$old4 = 0, $$old7 = 0, $$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$0$lcssa = 0, $cnt$0$lcssa$ph = 0, $cnt$029 = 0, $cnt$2 = 0, $cnt$2$lcssa = 0, $cnt$3 = 0, $or$cond = 0, $or$cond10 = 0, $or$cond13 = 0, $or$cond27 = 0, $or$cond5 = 0, $or$cond8 = 0;
 var $s = 0, $wbuf = 0, $wcs$ = 0, $wn$ = 0, $ws$0$lcssa = 0, $ws$0$lcssa$ph = 0, $ws$030 = 0, $ws$1 = 0, $ws$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $wbuf = sp + 8|0;
 $s = sp;
 $0 = HEAP32[$src>>2]|0;
 HEAP32[$s>>2] = $0;
 $1 = ($wcs|0)!=(0|0);
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 $2 = ($0|0)!=(0|0);
 $3 = ($wn$|0)!=(0);
 $or$cond27 = $3 & $2;
 do {
  if ($or$cond27) {
   $$01428 = $wn$;$$031 = $n;$32 = $0;$cnt$029 = 0;$ws$030 = $wcs$;
   while(1) {
    $4 = $$031 >>> 2;
    $5 = ($4>>>0)>=($$01428>>>0);
    $6 = ($$031>>>0)>(131);
    $or$cond13 = $6 | $5;
    if (!($or$cond13)) {
     $$0$lcssa$ph = $$031;$$014$lcssa$ph = $$01428;$$ph = $32;$cnt$0$lcssa$ph = $cnt$029;$ws$0$lcssa$ph = $ws$030;
     label = 8;
     break;
    }
    $$014$ = $5 ? $$01428 : $4;
    $7 = (($$031) - ($$014$))|0;
    $8 = (_mbsrtowcs($ws$030,$s,$$014$,$st)|0);
    $9 = ($8|0)==(-1);
    if ($9) {
     label = 17;
     break;
    }
    $10 = ($ws$030|0)==($wbuf|0);
    if ($10) {
     $$115 = $$01428;$ws$1 = $wbuf;
    } else {
     $11 = (($ws$030) + ($8<<2)|0);
     $12 = (($$01428) - ($8))|0;
     $$115 = $12;$ws$1 = $11;
    }
    $13 = (($8) + ($cnt$029))|0;
    $14 = HEAP32[$s>>2]|0;
    $15 = ($14|0)!=(0|0);
    $16 = ($$115|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$01428 = $$115;$$031 = $7;$32 = $14;$cnt$029 = $13;$ws$030 = $ws$1;
    } else {
     $$0$lcssa$ph = $7;$$014$lcssa$ph = $$115;$$ph = $14;$cnt$0$lcssa$ph = $13;$ws$0$lcssa$ph = $ws$1;
     label = 8;
     break;
    }
   }
   if ((label|0) == 8) {
    $$0$lcssa = $$0$lcssa$ph;$$014$lcssa = $$014$lcssa$ph;$17 = $$ph;$cnt$0$lcssa = $cnt$0$lcssa$ph;$ws$0$lcssa = $ws$0$lcssa$ph;
    label = 9;
    break;
   }
   else if ((label|0) == 17) {
    $cnt$3 = -1;
    break;
   }
  } else {
   $$0$lcssa = $n;$$014$lcssa = $wn$;$17 = $0;$cnt$0$lcssa = 0;$ws$0$lcssa = $wcs$;
   label = 9;
  }
 } while(0);
 do {
  if ((label|0) == 9) {
   $18 = ($17|0)!=(0|0);
   $19 = ($$014$lcssa|0)!=(0);
   $or$cond5 = $19 & $18;
   $20 = ($$0$lcssa|0)!=(0);
   $or$cond8 = $20 & $or$cond5;
   if ($or$cond8) {
    $$2 = $$0$lcssa;$$3 = $$014$lcssa;$21 = $17;$cnt$2 = $cnt$0$lcssa;$ws$2 = $ws$0$lcssa;
    while(1) {
     $22 = (_mbrtowc($ws$2,$21,$$2,$st)|0);
     $23 = (($22) + 2)|0;
     $24 = ($23>>>0)<(3);
     if ($24) {
      $$lcssa = $22;$cnt$2$lcssa = $cnt$2;
      break;
     }
     $25 = HEAP32[$s>>2]|0;
     $26 = (($25) + ($22)|0);
     HEAP32[$s>>2] = $26;
     $27 = (($$2) - ($22))|0;
     $28 = (($ws$2) + 4|0);
     $29 = (($$3) + -1)|0;
     $30 = (($cnt$2) + 1)|0;
     $$old4 = ($29|0)!=(0);
     $$old7 = ($$2|0)!=($22|0);
     $or$cond10 = $$old4 & $$old7;
     if ($or$cond10) {
      $$2 = $27;$$3 = $29;$21 = $26;$cnt$2 = $30;$ws$2 = $28;
     } else {
      $$lcssa61 = $30;
      label = 16;
      break;
     }
    }
    if ((label|0) == 16) {
     $cnt$3 = $$lcssa61;
     break;
    }
    if ((($$lcssa|0) == 0)) {
     HEAP32[$s>>2] = 0;
     $cnt$3 = $cnt$2$lcssa;
     break;
    } else if ((($$lcssa|0) == -1)) {
     $cnt$3 = -1;
     break;
    } else {
     HEAP32[$st>>2] = 0;
     $cnt$3 = $cnt$2$lcssa;
     break;
    }
   } else {
    $cnt$3 = $cnt$0$lcssa;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $31 = HEAP32[$s>>2]|0;
 HEAP32[$src>>2] = $31;
 STACKTOP = sp;return ($cnt$3|0);
}
function _mbsrtowcs($ws,$src,$wn,$st) {
 $ws = $ws|0;
 $src = $src|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$03$ph = 0, $$1 = 0, $$1$lcssa = 0, $$14$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0;
 var $$5 = 0, $$5$lcssa = 0, $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$in = 0, $$lcssa = 0, $$lcssa53 = 0, $$lcssa54 = 0, $$lcssa55 = 0, $$lcssa59 = 0, $$lcssa61 = 0, $$lcssa62 = 0, $$lcssa63 = 0, $$lcssa67 = 0, $$lcssa69 = 0, $$old1 = 0, $$pre$pre = 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $or$cond = 0, $s$0 = 0, $s$0$ph = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0;
 var $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0, $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$src>>2]|0;
 $1 = ($st|0)==(0|0);
 if ($1) {
  label = 5;
 } else {
  $2 = HEAP32[$st>>2]|0;
  $3 = ($2|0)==(0);
  if ($3) {
   label = 5;
  } else {
   $4 = ($ws|0)==(0|0);
   if ($4) {
    $$36 = $wn;$c$2 = $2;$s$3 = $0;
    label = 20;
   } else {
    HEAP32[$st>>2] = 0;
    $$3 = $ws;$$7 = $wn;$c$4 = $2;$s$8 = $0;
    label = 43;
   }
  }
 }
 if ((label|0) == 5) {
  $5 = ($ws|0)==(0|0);
  if ($5) {
   $$03$ph = $wn;$s$0$ph = $0;
   label = 6;
  } else {
   $$02$ph = $ws;$$47$ph = $wn;$s$5$ph = $0;
   label = 7;
  }
 }
 L7: while(1) {
  if ((label|0) == 6) {
   label = 0;
   $$03 = $$03$ph;$s$0 = $s$0$ph;
   while(1) {
    $7 = HEAP8[$s$0>>0]|0;
    $8 = $7&255;
    $9 = (($8) + -1)|0;
    $10 = ($9>>>0)<(127);
    if ($10) {
     $11 = $s$0;
     $12 = $11 & 3;
     $13 = ($12|0)==(0);
     if ($13) {
      $14 = HEAP32[$s$0>>2]|0;
      $15 = (($14) + -16843009)|0;
      $16 = $15 | $14;
      $17 = $16 & -2139062144;
      $18 = ($17|0)==(0);
      if ($18) {
       $$1415 = $$03;$s$116 = $s$0;
       while(1) {
        $19 = (($s$116) + 4|0);
        $20 = (($$1415) + -4)|0;
        $21 = HEAP32[$19>>2]|0;
        $22 = (($21) + -16843009)|0;
        $23 = $22 | $21;
        $24 = $23 & -2139062144;
        $25 = ($24|0)==(0);
        if ($25) {
         $$1415 = $20;$s$116 = $19;
        } else {
         $$lcssa = $19;$$lcssa53 = $20;$$lcssa54 = $21;
         break;
        }
       }
       $$14$lcssa = $$lcssa53;$$in = $$lcssa54;$s$1$lcssa = $$lcssa;
      } else {
       $$14$lcssa = $$03;$$in = $14;$s$1$lcssa = $s$0;
      }
      $26 = $$in&255;
      $$25 = $$14$lcssa;$28 = $26;$s$2 = $s$1$lcssa;
     } else {
      $$25 = $$03;$28 = $7;$s$2 = $s$0;
     }
    } else {
     $$25 = $$03;$28 = $7;$s$2 = $s$0;
    }
    $27 = $28&255;
    $29 = (($27) + -1)|0;
    $30 = ($29>>>0)<(127);
    if (!($30)) {
     $$25$lcssa = $$25;$$lcssa55 = $27;$s$2$lcssa = $s$2;
     break;
    }
    $31 = (($s$2) + 1|0);
    $32 = (($$25) + -1)|0;
    $$03 = $32;$s$0 = $31;
   }
   $33 = (($$lcssa55) + -194)|0;
   $34 = ($33>>>0)>(50);
   if ($34) {
    $$434 = $ws;$$833 = $$25$lcssa;$s$1035 = $s$2$lcssa;
    label = 54;
    break;
   }
   $35 = (($s$2$lcssa) + 1|0);
   $36 = (1560 + ($33<<2)|0);
   $37 = HEAP32[$36>>2]|0;
   $$36 = $$25$lcssa;$c$2 = $37;$s$3 = $35;
   label = 20;
   continue;
  }
  else if ((label|0) == 7) {
   label = 0;
   $6 = ($$47$ph|0)==(0);
   if ($6) {
    $s$5$lcssa = $s$5$ph;
    label = 31;
    break;
   }
   $$0219 = $$02$ph;$$4718 = $$47$ph;$s$520 = $s$5$ph;
   while(1) {
    $63 = HEAP8[$s$520>>0]|0;
    $64 = $63&255;
    $65 = (($64) + -1)|0;
    $66 = ($65>>>0)<(127);
    do {
     if ($66) {
      $67 = $s$520;
      $68 = $67 & 3;
      $69 = ($68|0)==(0);
      $70 = ($$4718>>>0)>(4);
      $or$cond = $70 & $69;
      if ($or$cond) {
       $$1 = $$0219;$$5 = $$4718;$s$6 = $s$520;
       while(1) {
        $71 = HEAP32[$s$6>>2]|0;
        $72 = (($71) + -16843009)|0;
        $73 = $72 | $71;
        $74 = $73 & -2139062144;
        $75 = ($74|0)==(0);
        if (!($75)) {
         $$1$lcssa = $$1;$$5$lcssa = $$5;$$lcssa59 = $71;$s$6$lcssa = $s$6;
         label = 38;
         break;
        }
        $76 = (($s$6) + 1|0);
        $77 = $71 & 255;
        $78 = (($$1) + 4|0);
        HEAP32[$$1>>2] = $77;
        $79 = (($s$6) + 2|0);
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $82 = (($$1) + 8|0);
        HEAP32[$78>>2] = $81;
        $83 = (($s$6) + 3|0);
        $84 = HEAP8[$79>>0]|0;
        $85 = $84&255;
        $86 = (($$1) + 12|0);
        HEAP32[$82>>2] = $85;
        $87 = (($s$6) + 4|0);
        $88 = HEAP8[$83>>0]|0;
        $89 = $88&255;
        $90 = (($$1) + 16|0);
        HEAP32[$86>>2] = $89;
        $91 = (($$5) + -4)|0;
        $$old1 = ($91>>>0)>(4);
        if ($$old1) {
         $$1 = $90;$$5 = $91;$s$6 = $87;
        } else {
         $$lcssa61 = $87;$$lcssa62 = $90;$$lcssa63 = $91;
         label = 37;
         break;
        }
       }
       if ((label|0) == 37) {
        label = 0;
        $$pre$pre = HEAP8[$$lcssa61>>0]|0;
        $$2 = $$lcssa62;$$6 = $$lcssa63;$94 = $$pre$pre;$s$7 = $$lcssa61;
        break;
       }
       else if ((label|0) == 38) {
        label = 0;
        $92 = $$lcssa59&255;
        $$2 = $$1$lcssa;$$6 = $$5$lcssa;$94 = $92;$s$7 = $s$6$lcssa;
        break;
       }
      } else {
       $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
      }
     } else {
      $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
     }
    } while(0);
    $93 = $94&255;
    $95 = (($93) + -1)|0;
    $96 = ($95>>>0)<(127);
    if (!($96)) {
     $$2$lcssa = $$2;$$6$lcssa = $$6;$$lcssa67 = $93;$s$7$lcssa = $s$7;
     break;
    }
    $97 = (($s$7) + 1|0);
    $98 = (($$2) + 4|0);
    HEAP32[$$2>>2] = $93;
    $99 = (($$6) + -1)|0;
    $100 = ($99|0)==(0);
    if ($100) {
     $$lcssa69 = $97;
     label = 30;
     break L7;
    } else {
     $$0219 = $98;$$4718 = $99;$s$520 = $97;
    }
   }
   $101 = (($$lcssa67) + -194)|0;
   $102 = ($101>>>0)>(50);
   if ($102) {
    $$434 = $$2$lcssa;$$833 = $$6$lcssa;$s$1035 = $s$7$lcssa;
    label = 54;
    break;
   }
   $103 = (($s$7$lcssa) + 1|0);
   $104 = (1560 + ($101<<2)|0);
   $105 = HEAP32[$104>>2]|0;
   $$3 = $$2$lcssa;$$7 = $$6$lcssa;$c$4 = $105;$s$8 = $103;
   label = 43;
   continue;
  }
  else if ((label|0) == 20) {
   label = 0;
   $38 = HEAP8[$s$3>>0]|0;
   $39 = $38&255;
   $40 = $39 >>> 3;
   $41 = (($40) + -16)|0;
   $42 = $c$2 >> 26;
   $43 = (($40) + ($42))|0;
   $44 = $41 | $43;
   $45 = ($44>>>0)>(7);
   if ($45) {
    label = 21;
    break;
   }
   $47 = (($s$3) + 1|0);
   $48 = $c$2 & 33554432;
   $49 = ($48|0)==(0);
   if ($49) {
    $s$4 = $47;
   } else {
    $50 = HEAP8[$47>>0]|0;
    $51 = $50 & -64;
    $52 = ($51<<24>>24)==(-128);
    if (!($52)) {
     label = 24;
     break;
    }
    $54 = (($s$3) + 2|0);
    $55 = $c$2 & 524288;
    $56 = ($55|0)==(0);
    if ($56) {
     $s$4 = $54;
    } else {
     $57 = HEAP8[$54>>0]|0;
     $58 = $57 & -64;
     $59 = ($58<<24>>24)==(-128);
     if (!($59)) {
      label = 27;
      break;
     }
     $61 = (($s$3) + 3|0);
     $s$4 = $61;
    }
   }
   $62 = (($$36) + -1)|0;
   $$03$ph = $62;$s$0$ph = $s$4;
   label = 6;
   continue;
  }
  else if ((label|0) == 43) {
   label = 0;
   $106 = HEAP8[$s$8>>0]|0;
   $107 = $106&255;
   $108 = $107 >>> 3;
   $109 = (($108) + -16)|0;
   $110 = $c$4 >> 26;
   $111 = (($108) + ($110))|0;
   $112 = $109 | $111;
   $113 = ($112>>>0)>(7);
   if ($113) {
    label = 44;
    break;
   }
   $115 = $c$4 << 6;
   $116 = (($s$8) + 1|0);
   $117 = (($107) + -128)|0;
   $118 = $117 | $115;
   $119 = ($118|0)<(0);
   if ($119) {
    $120 = HEAP8[$116>>0]|0;
    $121 = $120&255;
    $122 = $121 & 192;
    $123 = ($122|0)==(128);
    if (!($123)) {
     label = 47;
     break;
    }
    $125 = $118 << 6;
    $126 = (($s$8) + 2|0);
    $127 = (($121) + -128)|0;
    $128 = $127 | $125;
    $129 = ($128|0)<(0);
    if ($129) {
     $130 = HEAP8[$126>>0]|0;
     $131 = $130&255;
     $132 = $131 & 192;
     $133 = ($132|0)==(128);
     if (!($133)) {
      label = 50;
      break;
     }
     $135 = $128 << 6;
     $136 = (($s$8) + 3|0);
     $137 = (($131) + -128)|0;
     $138 = $137 | $135;
     $c$5 = $138;$s$9 = $136;
    } else {
     $c$5 = $128;$s$9 = $126;
    }
   } else {
    $c$5 = $118;$s$9 = $116;
   }
   $139 = (($$3) + 4|0);
   HEAP32[$$3>>2] = $c$5;
   $140 = (($$7) + -1)|0;
   $$02$ph = $139;$$47$ph = $140;$s$5$ph = $s$9;
   label = 7;
   continue;
  }
 }
 if ((label|0) == 21) {
  $46 = (($s$3) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $46;
  label = 53;
 }
 else if ((label|0) == 24) {
  $53 = (($s$3) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $53;
  label = 53;
 }
 else if ((label|0) == 27) {
  $60 = (($s$3) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $60;
  label = 53;
 }
 else if ((label|0) == 30) {
  $s$5$lcssa = $$lcssa69;
  label = 31;
 }
 else if ((label|0) == 44) {
  $114 = (($s$8) + -1|0);
  $$4 = $$3;$$8 = $$7;$c$6 = $c$4;$s$10 = $114;
  label = 53;
 }
 else if ((label|0) == 47) {
  $124 = (($s$8) + -1|0);
  $$48 = $$3;$s$109 = $124;
 }
 else if ((label|0) == 50) {
  $134 = (($s$8) + -1|0);
  $$48 = $$3;$s$109 = $134;
 }
 if ((label|0) == 31) {
  HEAP32[$src>>2] = $s$5$lcssa;
  $$0 = $wn;
  return ($$0|0);
 }
 else if ((label|0) == 53) {
  $141 = ($c$6|0)==(0);
  if ($141) {
   $$434 = $$4;$$833 = $$8;$s$1035 = $s$10;
   label = 54;
  } else {
   $$48 = $$4;$s$109 = $s$10;
  }
 }
 if ((label|0) == 54) {
  $142 = HEAP8[$s$1035>>0]|0;
  $143 = ($142<<24>>24)==(0);
  if ($143) {
   $144 = ($$434|0)==(0|0);
   if (!($144)) {
    HEAP32[$$434>>2] = 0;
    HEAP32[$src>>2] = 0;
   }
   $145 = (($wn) - ($$833))|0;
   $$0 = $145;
   return ($$0|0);
  } else {
   $$48 = $$434;$s$109 = $s$1035;
  }
 }
 $146 = (___errno_location()|0);
 HEAP32[$146>>2] = 84;
 $147 = ($$48|0)==(0|0);
 if ($147) {
  $$0 = -1;
  return ($$0|0);
 }
 HEAP32[$src>>2] = $s$109;
 $$0 = -1;
 return ($$0|0);
}
function _mbtowc($wc,$src,$n) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($src|0)==(0|0);
 if ($1) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ($n|0)==(0);
 do {
  if (!($2)) {
   $3 = ($wc|0)==(0|0);
   if ($3) {
    HEAP32[$0>>2] = $0;
    $7 = $0;
   } else {
    $7 = $wc;
   }
   $4 = HEAP8[$src>>0]|0;
   $5 = $4&255;
   $6 = ($4<<24>>24)>(-1);
   if ($6) {
    HEAP32[$7>>2] = $5;
    $8 = ($4<<24>>24)!=(0);
    $9 = $8&1;
    $$0 = $9;
    STACKTOP = sp;return ($$0|0);
   }
   $10 = (($5) + -194)|0;
   $11 = ($10>>>0)>(50);
   if (!($11)) {
    $12 = (($src) + 1|0);
    $13 = (1560 + ($10<<2)|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($n>>>0)<(4);
    if ($15) {
     $16 = ($n*6)|0;
     $17 = (($16) + -6)|0;
     $18 = -2147483648 >>> $17;
     $19 = $14 & $18;
     $20 = ($19|0)==(0);
     if (!($20)) {
      break;
     }
    }
    $21 = HEAP8[$12>>0]|0;
    $22 = $21&255;
    $23 = $22 >>> 3;
    $24 = (($23) + -16)|0;
    $25 = $14 >> 26;
    $26 = (($23) + ($25))|0;
    $27 = $24 | $26;
    $28 = ($27>>>0)>(7);
    if (!($28)) {
     $29 = $14 << 6;
     $30 = (($22) + -128)|0;
     $31 = $30 | $29;
     $32 = ($31|0)<(0);
     if (!($32)) {
      HEAP32[$7>>2] = $31;
      $$0 = 2;
      STACKTOP = sp;return ($$0|0);
     }
     $33 = (($src) + 2|0);
     $34 = HEAP8[$33>>0]|0;
     $35 = $34&255;
     $36 = $35 & 192;
     $37 = ($36|0)==(128);
     if ($37) {
      $38 = $31 << 6;
      $39 = (($35) + -128)|0;
      $40 = $39 | $38;
      $41 = ($40|0)<(0);
      if (!($41)) {
       HEAP32[$7>>2] = $40;
       $$0 = 3;
       STACKTOP = sp;return ($$0|0);
      }
      $42 = (($src) + 3|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = $43&255;
      $45 = $44 & 192;
      $46 = ($45|0)==(128);
      if ($46) {
       $47 = $40 << 6;
       $48 = (($44) + -128)|0;
       $49 = $48 | $47;
       HEAP32[$7>>2] = $49;
       $$0 = 4;
       STACKTOP = sp;return ($$0|0);
      }
     }
    }
   }
  }
 } while(0);
 $50 = (___errno_location()|0);
 HEAP32[$50>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _wcsnrtombs($dst,$wcs,$wn,$n,$st) {
 $dst = $dst|0;
 $wcs = $wcs|0;
 $wn = $wn|0;
 $n = $n|0;
 $st = $st|0;
 var $$0$lcssa = 0, $$0$lcssa$ph = 0, $$014$$0 = 0, $$014$lcssa = 0, $$014$lcssa$ph = 0, $$01428 = 0, $$031 = 0, $$115 = 0, $$2 = 0, $$3 = 0, $$lcssa = 0, $$lcssa61 = 0, $$old4 = 0, $$old7 = 0, $$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $cnt$0$lcssa = 0, $cnt$0$lcssa$ph = 0, $cnt$029 = 0, $cnt$2 = 0, $cnt$2$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $or$cond = 0, $or$cond10 = 0;
 var $or$cond13 = 0, $or$cond27 = 0, $or$cond5 = 0, $or$cond8 = 0, $s$0$lcssa = 0, $s$0$lcssa$ph = 0, $s$030 = 0, $s$1 = 0, $s$2 = 0, $ws = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $buf = sp + 8|0;
 $ws = sp;
 $0 = HEAP32[$wcs>>2]|0;
 HEAP32[$ws>>2] = $0;
 $1 = ($dst|0)!=(0|0);
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 $2 = ($0|0)!=(0|0);
 $3 = ($n$|0)!=(0);
 $or$cond27 = $3 & $2;
 do {
  if ($or$cond27) {
   $$01428 = $n$;$$031 = $wn;$33 = $0;$cnt$029 = 0;$s$030 = $dst$;
   while(1) {
    $4 = ($$031>>>0)>=($$01428>>>0);
    $5 = ($$031>>>0)>(32);
    $or$cond13 = $4 | $5;
    if (!($or$cond13)) {
     $$0$lcssa$ph = $$031;$$014$lcssa$ph = $$01428;$$ph = $33;$cnt$0$lcssa$ph = $cnt$029;$s$0$lcssa$ph = $s$030;
     label = 8;
     break;
    }
    $$014$$0 = $4 ? $$01428 : $$031;
    $6 = (($$031) - ($$014$$0))|0;
    $7 = (_wcsrtombs($s$030,$ws,$$014$$0,0)|0);
    $8 = ($7|0)==(-1);
    if ($8) {
     label = 16;
     break;
    }
    $9 = ($s$030|0)==($buf|0);
    if ($9) {
     $$115 = $$01428;$s$1 = $buf;
    } else {
     $10 = (($s$030) + ($7)|0);
     $11 = (($$01428) - ($7))|0;
     $$115 = $11;$s$1 = $10;
    }
    $12 = (($7) + ($cnt$029))|0;
    $13 = HEAP32[$ws>>2]|0;
    $14 = ($13|0)!=(0|0);
    $15 = ($$115|0)!=(0);
    $or$cond = $15 & $14;
    if ($or$cond) {
     $$01428 = $$115;$$031 = $6;$33 = $13;$cnt$029 = $12;$s$030 = $s$1;
    } else {
     $$0$lcssa$ph = $6;$$014$lcssa$ph = $$115;$$ph = $13;$cnt$0$lcssa$ph = $12;$s$0$lcssa$ph = $s$1;
     label = 8;
     break;
    }
   }
   if ((label|0) == 8) {
    $$0$lcssa = $$0$lcssa$ph;$$014$lcssa = $$014$lcssa$ph;$16 = $$ph;$cnt$0$lcssa = $cnt$0$lcssa$ph;$s$0$lcssa = $s$0$lcssa$ph;
    label = 9;
    break;
   }
   else if ((label|0) == 16) {
    $cnt$3 = -1;
    break;
   }
  } else {
   $$0$lcssa = $wn;$$014$lcssa = $n$;$16 = $0;$cnt$0$lcssa = 0;$s$0$lcssa = $dst$;
   label = 9;
  }
 } while(0);
 do {
  if ((label|0) == 9) {
   $17 = ($16|0)!=(0|0);
   $18 = ($$014$lcssa|0)!=(0);
   $or$cond5 = $18 & $17;
   $19 = ($$0$lcssa|0)!=(0);
   $or$cond8 = $19 & $or$cond5;
   if ($or$cond8) {
    $$2 = $$0$lcssa;$$3 = $$014$lcssa;$21 = $16;$cnt$2 = $cnt$0$lcssa;$s$2 = $s$0$lcssa;
    while(1) {
     $20 = HEAP32[$21>>2]|0;
     $22 = (_wcrtomb($s$2,$20,0)|0);
     $23 = (($22) + 1)|0;
     $24 = ($23>>>0)<(2);
     if ($24) {
      $$lcssa = $22;$cnt$2$lcssa = $cnt$2;
      break;
     }
     $26 = HEAP32[$ws>>2]|0;
     $27 = (($26) + 4|0);
     HEAP32[$ws>>2] = $27;
     $28 = (($$2) + -1)|0;
     $29 = (($s$2) + ($22)|0);
     $30 = (($$3) - ($22))|0;
     $31 = (($cnt$2) + 1)|0;
     $$old4 = ($$3|0)!=($22|0);
     $$old7 = ($28|0)!=(0);
     $or$cond10 = $$old7 & $$old4;
     if ($or$cond10) {
      $$2 = $28;$$3 = $30;$21 = $27;$cnt$2 = $31;$s$2 = $29;
     } else {
      $$lcssa61 = $31;
      label = 15;
      break;
     }
    }
    if ((label|0) == 15) {
     $cnt$3 = $$lcssa61;
     break;
    }
    $25 = ($$lcssa|0)==(0);
    if ($25) {
     HEAP32[$ws>>2] = 0;
     $cnt$3 = $cnt$2$lcssa;
    } else {
     $cnt$3 = -1;
    }
   } else {
    $cnt$3 = $cnt$0$lcssa;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $32 = HEAP32[$ws>>2]|0;
 HEAP32[$wcs>>2] = $32;
 STACKTOP = sp;return ($cnt$3|0);
}
function _wcsrtombs($s,$ws,$n,$st) {
 $s = $s|0;
 $ws = $ws|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$0$ph = 0, $$0$ph58 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$1$lcssa = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$35$lcssa = 0, $$422 = 0, $$422$lcssa = 0;
 var $$422$lcssa63 = 0, $$5 = 0, $$pn = 0, $$pre = 0, $$pre43 = 0, $$pre44 = 0, $$pre45 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $buf = sp;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $2 = HEAP32[$ws>>2]|0;
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)==(0);
  if ($4) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $$0218 = 0;$5 = $3;$ws2$019 = $2;
  while(1) {
   $6 = ($5>>>0)>(127);
   if ($6) {
    $7 = (_wcrtomb($buf,$5,0)|0);
    $8 = ($7|0)==(-1);
    if ($8) {
     $$0$ph = -1;
     break;
    } else {
     $$pn = $7;
    }
   } else {
    $$pn = 1;
   }
   $$13 = (($$pn) + ($$0218))|0;
   $9 = (($ws2$019) + 4|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $$0$ph = $$13;
    break;
   } else {
    $$0218 = $$13;$5 = $10;$ws2$019 = $9;
   }
  }
  $$0 = $$0$ph;
  STACKTOP = sp;return ($$0|0);
 }
 $1 = ($n>>>0)>(3);
 do {
  if ($1) {
   $$pre = HEAP32[$ws>>2]|0;
   $$0129 = $s;$$2428 = $n;$14 = $$pre;
   while(1) {
    $13 = HEAP32[$14>>2]|0;
    $15 = (($13) + -1)|0;
    $16 = ($15>>>0)>(126);
    if ($16) {
     $17 = ($13|0)==(0);
     if ($17) {
      $$0129$lcssa = $$0129;$$2428$lcssa = $$2428;
      label = 14;
      break;
     }
     $19 = (_wcrtomb($$0129,$13,0)|0);
     $20 = ($19|0)==(-1);
     if ($20) {
      label = 30;
      break;
     }
     $21 = (($$0129) + ($19)|0);
     $22 = (($$2428) - ($19))|0;
     $$1 = $21;$$35 = $22;$27 = $14;
    } else {
     $23 = $13&255;
     $24 = (($$0129) + 1|0);
     HEAP8[$$0129>>0] = $23;
     $25 = (($$2428) + -1)|0;
     $$pre43 = HEAP32[$ws>>2]|0;
     $$1 = $24;$$35 = $25;$27 = $$pre43;
    }
    $26 = (($27) + 4|0);
    HEAP32[$ws>>2] = $26;
    $28 = ($$35>>>0)>(3);
    if ($28) {
     $$0129 = $$1;$$2428 = $$35;$14 = $26;
    } else {
     $$1$lcssa = $$1;$$35$lcssa = $$35;
     label = 9;
     break;
    }
   }
   if ((label|0) == 9) {
    $$01$lcssa = $$1$lcssa;$$24$lcssa = $$35$lcssa;
    break;
   }
   else if ((label|0) == 14) {
    HEAP8[$$0129$lcssa>>0] = 0;
    HEAP32[$ws>>2] = 0;
    $18 = (($n) - ($$2428$lcssa))|0;
    $$0 = $18;
    STACKTOP = sp;return ($$0|0);
   }
   else if ((label|0) == 30) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $$01$lcssa = $s;$$24$lcssa = $n;
  }
 } while(0);
 $12 = ($$24$lcssa|0)==(0);
 if ($12) {
  $$0 = $n;
  STACKTOP = sp;return ($$0|0);
 }
 $$pre44 = HEAP32[$ws>>2]|0;
 $$223 = $$01$lcssa;$$422 = $$24$lcssa;$30 = $$pre44;
 while(1) {
  $29 = HEAP32[$30>>2]|0;
  $31 = (($29) + -1)|0;
  $32 = ($31>>>0)>(126);
  if ($32) {
   $33 = ($29|0)==(0);
   if ($33) {
    $$223$lcssa = $$223;$$422$lcssa = $$422;
    label = 21;
    break;
   }
   $35 = (_wcrtomb($buf,$29,0)|0);
   $36 = ($35|0)==(-1);
   if ($36) {
    $$0$ph58 = -1;
    label = 29;
    break;
   }
   $37 = ($$422>>>0)<($35>>>0);
   if ($37) {
    $$422$lcssa63 = $$422;
    label = 24;
    break;
   }
   $39 = HEAP32[$30>>2]|0;
   (_wcrtomb($$223,$39,0)|0);
   $40 = (($$223) + ($35)|0);
   $41 = (($$422) - ($35))|0;
   $$3 = $40;$$5 = $41;$46 = $30;
  } else {
   $42 = $29&255;
   $43 = (($$223) + 1|0);
   HEAP8[$$223>>0] = $42;
   $44 = (($$422) + -1)|0;
   $$pre45 = HEAP32[$ws>>2]|0;
   $$3 = $43;$$5 = $44;$46 = $$pre45;
  }
  $45 = (($46) + 4|0);
  HEAP32[$ws>>2] = $45;
  $47 = ($$5|0)==(0);
  if ($47) {
   $$0$ph58 = $n;
   label = 29;
   break;
  } else {
   $$223 = $$3;$$422 = $$5;$30 = $45;
  }
 }
 if ((label|0) == 21) {
  HEAP8[$$223$lcssa>>0] = 0;
  HEAP32[$ws>>2] = 0;
  $34 = (($n) - ($$422$lcssa))|0;
  $$0 = $34;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 24) {
  $38 = (($n) - ($$422$lcssa63))|0;
  $$0 = $38;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 29) {
  $$0 = $$0$ph58;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function ___string_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k$0 = 0, $k$0$len = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 84|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($len) + 256)|0;
 $3 = (_memchr($1,0,$2)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  $k$0 = $2;
 } else {
  $5 = $3;
  $6 = $1;
  $7 = (($5) - ($6))|0;
  $k$0 = $7;
 }
 $8 = ($k$0>>>0)<($len>>>0);
 $k$0$len = $8 ? $k$0 : $len;
 _memcpy(($buf|0),($1|0),($k$0$len|0))|0;
 $9 = (($1) + ($k$0$len)|0);
 $10 = (($f) + 4|0);
 HEAP32[$10>>2] = $9;
 $11 = (($1) + ($k$0)|0);
 $12 = (($f) + 8|0);
 HEAP32[$12>>2] = $11;
 HEAP32[$0>>2] = $11;
 return ($k$0$len|0);
}
function _sscanf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsscanf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vasprintf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp;
 $0 = (_malloc(240)|0);
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $$0 = -1;
  } else {
   $vacopy_currentptr = HEAP32[$ap>>2]|0;
   HEAP32[$ap2>>2] = $vacopy_currentptr;
   $2 = (_vsnprintf($0,240,$fmt,$ap2)|0);
   $3 = ($2>>>0)<(240);
   if ($3) {
    $4 = (($2) + 1)|0;
    $5 = (_realloc($0,$4)|0);
    $6 = ($5|0)!=(0|0);
    $7 = $6 ? $5 : $0;
    HEAP32[$s>>2] = $7;
    $$0 = $2;
    break;
   }
   _free($0);
   $8 = ($2|0)<(0);
   if ($8) {
    $$0 = -1;
   } else {
    $9 = (($2) + 1)|0;
    $10 = (_malloc($9)|0);
    HEAP32[$s>>2] = $10;
    $11 = ($10|0)==(0|0);
    if ($11) {
     $$0 = -1;
    } else {
     $12 = (_vsnprintf($10,$9,$fmt,$ap)|0);
     $$0 = $12;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _MUSL_vfscanf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$13 = 0, $$8 = 0, $$lcssa = 0, $$lcssa317 = 0, $$lcssa318 = 0, $$lcssa319 = 0, $$lcssa320 = 0, $$lcssa366 = 0, $$lcssa39 = 0, $$not = 0, $$old4 = 0, $$pre = 0, $$pre$phi223Z2D = 0, $$pre209 = 0, $$pre211 = 0, $$pre215 = 0;
 var $$pre217 = 0, $$pre218 = 0, $$pre220 = 0, $$pre221 = 0, $$pre222 = 0, $$size$0 = 0, $$width$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0;
 var $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0;
 var $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0.0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0;
 var $344 = 0, $345 = 0, $346 = 0.0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $alloc$0 = 0, $alloc$0$lcssa = 0, $alloc$0$lcssa381 = 0, $alloc$0$lcssa382 = 0, $alloc$0$lcssa383 = 0, $alloc$0$lcssa385 = 0, $alloc$0$lcssa386 = 0, $alloc$0$lcssa387 = 0, $alloc$0204 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $arglist_current = 0;
 var $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $base$0 = 0, $c$0101 = 0, $dest$0 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $factor = 0, $factor17 = 0, $i$0$i = 0, $i$0$ph = 0;
 var $i$0$ph$lcssa = 0, $i$0$ph$lcssa333 = 0, $i$0$ph21 = 0, $i$0$ph21$lcssa = 0, $i$0$ph21$lcssa336 = 0, $i$0$ph21$us106 = 0, $i$0$ph21$us106$lcssa = 0, $i$1$lcssa = 0, $i$2 = 0, $i$2$lcssa = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$3$lcssa = 0, $i$4 = 0, $invert$0 = 0, $isdigit = 0, $isdigit7 = 0, $isdigit796 = 0, $isdigittmp = 0;
 var $isdigittmp6 = 0, $isdigittmp695 = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0$ = 0, $matches$0111 = 0, $matches$0111$lcssa = 0, $matches$0111$lcssa338 = 0, $matches$0111$lcssa339 = 0, $matches$0111$lcssa340 = 0, $matches$0111$lcssa341 = 0, $matches$0111$lcssa342 = 0, $matches$0111$lcssa343 = 0, $matches$0111$lcssa344 = 0, $matches$0111$lcssa345 = 0, $matches$0111347 = 0, $matches$1 = 0, $matches$1$lcssa = 0, $matches$2 = 0, $matches$3 = 0;
 var $not$ = 0, $or$cond$us = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond9 = 0, $p$0117 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$397 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$lcssa = 0, $p$7$ph = 0, $p$8 = 0;
 var $p$9 = 0, $pos$0116 = 0, $pos$1 = 0, $pos$2 = 0, $s$0109 = 0, $s$0109$lcssa = 0, $s$1 = 0, $s$1$lcssa368 = 0, $s$2$ph = 0, $s$2$ph$lcssa = 0, $s$2$ph$lcssa323 = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$6$ph = 0, $s$7 = 0, $s$8 = 0, $s$8$ph = 0, $scanset = 0;
 var $size$0 = 0, $st = 0, $vacopy_currentptr = 0, $wc = 0, $wcs$0110 = 0, $wcs$0110$lcssa = 0, $wcs$1 = 0, $wcs$1$lcssa375 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$3$ph$lcssa$lcssa = 0, $wcs$3$ph$lcssa326 = 0, $wcs$3$ph$lcssa327 = 0, $wcs$3$ph$lcssa330 = 0, $wcs$3$ph139 = 0, $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0;
 var $wcs$7$ph = 0, $wcs$8 = 0, $wcs$9 = 0, $wcs$9$ph = 0, $width$0$lcssa = 0, $width$098 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2$i = sp + 16|0;
 $st = sp + 8|0;
 $scanset = sp + 33|0;
 $wc = sp;
 $0 = sp + 32|0;
 $1 = HEAP8[$fmt>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $matches$3 = 0;
  STACKTOP = sp;return ($matches$3|0);
 }
 $3 = (($f) + 4|0);
 $4 = (($f) + 100|0);
 $5 = (($f) + 108|0);
 $6 = (($f) + 8|0);
 $7 = (($scanset) + 10|0);
 $8 = (($scanset) + 33|0);
 $9 = (($st) + 4|0);
 $10 = (($scanset) + 46|0);
 $11 = (($scanset) + 94|0);
 $13 = $1;$matches$0111 = 0;$p$0117 = $fmt;$pos$0116 = 0;$s$0109 = 0;$wcs$0110 = 0;
 L4: while(1) {
  $12 = $13&255;
  $14 = (_isspace($12)|0);
  $15 = ($14|0)==(0);
  L6: do {
   if ($15) {
    $42 = HEAP8[$p$0117>>0]|0;
    $43 = ($42<<24>>24)==(37);
    L22: do {
     if ($43) {
      $44 = (($p$0117) + 1|0);
      $45 = HEAP8[$44>>0]|0;
      do {
       if ((($45<<24>>24) == 42)) {
        $66 = (($p$0117) + 2|0);
        $dest$0 = 0;$p$2 = $66;
       } else if ((($45<<24>>24) == 37)) {
        break L22;
       } else {
        $67 = $45&255;
        $isdigittmp = (($67) + -48)|0;
        $isdigit = ($isdigittmp>>>0)<(10);
        if ($isdigit) {
         $68 = (($p$0117) + 2|0);
         $69 = HEAP8[$68>>0]|0;
         $70 = ($69<<24>>24)==(36);
         if ($70) {
          $vacopy_currentptr = HEAP32[$ap>>2]|0;
          HEAP32[$ap2$i>>2] = $vacopy_currentptr;
          $i$0$i = $isdigittmp;
          while(1) {
           $71 = ($i$0$i>>>0)>(1);
           $arglist_current = HEAP32[$ap2$i>>2]|0;
           $72 = $arglist_current;
           $73 = (0 + 4|0);
           $expanded4 = $73;
           $expanded = (($expanded4) - 1)|0;
           $74 = (($72) + ($expanded))|0;
           $75 = (0 + 4|0);
           $expanded8 = $75;
           $expanded7 = (($expanded8) - 1)|0;
           $expanded6 = $expanded7 ^ -1;
           $76 = $74 & $expanded6;
           $77 = $76;
           $78 = HEAP32[$77>>2]|0;
           $arglist_next = (($77) + 4|0);
           HEAP32[$ap2$i>>2] = $arglist_next;
           $79 = (($i$0$i) + -1)|0;
           if ($71) {
            $i$0$i = $79;
           } else {
            $$lcssa = $78;
            break;
           }
          }
          $80 = (($p$0117) + 3|0);
          $dest$0 = $$lcssa;$p$2 = $80;
          break;
         }
        }
        $arglist_current2 = HEAP32[$ap>>2]|0;
        $81 = $arglist_current2;
        $82 = (0 + 4|0);
        $expanded11 = $82;
        $expanded10 = (($expanded11) - 1)|0;
        $83 = (($81) + ($expanded10))|0;
        $84 = (0 + 4|0);
        $expanded15 = $84;
        $expanded14 = (($expanded15) - 1)|0;
        $expanded13 = $expanded14 ^ -1;
        $85 = $83 & $expanded13;
        $86 = $85;
        $87 = HEAP32[$86>>2]|0;
        $arglist_next3 = (($86) + 4|0);
        HEAP32[$ap>>2] = $arglist_next3;
        $dest$0 = $87;$p$2 = $44;
       }
      } while(0);
      $88 = HEAP8[$p$2>>0]|0;
      $89 = $88&255;
      $isdigittmp695 = (($89) + -48)|0;
      $isdigit796 = ($isdigittmp695>>>0)<(10);
      if ($isdigit796) {
       $93 = $89;$p$397 = $p$2;$width$098 = 0;
       while(1) {
        $90 = ($width$098*10)|0;
        $91 = (($90) + -48)|0;
        $92 = (($91) + ($93))|0;
        $94 = (($p$397) + 1|0);
        $95 = HEAP8[$94>>0]|0;
        $96 = $95&255;
        $isdigittmp6 = (($96) + -48)|0;
        $isdigit7 = ($isdigittmp6>>>0)<(10);
        if ($isdigit7) {
         $93 = $96;$p$397 = $94;$width$098 = $92;
        } else {
         $$lcssa317 = $92;$$lcssa318 = $94;$$lcssa319 = $95;
         break;
        }
       }
       $$lcssa39 = $$lcssa319;$p$3$lcssa = $$lcssa318;$width$0$lcssa = $$lcssa317;
      } else {
       $$lcssa39 = $88;$p$3$lcssa = $p$2;$width$0$lcssa = 0;
      }
      $97 = ($$lcssa39<<24>>24)==(109);
      if ($97) {
       $98 = ($dest$0|0)!=(0|0);
       $99 = $98&1;
       $100 = (($p$3$lcssa) + 1|0);
       $$pre = HEAP8[$100>>0]|0;
       $103 = $$pre;$alloc$0 = $99;$p$4 = $100;$s$1 = 0;$wcs$1 = 0;
      } else {
       $103 = $$lcssa39;$alloc$0 = 0;$p$4 = $p$3$lcssa;$s$1 = $s$0109;$wcs$1 = $wcs$0110;
      }
      $101 = (($p$4) + 1|0);
      $102 = $103&255;
      switch ($102|0) {
      case 104:  {
       $104 = HEAP8[$101>>0]|0;
       $105 = ($104<<24>>24)==(104);
       $106 = (($p$4) + 2|0);
       $$10 = $105 ? $106 : $101;
       $$11 = $105 ? -2 : -1;
       $p$5 = $$10;$size$0 = $$11;
       break;
      }
      case 108:  {
       $107 = HEAP8[$101>>0]|0;
       $108 = ($107<<24>>24)==(108);
       $109 = (($p$4) + 2|0);
       $$12 = $108 ? $109 : $101;
       $$13 = $108 ? 3 : 1;
       $p$5 = $$12;$size$0 = $$13;
       break;
      }
      case 116: case 122:  {
       $p$5 = $101;$size$0 = 1;
       break;
      }
      case 76:  {
       $p$5 = $101;$size$0 = 2;
       break;
      }
      case 110: case 112: case 67: case 83: case 91: case 99: case 115: case 88: case 71: case 70: case 69: case 65: case 103: case 102: case 101: case 97: case 120: case 117: case 111: case 105: case 100:  {
       $p$5 = $p$4;$size$0 = 0;
       break;
      }
      case 106:  {
       $p$5 = $101;$size$0 = 3;
       break;
      }
      default: {
       $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = $s$1;$wcs$7$ph = $wcs$1;
       label = 188;
       break L4;
      }
      }
      $110 = HEAP8[$p$5>>0]|0;
      $111 = $110&255;
      $112 = $111 & 47;
      $113 = ($112|0)==(3);
      $114 = $111 | 32;
      $$ = $113 ? $114 : $111;
      $$size$0 = $113 ? 1 : $size$0;
      if ((($$|0) == 91)) {
       $pos$1 = $pos$0116;$width$1 = $width$0$lcssa;
      } else if ((($$|0) == 99)) {
       $115 = ($width$0$lcssa|0)<(1);
       $$width$0 = $115 ? 1 : $width$0$lcssa;
       $pos$1 = $pos$0116;$width$1 = $$width$0;
      } else if ((($$|0) == 110)) {
       $116 = ($pos$0116|0)<(0);
       $117 = $116 << 31 >> 31;
       $118 = ($dest$0|0)==(0|0);
       if ($118) {
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       switch ($$size$0|0) {
       case -2:  {
        $119 = $pos$0116&255;
        HEAP8[$dest$0>>0] = $119;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case -1:  {
        $120 = $pos$0116&65535;
        HEAP16[$dest$0>>1] = $120;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 0:  {
        HEAP32[$dest$0>>2] = $pos$0116;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 1:  {
        HEAP32[$dest$0>>2] = $pos$0116;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 3:  {
        $121 = $dest$0;
        $122 = $121;
        HEAP32[$122>>2] = $pos$0116;
        $123 = (($121) + 4)|0;
        $124 = $123;
        HEAP32[$124>>2] = $117;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       default: {
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       }
      } else {
       ___shlim($f,0);
       while(1) {
        $125 = HEAP32[$3>>2]|0;
        $126 = HEAP32[$4>>2]|0;
        $127 = ($125>>>0)<($126>>>0);
        if ($127) {
         $128 = (($125) + 1|0);
         HEAP32[$3>>2] = $128;
         $129 = HEAP8[$125>>0]|0;
         $130 = $129&255;
         $132 = $130;
        } else {
         $131 = (___shgetc($f)|0);
         $132 = $131;
        }
        $133 = (_isspace($132)|0);
        $134 = ($133|0)==(0);
        if ($134) {
         break;
        }
       }
       $135 = HEAP32[$4>>2]|0;
       $136 = ($135|0)==(0|0);
       $$pre209 = HEAP32[$3>>2]|0;
       if ($136) {
        $140 = $$pre209;
       } else {
        $137 = (($$pre209) + -1|0);
        HEAP32[$3>>2] = $137;
        $140 = $137;
       }
       $138 = HEAP32[$5>>2]|0;
       $139 = HEAP32[$6>>2]|0;
       $141 = $140;
       $142 = $139;
       $143 = (($138) + ($pos$0116))|0;
       $144 = (($143) + ($141))|0;
       $145 = (($144) - ($142))|0;
       $pos$1 = $145;$width$1 = $width$0$lcssa;
      }
      ___shlim($f,$width$1);
      $146 = HEAP32[$3>>2]|0;
      $147 = HEAP32[$4>>2]|0;
      $148 = ($146>>>0)<($147>>>0);
      if ($148) {
       $149 = (($146) + 1|0);
       HEAP32[$3>>2] = $149;
       $152 = $147;
      } else {
       $150 = (___shgetc($f)|0);
       $151 = ($150|0)<(0);
       if ($151) {
        $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = $s$1;$wcs$7$ph = $wcs$1;
        label = 188;
        break L4;
       }
       $$pre211 = HEAP32[$4>>2]|0;
       $152 = $$pre211;
      }
      $153 = ($152|0)==(0|0);
      if (!($153)) {
       $154 = HEAP32[$3>>2]|0;
       $155 = (($154) + -1|0);
       HEAP32[$3>>2] = $155;
      }
      L81: do {
       switch ($$|0) {
       case 111:  {
        $base$0 = 8;
        label = 164;
        break;
       }
       case 117: case 100:  {
        $base$0 = 10;
        label = 164;
        break;
       }
       case 105:  {
        $base$0 = 0;
        label = 164;
        break;
       }
       case 120: case 88: case 112:  {
        $base$0 = 16;
        label = 164;
        break;
       }
       case 71: case 103: case 70: case 102: case 69: case 101: case 65: case 97:  {
        $337 = (+___floatscan($f,$$size$0,0));
        $338 = HEAP32[$5>>2]|0;
        $339 = HEAP32[$3>>2]|0;
        $340 = HEAP32[$6>>2]|0;
        $341 = $339;
        $342 = $340;
        $343 = (($342) - ($341))|0;
        $344 = ($338|0)==($343|0);
        if ($344) {
         $alloc$0$lcssa381 = $alloc$0;$matches$0111$lcssa339 = $matches$0111;$s$8$ph = $s$1;$wcs$9$ph = $wcs$1;
         label = 191;
         break L4;
        }
        $345 = ($dest$0|0)==(0|0);
        if ($345) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         if ((($$size$0|0) == 0)) {
          $346 = $337;
          HEAPF32[$dest$0>>2] = $346;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L81;
         } else if ((($$size$0|0) == 1)) {
          HEAPF64[$dest$0>>3] = $337;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L81;
         } else if ((($$size$0|0) == 2)) {
          HEAPF64[$dest$0>>3] = $337;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L81;
         } else {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L81;
         }
        }
        break;
       }
       case 91: case 99: case 115:  {
        $156 = ($$|0)==(99);
        $157 = $$ & 239;
        $158 = ($157|0)==(99);
        if ($158) {
         $159 = ($$|0)==(115);
         _memset(($scanset|0),-1,257)|0;
         HEAP8[$scanset>>0] = 0;
         if ($159) {
          HEAP8[$8>>0] = 0;
          ;HEAP8[$7+0>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;HEAP8[$7+4>>0]=0|0;
          $p$9 = $p$5;
         } else {
          $p$9 = $p$5;
         }
        } else {
         $160 = (($p$5) + 1|0);
         $161 = HEAP8[$160>>0]|0;
         $162 = ($161<<24>>24)==(94);
         $163 = (($p$5) + 2|0);
         $invert$0 = $162&1;
         $164 = $162 ? $160 : $p$5;
         $p$6 = $162 ? $163 : $160;
         $165 = $162&1;
         _memset(($scanset|0),($165|0),257)|0;
         HEAP8[$scanset>>0] = 0;
         $166 = HEAP8[$p$6>>0]|0;
         if ((($166<<24>>24) == 45)) {
          $167 = (($164) + 2|0);
          $168 = $invert$0 ^ 1;
          $169 = $168&255;
          HEAP8[$10>>0] = $169;
          $$pre$phi223Z2D = $169;$p$7$ph = $167;
         } else if ((($166<<24>>24) == 93)) {
          $170 = (($164) + 2|0);
          $171 = $invert$0 ^ 1;
          $172 = $171&255;
          HEAP8[$11>>0] = $172;
          $$pre$phi223Z2D = $172;$p$7$ph = $170;
         } else {
          $$pre221 = $invert$0 ^ 1;
          $$pre222 = $$pre221&255;
          $$pre$phi223Z2D = $$pre222;$p$7$ph = $p$6;
         }
         $p$7 = $p$7$ph;
         while(1) {
          $173 = HEAP8[$p$7>>0]|0;
          if ((($173<<24>>24) == 45)) {
           $174 = (($p$7) + 1|0);
           $175 = HEAP8[$174>>0]|0;
           if ((($175<<24>>24) == 93) | (($175<<24>>24) == 0)) {
            $186 = 45;$p$8 = $p$7;
           } else {
            $176 = (($p$7) + -1|0);
            $177 = HEAP8[$176>>0]|0;
            $178 = ($177&255)<($175&255);
            if ($178) {
             $179 = $177&255;
             $c$0101 = $179;
             while(1) {
              $180 = (($c$0101) + 1)|0;
              $181 = (($scanset) + ($180)|0);
              HEAP8[$181>>0] = $$pre$phi223Z2D;
              $182 = HEAP8[$174>>0]|0;
              $183 = $182&255;
              $184 = ($180|0)<($183|0);
              if ($184) {
               $c$0101 = $180;
              } else {
               $$lcssa320 = $182;
               break;
              }
             }
             $186 = $$lcssa320;$p$8 = $174;
            } else {
             $186 = $175;$p$8 = $174;
            }
           }
          } else if ((($173<<24>>24) == 0)) {
           $alloc$0$lcssa382 = $alloc$0;$matches$0111$lcssa340 = $matches$0111;$s$1$lcssa368 = $s$1;$wcs$1$lcssa375 = $wcs$1;
           label = 187;
           break L4;
          } else if ((($173<<24>>24) == 93)) {
           $p$7$lcssa = $p$7;
           break;
          } else {
           $186 = $173;$p$8 = $p$7;
          }
          $185 = $186&255;
          $187 = (($185) + 1)|0;
          $188 = (($scanset) + ($187)|0);
          HEAP8[$188>>0] = $$pre$phi223Z2D;
          $189 = (($p$8) + 1|0);
          $p$7 = $189;
         }
         $p$9 = $p$7$lcssa;
        }
        $190 = (($width$1) + 1)|0;
        $$8 = $156 ? $190 : 31;
        $191 = ($$size$0|0)==(1);
        $192 = ($alloc$0|0)!=(0);
        do {
         if ($191) {
          if ($192) {
           $193 = $$8 << 2;
           $194 = (_malloc($193)|0);
           $195 = ($194|0)==(0|0);
           if ($195) {
            $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = 0;$wcs$7$ph = $194;
            label = 188;
            break L4;
           } else {
            $wcs$2 = $194;
           }
          } else {
           $wcs$2 = $dest$0;
          }
          HEAP32[$st>>2] = 0;
          HEAP32[$9>>2] = 0;
          $i$0$ph = 0;$k$0$ph = $$8;$wcs$3$ph = $wcs$2;
          L155: while(1) {
           $196 = ($wcs$3$ph|0)==(0|0);
           if ($196) {
            while(1) {
             $199 = HEAP32[$3>>2]|0;
             $210 = HEAP32[$4>>2]|0;
             $211 = ($199>>>0)<($210>>>0);
             if ($211) {
              $198 = (($199) + 1|0);
              HEAP32[$3>>2] = $198;
              $200 = HEAP8[$199>>0]|0;
              $201 = $200&255;
              $203 = $201;
             } else {
              $197 = (___shgetc($f)|0);
              $203 = $197;
             }
             $202 = (($203) + 1)|0;
             $204 = (($scanset) + ($202)|0);
             $205 = HEAP8[$204>>0]|0;
             $206 = ($205<<24>>24)==(0);
             if ($206) {
              $i$0$ph$lcssa333 = $i$0$ph;
              label = 120;
              break L155;
             }
             $207 = $203&255;
             HEAP8[$0>>0] = $207;
             $208 = (_mbrtowc($wc,$0,1,$st)|0);
             if ((($208|0) == -1)) {
              $alloc$0$lcssa386 = $alloc$0;$matches$0111$lcssa344 = $matches$0111;
              label = 184;
              break L4;
             } else if (!((($208|0) == -2))) {
              $209 = ($i$0$ph|0)==($k$0$ph|0);
              $or$cond$us = $192 & $209;
              if ($or$cond$us) {
               break;
              }
             }
            }
            $i$1$lcssa = $i$0$ph;
           } else {
            if (!($192)) {
             $i$0$ph$lcssa = $i$0$ph;$wcs$3$ph$lcssa = $wcs$3$ph;
             label = 91;
             break;
            }
            $i$0$ph21$us106 = $i$0$ph;
            while(1) {
             while(1) {
              $214 = HEAP32[$3>>2]|0;
              $228 = HEAP32[$4>>2]|0;
              $229 = ($214>>>0)<($228>>>0);
              if ($229) {
               $213 = (($214) + 1|0);
               HEAP32[$3>>2] = $213;
               $215 = HEAP8[$214>>0]|0;
               $216 = $215&255;
               $218 = $216;
              } else {
               $212 = (___shgetc($f)|0);
               $218 = $212;
              }
              $217 = (($218) + 1)|0;
              $219 = (($scanset) + ($217)|0);
              $220 = HEAP8[$219>>0]|0;
              $221 = ($220<<24>>24)==(0);
              if ($221) {
               $i$0$ph21$us106$lcssa = $i$0$ph21$us106;$wcs$3$ph$lcssa326 = $wcs$3$ph;
               label = 118;
               break L155;
              }
              $222 = $218&255;
              HEAP8[$0>>0] = $222;
              $223 = (_mbrtowc($wc,$0,1,$st)|0);
              if ((($223|0) == -1)) {
               $alloc$0$lcssa385 = $alloc$0;$matches$0111$lcssa343 = $matches$0111;$wcs$3$ph$lcssa327 = $wcs$3$ph;
               label = 182;
               break L4;
              } else if (!((($223|0) == -2))) {
               break;
              }
             }
             $224 = HEAP32[$wc>>2]|0;
             $225 = (($i$0$ph21$us106) + 1)|0;
             $226 = (($wcs$3$ph) + ($i$0$ph21$us106<<2)|0);
             HEAP32[$226>>2] = $224;
             $227 = ($225|0)==($k$0$ph|0);
             if ($227) {
              break;
             } else {
              $i$0$ph21$us106 = $225;
             }
            }
            $i$1$lcssa = $k$0$ph;
           }
           $factor = $k$0$ph << 1;
           $247 = $factor | 1;
           $248 = $247 << 2;
           $249 = (_realloc($wcs$3$ph,$248)|0);
           $250 = ($249|0)==(0|0);
           if ($250) {
            $alloc$0$lcssa387 = $alloc$0;$matches$0111$lcssa345 = $matches$0111;$wcs$3$ph$lcssa330 = $wcs$3$ph;
            label = 185;
            break L4;
           }
           $i$0$ph = $i$1$lcssa;$k$0$ph = $247;$wcs$3$ph = $249;
          }
          if ((label|0) == 91) {
           label = 0;
           $i$0$ph21 = $i$0$ph$lcssa;
           L189: while(1) {
            while(1) {
             $230 = HEAP32[$3>>2]|0;
             $231 = HEAP32[$4>>2]|0;
             $232 = ($230>>>0)<($231>>>0);
             if ($232) {
              $233 = (($230) + 1|0);
              HEAP32[$3>>2] = $233;
              $234 = HEAP8[$230>>0]|0;
              $235 = $234&255;
              $238 = $235;
             } else {
              $236 = (___shgetc($f)|0);
              $238 = $236;
             }
             $237 = (($238) + 1)|0;
             $239 = (($scanset) + ($237)|0);
             $240 = HEAP8[$239>>0]|0;
             $241 = ($240<<24>>24)==(0);
             if ($241) {
              $i$0$ph21$lcssa336 = $i$0$ph21;
              break L189;
             }
             $242 = $238&255;
             HEAP8[$0>>0] = $242;
             $243 = (_mbrtowc($wc,$0,1,$st)|0);
             if ((($243|0) == -1)) {
              $matches$0111$lcssa342 = $matches$0111;$wcs$3$ph$lcssa$lcssa = $wcs$3$ph$lcssa;
              label = 183;
              break L4;
             } else if (!((($243|0) == -2))) {
              break;
             }
            }
            $244 = HEAP32[$wc>>2]|0;
            $245 = (($i$0$ph21) + 1)|0;
            $246 = (($wcs$3$ph$lcssa) + ($i$0$ph21<<2)|0);
            HEAP32[$246>>2] = $244;
            $i$0$ph21 = $245;
           }
           $i$0$ph21$lcssa = $i$0$ph21$lcssa336;$wcs$3$ph139 = $wcs$3$ph$lcssa;
          }
          else if ((label|0) == 118) {
           label = 0;
           $i$0$ph21$lcssa = $i$0$ph21$us106$lcssa;$wcs$3$ph139 = $wcs$3$ph$lcssa326;
          }
          else if ((label|0) == 120) {
           label = 0;
           $i$0$ph21$lcssa = $i$0$ph$lcssa333;$wcs$3$ph139 = 0;
          }
          $251 = (_mbsinit($st)|0);
          $252 = ($251|0)==(0);
          if ($252) {
           $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = 0;$wcs$7$ph = $wcs$3$ph139;
           label = 188;
           break L4;
          } else {
           $i$4 = $i$0$ph21$lcssa;$s$3 = 0;$wcs$4 = $wcs$3$ph139;
          }
         } else {
          if ($192) {
           $253 = (_malloc($$8)|0);
           $254 = ($253|0)==(0|0);
           if ($254) {
            $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = 0;$wcs$7$ph = 0;
            label = 188;
            break L4;
           }
           $i$2$ph = 0;$k$1$ph = $$8;$s$2$ph = $253;
           L119: while(1) {
            $i$2 = $i$2$ph;
            while(1) {
             $255 = HEAP32[$3>>2]|0;
             $256 = HEAP32[$4>>2]|0;
             $257 = ($255>>>0)<($256>>>0);
             if ($257) {
              $258 = (($255) + 1|0);
              HEAP32[$3>>2] = $258;
              $259 = HEAP8[$255>>0]|0;
              $260 = $259&255;
              $263 = $260;
             } else {
              $261 = (___shgetc($f)|0);
              $263 = $261;
             }
             $262 = (($263) + 1)|0;
             $264 = (($scanset) + ($262)|0);
             $265 = HEAP8[$264>>0]|0;
             $266 = ($265<<24>>24)==(0);
             if ($266) {
              $i$2$lcssa = $i$2;$s$2$ph$lcssa = $s$2$ph;
              break L119;
             }
             $267 = $263&255;
             $268 = (($i$2) + 1)|0;
             $269 = (($s$2$ph) + ($i$2)|0);
             HEAP8[$269>>0] = $267;
             $270 = ($268|0)==($k$1$ph|0);
             if ($270) {
              break;
             } else {
              $i$2 = $268;
             }
            }
            $factor17 = $k$1$ph << 1;
            $271 = $factor17 | 1;
            $272 = (_realloc($s$2$ph,$271)|0);
            $273 = ($272|0)==(0|0);
            if ($273) {
             $alloc$0$lcssa383 = $alloc$0;$matches$0111$lcssa341 = $matches$0111;$s$2$ph$lcssa323 = $s$2$ph;
             label = 186;
             break L4;
            } else {
             $i$2$ph$phi = $k$1$ph;$k$1$ph = $271;$s$2$ph = $272;$i$2$ph = $i$2$ph$phi;
            }
           }
           $i$4 = $i$2$lcssa;$s$3 = $s$2$ph$lcssa;$wcs$4 = 0;
           break;
          }
          $274 = ($dest$0|0)==(0|0);
          if ($274) {
           $292 = $152;
           while(1) {
            $290 = HEAP32[$3>>2]|0;
            $291 = ($290>>>0)<($292>>>0);
            if ($291) {
             $293 = (($290) + 1|0);
             HEAP32[$3>>2] = $293;
             $294 = HEAP8[$290>>0]|0;
             $295 = $294&255;
             $298 = $295;
            } else {
             $296 = (___shgetc($f)|0);
             $298 = $296;
            }
            $297 = (($298) + 1)|0;
            $299 = (($scanset) + ($297)|0);
            $300 = HEAP8[$299>>0]|0;
            $301 = ($300<<24>>24)==(0);
            if ($301) {
             break;
            }
            $$pre217 = HEAP32[$4>>2]|0;
            $292 = $$pre217;
           }
           $i$4 = 0;$s$3 = 0;$wcs$4 = 0;
           break;
          } else {
           $277 = $152;$i$3 = 0;
           while(1) {
            $275 = HEAP32[$3>>2]|0;
            $276 = ($275>>>0)<($277>>>0);
            if ($276) {
             $278 = (($275) + 1|0);
             HEAP32[$3>>2] = $278;
             $279 = HEAP8[$275>>0]|0;
             $280 = $279&255;
             $283 = $280;
            } else {
             $281 = (___shgetc($f)|0);
             $283 = $281;
            }
            $282 = (($283) + 1)|0;
            $284 = (($scanset) + ($282)|0);
            $285 = HEAP8[$284>>0]|0;
            $286 = ($285<<24>>24)==(0);
            if ($286) {
             $i$3$lcssa = $i$3;
             break;
            }
            $287 = $283&255;
            $288 = (($i$3) + 1)|0;
            $289 = (($dest$0) + ($i$3)|0);
            HEAP8[$289>>0] = $287;
            $$pre218 = HEAP32[$4>>2]|0;
            $277 = $$pre218;$i$3 = $288;
           }
           $i$4 = $i$3$lcssa;$s$3 = $dest$0;$wcs$4 = 0;
           break;
          }
         }
        } while(0);
        $302 = HEAP32[$4>>2]|0;
        $303 = ($302|0)==(0|0);
        $$pre215 = HEAP32[$3>>2]|0;
        if ($303) {
         $307 = $$pre215;
        } else {
         $304 = (($$pre215) + -1|0);
         HEAP32[$3>>2] = $304;
         $307 = $304;
        }
        $305 = HEAP32[$5>>2]|0;
        $306 = HEAP32[$6>>2]|0;
        $308 = $307;
        $309 = $306;
        $310 = (($308) - ($309))|0;
        $311 = (($310) + ($305))|0;
        $312 = ($311|0)==(0);
        if ($312) {
         $alloc$0$lcssa381 = $alloc$0;$matches$0111$lcssa339 = $matches$0111;$s$8$ph = $s$3;$wcs$9$ph = $wcs$4;
         label = 191;
         break L4;
        }
        $$not = $156 ^ 1;
        $313 = ($311|0)==($width$1|0);
        $or$cond9 = $313 | $$not;
        if (!($or$cond9)) {
         $alloc$0$lcssa381 = $alloc$0;$matches$0111$lcssa339 = $matches$0111;$s$8$ph = $s$3;$wcs$9$ph = $wcs$4;
         label = 191;
         break L4;
        }
        do {
         if ($192) {
          if ($191) {
           HEAP32[$dest$0>>2] = $wcs$4;
           break;
          } else {
           HEAP32[$dest$0>>2] = $s$3;
           break;
          }
         }
        } while(0);
        if ($156) {
         $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
        } else {
         $314 = ($wcs$4|0)==(0|0);
         if (!($314)) {
          $315 = (($wcs$4) + ($i$4<<2)|0);
          HEAP32[$315>>2] = 0;
         }
         $316 = ($s$3|0)==(0|0);
         if ($316) {
          $p$10 = $p$9;$s$4 = 0;$wcs$5 = $wcs$4;
         } else {
          $317 = (($s$3) + ($i$4)|0);
          HEAP8[$317>>0] = 0;
          $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
         }
        }
        break;
       }
       default: {
        $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
       }
       }
      } while(0);
      L218: do {
       if ((label|0) == 164) {
        label = 0;
        $318 = (___intscan($f,$base$0,0,-1,-1)|0);
        $319 = tempRet0;
        $320 = HEAP32[$5>>2]|0;
        $321 = HEAP32[$3>>2]|0;
        $322 = HEAP32[$6>>2]|0;
        $323 = $321;
        $324 = $322;
        $325 = (($324) - ($323))|0;
        $326 = ($320|0)==($325|0);
        if ($326) {
         $alloc$0$lcssa381 = $alloc$0;$matches$0111$lcssa339 = $matches$0111;$s$8$ph = $s$1;$wcs$9$ph = $wcs$1;
         label = 191;
         break L4;
        }
        $327 = ($$|0)==(112);
        $328 = ($dest$0|0)!=(0|0);
        $or$cond3 = $328 & $327;
        if ($or$cond3) {
         $329 = $318;
         HEAP32[$dest$0>>2] = $329;
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
         break;
        }
        $330 = ($dest$0|0)==(0|0);
        if ($330) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         switch ($$size$0|0) {
         case -2:  {
          $331 = $318&255;
          HEAP8[$dest$0>>0] = $331;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         case -1:  {
          $332 = $318&65535;
          HEAP16[$dest$0>>1] = $332;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         case 0:  {
          HEAP32[$dest$0>>2] = $318;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         case 1:  {
          HEAP32[$dest$0>>2] = $318;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         case 3:  {
          $333 = $dest$0;
          $334 = $333;
          HEAP32[$334>>2] = $318;
          $335 = (($333) + 4)|0;
          $336 = $335;
          HEAP32[$336>>2] = $319;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         default: {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
         }
         }
        }
       }
      } while(0);
      $347 = HEAP32[$5>>2]|0;
      $348 = HEAP32[$3>>2]|0;
      $349 = HEAP32[$6>>2]|0;
      $350 = $348;
      $351 = $349;
      $352 = (($347) + ($pos$1))|0;
      $353 = (($352) + ($350))|0;
      $354 = (($353) - ($351))|0;
      $not$ = ($dest$0|0)!=(0|0);
      $355 = $not$&1;
      $matches$0$ = (($355) + ($matches$0111))|0;
      $matches$1 = $matches$0$;$p$11 = $p$10;$pos$2 = $354;$s$5 = $s$4;$wcs$6 = $wcs$5;
      break L6;
     }
    } while(0);
    $46 = $43&1;
    $47 = (($p$0117) + ($46)|0);
    ___shlim($f,0);
    $48 = HEAP32[$3>>2]|0;
    $49 = HEAP32[$4>>2]|0;
    $50 = ($48>>>0)<($49>>>0);
    if ($50) {
     $51 = (($48) + 1|0);
     HEAP32[$3>>2] = $51;
     $52 = HEAP8[$48>>0]|0;
     $53 = $52&255;
     $57 = $53;
    } else {
     $54 = (___shgetc($f)|0);
     $57 = $54;
    }
    $55 = HEAP8[$47>>0]|0;
    $56 = $55&255;
    $58 = ($57|0)==($56|0);
    if (!($58)) {
     $$lcssa366 = $57;$matches$0111$lcssa = $matches$0111;$s$0109$lcssa = $s$0109;$wcs$0110$lcssa = $wcs$0110;
     label = 20;
     break L4;
    }
    $65 = (($pos$0116) + 1)|0;
    $matches$1 = $matches$0111;$p$11 = $47;$pos$2 = $65;$s$5 = $s$0109;$wcs$6 = $wcs$0110;
   } else {
    $p$1 = $p$0117;
    while(1) {
     $16 = (($p$1) + 1|0);
     $17 = HEAP8[$16>>0]|0;
     $18 = $17&255;
     $19 = (_isspace($18)|0);
     $20 = ($19|0)==(0);
     if ($20) {
      $p$1$lcssa = $p$1;
      break;
     } else {
      $p$1 = $16;
     }
    }
    ___shlim($f,0);
    while(1) {
     $21 = HEAP32[$3>>2]|0;
     $22 = HEAP32[$4>>2]|0;
     $23 = ($21>>>0)<($22>>>0);
     if ($23) {
      $24 = (($21) + 1|0);
      HEAP32[$3>>2] = $24;
      $25 = HEAP8[$21>>0]|0;
      $26 = $25&255;
      $28 = $26;
     } else {
      $27 = (___shgetc($f)|0);
      $28 = $27;
     }
     $29 = (_isspace($28)|0);
     $30 = ($29|0)==(0);
     if ($30) {
      break;
     }
    }
    $31 = HEAP32[$4>>2]|0;
    $32 = ($31|0)==(0|0);
    $$pre220 = HEAP32[$3>>2]|0;
    if ($32) {
     $36 = $$pre220;
    } else {
     $33 = (($$pre220) + -1|0);
     HEAP32[$3>>2] = $33;
     $36 = $33;
    }
    $34 = HEAP32[$5>>2]|0;
    $35 = HEAP32[$6>>2]|0;
    $37 = $36;
    $38 = $35;
    $39 = (($34) + ($pos$0116))|0;
    $40 = (($39) + ($37))|0;
    $41 = (($40) - ($38))|0;
    $matches$1 = $matches$0111;$p$11 = $p$1$lcssa;$pos$2 = $41;$s$5 = $s$0109;$wcs$6 = $wcs$0110;
   }
  } while(0);
  $356 = (($p$11) + 1|0);
  $357 = HEAP8[$356>>0]|0;
  $358 = ($357<<24>>24)==(0);
  if ($358) {
   $matches$1$lcssa = $matches$1;
   label = 194;
   break;
  } else {
   $13 = $357;$matches$0111 = $matches$1;$p$0117 = $356;$pos$0116 = $pos$2;$s$0109 = $s$5;$wcs$0110 = $wcs$6;
  }
 }
 switch (label|0) {
  case 20: {
   $59 = HEAP32[$4>>2]|0;
   $60 = ($59|0)==(0|0);
   if (!($60)) {
    $61 = HEAP32[$3>>2]|0;
    $62 = (($61) + -1|0);
    HEAP32[$3>>2] = $62;
   }
   $63 = ($$lcssa366|0)>(-1);
   $64 = ($matches$0111$lcssa|0)!=(0);
   $or$cond5 = $64 | $63;
   if ($or$cond5) {
    $matches$3 = $matches$0111$lcssa;
    STACKTOP = sp;return ($matches$3|0);
   } else {
    $alloc$1 = 0;$s$7 = $s$0109$lcssa;$wcs$8 = $wcs$0110$lcssa;
    label = 190;
   }
   break;
  }
  case 182: {
   $alloc$0204 = $alloc$0$lcssa385;$matches$0111347 = $matches$0111$lcssa343;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa327;
   label = 189;
   break;
  }
  case 183: {
   $alloc$0204 = 0;$matches$0111347 = $matches$0111$lcssa342;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa$lcssa;
   label = 189;
   break;
  }
  case 184: {
   $alloc$0204 = $alloc$0$lcssa386;$matches$0111347 = $matches$0111$lcssa344;$s$6 = 0;$wcs$7 = 0;
   label = 189;
   break;
  }
  case 185: {
   $alloc$0204 = $alloc$0$lcssa387;$matches$0111347 = $matches$0111$lcssa345;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa330;
   label = 189;
   break;
  }
  case 186: {
   $alloc$0204 = $alloc$0$lcssa383;$matches$0111347 = $matches$0111$lcssa341;$s$6 = $s$2$ph$lcssa323;$wcs$7 = 0;
   label = 189;
   break;
  }
  case 187: {
   $alloc$0204 = $alloc$0$lcssa382;$matches$0111347 = $matches$0111$lcssa340;$s$6 = $s$1$lcssa368;$wcs$7 = $wcs$1$lcssa375;
   label = 189;
   break;
  }
  case 188: {
   $alloc$0204 = $alloc$0$lcssa;$matches$0111347 = $matches$0111$lcssa338;$s$6 = $s$6$ph;$wcs$7 = $wcs$7$ph;
   label = 189;
   break;
  }
  case 191: {
   $alloc$2 = $alloc$0$lcssa381;$matches$2 = $matches$0111$lcssa339;$s$8 = $s$8$ph;$wcs$9 = $wcs$9$ph;
   break;
  }
  case 194: {
   $matches$3 = $matches$1$lcssa;
   STACKTOP = sp;return ($matches$3|0);
   break;
  }
 }
 if ((label|0) == 189) {
  $$old4 = ($matches$0111347|0)==(0);
  if ($$old4) {
   $alloc$1 = $alloc$0204;$s$7 = $s$6;$wcs$8 = $wcs$7;
   label = 190;
  } else {
   $alloc$2 = $alloc$0204;$matches$2 = $matches$0111347;$s$8 = $s$6;$wcs$9 = $wcs$7;
  }
 }
 if ((label|0) == 190) {
  $alloc$2 = $alloc$1;$matches$2 = -1;$s$8 = $s$7;$wcs$9 = $wcs$8;
 }
 $359 = ($alloc$2|0)==(0);
 if ($359) {
  $matches$3 = $matches$2;
  STACKTOP = sp;return ($matches$3|0);
 }
 _free($s$8);
 _free($wcs$9);
 $matches$3 = $matches$2;
 STACKTOP = sp;return ($matches$3|0);
}
function _vsscanf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $f = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f = sp;
 dest=$f+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = (($f) + 32|0);
 HEAP32[$0>>2] = 444;
 $1 = (($f) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = (($f) + 76|0);
 HEAP32[$2>>2] = -1;
 $3 = (($f) + 84|0);
 HEAP32[$3>>2] = $s;
 $4 = (_MUSL_vfscanf($f,$fmt,$ap)|0);
 STACKTOP = sp;return ($4|0);
}
function _wcslen($s) {
 $s = $s|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $s;
 while(1) {
  $0 = HEAP32[$$0>>2]|0;
  $1 = ($0|0)==(0);
  $2 = (($$0) + 4|0);
  if ($1) {
   $$0$lcssa = $$0;
   break;
  } else {
   $$0 = $2;
  }
 }
 $3 = $$0$lcssa;
 $4 = $s;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 return ($6|0);
}
function _wmemcpy($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$014 = 0, $$023 = 0, $$05 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 }
 $$014 = $n;$$023 = $s;$$05 = $d;
 while(1) {
  $1 = (($$014) + -1)|0;
  $2 = (($$023) + 4|0);
  $3 = HEAP32[$$023>>2]|0;
  $4 = (($$05) + 4|0);
  HEAP32[$$05>>2] = $3;
  $5 = ($1|0)==(0);
  if ($5) {
   break;
  } else {
   $$014 = $1;$$023 = $2;$$05 = $4;
  }
 }
 return ($d|0);
}
function _wmemmove($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $d;
 $1 = $s;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)<($n>>>0);
 $5 = ($n|0)==(0);
 if ($4) {
  if ($5) {
   return ($d|0);
  }
  $$in = $n;
  while(1) {
   $6 = (($$in) + -1)|0;
   $7 = (($s) + ($6<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = (($d) + ($6<<2)|0);
   HEAP32[$9>>2] = $8;
   $10 = ($6|0)==(0);
   if ($10) {
    break;
   } else {
    $$in = $6;
   }
  }
  return ($d|0);
 } else {
  if ($5) {
   return ($d|0);
  }
  $$025 = $s;$$07 = $d;$$16 = $n;
  while(1) {
   $11 = (($$16) + -1)|0;
   $12 = (($$025) + 4|0);
   $13 = HEAP32[$$025>>2]|0;
   $14 = (($$07) + 4|0);
   HEAP32[$$07>>2] = $13;
   $15 = ($11|0)==(0);
   if ($15) {
    break;
   } else {
    $$025 = $12;$$07 = $14;$$16 = $11;
   }
  }
  return ($d|0);
 }
 return (0)|0;
}
function _wmemset($d,$c,$n) {
 $d = $d|0;
 $c = $c|0;
 $n = $n|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 }
 $$012 = $n;$$03 = $d;
 while(1) {
  $1 = (($$012) + -1)|0;
  $2 = (($$03) + 4|0);
  HEAP32[$$03>>2] = $c;
  $3 = ($1|0)==(0);
  if ($3) {
   break;
  } else {
   $$012 = $1;$$03 = $2;
  }
 }
 return ($d|0);
}
function _do_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___string_read($f,$buf,$len)|0);
 return ($0|0);
}
function _abort_message($format,$varargs) {
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $list = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $list = sp;
 HEAP32[$list>>2] = $varargs;
 $0 = HEAP32[_stderr>>2]|0;
 (_vfprintf(($0|0),($format|0),($list|0))|0);
 (_fputc(10,($0|0))|0);
 _abort();
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = (_pthread_once((1968|0),(445|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = HEAP32[1960>>2]|0;
  $3 = (_pthread_getspecific(($2|0))|0);
  STACKTOP = sp;return ($3|0);
 } else {
  _abort_message(1976,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function __Znwj($size) {
 $size = $size|0;
 var $$lcssa = 0, $$size = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($size|0)==(0);
 $$size = $0 ? 1 : $size;
 while(1) {
  $1 = (_malloc($$size)|0);
  $2 = ($1|0)==(0|0);
  if (!($2)) {
   $$lcssa = $1;
   label = 6;
   break;
  }
  $3 = (__ZSt15get_new_handlerv()|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   label = 5;
   break;
  }
  FUNCTION_TABLE_v[$3 & 1023]();
 }
 if ((label|0) == 5) {
  $5 = (___cxa_allocate_exception(4)|0);
  HEAP32[$5>>2] = ((2144 + 8|0));
  ___cxa_throw(($5|0),(2200|0),(56|0));
  // unreachable;
 }
 else if ((label|0) == 6) {
  return ($$lcssa|0);
 }
 return (0)|0;
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZdaPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($ptr);
 return;
}
function __ZNSt9bad_allocC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2144 + 8|0));
 return;
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2168|0);
}
function __ZSt11__terminatePFvvE($func) {
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 __THREW__ = 0;
 invoke_v($func|0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if (!($1)) {
  __THREW__ = 0;
  invoke_vii(446,(2216|0),($vararg_buffer|0));
  $2 = __THREW__; __THREW__ = 0;
  $3 = $2&1;
  if (!($3)) {
   // unreachable;
  }
 }
 $4 = ___cxa_find_matching_catch(0|0)|0;
 $5 = tempRet0;
 (___cxa_begin_catch(($4|0))|0);
 __THREW__ = 0;
 invoke_vii(446,(2256|0),($vararg_buffer1|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  // unreachable;
 }
 $8 = ___cxa_find_matching_catch(0|0)|0;
 $9 = tempRet0;
 __THREW__ = 0;
 invoke_v(420);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $12 = ___cxa_find_matching_catch(0|0)|0;
  $13 = tempRet0;
  ___clang_call_terminate($12);
  // unreachable;
 } else {
  ___clang_call_terminate($8);
  // unreachable;
 }
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(447)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $21 = ___cxa_find_matching_catch(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 }
 $3 = ($0|0)==(0|0);
 if (!($3)) {
  $4 = HEAP32[$0>>2]|0;
  $5 = ($4|0)==(0|0);
  if (!($5)) {
   $6 = (($4) + 48|0);
   $7 = $6;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $10 = (($7) + 4)|0;
   $11 = $10;
   $12 = HEAP32[$11>>2]|0;
   $13 = $9 & -256;
   $14 = ($13|0)==(1126902528);
   $15 = ($12|0)==(1129074247);
   $16 = $14 & $15;
   if ($16) {
    $17 = (($4) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    __ZSt11__terminatePFvvE($18);
    // unreachable;
   }
  }
 }
 $19 = HEAP32[446]|0;HEAP32[446] = (($19+0)|0);
 $20 = $19;
 __ZSt11__terminatePFvvE($20);
 // unreachable;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[2312>>2]|0;HEAP32[2312>>2] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function __ZNSt9exceptionD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt11logic_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2344 + 8|0));
 $0 = (($this) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt11logic_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt11logic_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2368 + 8|0));
 $0 = (($this) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt12length_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt12out_of_rangeD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt8bad_castC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2592 + 8|0));
 return;
}
function __ZNSt8bad_castD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt8bad_castD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt8bad_cast4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2616|0);
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $info = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = ($this|0)==($thrown_type|0);
 if ($0) {
  $$1 = 1;
 } else {
  $1 = ($thrown_type|0)==(0|0);
  if ($1) {
   $$1 = 0;
  } else {
   $2 = (___dynamic_cast($thrown_type,2728,2784,0)|0);
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$1 = 0;
   } else {
    dest=$info+0|0; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $2;
    $4 = (($info) + 8|0);
    HEAP32[$4>>2] = $this;
    $5 = (($info) + 12|0);
    HEAP32[$5>>2] = -1;
    $6 = (($info) + 48|0);
    HEAP32[$6>>2] = 1;
    $7 = HEAP32[$2>>2]|0;
    $8 = (($7) + 28|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$9 & 127]($2,$info,$10,1);
    $11 = (($info) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==(1);
    if ($13) {
     $14 = (($info) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     HEAP32[$adjustedPtr>>2] = $15;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$1 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   HEAP32[$0>>2] = $adjustedPtr;
   $3 = (($info) + 24|0);
   HEAP32[$3>>2] = $path_below;
   $4 = (($info) + 36|0);
   HEAP32[$4>>2] = 1;
  } else {
   $5 = ($1|0)==($adjustedPtr|0);
   if (!($5)) {
    $9 = (($info) + 36|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = (($10) + 1)|0;
    HEAP32[$9>>2] = $11;
    $12 = (($info) + 24|0);
    HEAP32[$12>>2] = 2;
    $13 = (($info) + 54|0);
    HEAP8[$13>>0] = 1;
    break;
   }
   $6 = (($info) + 24|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(2);
   if ($8) {
    HEAP32[$6>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = (($5) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiii[$7 & 127]($4,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$adjustedPtr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$11 & 127]($8,$info,$12,$15);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = (($this) + 16|0);
  $4 = (($this) + 12|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($this) + ($5<<3)|0) + 16|0);
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($3,$info,$adjustedPtr,$path_below);
  $7 = ($5|0)>(1);
  if ($7) {
   $8 = (($this) + 24|0);
   $9 = (($info) + 54|0);
   $p$0 = $8;
   while(1) {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(0);
    if (!($11)) {
     break;
    }
    $12 = (($p$0) + 8|0);
    $13 = ($12>>>0)<($6>>>0);
    if ($13) {
     $p$0 = $12;
    } else {
     break;
    }
   }
  }
 }
 return;
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $$8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $1 = (($0) + -8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2;
 $4 = (($static_ptr) + ($3)|0);
 $5 = (($0) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $7 = (($info) + 4|0);
 HEAP32[$7>>2] = $static_ptr;
 $8 = (($info) + 8|0);
 HEAP32[$8>>2] = $static_type;
 $9 = (($info) + 12|0);
 HEAP32[$9>>2] = $src2dst_offset;
 $10 = (($info) + 16|0);
 $11 = (($info) + 20|0);
 $12 = (($info) + 24|0);
 $13 = (($info) + 28|0);
 $14 = (($info) + 32|0);
 $15 = (($info) + 40|0);
 $16 = ($6|0)==($dst_type|0);
 dest=$10+0|0; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$10+36>>1]=0|0;HEAP8[$10+38>>0]=0|0;
 do {
  if ($16) {
   $17 = (($info) + 48|0);
   HEAP32[$17>>2] = 1;
   $18 = HEAP32[$dst_type>>2]|0;
   $19 = (($18) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   FUNCTION_TABLE_viiiiii[$20 & 511]($dst_type,$info,$4,$4,1,0);
   $21 = HEAP32[$12>>2]|0;
   $22 = ($21|0)==(1);
   $$ = $22 ? $4 : 0;
   $dst_ptr$0 = $$;
  } else {
   $23 = (($info) + 36|0);
   $24 = HEAP32[$6>>2]|0;
   $25 = (($24) + 24|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_viiiii[$26 & 127]($6,$info,$4,1,0);
   $27 = HEAP32[$23>>2]|0;
   if ((($27|0) == 0)) {
    $28 = HEAP32[$15>>2]|0;
    $29 = ($28|0)==(1);
    $30 = HEAP32[$13>>2]|0;
    $31 = ($30|0)==(1);
    $or$cond = $29 & $31;
    $32 = HEAP32[$14>>2]|0;
    $33 = ($32|0)==(1);
    $or$cond3 = $or$cond & $33;
    $34 = HEAP32[$11>>2]|0;
    $$8 = $or$cond3 ? $34 : 0;
    $dst_ptr$0 = $$8;
    break;
   } else if (!((($27|0) == 1))) {
    $dst_ptr$0 = 0;
    break;
   }
   $35 = HEAP32[$12>>2]|0;
   $36 = ($35|0)==(1);
   if (!($36)) {
    $37 = HEAP32[$15>>2]|0;
    $38 = ($37|0)==(0);
    $39 = HEAP32[$13>>2]|0;
    $40 = ($39|0)==(1);
    $or$cond5 = $38 & $40;
    $41 = HEAP32[$14>>2]|0;
    $42 = ($41|0)==(1);
    $or$cond7 = $or$cond5 & $42;
    if (!($or$cond7)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $43 = HEAP32[$10>>2]|0;
   $dst_ptr$0 = $43;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 53|0);
 HEAP8[$0>>0] = 1;
 $1 = (($info) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==($current_ptr|0);
 do {
  if ($3) {
   $4 = (($info) + 52|0);
   HEAP8[$4>>0] = 1;
   $5 = (($info) + 16|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    HEAP32[$5>>2] = $dst_ptr;
    $8 = (($info) + 24|0);
    HEAP32[$8>>2] = $path_below;
    $9 = (($info) + 36|0);
    HEAP32[$9>>2] = 1;
    $10 = (($info) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(1);
    $13 = ($path_below|0)==(1);
    $or$cond = $12 & $13;
    if (!($or$cond)) {
     break;
    }
    $14 = (($info) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $15 = ($6|0)==($dst_ptr|0);
   if (!($15)) {
    $25 = (($info) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($26) + 1)|0;
    HEAP32[$25>>2] = $27;
    $28 = (($info) + 54|0);
    HEAP8[$28>>0] = 1;
    break;
   }
   $16 = (($info) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(2);
   if ($18) {
    HEAP32[$16>>2] = $path_below;
    $22 = $path_below;
   } else {
    $22 = $17;
   }
   $19 = (($info) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(1);
   $23 = ($22|0)==(1);
   $or$cond1 = $21 & $23;
   if ($or$cond1) {
    $24 = (($info) + 54|0);
    HEAP8[$24>>0] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $does_dst_type_point_to_our_static_type$0$off0 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off0 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0, $p$0 = 0;
 var $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = (($info) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = (($info) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $56 = (($this) + 16|0);
    $57 = (($this) + 12|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = ((($this) + ($58<<3)|0) + 16|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($56,$info,$current_ptr,$path_below,$use_strcmp);
    $60 = (($this) + 24|0);
    $61 = ($58|0)>(1);
    if (!($61)) {
     break;
    }
    $62 = (($this) + 8|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = $63 & 2;
    $65 = ($64|0)==(0);
    if ($65) {
     $66 = (($info) + 36|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ($67|0)==(1);
     if (!($68)) {
      $74 = $63 & 1;
      $75 = ($74|0)==(0);
      if ($75) {
       $78 = (($info) + 54|0);
       $p2$2 = $60;
       while(1) {
        $87 = HEAP8[$78>>0]|0;
        $88 = ($87<<24>>24)==(0);
        if (!($88)) {
         break;
        }
        $89 = HEAP32[$66>>2]|0;
        $90 = ($89|0)==(1);
        if ($90) {
         break;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2,$info,$current_ptr,$path_below,$use_strcmp);
        $91 = (($p2$2) + 8|0);
        $92 = ($91>>>0)<($59>>>0);
        if ($92) {
         $p2$2 = $91;
        } else {
         break;
        }
       }
       break;
      }
      $76 = (($info) + 24|0);
      $77 = (($info) + 54|0);
      $p2$1 = $60;
      while(1) {
       $79 = HEAP8[$77>>0]|0;
       $80 = ($79<<24>>24)==(0);
       if (!($80)) {
        break;
       }
       $81 = HEAP32[$66>>2]|0;
       $82 = ($81|0)==(1);
       if ($82) {
        $83 = HEAP32[$76>>2]|0;
        $84 = ($83|0)==(1);
        if ($84) {
         break;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1,$info,$current_ptr,$path_below,$use_strcmp);
       $85 = (($p2$1) + 8|0);
       $86 = ($85>>>0)<($59>>>0);
       if ($86) {
        $p2$1 = $85;
       } else {
        break;
       }
      }
      break;
     }
    }
    $69 = (($info) + 54|0);
    $p2$0 = $60;
    while(1) {
     $70 = HEAP8[$69>>0]|0;
     $71 = ($70<<24>>24)==(0);
     if (!($71)) {
      break;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0,$info,$current_ptr,$path_below,$use_strcmp);
     $72 = (($p2$0) + 8|0);
     $73 = ($72>>>0)<($59>>>0);
     if ($73) {
      $p2$0 = $72;
     } else {
      break;
     }
    }
    break;
   }
   $11 = (($info) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = (($info) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = (($info) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = (($info) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = (($this) + 16|0);
     $24 = (($this) + 12|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = ((($this) + ($25<<3)|0) + 16|0);
     $27 = (($info) + 52|0);
     $28 = (($info) + 53|0);
     $29 = (($info) + 54|0);
     $30 = (($this) + 8|0);
     $31 = (($info) + 24|0);
     $does_dst_type_point_to_our_static_type$0$off0 = 0;$is_dst_type_derived_from_static_type$0$off0 = 0;$p$0 = $23;
     L34: while(1) {
      $32 = ($p$0>>>0)<($26>>>0);
      if (!($32)) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
       label = 20;
       break;
      }
      HEAP8[$27>>0] = 0;
      HEAP8[$28>>0] = 0;
      __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$current_ptr,$current_ptr,1,$use_strcmp);
      $33 = HEAP8[$29>>0]|0;
      $34 = ($33<<24>>24)==(0);
      if (!($34)) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
       label = 20;
       break;
      }
      $35 = HEAP8[$28>>0]|0;
      $36 = ($35<<24>>24)==(0);
      do {
       if ($36) {
        $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off0;
       } else {
        $37 = HEAP8[$27>>0]|0;
        $38 = ($37<<24>>24)==(0);
        if ($38) {
         $44 = HEAP32[$30>>2]|0;
         $45 = $44 & 1;
         $46 = ($45|0)==(0);
         if ($46) {
          $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$2$off0 = 1;
          label = 20;
          break L34;
         } else {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$1$off0 = 1;
          break;
         }
        }
        $39 = HEAP32[$31>>2]|0;
        $40 = ($39|0)==(1);
        if ($40) {
         label = 25;
         break L34;
        }
        $41 = HEAP32[$30>>2]|0;
        $42 = $41 & 2;
        $43 = ($42|0)==(0);
        if ($43) {
         label = 25;
         break L34;
        } else {
         $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type$1$off0 = 1;
        }
       }
      } while(0);
      $47 = (($p$0) + 8|0);
      $does_dst_type_point_to_our_static_type$0$off0 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$0$off0 = $is_dst_type_derived_from_static_type$1$off0;$p$0 = $47;
     }
     do {
      if ((label|0) == 20) {
       if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) {
        label = 24;
       } else {
        HEAP32[$14>>2] = $current_ptr;
        $48 = (($info) + 40|0);
        $49 = HEAP32[$48>>2]|0;
        $50 = (($49) + 1)|0;
        HEAP32[$48>>2] = $50;
        $51 = (($info) + 36|0);
        $52 = HEAP32[$51>>2]|0;
        $53 = ($52|0)==(1);
        if ($53) {
         $54 = HEAP32[$31>>2]|0;
         $55 = ($54|0)==(2);
         if ($55) {
          HEAP8[$29>>0] = 1;
          if ($is_dst_type_derived_from_static_type$2$off0) {
           break;
          }
         } else {
          label = 24;
         }
        } else {
         label = 24;
        }
       }
       if ((label|0) == 24) {
        if ($is_dst_type_derived_from_static_type$2$off0) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
      else if ((label|0) == 25) {
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = (($info) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$11 & 511]($8,$info,$dst_ptr,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$11 & 127]($8,$info,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = (($info) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = (($info) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $43 = (($this) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$44>>2]|0;
    $46 = (($45) + 24|0);
    $47 = HEAP32[$46>>2]|0;
    FUNCTION_TABLE_viiiii[$47 & 127]($44,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $11 = (($info) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = (($info) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = (($info) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = (($info) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = (($info) + 52|0);
     HEAP8[$23>>0] = 0;
     $24 = (($info) + 53|0);
     HEAP8[$24>>0] = 0;
     $25 = (($this) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = HEAP32[$26>>2]|0;
     $28 = (($27) + 20|0);
     $29 = HEAP32[$28>>2]|0;
     FUNCTION_TABLE_viiiiii[$29 & 511]($26,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $30 = HEAP8[$24>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $is_dst_type_derived_from_static_type$0$off01 = 0;
      label = 13;
     } else {
      $32 = HEAP8[$23>>0]|0;
      $not$ = ($32<<24>>24)==(0);
      if ($not$) {
       $is_dst_type_derived_from_static_type$0$off01 = 1;
       label = 13;
      }
     }
     do {
      if ((label|0) == 13) {
       HEAP32[$14>>2] = $current_ptr;
       $33 = (($info) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($34) + 1)|0;
       HEAP32[$33>>2] = $35;
       $36 = (($info) + 36|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(1);
       if ($38) {
        $39 = (($info) + 24|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = ($40|0)==(2);
        if ($41) {
         $42 = (($info) + 54|0);
         HEAP8[$42>>0] = 1;
         if ($is_dst_type_derived_from_static_type$0$off01) {
          break;
         }
        } else {
         label = 16;
        }
       } else {
        label = 16;
       }
       if ((label|0) == 16) {
        if ($is_dst_type_derived_from_static_type$0$off01) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = (($info) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 do {
  if ($2) {
   $3 = (($info) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = (($info) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if ($10) {
    $11 = (($info) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($current_ptr|0);
    if (!($13)) {
     $14 = (($info) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($current_ptr|0);
     if (!($16)) {
      $19 = (($info) + 32|0);
      HEAP32[$19>>2] = $path_below;
      HEAP32[$14>>2] = $current_ptr;
      $20 = (($info) + 40|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (($21) + 1)|0;
      HEAP32[$20>>2] = $22;
      $23 = (($info) + 36|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($24|0)==(1);
      if ($25) {
       $26 = (($info) + 24|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($27|0)==(2);
       if ($28) {
        $29 = (($info) + 54|0);
        HEAP8[$29>>0] = 1;
       }
      }
      $30 = (($info) + 44|0);
      HEAP32[$30>>2] = 4;
      break;
     }
    }
    $17 = ($path_below|0)==(1);
    if ($17) {
     $18 = (($info) + 32|0);
     HEAP32[$18>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = (($info) + 52|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = (($info) + 53|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = (($this) + 16|0);
  $8 = (($this) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($this) + ($9<<3)|0) + 16|0);
  HEAP8[$3>>0] = 0;
  HEAP8[$5>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($7,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  $11 = ($9|0)>(1);
  if ($11) {
   $12 = (($this) + 24|0);
   $13 = (($info) + 24|0);
   $14 = (($this) + 8|0);
   $15 = (($info) + 54|0);
   $p$0 = $12;
   while(1) {
    $16 = HEAP8[$15>>0]|0;
    $17 = ($16<<24>>24)==(0);
    if (!($17)) {
     break;
    }
    $18 = HEAP8[$3>>0]|0;
    $19 = ($18<<24>>24)==(0);
    if ($19) {
     $25 = HEAP8[$5>>0]|0;
     $26 = ($25<<24>>24)==(0);
     if (!($26)) {
      $27 = HEAP32[$14>>2]|0;
      $28 = $27 & 1;
      $29 = ($28|0)==(0);
      if ($29) {
       break;
      }
     }
    } else {
     $20 = HEAP32[$13>>2]|0;
     $21 = ($20|0)==(1);
     if ($21) {
      break;
     }
     $22 = HEAP32[$14>>2]|0;
     $23 = $22 & 2;
     $24 = ($23|0)==(0);
     if ($24) {
      break;
     }
    }
    HEAP8[$3>>0] = 0;
    HEAP8[$5>>0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
    $30 = (($p$0) + 8|0);
    $31 = ($30>>>0)<($10>>>0);
    if ($31) {
     $p$0 = $30;
    } else {
     break;
    }
   }
  }
  HEAP8[$3>>0] = $4;
  HEAP8[$5>>0] = $6;
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = (($5) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 511]($4,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function ___cxa_can_catch($catchType,$excpType,$thrown) {
 $catchType = $catchType|0;
 $excpType = $excpType|0;
 $thrown = $thrown|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $temp = sp;
 $0 = HEAP32[$thrown>>2]|0;
 HEAP32[$temp>>2] = $0;
 $1 = HEAP32[$catchType>>2]|0;
 $2 = (($1) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_iiii[$3 & 1023]($catchType,$excpType,$temp)|0);
 $5 = $4&1;
 if ($4) {
  $6 = HEAP32[$temp>>2]|0;
  HEAP32[$thrown>>2] = $6;
 }
 STACKTOP = sp;return ($5|0);
}
function ___cxa_is_pointer_type($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type|0)==(0|0);
 if ($0) {
  $3 = 0;
 } else {
  $1 = (___dynamic_cast($type,2728,2896,0)|0);
  $phitmp = ($1|0)!=(0|0);
  $3 = $phitmp;
 }
 $2 = $3&1;
 return ($2|0);
}
function __ZSt17__throw_bad_allocv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(4)|0);
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw(($0|0),(2200|0),(56|0));
 // unreachable;
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36|0;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = (($2) + 80|0);
   $5 = (($2) + 48|0);
   $6 = $5;
   $7 = $6;
   $8 = HEAP32[$7>>2]|0;
   $9 = (($6) + 4)|0;
   $10 = $9;
   $11 = HEAP32[$10>>2]|0;
   $12 = $8 & -256;
   $13 = ($12|0)==(1126902528);
   $14 = ($11|0)==(1129074247);
   $15 = $13 & $14;
   if (!($15)) {
    HEAP32[$vararg_buffer7>>2] = 1792;
    _abort_message(1904,$vararg_buffer7);
    // unreachable;
   }
   $16 = ($8|0)==(1126902529);
   $17 = ($11|0)==(1129074247);
   $18 = $16 & $17;
   if ($18) {
    $19 = (($2) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $20;
   } else {
    $21 = $4;
   }
   HEAP32[$thrown_object>>2] = $21;
   $22 = HEAP32[$2>>2]|0;
   $23 = (($22) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = HEAP32[2336>>2]|0;
   $26 = (($25) + 16|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (FUNCTION_TABLE_iiii[$27 & 1023](2336,$22,$thrown_object)|0);
   if ($28) {
    $29 = HEAP32[$thrown_object>>2]|0;
    $30 = HEAP32[$29>>2]|0;
    $31 = (($30) + 8|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 1023]($29)|0);
    HEAP32[$vararg_buffer>>2] = 1792;
    $vararg_ptr1 = (($vararg_buffer) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $24;
    $vararg_ptr2 = (($vararg_buffer) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $33;
    _abort_message(1808,$vararg_buffer);
    // unreachable;
   } else {
    HEAP32[$vararg_buffer3>>2] = 1792;
    $vararg_ptr6 = (($vararg_buffer3) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $24;
    _abort_message(1856,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(1944,$vararg_buffer10);
 // unreachable;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = (_pthread_key_create((1960|0),(448|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2032,$vararg_buffer);
  // unreachable;
 }
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -4|0);
 $2 = HEAP32[$1>>2]|0;HEAP32[$1>>2] = (($2+-1)|0);
 $3 = (($2) + -1)|0;
 $4 = ($3|0)<(0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = (($5) + -12|0);
  __ZdlPv($6);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 _free($p);
 $0 = HEAP32[1960>>2]|0;
 $1 = (_pthread_setspecific(($0|0),(0|0))|0);
 $2 = ($1|0)==(0);
 if ($2) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2088,$vararg_buffer);
  // unreachable;
 }
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$lcssa = 0, $$lcssa146 = 0, $$lcssa148 = 0, $$lcssa151 = 0, $$lcssa152 = 0, $$lcssa153 = 0, $$lcssa154 = 0, $$lcssa156 = 0, $$lcssa159 = 0, $$lcssa161 = 0, $$lcssa163 = 0, $$lcssa165 = 0, $$lcssa167 = 0, $$lcssa169 = 0, $$lcssa172 = 0, $$lcssa174 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0;
 var $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0, $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi59$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre108 = 0, $$pre58$i$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$rsize$3$i$lcssa = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i12$i = 0, $$sum$i13$i = 0, $$sum$i16$i = 0, $$sum$i19$i = 0, $$sum$i2337 = 0;
 var $$sum$i32 = 0, $$sum$i38 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i14$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum110$i = 0, $$sum111$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0;
 var $$sum116$i = 0, $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum14$pre$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i15$i = 0, $$sum2$i17$i = 0, $$sum2$i21$i = 0, $$sum2$pre$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum26$pre$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0;
 var $$sum3$i = 0, $$sum3$i27 = 0, $$sum3$pre$i$i = 0, $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0;
 var $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0, $$sum8$pre = 0, $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0;
 var $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0;
 var $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0;
 var $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0;
 var $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;
 var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;
 var $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0;
 var $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0;
 var $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0;
 var $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0;
 var $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0;
 var $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0;
 var $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0;
 var $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0;
 var $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0;
 var $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0;
 var $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0;
 var $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0;
 var $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0;
 var $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0;
 var $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0;
 var $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0;
 var $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0;
 var $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0;
 var $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0;
 var $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$08$i$i = 0, $K8$053$i$i = 0, $R$0$i = 0, $R$0$i$be = 0, $R$0$i$i = 0, $R$0$i$i$be = 0, $R$0$i$i$lcssa = 0, $R$0$i$i$ph = 0, $R$0$i$lcssa = 0, $R$0$i$ph = 0, $R$0$i18 = 0;
 var $R$0$i18$be = 0, $R$0$i18$lcssa = 0, $R$0$i18$ph = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$be = 0, $RP$0$i$i = 0, $RP$0$i$i$be = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$i$ph = 0, $RP$0$i$lcssa = 0, $RP$0$i$ph = 0, $RP$0$i17 = 0, $RP$0$i17$be = 0, $RP$0$i17$lcssa = 0, $RP$0$i17$ph = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0;
 var $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$052$i$i = 0, $T$052$i$i$lcssa = 0, $T$07$i$i = 0, $T$07$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i26$i = 0;
 var $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond24$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5$i = 0, $or$cond55$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0, $rsize$1$i$lcssa = 0, $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0;
 var $rsize$331$i$ph = 0, $rst$0$i = 0, $rst$1$i = 0, $rst$1$i$lcssa = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$082$i = 0, $sp$082$i$lcssa = 0, $sp$181$i = 0, $sp$181$i$lcssa = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$0$i14$lcssa = 0, $t$1$i = 0, $t$2$ph$i = 0, $t$2$v$3$i = 0;
 var $t$2$v$3$i$lcssa = 0, $t$230$i = 0, $t$230$i$be = 0, $t$230$i$ph = 0, $tbase$253$i = 0, $tsize$0313843$i = 0, $tsize$1$i = 0, $tsize$252$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$1$i$lcssa = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$332$i = 0, $v$332$i$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   if ($1) {
    $5 = 16;
   } else {
    $2 = (($bytes) + 11)|0;
    $3 = $2 & -8;
    $5 = $3;
   }
   $4 = $5 >>> 3;
   $6 = HEAP32[3144>>2]|0;
   $7 = $6 >>> $4;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($4))|0;
    $13 = $12 << 1;
    $14 = ((3144 + ($13<<2)|0) + 40|0);
    $$sum10 = (($13) + 2)|0;
    $15 = ((3144 + ($$sum10<<2)|0) + 40|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (($16) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[3144>>2] = $22;
     } else {
      $23 = HEAP32[((3144 + 16|0))>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = (($18) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = (($16) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    return ($mem$0|0);
   }
   $34 = HEAP32[((3144 + 8|0))>>2]|0;
   $35 = ($5>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $4;
     $38 = 2 << $4;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = ((3144 + ($65<<2)|0) + 40|0);
     $$sum4 = (($65) + 2)|0;
     $67 = ((3144 + ($$sum4<<2)|0) + 40|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = (($68) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[3144>>2] = $74;
       $88 = $34;
      } else {
       $75 = HEAP32[((3144 + 16|0))>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = (($70) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[((3144 + 8|0))>>2]|0;
        $88 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($5))|0;
     $82 = $5 | 3;
     $83 = (($68) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($5)|0);
     $85 = $81 | 1;
     $$sum56 = $5 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $89 = ($88|0)==(0);
     if (!($89)) {
      $90 = HEAP32[((3144 + 20|0))>>2]|0;
      $91 = $88 >>> 3;
      $92 = $91 << 1;
      $93 = ((3144 + ($92<<2)|0) + 40|0);
      $94 = HEAP32[3144>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[3144>>2] = $98;
       $$sum8$pre = (($92) + 2)|0;
       $$pre108 = ((3144 + ($$sum8$pre<<2)|0) + 40|0);
       $$pre$phiZ2D = $$pre108;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = ((3144 + ($$sum9<<2)|0) + 40|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[((3144 + 16|0))>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = (($F4$0) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = (($90) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = (($90) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[((3144 + 8|0))>>2] = $81;
     HEAP32[((3144 + 20|0))>>2] = $84;
     $mem$0 = $69;
     return ($mem$0|0);
    }
    $106 = HEAP32[((3144 + 4|0))>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $5;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = ((3144 + ($130<<2)|0) + 304|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = (($132) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($5))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = (($t$0$i) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = (($t$0$i) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = (($144) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($5))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[((3144 + 16|0))>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i$lcssa) + ($5)|0);
     $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = (($v$0$i$lcssa) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = (($v$0$i$lcssa) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i$lcssa|0);
     do {
      if ($157) {
       $167 = (($v$0$i$lcssa) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = (($v$0$i$lcssa) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i$ph = $171;$RP$0$i$ph = $170;
        }
       } else {
        $R$0$i$ph = $168;$RP$0$i$ph = $167;
       }
       $R$0$i = $R$0$i$ph;$RP$0$i = $RP$0$i$ph;
       while(1) {
        $173 = (($R$0$i) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if ($175) {
         $176 = (($R$0$i) + 16|0);
         $177 = HEAP32[$176>>2]|0;
         $178 = ($177|0)==(0|0);
         if ($178) {
          $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
          break;
         } else {
          $R$0$i$be = $177;$RP$0$i$be = $176;
         }
        } else {
         $R$0$i$be = $174;$RP$0$i$be = $173;
        }
        $R$0$i = $R$0$i$be;$RP$0$i = $RP$0$i$be;
       }
       $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i$lcssa>>2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = (($v$0$i$lcssa) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = (($159) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i$lcssa|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = (($156) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i$lcssa|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = (($v$0$i$lcssa) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ((3144 + ($182<<2)|0) + 304|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i$lcssa|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[((3144 + 4|0))>>2]|0;
         $189 = $188 & $187;
         HEAP32[((3144 + 4|0))>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[((3144 + 16|0))>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = (($154) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i$lcssa|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = (($154) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[((3144 + 16|0))>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = (($R$1$i) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = (($v$0$i$lcssa) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = (($R$1$i) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = (($201) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = (($v$0$i$lcssa) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[((3144 + 16|0))>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = (($R$1$i) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = (($207) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i$lcssa) + ($5))|0;
      $215 = $214 | 3;
      $216 = (($v$0$i$lcssa) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $5 | 3;
      $221 = (($v$0$i$lcssa) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i38 = $5 | 4;
      $223 = (($v$0$i$lcssa) + ($$sum$i38)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i$lcssa) + ($5))|0;
      $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i$lcssa;
      $225 = HEAP32[((3144 + 8|0))>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[((3144 + 20|0))>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = ((3144 + ($229<<2)|0) + 40|0);
       $231 = HEAP32[3144>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[3144>>2] = $235;
        $$sum2$pre$i = (($229) + 2)|0;
        $$pre$i = ((3144 + ($$sum2$pre$i<<2)|0) + 40|0);
        $$pre$phi$iZ2D = $$pre$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = ((3144 + ($$sum3$i<<2)|0) + 40|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[((3144 + 16|0))>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = (($F1$0$i) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = (($227) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = (($227) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[((3144 + 8|0))>>2] = $rsize$0$i$lcssa;
      HEAP32[((3144 + 20|0))>>2] = $151;
     }
     $243 = (($v$0$i$lcssa) + 8|0);
     $mem$0 = $243;
     return ($mem$0|0);
    }
   } else {
    $nb$0 = $5;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[((3144 + 4|0))>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = ((3144 + ($idx$0$i<<2)|0) + 304|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 93;
      } else {
       $278 = ($idx$0$i|0)==(31);
       if ($278) {
        $282 = 0;
       } else {
        $279 = $idx$0$i >>> 1;
        $280 = (25 - ($279))|0;
        $282 = $280;
       }
       $281 = $246 << $282;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $281;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = (($t$0$i14) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $$lcssa174 = $286;$t$0$i14$lcssa = $t$0$i14;
          label = 97;
          break;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = (($t$0$i14) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = ((($t$0$i14) + ($291<<2)|0) + 16|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$1$i$lcssa = $rsize$1$i;$rst$1$i$lcssa = $rst$1$i;$v$1$i$lcssa = $v$1$i;
         label = 92;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
       if ((label|0) == 92) {
        $rsize$2$i = $rsize$1$i$lcssa;$t$1$i = $rst$1$i$lcssa;$v$2$i = $v$1$i$lcssa;
        label = 93;
        break;
       }
       else if ((label|0) == 97) {
        $rsize$331$i$ph = $$lcssa174;$t$230$i$ph = $t$0$i14$lcssa;$v$332$i$ph = $t$0$i14$lcssa;
        label = 98;
        break;
       }
      }
     } while(0);
     if ((label|0) == 93) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = ((3144 + ($327<<2)|0) + 304|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;
      } else {
       $t$2$ph$i = $t$1$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$2$i;
      } else {
       $rsize$331$i$ph = $rsize$2$i;$t$230$i$ph = $t$2$ph$i;$v$332$i$ph = $v$2$i;
       label = 98;
      }
     }
     if ((label|0) == 98) {
      $rsize$331$i = $rsize$331$i$ph;$t$230$i = $t$230$i$ph;$v$332$i = $v$332$i$ph;
      while(1) {
       $331 = (($t$230$i) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = (($t$230$i) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if ($338) {
        $339 = (($t$230$i) + 20|0);
        $340 = HEAP32[$339>>2]|0;
        $341 = ($340|0)==(0|0);
        if ($341) {
         $$rsize$3$i$lcssa = $$rsize$3$i;$t$2$v$3$i$lcssa = $t$2$v$3$i;
         break;
        } else {
         $t$230$i$be = $340;
        }
       } else {
        $t$230$i$be = $337;
       }
       $rsize$331$i = $$rsize$3$i;$t$230$i = $t$230$i$be;$v$332$i = $t$2$v$3$i;
      }
      $rsize$3$lcssa$i = $$rsize$3$i$lcssa;$v$3$lcssa$i = $t$2$v$3$i$lcssa;
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[((3144 + 8|0))>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[((3144 + 16|0))>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = (($v$3$lcssa$i) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = (($v$3$lcssa$i) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = (($v$3$lcssa$i) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = (($v$3$lcssa$i) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18$ph = $368;$RP$0$i17$ph = $367;
          }
         } else {
          $R$0$i18$ph = $365;$RP$0$i17$ph = $364;
         }
         $R$0$i18 = $R$0$i18$ph;$RP$0$i17 = $RP$0$i17$ph;
         while(1) {
          $370 = (($R$0$i18) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if ($372) {
           $373 = (($R$0$i18) + 16|0);
           $374 = HEAP32[$373>>2]|0;
           $375 = ($374|0)==(0|0);
           if ($375) {
            $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
            break;
           } else {
            $R$0$i18$be = $374;$RP$0$i17$be = $373;
           }
          } else {
           $R$0$i18$be = $371;$RP$0$i17$be = $370;
          }
          $R$0$i18 = $R$0$i18$be;$RP$0$i17 = $RP$0$i17$be;
         }
         $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17$lcssa>>2] = 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = (($v$3$lcssa$i) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = (($356) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = (($353) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = (($v$3$lcssa$i) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = ((3144 + ($379<<2)|0) + 304|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[((3144 + 4|0))>>2]|0;
           $386 = $385 & $384;
           HEAP32[((3144 + 4|0))>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[((3144 + 16|0))>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = (($351) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = (($351) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[((3144 + 16|0))>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = (($R$1$i20) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = (($v$3$lcssa$i) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = (($R$1$i20) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = (($398) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = (($v$3$lcssa$i) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[((3144 + 16|0))>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = (($R$1$i20) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = (($404) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L218: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = (($v$3$lcssa$i) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = (($v$3$lcssa$i) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2337 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2337)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = ((3144 + ($424<<2)|0) + 40|0);
          $426 = HEAP32[3144>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          if ($429) {
           $430 = $426 | $427;
           HEAP32[3144>>2] = $430;
           $$sum14$pre$i = (($424) + 2)|0;
           $$pre$i25 = ((3144 + ($$sum14$pre$i<<2)|0) + 40|0);
           $$pre$phi$i26Z2D = $$pre$i25;$F5$0$i = $425;
          } else {
           $$sum17$i = (($424) + 2)|0;
           $431 = ((3144 + ($$sum17$i<<2)|0) + 40|0);
           $432 = HEAP32[$431>>2]|0;
           $433 = HEAP32[((3144 + 16|0))>>2]|0;
           $434 = ($432>>>0)<($433>>>0);
           if ($434) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
           }
          }
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = (($F5$0$i) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = ((3144 + ($I7$0$i<<2)|0) + 304|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[((3144 + 4|0))>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[((3144 + 4|0))>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ($I7$0$i|0)==(31);
         if ($476) {
          $484 = 0;
         } else {
          $477 = $I7$0$i >>> 1;
          $478 = (25 - ($477))|0;
          $484 = $478;
         }
         $479 = (($475) + 4|0);
         $480 = HEAP32[$479>>2]|0;
         $481 = $480 & -8;
         $482 = ($481|0)==($rsize$3$lcssa$i|0);
         do {
          if ($482) {
           $T$0$lcssa$i = $475;
          } else {
           $483 = $rsize$3$lcssa$i << $484;
           $K12$029$i = $483;$T$028$i = $475;
           while(1) {
            $491 = $K12$029$i >>> 31;
            $492 = ((($T$028$i) + ($491<<2)|0) + 16|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             $$lcssa169 = $492;$T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = (($487) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $$lcssa172 = $487;
             label = 164;
             break;
            } else {
             $K12$029$i = $485;$T$028$i = $487;
            }
           }
           if ((label|0) == 164) {
            $T$0$lcssa$i = $$lcssa172;
            break;
           }
           $494 = HEAP32[((3144 + 16|0))>>2]|0;
           $495 = ($$lcssa169>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$$lcssa169>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$028$i$lcssa;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L218;
           }
          }
         } while(0);
         $499 = (($T$0$lcssa$i) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[((3144 + 16|0))>>2]|0;
         $502 = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = ($500>>>0)>=($501>>>0);
         $or$cond24$i = $502 & $503;
         if ($or$cond24$i) {
          $504 = (($500) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = (($v$3$lcssa$i) + 8|0);
       $mem$0 = $508;
       return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[((3144 + 8|0))>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[((3144 + 20|0))>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[((3144 + 20|0))>>2] = $514;
   HEAP32[((3144 + 8|0))>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = (($512) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[((3144 + 8|0))>>2] = 0;
   HEAP32[((3144 + 20|0))>>2] = 0;
   $520 = $509 | 3;
   $521 = (($512) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = (($512) + 8|0);
  $mem$0 = $525;
  return ($mem$0|0);
 }
 $526 = HEAP32[((3144 + 12|0))>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[((3144 + 12|0))>>2] = $528;
  $529 = HEAP32[((3144 + 24|0))>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[((3144 + 24|0))>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = (($529) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = (($529) + 8|0);
  $mem$0 = $535;
  return ($mem$0|0);
 }
 $536 = HEAP32[3616>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[((3616 + 8|0))>>2] = $538;
    HEAP32[((3616 + 4|0))>>2] = $538;
    HEAP32[((3616 + 12|0))>>2] = -1;
    HEAP32[((3616 + 16|0))>>2] = -1;
    HEAP32[((3616 + 20|0))>>2] = 0;
    HEAP32[((3144 + 444|0))>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[3616>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[((3616 + 8|0))>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $552 = HEAP32[((3144 + 440|0))>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[((3144 + 432|0))>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return ($mem$0|0);
  }
 }
 $558 = HEAP32[((3144 + 444|0))>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L282: do {
  if ($560) {
   $561 = HEAP32[((3144 + 24|0))>>2]|0;
   $562 = ($561|0)==(0|0);
   do {
    if ($562) {
     label = 191;
    } else {
     $sp$0$i$i = ((3144 + 448|0));
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = (($sp$0$i$i) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        $$lcssa165 = $sp$0$i$i;$$lcssa167 = $565;
        break;
       }
      }
      $569 = (($sp$0$i$i) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 190;
       break;
      } else {
       $sp$0$i$i = $570;
      }
     }
     if ((label|0) == 190) {
      label = 191;
      break;
     }
     $594 = HEAP32[((3144 + 12|0))>>2]|0;
     $595 = (($548) - ($594))|0;
     $596 = $595 & $549;
     $597 = ($596>>>0)<(2147483647);
     if ($597) {
      $598 = (_sbrk(($596|0))|0);
      $599 = HEAP32[$$lcssa165>>2]|0;
      $600 = HEAP32[$$lcssa167>>2]|0;
      $601 = (($599) + ($600)|0);
      $602 = ($598|0)==($601|0);
      if ($602) {
       $603 = ($598|0)==((-1)|0);
       if ($603) {
        $tsize$0313843$i = $596;
       } else {
        $tbase$253$i = $598;$tsize$252$i = $596;
        label = 211;
        break L282;
       }
      } else {
       $br$0$ph$i = $598;$ssize$1$ph$i = $596;
       label = 201;
      }
     } else {
      $tsize$0313843$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 191) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $tsize$0313843$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[((3616 + 4|0))>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = (($576) + ($574))|0;
       $580 = (0 - ($575))|0;
       $581 = $579 & $580;
       $582 = (($550) - ($574))|0;
       $583 = (($582) + ($581))|0;
       $ssize$0$i = $583;
      }
      $584 = HEAP32[((3144 + 432|0))>>2]|0;
      $585 = (($584) + ($ssize$0$i))|0;
      $586 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $587 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = HEAP32[((3144 + 440|0))>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0313843$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($ssize$0$i|0))|0);
       $593 = ($592|0)==($572|0);
       if ($593) {
        $tbase$253$i = $572;$tsize$252$i = $ssize$0$i;
        label = 211;
        break L282;
       } else {
        $br$0$ph$i = $592;$ssize$1$ph$i = $ssize$0$i;
        label = 201;
       }
      } else {
       $tsize$0313843$i = 0;
      }
     }
    }
   } while(0);
   L306: do {
    if ((label|0) == 201) {
     $604 = (0 - ($ssize$1$ph$i))|0;
     $605 = ($br$0$ph$i|0)!=((-1)|0);
     $606 = ($ssize$1$ph$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $605;
     $607 = ($545>>>0)>($ssize$1$ph$i>>>0);
     $or$cond4$i = $607 & $or$cond5$i;
     do {
      if ($or$cond4$i) {
       $608 = HEAP32[((3616 + 8|0))>>2]|0;
       $609 = (($547) - ($ssize$1$ph$i))|0;
       $610 = (($609) + ($608))|0;
       $611 = (0 - ($608))|0;
       $612 = $610 & $611;
       $613 = ($612>>>0)<(2147483647);
       if ($613) {
        $614 = (_sbrk(($612|0))|0);
        $615 = ($614|0)==((-1)|0);
        if ($615) {
         (_sbrk(($604|0))|0);
         $tsize$0313843$i = 0;
         break L306;
        } else {
         $616 = (($612) + ($ssize$1$ph$i))|0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while(0);
     $617 = ($br$0$ph$i|0)==((-1)|0);
     if ($617) {
      $tsize$0313843$i = 0;
     } else {
      $tbase$253$i = $br$0$ph$i;$tsize$252$i = $ssize$2$i;
      label = 211;
      break L282;
     }
    }
   } while(0);
   $618 = HEAP32[((3144 + 444|0))>>2]|0;
   $619 = $618 | 4;
   HEAP32[((3144 + 444|0))>>2] = $619;
   $tsize$1$i = $tsize$0313843$i;
   label = 208;
  } else {
   $tsize$1$i = 0;
   label = 208;
  }
 } while(0);
 if ((label|0) == 208) {
  $620 = ($550>>>0)<(2147483647);
  if ($620) {
   $621 = (_sbrk(($550|0))|0);
   $622 = (_sbrk(0)|0);
   $623 = ($621|0)!=((-1)|0);
   $624 = ($622|0)!=((-1)|0);
   $or$cond3$i = $623 & $624;
   $625 = ($621>>>0)<($622>>>0);
   $or$cond6$i = $625 & $or$cond3$i;
   if ($or$cond6$i) {
    $626 = $622;
    $627 = $621;
    $628 = (($626) - ($627))|0;
    $629 = (($nb$0) + 40)|0;
    $630 = ($628>>>0)>($629>>>0);
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$253$i = $621;$tsize$252$i = $$tsize$1$i;
     label = 211;
    }
   }
  }
 }
 if ((label|0) == 211) {
  $631 = HEAP32[((3144 + 432|0))>>2]|0;
  $632 = (($631) + ($tsize$252$i))|0;
  HEAP32[((3144 + 432|0))>>2] = $632;
  $633 = HEAP32[((3144 + 436|0))>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[((3144 + 436|0))>>2] = $632;
  }
  $635 = HEAP32[((3144 + 24|0))>>2]|0;
  $636 = ($635|0)==(0|0);
  L325: do {
   if ($636) {
    $637 = HEAP32[((3144 + 16|0))>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$253$i>>>0)<($637>>>0);
    $or$cond8$i = $638 | $639;
    if ($or$cond8$i) {
     HEAP32[((3144 + 16|0))>>2] = $tbase$253$i;
    }
    HEAP32[((3144 + 448|0))>>2] = $tbase$253$i;
    HEAP32[((3144 + 452|0))>>2] = $tsize$252$i;
    HEAP32[((3144 + 460|0))>>2] = 0;
    $640 = HEAP32[3616>>2]|0;
    HEAP32[((3144 + 36|0))>>2] = $640;
    HEAP32[((3144 + 32|0))>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $641 = $i$02$i$i << 1;
     $642 = ((3144 + ($641<<2)|0) + 40|0);
     $$sum$i$i = (($641) + 3)|0;
     $643 = ((3144 + ($$sum$i$i<<2)|0) + 40|0);
     HEAP32[$643>>2] = $642;
     $$sum1$i$i = (($641) + 2)|0;
     $644 = ((3144 + ($$sum1$i$i<<2)|0) + 40|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = (($tsize$252$i) + -40)|0;
    $647 = (($tbase$253$i) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    if ($650) {
     $654 = 0;
    } else {
     $651 = (0 - ($648))|0;
     $652 = $651 & 7;
     $654 = $652;
    }
    $653 = (($tbase$253$i) + ($654)|0);
    $655 = (($646) - ($654))|0;
    HEAP32[((3144 + 24|0))>>2] = $653;
    HEAP32[((3144 + 12|0))>>2] = $655;
    $656 = $655 | 1;
    $$sum$i12$i = (($654) + 4)|0;
    $657 = (($tbase$253$i) + ($$sum$i12$i)|0);
    HEAP32[$657>>2] = $656;
    $$sum2$i$i = (($tsize$252$i) + -36)|0;
    $658 = (($tbase$253$i) + ($$sum2$i$i)|0);
    HEAP32[$658>>2] = 40;
    $659 = HEAP32[((3616 + 16|0))>>2]|0;
    HEAP32[((3144 + 28|0))>>2] = $659;
   } else {
    $sp$082$i = ((3144 + 448|0));
    while(1) {
     $660 = HEAP32[$sp$082$i>>2]|0;
     $661 = (($sp$082$i) + 4|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = (($660) + ($662)|0);
     $664 = ($tbase$253$i|0)==($663|0);
     if ($664) {
      $$lcssa159 = $660;$$lcssa161 = $661;$$lcssa163 = $662;$sp$082$i$lcssa = $sp$082$i;
      label = 224;
      break;
     }
     $665 = (($sp$082$i) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($666|0)==(0|0);
     if ($667) {
      label = 229;
      break;
     } else {
      $sp$082$i = $666;
     }
    }
    if ((label|0) == 224) {
     $668 = (($sp$082$i$lcssa) + 12|0);
     $669 = HEAP32[$668>>2]|0;
     $670 = $669 & 8;
     $671 = ($670|0)==(0);
     if ($671) {
      $672 = ($635>>>0)>=($$lcssa159>>>0);
      $673 = ($635>>>0)<($tbase$253$i>>>0);
      $or$cond55$i = $673 & $672;
      if ($or$cond55$i) {
       $674 = (($$lcssa163) + ($tsize$252$i))|0;
       HEAP32[$$lcssa161>>2] = $674;
       $675 = HEAP32[((3144 + 12|0))>>2]|0;
       $676 = (($675) + ($tsize$252$i))|0;
       $677 = (($635) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       if ($680) {
        $684 = 0;
       } else {
        $681 = (0 - ($678))|0;
        $682 = $681 & 7;
        $684 = $682;
       }
       $683 = (($635) + ($684)|0);
       $685 = (($676) - ($684))|0;
       HEAP32[((3144 + 24|0))>>2] = $683;
       HEAP32[((3144 + 12|0))>>2] = $685;
       $686 = $685 | 1;
       $$sum$i16$i = (($684) + 4)|0;
       $687 = (($635) + ($$sum$i16$i)|0);
       HEAP32[$687>>2] = $686;
       $$sum2$i17$i = (($676) + 4)|0;
       $688 = (($635) + ($$sum2$i17$i)|0);
       HEAP32[$688>>2] = 40;
       $689 = HEAP32[((3616 + 16|0))>>2]|0;
       HEAP32[((3144 + 28|0))>>2] = $689;
       break;
      }
     }
    }
    else if ((label|0) == 229) {
    }
    $690 = HEAP32[((3144 + 16|0))>>2]|0;
    $691 = ($tbase$253$i>>>0)<($690>>>0);
    if ($691) {
     HEAP32[((3144 + 16|0))>>2] = $tbase$253$i;
     $755 = $tbase$253$i;
    } else {
     $755 = $690;
    }
    $692 = (($tbase$253$i) + ($tsize$252$i)|0);
    $sp$181$i = ((3144 + 448|0));
    while(1) {
     $693 = HEAP32[$sp$181$i>>2]|0;
     $694 = ($693|0)==($692|0);
     if ($694) {
      $$lcssa156 = $sp$181$i;$sp$181$i$lcssa = $sp$181$i;
      label = 235;
      break;
     }
     $695 = (($sp$181$i) + 8|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = ($696|0)==(0|0);
     if ($697) {
      label = 236;
      break;
     } else {
      $sp$181$i = $696;
     }
    }
    if ((label|0) == 235) {
     $698 = (($sp$181$i$lcssa) + 12|0);
     $699 = HEAP32[$698>>2]|0;
     $700 = $699 & 8;
     $701 = ($700|0)==(0);
     if ($701) {
      HEAP32[$$lcssa156>>2] = $tbase$253$i;
      $702 = (($sp$181$i$lcssa) + 4|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (($703) + ($tsize$252$i))|0;
      HEAP32[$702>>2] = $704;
      $705 = (($tbase$253$i) + 8|0);
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707|0)==(0);
      if ($708) {
       $712 = 0;
      } else {
       $709 = (0 - ($706))|0;
       $710 = $709 & 7;
       $712 = $710;
      }
      $711 = (($tbase$253$i) + ($712)|0);
      $$sum110$i = (($tsize$252$i) + 8)|0;
      $713 = (($tbase$253$i) + ($$sum110$i)|0);
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715|0)==(0);
      if ($716) {
       $719 = 0;
      } else {
       $717 = (0 - ($714))|0;
       $718 = $717 & 7;
       $719 = $718;
      }
      $$sum111$i = (($719) + ($tsize$252$i))|0;
      $720 = (($tbase$253$i) + ($$sum111$i)|0);
      $721 = $720;
      $722 = $711;
      $723 = (($721) - ($722))|0;
      $$sum$i19$i = (($712) + ($nb$0))|0;
      $724 = (($tbase$253$i) + ($$sum$i19$i)|0);
      $725 = (($723) - ($nb$0))|0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = (($712) + 4)|0;
      $727 = (($tbase$253$i) + ($$sum1$i20$i)|0);
      HEAP32[$727>>2] = $726;
      $728 = ($720|0)==($635|0);
      L364: do {
       if ($728) {
        $729 = HEAP32[((3144 + 12|0))>>2]|0;
        $730 = (($729) + ($725))|0;
        HEAP32[((3144 + 12|0))>>2] = $730;
        HEAP32[((3144 + 24|0))>>2] = $724;
        $731 = $730 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $732 = (($tbase$253$i) + ($$sum42$i$i)|0);
        HEAP32[$732>>2] = $731;
       } else {
        $733 = HEAP32[((3144 + 20|0))>>2]|0;
        $734 = ($720|0)==($733|0);
        if ($734) {
         $735 = HEAP32[((3144 + 8|0))>>2]|0;
         $736 = (($735) + ($725))|0;
         HEAP32[((3144 + 8|0))>>2] = $736;
         HEAP32[((3144 + 20|0))>>2] = $724;
         $737 = $736 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $738 = (($tbase$253$i) + ($$sum40$i$i)|0);
         HEAP32[$738>>2] = $737;
         $$sum41$i$i = (($736) + ($$sum$i19$i))|0;
         $739 = (($tbase$253$i) + ($$sum41$i$i)|0);
         HEAP32[$739>>2] = $736;
         break;
        }
        $$sum2$i21$i = (($tsize$252$i) + 4)|0;
        $$sum112$i = (($$sum2$i21$i) + ($719))|0;
        $740 = (($tbase$253$i) + ($$sum112$i)|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = $741 & 3;
        $743 = ($742|0)==(1);
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = ($741>>>0)<(256);
         L372: do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum122$i = (($$sum3738$i$i) + ($tsize$252$i))|0;
           $747 = (($tbase$253$i) + ($$sum122$i)|0);
           $748 = HEAP32[$747>>2]|0;
           $$sum39$i$i = (($tsize$252$i) + 12)|0;
           $$sum123$i = (($$sum39$i$i) + ($719))|0;
           $749 = (($tbase$253$i) + ($$sum123$i)|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = $745 << 1;
           $752 = ((3144 + ($751<<2)|0) + 40|0);
           $753 = ($748|0)==($752|0);
           do {
            if (!($753)) {
             $754 = ($748>>>0)<($755>>>0);
             if ($754) {
              _abort();
              // unreachable;
             }
             $756 = (($748) + 12|0);
             $757 = HEAP32[$756>>2]|0;
             $758 = ($757|0)==($720|0);
             if ($758) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $759 = ($750|0)==($748|0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = HEAP32[3144>>2]|0;
            $763 = $762 & $761;
            HEAP32[3144>>2] = $763;
            break;
           }
           $764 = ($750|0)==($752|0);
           do {
            if ($764) {
             $$pre58$i$i = (($750) + 8|0);
             $$pre$phi59$i$iZ2D = $$pre58$i$i;
            } else {
             $765 = ($750>>>0)<($755>>>0);
             if ($765) {
              _abort();
              // unreachable;
             }
             $766 = (($750) + 8|0);
             $767 = HEAP32[$766>>2]|0;
             $768 = ($767|0)==($720|0);
             if ($768) {
              $$pre$phi59$i$iZ2D = $766;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $769 = (($748) + 12|0);
           HEAP32[$769>>2] = $750;
           HEAP32[$$pre$phi59$i$iZ2D>>2] = $748;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum113$i = (($$sum34$i$i) + ($tsize$252$i))|0;
           $770 = (($tbase$253$i) + ($$sum113$i)|0);
           $771 = HEAP32[$770>>2]|0;
           $$sum5$i$i = (($tsize$252$i) + 12)|0;
           $$sum114$i = (($$sum5$i$i) + ($719))|0;
           $772 = (($tbase$253$i) + ($$sum114$i)|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ($773|0)==($720|0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum120$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $784 = (($tbase$253$i) + ($$sum120$i)|0);
             $785 = HEAP32[$784>>2]|0;
             $786 = ($785|0)==(0|0);
             if ($786) {
              $$sum121$i = (($$sum67$i$i) + ($tsize$252$i))|0;
              $787 = (($tbase$253$i) + ($$sum121$i)|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i$ph = $788;$RP$0$i$i$ph = $787;
              }
             } else {
              $R$0$i$i$ph = $785;$RP$0$i$i$ph = $784;
             }
             $R$0$i$i = $R$0$i$i$ph;$RP$0$i$i = $RP$0$i$i$ph;
             while(1) {
              $790 = (($R$0$i$i) + 20|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if ($792) {
               $793 = (($R$0$i$i) + 16|0);
               $794 = HEAP32[$793>>2]|0;
               $795 = ($794|0)==(0|0);
               if ($795) {
                $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
                break;
               } else {
                $R$0$i$i$be = $794;$RP$0$i$i$be = $793;
               }
              } else {
               $R$0$i$i$be = $791;$RP$0$i$i$be = $790;
              }
              $R$0$i$i = $R$0$i$i$be;$RP$0$i$i = $RP$0$i$i$be;
             }
             $796 = ($RP$0$i$i$lcssa>>>0)<($755>>>0);
             if ($796) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i$lcssa>>2] = 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum115$i = (($$sum3536$i$i) + ($tsize$252$i))|0;
             $775 = (($tbase$253$i) + ($$sum115$i)|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776>>>0)<($755>>>0);
             if ($777) {
              _abort();
              // unreachable;
             }
             $778 = (($776) + 12|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($720|0);
             if (!($780)) {
              _abort();
              // unreachable;
             }
             $781 = (($773) + 8|0);
             $782 = HEAP32[$781>>2]|0;
             $783 = ($782|0)==($720|0);
             if ($783) {
              HEAP32[$778>>2] = $773;
              HEAP32[$781>>2] = $776;
              $R$1$i$i = $773;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $797 = ($771|0)==(0|0);
           if ($797) {
            break;
           }
           $$sum30$i$i = (($tsize$252$i) + 28)|0;
           $$sum116$i = (($$sum30$i$i) + ($719))|0;
           $798 = (($tbase$253$i) + ($$sum116$i)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = ((3144 + ($799<<2)|0) + 304|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = ($720|0)==($801|0);
           do {
            if ($802) {
             HEAP32[$800>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = HEAP32[((3144 + 4|0))>>2]|0;
             $806 = $805 & $804;
             HEAP32[((3144 + 4|0))>>2] = $806;
             break L372;
            } else {
             $807 = HEAP32[((3144 + 16|0))>>2]|0;
             $808 = ($771>>>0)<($807>>>0);
             if ($808) {
              _abort();
              // unreachable;
             }
             $809 = (($771) + 16|0);
             $810 = HEAP32[$809>>2]|0;
             $811 = ($810|0)==($720|0);
             if ($811) {
              HEAP32[$809>>2] = $R$1$i$i;
             } else {
              $812 = (($771) + 20|0);
              HEAP32[$812>>2] = $R$1$i$i;
             }
             $813 = ($R$1$i$i|0)==(0|0);
             if ($813) {
              break L372;
             }
            }
           } while(0);
           $814 = HEAP32[((3144 + 16|0))>>2]|0;
           $815 = ($R$1$i$i>>>0)<($814>>>0);
           if ($815) {
            _abort();
            // unreachable;
           }
           $816 = (($R$1$i$i) + 24|0);
           HEAP32[$816>>2] = $771;
           $$sum3132$i$i = $719 | 16;
           $$sum117$i = (($$sum3132$i$i) + ($tsize$252$i))|0;
           $817 = (($tbase$253$i) + ($$sum117$i)|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           do {
            if (!($819)) {
             $820 = ($818>>>0)<($814>>>0);
             if ($820) {
              _abort();
              // unreachable;
             } else {
              $821 = (($R$1$i$i) + 16|0);
              HEAP32[$821>>2] = $818;
              $822 = (($818) + 24|0);
              HEAP32[$822>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum118$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $823 = (($tbase$253$i) + ($$sum118$i)|0);
           $824 = HEAP32[$823>>2]|0;
           $825 = ($824|0)==(0|0);
           if ($825) {
            break;
           }
           $826 = HEAP32[((3144 + 16|0))>>2]|0;
           $827 = ($824>>>0)<($826>>>0);
           if ($827) {
            _abort();
            // unreachable;
           } else {
            $828 = (($R$1$i$i) + 20|0);
            HEAP32[$828>>2] = $824;
            $829 = (($824) + 24|0);
            HEAP32[$829>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $744 | $719;
         $$sum119$i = (($$sum9$i$i) + ($tsize$252$i))|0;
         $830 = (($tbase$253$i) + ($$sum119$i)|0);
         $831 = (($744) + ($725))|0;
         $oldfirst$0$i$i = $830;$qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;$qsize$0$i$i = $725;
        }
        $832 = (($oldfirst$0$i$i) + 4|0);
        $833 = HEAP32[$832>>2]|0;
        $834 = $833 & -2;
        HEAP32[$832>>2] = $834;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $836 = (($tbase$253$i) + ($$sum10$i$i)|0);
        HEAP32[$836>>2] = $835;
        $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $837 = (($tbase$253$i) + ($$sum11$i$i)|0);
        HEAP32[$837>>2] = $qsize$0$i$i;
        $838 = $qsize$0$i$i >>> 3;
        $839 = ($qsize$0$i$i>>>0)<(256);
        if ($839) {
         $840 = $838 << 1;
         $841 = ((3144 + ($840<<2)|0) + 40|0);
         $842 = HEAP32[3144>>2]|0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844|0)==(0);
         do {
          if ($845) {
           $846 = $842 | $843;
           HEAP32[3144>>2] = $846;
           $$sum26$pre$i$i = (($840) + 2)|0;
           $$pre$i22$i = ((3144 + ($$sum26$pre$i$i<<2)|0) + 40|0);
           $$pre$phi$i23$iZ2D = $$pre$i22$i;$F4$0$i$i = $841;
          } else {
           $$sum29$i$i = (($840) + 2)|0;
           $847 = ((3144 + ($$sum29$i$i<<2)|0) + 40|0);
           $848 = HEAP32[$847>>2]|0;
           $849 = HEAP32[((3144 + 16|0))>>2]|0;
           $850 = ($848>>>0)<($849>>>0);
           if (!($850)) {
            $$pre$phi$i23$iZ2D = $847;$F4$0$i$i = $848;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i23$iZ2D>>2] = $724;
         $851 = (($F4$0$i$i) + 12|0);
         HEAP32[$851>>2] = $724;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $852 = (($tbase$253$i) + ($$sum27$i$i)|0);
         HEAP32[$852>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $853 = (($tbase$253$i) + ($$sum28$i$i)|0);
         HEAP32[$853>>2] = $841;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854|0)==(0);
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = ($qsize$0$i$i>>>0)>(16777215);
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = (($854) + 1048320)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = (($860) + 520192)|0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = (($865) + 245760)|0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = (14 - ($869))|0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = (($870) + ($872))|0;
          $874 = $873 << 1;
          $875 = (($873) + 7)|0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while(0);
        $879 = ((3144 + ($I7$0$i$i<<2)|0) + 304|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $880 = (($tbase$253$i) + ($$sum12$i$i)|0);
        HEAP32[$880>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $881 = (($tbase$253$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $882 = (($tbase$253$i) + ($$sum14$i$i)|0);
        HEAP32[$882>>2] = 0;
        HEAP32[$881>>2] = 0;
        $883 = HEAP32[((3144 + 4|0))>>2]|0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885|0)==(0);
        if ($886) {
         $887 = $883 | $884;
         HEAP32[((3144 + 4|0))>>2] = $887;
         HEAP32[$879>>2] = $724;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $888 = (($tbase$253$i) + ($$sum15$i$i)|0);
         HEAP32[$888>>2] = $879;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $889 = (($tbase$253$i) + ($$sum16$i$i)|0);
         HEAP32[$889>>2] = $724;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $890 = (($tbase$253$i) + ($$sum17$i$i)|0);
         HEAP32[$890>>2] = $724;
         break;
        }
        $891 = HEAP32[$879>>2]|0;
        $892 = ($I7$0$i$i|0)==(31);
        if ($892) {
         $900 = 0;
        } else {
         $893 = $I7$0$i$i >>> 1;
         $894 = (25 - ($893))|0;
         $900 = $894;
        }
        $895 = (($891) + 4|0);
        $896 = HEAP32[$895>>2]|0;
        $897 = $896 & -8;
        $898 = ($897|0)==($qsize$0$i$i|0);
        do {
         if ($898) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $899 = $qsize$0$i$i << $900;
          $K8$053$i$i = $899;$T$052$i$i = $891;
          while(1) {
           $907 = $K8$053$i$i >>> 31;
           $908 = ((($T$052$i$i) + ($907<<2)|0) + 16|0);
           $903 = HEAP32[$908>>2]|0;
           $909 = ($903|0)==(0|0);
           if ($909) {
            $$lcssa = $908;$T$052$i$i$lcssa = $T$052$i$i;
            break;
           }
           $901 = $K8$053$i$i << 1;
           $902 = (($903) + 4|0);
           $904 = HEAP32[$902>>2]|0;
           $905 = $904 & -8;
           $906 = ($905|0)==($qsize$0$i$i|0);
           if ($906) {
            $$lcssa146 = $903;
            label = 316;
            break;
           } else {
            $K8$053$i$i = $901;$T$052$i$i = $903;
           }
          }
          if ((label|0) == 316) {
           $T$0$lcssa$i25$i = $$lcssa146;
           break;
          }
          $910 = HEAP32[((3144 + 16|0))>>2]|0;
          $911 = ($$lcssa>>>0)<($910>>>0);
          if ($911) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa>>2] = $724;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $912 = (($tbase$253$i) + ($$sum23$i$i)|0);
           HEAP32[$912>>2] = $T$052$i$i$lcssa;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $913 = (($tbase$253$i) + ($$sum24$i$i)|0);
           HEAP32[$913>>2] = $724;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $914 = (($tbase$253$i) + ($$sum25$i$i)|0);
           HEAP32[$914>>2] = $724;
           break L364;
          }
         }
        } while(0);
        $915 = (($T$0$lcssa$i25$i) + 8|0);
        $916 = HEAP32[$915>>2]|0;
        $917 = HEAP32[((3144 + 16|0))>>2]|0;
        $918 = ($T$0$lcssa$i25$i>>>0)>=($917>>>0);
        $919 = ($916>>>0)>=($917>>>0);
        $or$cond$i26$i = $918 & $919;
        if ($or$cond$i26$i) {
         $920 = (($916) + 12|0);
         HEAP32[$920>>2] = $724;
         HEAP32[$915>>2] = $724;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $921 = (($tbase$253$i) + ($$sum20$i$i)|0);
         HEAP32[$921>>2] = $916;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $922 = (($tbase$253$i) + ($$sum21$i$i)|0);
         HEAP32[$922>>2] = $T$0$lcssa$i25$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $923 = (($tbase$253$i) + ($$sum22$i$i)|0);
         HEAP32[$923>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $712 | 8;
      $924 = (($tbase$253$i) + ($$sum1819$i$i)|0);
      $mem$0 = $924;
      return ($mem$0|0);
     }
    }
    else if ((label|0) == 236) {
    }
    $sp$0$i$i$i = ((3144 + 448|0));
    while(1) {
     $925 = HEAP32[$sp$0$i$i$i>>2]|0;
     $926 = ($925>>>0)>($635>>>0);
     if (!($926)) {
      $927 = (($sp$0$i$i$i) + 4|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = (($925) + ($928)|0);
      $930 = ($929>>>0)>($635>>>0);
      if ($930) {
       $$lcssa152 = $925;$$lcssa153 = $928;$$lcssa154 = $929;
       break;
      }
     }
     $931 = (($sp$0$i$i$i) + 8|0);
     $932 = HEAP32[$931>>2]|0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i13$i = (($$lcssa153) + -47)|0;
    $$sum1$i14$i = (($$lcssa153) + -39)|0;
    $933 = (($$lcssa152) + ($$sum1$i14$i)|0);
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935|0)==(0);
    if ($936) {
     $939 = 0;
    } else {
     $937 = (0 - ($934))|0;
     $938 = $937 & 7;
     $939 = $938;
    }
    $$sum2$i15$i = (($$sum$i13$i) + ($939))|0;
    $940 = (($$lcssa152) + ($$sum2$i15$i)|0);
    $941 = (($635) + 16|0);
    $942 = ($940>>>0)<($941>>>0);
    $943 = $942 ? $635 : $940;
    $944 = (($943) + 8|0);
    $945 = (($tsize$252$i) + -40)|0;
    $946 = (($tbase$253$i) + 8|0);
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948|0)==(0);
    if ($949) {
     $953 = 0;
    } else {
     $950 = (0 - ($947))|0;
     $951 = $950 & 7;
     $953 = $951;
    }
    $952 = (($tbase$253$i) + ($953)|0);
    $954 = (($945) - ($953))|0;
    HEAP32[((3144 + 24|0))>>2] = $952;
    HEAP32[((3144 + 12|0))>>2] = $954;
    $955 = $954 | 1;
    $$sum$i$i$i = (($953) + 4)|0;
    $956 = (($tbase$253$i) + ($$sum$i$i$i)|0);
    HEAP32[$956>>2] = $955;
    $$sum2$i$i$i = (($tsize$252$i) + -36)|0;
    $957 = (($tbase$253$i) + ($$sum2$i$i$i)|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[((3616 + 16|0))>>2]|0;
    HEAP32[((3144 + 28|0))>>2] = $958;
    $959 = (($943) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$944+0>>2]=HEAP32[((3144 + 448|0))+0>>2]|0;HEAP32[$944+4>>2]=HEAP32[((3144 + 448|0))+4>>2]|0;HEAP32[$944+8>>2]=HEAP32[((3144 + 448|0))+8>>2]|0;HEAP32[$944+12>>2]=HEAP32[((3144 + 448|0))+12>>2]|0;
    HEAP32[((3144 + 448|0))>>2] = $tbase$253$i;
    HEAP32[((3144 + 452|0))>>2] = $tsize$252$i;
    HEAP32[((3144 + 460|0))>>2] = 0;
    HEAP32[((3144 + 456|0))>>2] = $944;
    $960 = (($943) + 28|0);
    HEAP32[$960>>2] = 7;
    $961 = (($943) + 32|0);
    $962 = ($961>>>0)<($$lcssa154>>>0);
    if ($962) {
     $964 = $960;
     while(1) {
      $963 = (($964) + 4|0);
      HEAP32[$963>>2] = 7;
      $965 = (($964) + 8|0);
      $966 = ($965>>>0)<($$lcssa154>>>0);
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943|0)==($635|0);
    if (!($967)) {
     $968 = $943;
     $969 = $635;
     $970 = (($968) - ($969))|0;
     $971 = HEAP32[$959>>2]|0;
     $972 = $971 & -2;
     HEAP32[$959>>2] = $972;
     $973 = $970 | 1;
     $974 = (($635) + 4|0);
     HEAP32[$974>>2] = $973;
     HEAP32[$943>>2] = $970;
     $975 = $970 >>> 3;
     $976 = ($970>>>0)<(256);
     if ($976) {
      $977 = $975 << 1;
      $978 = ((3144 + ($977<<2)|0) + 40|0);
      $979 = HEAP32[3144>>2]|0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981|0)==(0);
      do {
       if ($982) {
        $983 = $979 | $980;
        HEAP32[3144>>2] = $983;
        $$sum3$pre$i$i = (($977) + 2)|0;
        $$pre$i$i = ((3144 + ($$sum3$pre$i$i<<2)|0) + 40|0);
        $$pre$phi$i$iZ2D = $$pre$i$i;$F$0$i$i = $978;
       } else {
        $$sum4$i$i = (($977) + 2)|0;
        $984 = ((3144 + ($$sum4$i$i<<2)|0) + 40|0);
        $985 = HEAP32[$984>>2]|0;
        $986 = HEAP32[((3144 + 16|0))>>2]|0;
        $987 = ($985>>>0)<($986>>>0);
        if (!($987)) {
         $$pre$phi$i$iZ2D = $984;$F$0$i$i = $985;
         break;
        }
        _abort();
        // unreachable;
       }
      } while(0);
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $988 = (($F$0$i$i) + 12|0);
      HEAP32[$988>>2] = $635;
      $989 = (($635) + 8|0);
      HEAP32[$989>>2] = $F$0$i$i;
      $990 = (($635) + 12|0);
      HEAP32[$990>>2] = $978;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991|0)==(0);
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = ($970>>>0)>(16777215);
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = (($991) + 1048320)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = (($997) + 520192)|0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = (($1002) + 245760)|0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = (14 - ($1006))|0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = (($1007) + ($1009))|0;
       $1011 = $1010 << 1;
       $1012 = (($1010) + 7)|0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = ((3144 + ($I1$0$i$i<<2)|0) + 304|0);
     $1017 = (($635) + 28|0);
     HEAP32[$1017>>2] = $I1$0$i$i;
     $1018 = (($635) + 20|0);
     HEAP32[$1018>>2] = 0;
     HEAP32[$941>>2] = 0;
     $1019 = HEAP32[((3144 + 4|0))>>2]|0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021|0)==(0);
     if ($1022) {
      $1023 = $1019 | $1020;
      HEAP32[((3144 + 4|0))>>2] = $1023;
      HEAP32[$1016>>2] = $635;
      $1024 = (($635) + 24|0);
      HEAP32[$1024>>2] = $1016;
      $1025 = (($635) + 12|0);
      HEAP32[$1025>>2] = $635;
      $1026 = (($635) + 8|0);
      HEAP32[$1026>>2] = $635;
      break;
     }
     $1027 = HEAP32[$1016>>2]|0;
     $1028 = ($I1$0$i$i|0)==(31);
     if ($1028) {
      $1036 = 0;
     } else {
      $1029 = $I1$0$i$i >>> 1;
      $1030 = (25 - ($1029))|0;
      $1036 = $1030;
     }
     $1031 = (($1027) + 4|0);
     $1032 = HEAP32[$1031>>2]|0;
     $1033 = $1032 & -8;
     $1034 = ($1033|0)==($970|0);
     do {
      if ($1034) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1035 = $970 << $1036;
       $K2$08$i$i = $1035;$T$07$i$i = $1027;
       while(1) {
        $1043 = $K2$08$i$i >>> 31;
        $1044 = ((($T$07$i$i) + ($1043<<2)|0) + 16|0);
        $1039 = HEAP32[$1044>>2]|0;
        $1045 = ($1039|0)==(0|0);
        if ($1045) {
         $$lcssa148 = $1044;$T$07$i$i$lcssa = $T$07$i$i;
         break;
        }
        $1037 = $K2$08$i$i << 1;
        $1038 = (($1039) + 4|0);
        $1040 = HEAP32[$1038>>2]|0;
        $1041 = $1040 & -8;
        $1042 = ($1041|0)==($970|0);
        if ($1042) {
         $$lcssa151 = $1039;
         label = 353;
         break;
        } else {
         $K2$08$i$i = $1037;$T$07$i$i = $1039;
        }
       }
       if ((label|0) == 353) {
        $T$0$lcssa$i$i = $$lcssa151;
        break;
       }
       $1046 = HEAP32[((3144 + 16|0))>>2]|0;
       $1047 = ($$lcssa148>>>0)<($1046>>>0);
       if ($1047) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$lcssa148>>2] = $635;
        $1048 = (($635) + 24|0);
        HEAP32[$1048>>2] = $T$07$i$i$lcssa;
        $1049 = (($635) + 12|0);
        HEAP32[$1049>>2] = $635;
        $1050 = (($635) + 8|0);
        HEAP32[$1050>>2] = $635;
        break L325;
       }
      }
     } while(0);
     $1051 = (($T$0$lcssa$i$i) + 8|0);
     $1052 = HEAP32[$1051>>2]|0;
     $1053 = HEAP32[((3144 + 16|0))>>2]|0;
     $1054 = ($T$0$lcssa$i$i>>>0)>=($1053>>>0);
     $1055 = ($1052>>>0)>=($1053>>>0);
     $or$cond$i$i = $1054 & $1055;
     if ($or$cond$i$i) {
      $1056 = (($1052) + 12|0);
      HEAP32[$1056>>2] = $635;
      HEAP32[$1051>>2] = $635;
      $1057 = (($635) + 8|0);
      HEAP32[$1057>>2] = $1052;
      $1058 = (($635) + 12|0);
      HEAP32[$1058>>2] = $T$0$lcssa$i$i;
      $1059 = (($635) + 24|0);
      HEAP32[$1059>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1060 = HEAP32[((3144 + 12|0))>>2]|0;
  $1061 = ($1060>>>0)>($nb$0>>>0);
  if ($1061) {
   $1062 = (($1060) - ($nb$0))|0;
   HEAP32[((3144 + 12|0))>>2] = $1062;
   $1063 = HEAP32[((3144 + 24|0))>>2]|0;
   $1064 = (($1063) + ($nb$0)|0);
   HEAP32[((3144 + 24|0))>>2] = $1064;
   $1065 = $1062 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1066 = (($1063) + ($$sum$i32)|0);
   HEAP32[$1066>>2] = $1065;
   $1067 = $nb$0 | 3;
   $1068 = (($1063) + 4|0);
   HEAP32[$1068>>2] = $1067;
   $1069 = (($1063) + 8|0);
   $mem$0 = $1069;
   return ($mem$0|0);
  }
 }
 $1070 = (___errno_location()|0);
 HEAP32[$1070>>2] = 12;
 $mem$0 = 0;
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$lcssa71 = 0, $$pre = 0, $$pre$phi60Z2D = 0, $$pre$phi62Z2D = 0, $$pre$phiZ2D = 0, $$pre59 = 0, $$pre61 = 0, $$sum = 0, $$sum10$pre = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0;
 var $$sum24 = 0, $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0;
 var $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;
 var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0;
 var $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0;
 var $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0;
 var $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0;
 var $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0;
 var $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0;
 var $320 = 0, $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$054 = 0, $R$0 = 0, $R$0$be = 0;
 var $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $R7$0 = 0, $R7$0$be = 0, $R7$0$lcssa = 0, $R7$0$ph = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0, $RP$0$ph = 0, $RP9$0 = 0, $RP9$0$be = 0, $RP9$0$lcssa = 0, $RP9$0$ph = 0, $T$0$lcssa = 0, $T$053 = 0, $T$053$lcssa = 0, $cond = 0;
 var $cond48 = 0, $or$cond = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = (($mem) + -8|0);
 $2 = HEAP32[((3144 + 16|0))>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = (($mem) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[((3144 + 20|0))>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[((3144 + 8|0))>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum20 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum20)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum30 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum30)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum31 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum31)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = ((3144 + ($25<<2)|0) + 40|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = (($22) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[3144>>2]|0;
     $36 = $35 & $34;
     HEAP32[3144>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre61 = (($24) + 8|0);
     $$pre$phi62Z2D = $$pre61;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = (($24) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi62Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = (($22) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi62Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum22 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum22)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum23 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum23)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum25 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum25)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum24 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum24)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0$ph = $61;$RP$0$ph = $60;
      }
     } else {
      $R$0$ph = $58;$RP$0$ph = $57;
     }
     $R$0 = $R$0$ph;$RP$0 = $RP$0$ph;
     while(1) {
      $63 = (($R$0) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if ($65) {
       $66 = (($R$0) + 16|0);
       $67 = HEAP32[$66>>2]|0;
       $68 = ($67|0)==(0|0);
       if ($68) {
        $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0$be = $67;$RP$0$be = $66;
       }
      } else {
       $R$0$be = $64;$RP$0$be = $63;
      }
      $R$0 = $R$0$be;$RP$0 = $RP$0$be;
     }
     $69 = ($RP$0$lcssa>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum29)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = (($49) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = (($46) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum26 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum26)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ((3144 + ($72<<2)|0) + 304|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[((3144 + 4|0))>>2]|0;
      $79 = $78 & $77;
      HEAP32[((3144 + 4|0))>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[((3144 + 16|0))>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = (($44) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = (($44) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[((3144 + 16|0))>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = (($R$1) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum27 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum27)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = (($R$1) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = (($91) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum28)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[((3144 + 16|0))>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = (($R$1) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = (($97) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum19 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum19)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[((3144 + 24|0))>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[((3144 + 12|0))>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[((3144 + 12|0))>>2] = $120;
   HEAP32[((3144 + 24|0))>>2] = $p$0;
   $121 = $120 | 1;
   $122 = (($p$0) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[((3144 + 20|0))>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    return;
   }
   HEAP32[((3144 + 20|0))>>2] = 0;
   HEAP32[((3144 + 8|0))>>2] = 0;
   return;
  }
  $125 = HEAP32[((3144 + 20|0))>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[((3144 + 8|0))>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[((3144 + 8|0))>>2] = $128;
   HEAP32[((3144 + 20|0))>>2] = $p$0;
   $129 = $128 | 1;
   $130 = (($p$0) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum1718 = $8 | 4;
    $138 = (($mem) + ($$sum1718)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = ((3144 + ($140<<2)|0) + 40|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[((3144 + 16|0))>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = (($137) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[3144>>2]|0;
     $152 = $151 & $150;
     HEAP32[3144>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre59 = (($139) + 8|0);
     $$pre$phi60Z2D = $$pre59;
    } else {
     $154 = HEAP32[((3144 + 16|0))>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = (($139) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi60Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = (($137) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi60Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0$ph = $179;$RP9$0$ph = $178;
       }
      } else {
       $R7$0$ph = $176;$RP9$0$ph = $175;
      }
      $R7$0 = $R7$0$ph;$RP9$0 = $RP9$0$ph;
      while(1) {
       $181 = (($R7$0) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if ($183) {
        $184 = (($R7$0) + 16|0);
        $185 = HEAP32[$184>>2]|0;
        $186 = ($185|0)==(0|0);
        if ($186) {
         $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
         break;
        } else {
         $R7$0$be = $185;$RP9$0$be = $184;
        }
       } else {
        $R7$0$be = $182;$RP9$0$be = $181;
       }
       $R7$0 = $R7$0$be;$RP9$0 = $RP9$0$be;
      }
      $187 = HEAP32[((3144 + 16|0))>>2]|0;
      $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[((3144 + 16|0))>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = (($166) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = (($163) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum12 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum12)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = ((3144 + ($191<<2)|0) + 304|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond48 = ($R7$1|0)==(0|0);
      if ($cond48) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[((3144 + 4|0))>>2]|0;
       $198 = $197 & $196;
       HEAP32[((3144 + 4|0))>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[((3144 + 16|0))>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = (($161) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = (($161) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[((3144 + 16|0))>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = (($R7$1) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum13 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum13)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = (($R7$1) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = (($210) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum14 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum14)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[((3144 + 16|0))>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = (($R7$1) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = (($216) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = (($p$0) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[((3144 + 20|0))>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[((3144 + 8|0))>>2] = $133;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = (($p$0) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = ((3144 + ($233<<2)|0) + 40|0);
  $235 = HEAP32[3144>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[3144>>2] = $239;
   $$sum10$pre = (($233) + 2)|0;
   $$pre = ((3144 + ($$sum10$pre<<2)|0) + 40|0);
   $$pre$phiZ2D = $$pre;$F16$0 = $234;
  } else {
   $$sum11 = (($233) + 2)|0;
   $240 = ((3144 + ($$sum11<<2)|0) + 40|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[((3144 + 16|0))>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = (($F16$0) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = (($p$0) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = (($p$0) + 12|0);
  HEAP32[$246>>2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = ((3144 + ($I18$0<<2)|0) + 304|0);
 $273 = (($p$0) + 28|0);
 HEAP32[$273>>2] = $I18$0;
 $274 = (($p$0) + 16|0);
 $275 = (($p$0) + 20|0);
 HEAP32[$275>>2] = 0;
 HEAP32[$274>>2] = 0;
 $276 = HEAP32[((3144 + 4|0))>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L205: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[((3144 + 4|0))>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = (($p$0) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = (($p$0) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = (($p$0) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ($I18$0|0)==(31);
   if ($285) {
    $293 = 0;
   } else {
    $286 = $I18$0 >>> 1;
    $287 = (25 - ($286))|0;
    $293 = $287;
   }
   $288 = (($284) + 4|0);
   $289 = HEAP32[$288>>2]|0;
   $290 = $289 & -8;
   $291 = ($290|0)==($psize$1|0);
   do {
    if ($291) {
     $T$0$lcssa = $284;
    } else {
     $292 = $psize$1 << $293;
     $K19$054 = $292;$T$053 = $284;
     while(1) {
      $300 = $K19$054 >>> 31;
      $301 = ((($T$053) + ($300<<2)|0) + 16|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       $$lcssa = $301;$T$053$lcssa = $T$053;
       break;
      }
      $294 = $K19$054 << 1;
      $295 = (($296) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $$lcssa71 = $296;
       label = 137;
       break;
      } else {
       $K19$054 = $294;$T$053 = $296;
      }
     }
     if ((label|0) == 137) {
      $T$0$lcssa = $$lcssa71;
      break;
     }
     $303 = HEAP32[((3144 + 16|0))>>2]|0;
     $304 = ($$lcssa>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $p$0;
      $305 = (($p$0) + 24|0);
      HEAP32[$305>>2] = $T$053$lcssa;
      $306 = (($p$0) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = (($p$0) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L205;
     }
    }
   } while(0);
   $308 = (($T$0$lcssa) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[((3144 + 16|0))>>2]|0;
   $311 = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = ($309>>>0)>=($310>>>0);
   $or$cond = $311 & $312;
   if ($or$cond) {
    $313 = (($309) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = (($p$0) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = (($p$0) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = (($p$0) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[((3144 + 32|0))>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[((3144 + 32|0))>>2] = $318;
 $319 = ($318|0)==(0);
 if (!($319)) {
  return;
 }
 $sp$0$in$i = ((3144 + 456|0));
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = (($sp$0$i) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[((3144 + 32|0))>>2] = -1;
 return;
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $mem$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($oldmem|0)==(0|0);
 if ($0) {
  $1 = (_malloc($bytes)|0);
  $mem$0 = $1;
  return ($mem$0|0);
 }
 $2 = ($bytes>>>0)>(4294967231);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 12;
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $4 = ($bytes>>>0)<(11);
 if ($4) {
  $8 = 16;
 } else {
  $5 = (($bytes) + 11)|0;
  $6 = $5 & -8;
  $8 = $6;
 }
 $7 = (($oldmem) + -8|0);
 $9 = (_try_realloc_chunk($7,$8)|0);
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = (($9) + 8|0);
  $mem$0 = $11;
  return ($mem$0|0);
 }
 $12 = (_malloc($bytes)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $14 = (($oldmem) + -4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $15 & -8;
 $17 = $15 & 3;
 $18 = ($17|0)==(0);
 $19 = $18 ? 8 : 4;
 $20 = (($16) - ($19))|0;
 $21 = ($20>>>0)<($bytes>>>0);
 $22 = $21 ? $20 : $bytes;
 _memcpy(($12|0),($oldmem|0),($22|0))|0;
 _free($oldmem);
 $mem$0 = $12;
 return ($mem$0|0);
}
function _isspace($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(32);
 if ($0) {
  $4 = 1;
 } else {
  $1 = (($c) + -9)|0;
  $2 = ($1>>>0)<(5);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function _isxdigit($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 if ($isdigit) {
  $4 = 1;
  $3 = $4&1;
  return ($3|0);
 }
 $0 = $c | 32;
 $1 = (($0) + -97)|0;
 $2 = ($1>>>0)<(6);
 $4 = $2;
 $3 = $4&1;
 return ($3|0);
}
function ___intscan($f,$base,$pok,$0,$1) {
 $f = $f|0;
 $base = $base|0;
 $pok = $pok|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$1 = 0, $$124 = 0, $$125 = 0, $$22 = 0, $$23 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa117 = 0, $$lcssa118 = 0, $$lcssa119 = 0, $$lcssa120 = 0, $$lcssa121 = 0, $$lcssa122 = 0, $$sum = 0, $$sum14 = 0, $$sum1447 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum1867 = 0, $$sum19 = 0, $$sum20 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$126 = 0, $c$2$be = 0, $c$2$be$lcssa = 0;
 var $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$373 = 0, $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$5$be$lcssa = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$755 = 0, $c$8 = 0, $c$8$ph = 0, $c$9$be = 0, $neg$0 = 0, $or$cond = 0, $or$cond12 = 0;
 var $or$cond42 = 0, $or$cond5 = 0, $or$cond7 = 0, $x$084 = 0, $x$148 = 0, $x$268 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($base>>>0)>(36);
 if ($2) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 22;
  $279 = 0;$280 = 0;
  tempRet0 = $279;
  return ($280|0);
 }
 $3 = (($f) + 4|0);
 $4 = (($f) + 100|0);
 while(1) {
  $6 = HEAP32[$3>>2]|0;
  $7 = HEAP32[$4>>2]|0;
  $8 = ($6>>>0)<($7>>>0);
  if ($8) {
   $9 = (($6) + 1|0);
   HEAP32[$3>>2] = $9;
   $10 = HEAP8[$6>>0]|0;
   $11 = $10&255;
   $13 = $11;
  } else {
   $12 = (___shgetc($f)|0);
   $13 = $12;
  }
  $14 = (_isspace($13)|0);
  $15 = ($14|0)==(0);
  if ($15) {
   $$lcssa122 = $13;
   break;
  }
 }
 $16 = ($$lcssa122|0)==(45);
 do {
  if ((($$lcssa122|0) == 43) | (($$lcssa122|0) == 45)) {
   $17 = $16 << 31 >> 31;
   $18 = HEAP32[$3>>2]|0;
   $19 = HEAP32[$4>>2]|0;
   $20 = ($18>>>0)<($19>>>0);
   if ($20) {
    $21 = (($18) + 1|0);
    HEAP32[$3>>2] = $21;
    $22 = HEAP8[$18>>0]|0;
    $23 = $22&255;
    $c$0 = $23;$neg$0 = $17;
    break;
   } else {
    $24 = (___shgetc($f)|0);
    $c$0 = $24;$neg$0 = $17;
    break;
   }
  } else {
   $c$0 = $$lcssa122;$neg$0 = 0;
  }
 } while(0);
 $25 = ($base|0)==(0);
 $26 = $base & -17;
 $27 = ($26|0)==(0);
 $28 = ($c$0|0)==(48);
 $or$cond5 = $27 & $28;
 do {
  if ($or$cond5) {
   $29 = HEAP32[$3>>2]|0;
   $30 = HEAP32[$4>>2]|0;
   $31 = ($29>>>0)<($30>>>0);
   if ($31) {
    $32 = (($29) + 1|0);
    HEAP32[$3>>2] = $32;
    $33 = HEAP8[$29>>0]|0;
    $34 = $33&255;
    $37 = $34;
   } else {
    $35 = (___shgetc($f)|0);
    $37 = $35;
   }
   $36 = $37 | 32;
   $38 = ($36|0)==(120);
   if (!($38)) {
    if ($25) {
     $$125 = 8;$c$126 = $37;
     label = 48;
     break;
    } else {
     $$1 = $base;$c$1 = $37;
     label = 32;
     break;
    }
   }
   $39 = HEAP32[$3>>2]|0;
   $40 = HEAP32[$4>>2]|0;
   $41 = ($39>>>0)<($40>>>0);
   if ($41) {
    $42 = (($39) + 1|0);
    HEAP32[$3>>2] = $42;
    $43 = HEAP8[$39>>0]|0;
    $44 = $43&255;
    $46 = $44;
   } else {
    $45 = (___shgetc($f)|0);
    $46 = $45;
   }
   $$sum20 = (($46) + 1)|0;
   $47 = (3640 + ($$sum20)|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = ($48&255)>(15);
   if ($49) {
    $50 = HEAP32[$4>>2]|0;
    $51 = ($50|0)==(0|0);
    if (!($51)) {
     $52 = HEAP32[$3>>2]|0;
     $53 = (($52) + -1|0);
     HEAP32[$3>>2] = $53;
    }
    $54 = ($pok|0)==(0);
    if ($54) {
     ___shlim($f,0);
     $279 = 0;$280 = 0;
     tempRet0 = $279;
     return ($280|0);
    }
    if ($51) {
     $279 = 0;$280 = 0;
     tempRet0 = $279;
     return ($280|0);
    }
    $55 = HEAP32[$3>>2]|0;
    $56 = (($55) + -1|0);
    HEAP32[$3>>2] = $56;
    $279 = 0;$280 = 0;
    tempRet0 = $279;
    return ($280|0);
   } else {
    $$125 = 16;$c$126 = $46;
    label = 48;
   }
  } else {
   $$base21 = $25 ? 10 : $base;
   $$sum = (($c$0) + 1)|0;
   $57 = (3640 + ($$sum)|0);
   $58 = HEAP8[$57>>0]|0;
   $59 = $58&255;
   $60 = ($59>>>0)<($$base21>>>0);
   if ($60) {
    $$1 = $$base21;$c$1 = $c$0;
    label = 32;
   } else {
    $61 = HEAP32[$4>>2]|0;
    $62 = ($61|0)==(0|0);
    if (!($62)) {
     $63 = HEAP32[$3>>2]|0;
     $64 = (($63) + -1|0);
     HEAP32[$3>>2] = $64;
    }
    ___shlim($f,0);
    $65 = (___errno_location()|0);
    HEAP32[$65>>2] = 22;
    $279 = 0;$280 = 0;
    tempRet0 = $279;
    return ($280|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $66 = ($$1|0)==(10);
  if ($66) {
   $67 = (($c$1) + -48)|0;
   $68 = ($67>>>0)<(10);
   if ($68) {
    $71 = $67;$x$084 = 0;
    while(1) {
     $69 = ($x$084*10)|0;
     $70 = (($69) + ($71))|0;
     $72 = HEAP32[$3>>2]|0;
     $73 = HEAP32[$4>>2]|0;
     $74 = ($72>>>0)<($73>>>0);
     if ($74) {
      $75 = (($72) + 1|0);
      HEAP32[$3>>2] = $75;
      $76 = HEAP8[$72>>0]|0;
      $77 = $76&255;
      $c$2$be = $77;
     } else {
      $78 = (___shgetc($f)|0);
      $c$2$be = $78;
     }
     $79 = (($c$2$be) + -48)|0;
     $80 = ($79>>>0)<(10);
     $81 = ($70>>>0)<(429496729);
     $$ = $80 & $81;
     if ($$) {
      $71 = $79;$x$084 = $70;
     } else {
      $$lcssa121 = $70;$c$2$be$lcssa = $c$2$be;
      break;
     }
    }
    $281 = $$lcssa121;$282 = 0;$c$2$lcssa = $c$2$be$lcssa;
   } else {
    $281 = 0;$282 = 0;$c$2$lcssa = $c$1;
   }
   $82 = (($c$2$lcssa) + -48)|0;
   $83 = ($82>>>0)<(10);
   if ($83) {
    $84 = $281;$85 = $282;$88 = $82;$c$373 = $c$2$lcssa;
    while(1) {
     $86 = (___muldi3(($84|0),($85|0),10,0)|0);
     $87 = tempRet0;
     $89 = ($88|0)<(0);
     $90 = $89 << 31 >> 31;
     $91 = $88 ^ -1;
     $92 = $90 ^ -1;
     $93 = ($87>>>0)>($92>>>0);
     $94 = ($86>>>0)>($91>>>0);
     $95 = ($87|0)==($92|0);
     $96 = $95 & $94;
     $97 = $93 | $96;
     if ($97) {
      $$lcssa = $88;$283 = $84;$284 = $85;$c$3$lcssa = $c$373;
      break;
     }
     $98 = (_i64Add(($86|0),($87|0),($88|0),($90|0))|0);
     $99 = tempRet0;
     $100 = HEAP32[$3>>2]|0;
     $101 = HEAP32[$4>>2]|0;
     $102 = ($100>>>0)<($101>>>0);
     if ($102) {
      $103 = (($100) + 1|0);
      HEAP32[$3>>2] = $103;
      $104 = HEAP8[$100>>0]|0;
      $105 = $104&255;
      $c$3$be = $105;
     } else {
      $106 = (___shgetc($f)|0);
      $c$3$be = $106;
     }
     $107 = (($c$3$be) + -48)|0;
     $108 = ($107>>>0)<(10);
     $109 = ($99>>>0)<(429496729);
     $110 = ($98>>>0)<(2576980378);
     $111 = ($99|0)==(429496729);
     $112 = $111 & $110;
     $113 = $109 | $112;
     $or$cond7 = $108 & $113;
     if ($or$cond7) {
      $84 = $98;$85 = $99;$88 = $107;$c$373 = $c$3$be;
     } else {
      $$lcssa = $107;$283 = $98;$284 = $99;$c$3$lcssa = $c$3$be;
      break;
     }
    }
    $114 = ($$lcssa>>>0)>(9);
    if ($114) {
     $252 = $284;$254 = $283;
    } else {
     $$124 = 10;$285 = $283;$286 = $284;$c$8 = $c$3$lcssa;
     label = 79;
    }
   } else {
    $252 = $282;$254 = $281;
   }
  } else {
   $$125 = $$1;$c$126 = $c$1;
   label = 48;
  }
 }
 do {
  if ((label|0) == 48) {
   $115 = (($$125) + -1)|0;
   $116 = $115 & $$125;
   $117 = ($116|0)==(0);
   if ($117) {
    $122 = ($$125*23)|0;
    $123 = $122 >>> 5;
    $124 = $123 & 7;
    $125 = (3904 + ($124)|0);
    $126 = HEAP8[$125>>0]|0;
    $127 = $126 << 24 >> 24;
    $$sum1447 = (($c$126) + 1)|0;
    $128 = (3640 + ($$sum1447)|0);
    $129 = HEAP8[$128>>0]|0;
    $130 = $129&255;
    $131 = ($130>>>0)<($$125>>>0);
    if ($131) {
     $134 = $130;$x$148 = 0;
     while(1) {
      $132 = $x$148 << $127;
      $133 = $134 | $132;
      $135 = HEAP32[$3>>2]|0;
      $136 = HEAP32[$4>>2]|0;
      $137 = ($135>>>0)<($136>>>0);
      if ($137) {
       $138 = (($135) + 1|0);
       HEAP32[$3>>2] = $138;
       $139 = HEAP8[$135>>0]|0;
       $140 = $139&255;
       $c$4$be = $140;
      } else {
       $141 = (___shgetc($f)|0);
       $c$4$be = $141;
      }
      $$sum14 = (($c$4$be) + 1)|0;
      $142 = (3640 + ($$sum14)|0);
      $143 = HEAP8[$142>>0]|0;
      $144 = $143&255;
      $145 = ($144>>>0)<($$125>>>0);
      $146 = ($133>>>0)<(134217728);
      $$22 = $146 & $145;
      if ($$22) {
       $134 = $144;$x$148 = $133;
      } else {
       $$lcssa117 = $133;$$lcssa118 = $143;$c$4$be$lcssa = $c$4$be;
       break;
      }
     }
     $150 = $$lcssa118;$152 = 0;$154 = $$lcssa117;$c$4$lcssa = $c$4$be$lcssa;
    } else {
     $150 = $129;$152 = 0;$154 = 0;$c$4$lcssa = $c$126;
    }
    $147 = (_bitshift64Lshr(-1,-1,($127|0))|0);
    $148 = tempRet0;
    $149 = $150&255;
    $151 = ($149>>>0)>=($$125>>>0);
    $153 = ($152>>>0)>($148>>>0);
    $155 = ($154>>>0)>($147>>>0);
    $156 = ($152|0)==($148|0);
    $157 = $156 & $155;
    $158 = $153 | $157;
    $or$cond42 = $151 | $158;
    if ($or$cond42) {
     $$124 = $$125;$285 = $154;$286 = $152;$c$8 = $c$4$lcssa;
     label = 79;
     break;
    }
    $159 = $154;$160 = $152;$164 = $150;
    while(1) {
     $161 = (_bitshift64Shl(($159|0),($160|0),($127|0))|0);
     $162 = tempRet0;
     $163 = $164&255;
     $165 = $163 | $161;
     $166 = HEAP32[$3>>2]|0;
     $167 = HEAP32[$4>>2]|0;
     $168 = ($166>>>0)<($167>>>0);
     if ($168) {
      $169 = (($166) + 1|0);
      HEAP32[$3>>2] = $169;
      $170 = HEAP8[$166>>0]|0;
      $171 = $170&255;
      $c$5$be = $171;
     } else {
      $172 = (___shgetc($f)|0);
      $c$5$be = $172;
     }
     $$sum15 = (($c$5$be) + 1)|0;
     $173 = (3640 + ($$sum15)|0);
     $174 = HEAP8[$173>>0]|0;
     $175 = $174&255;
     $176 = ($175>>>0)>=($$125>>>0);
     $177 = ($162>>>0)>($148>>>0);
     $178 = ($165>>>0)>($147>>>0);
     $179 = ($162|0)==($148|0);
     $180 = $179 & $178;
     $181 = $177 | $180;
     $or$cond = $176 | $181;
     if ($or$cond) {
      $289 = $165;$290 = $162;$c$5$be$lcssa = $c$5$be;
      break;
     } else {
      $159 = $165;$160 = $162;$164 = $174;
     }
    }
    $$124 = $$125;$285 = $289;$286 = $290;$c$8 = $c$5$be$lcssa;
    label = 79;
    break;
   }
   $$sum1867 = (($c$126) + 1)|0;
   $118 = (3640 + ($$sum1867)|0);
   $119 = HEAP8[$118>>0]|0;
   $120 = $119&255;
   $121 = ($120>>>0)<($$125>>>0);
   if ($121) {
    $184 = $120;$x$268 = 0;
    while(1) {
     $182 = Math_imul($x$268, $$125)|0;
     $183 = (($184) + ($182))|0;
     $185 = HEAP32[$3>>2]|0;
     $186 = HEAP32[$4>>2]|0;
     $187 = ($185>>>0)<($186>>>0);
     if ($187) {
      $188 = (($185) + 1|0);
      HEAP32[$3>>2] = $188;
      $189 = HEAP8[$185>>0]|0;
      $190 = $189&255;
      $c$6$be = $190;
     } else {
      $191 = (___shgetc($f)|0);
      $c$6$be = $191;
     }
     $$sum18 = (($c$6$be) + 1)|0;
     $192 = (3640 + ($$sum18)|0);
     $193 = HEAP8[$192>>0]|0;
     $194 = $193&255;
     $195 = ($194>>>0)<($$125>>>0);
     $196 = ($183>>>0)<(119304647);
     $$23 = $196 & $195;
     if ($$23) {
      $184 = $194;$x$268 = $183;
     } else {
      $$lcssa119 = $183;$$lcssa120 = $193;$c$6$be$lcssa = $c$6$be;
      break;
     }
    }
    $198 = $$lcssa120;$287 = $$lcssa119;$288 = 0;$c$6$lcssa = $c$6$be$lcssa;
   } else {
    $198 = $119;$287 = 0;$288 = 0;$c$6$lcssa = $c$126;
   }
   $197 = $198&255;
   $199 = ($197>>>0)<($$125>>>0);
   if ($199) {
    $200 = (___udivdi3(-1,-1,($$125|0),0)|0);
    $201 = tempRet0;
    $202 = $288;$204 = $287;$212 = $198;$c$755 = $c$6$lcssa;
    while(1) {
     $203 = ($202>>>0)>($201>>>0);
     $205 = ($204>>>0)>($200>>>0);
     $206 = ($202|0)==($201|0);
     $207 = $206 & $205;
     $208 = $203 | $207;
     if ($208) {
      $291 = $204;$292 = $202;$c$8$ph = $c$755;
      break;
     }
     $209 = (___muldi3(($204|0),($202|0),($$125|0),0)|0);
     $210 = tempRet0;
     $211 = $212&255;
     $213 = $211 ^ -1;
     $214 = ($210>>>0)>(4294967295);
     $215 = ($209>>>0)>($213>>>0);
     $216 = ($210|0)==(-1);
     $217 = $216 & $215;
     $218 = $214 | $217;
     if ($218) {
      $291 = $204;$292 = $202;$c$8$ph = $c$755;
      break;
     }
     $219 = (_i64Add(($211|0),0,($209|0),($210|0))|0);
     $220 = tempRet0;
     $221 = HEAP32[$3>>2]|0;
     $222 = HEAP32[$4>>2]|0;
     $223 = ($221>>>0)<($222>>>0);
     if ($223) {
      $224 = (($221) + 1|0);
      HEAP32[$3>>2] = $224;
      $225 = HEAP8[$221>>0]|0;
      $226 = $225&255;
      $c$7$be = $226;
     } else {
      $227 = (___shgetc($f)|0);
      $c$7$be = $227;
     }
     $$sum19 = (($c$7$be) + 1)|0;
     $228 = (3640 + ($$sum19)|0);
     $229 = HEAP8[$228>>0]|0;
     $230 = $229&255;
     $231 = ($230>>>0)<($$125>>>0);
     if ($231) {
      $202 = $220;$204 = $219;$212 = $229;$c$755 = $c$7$be;
     } else {
      $291 = $219;$292 = $220;$c$8$ph = $c$7$be;
      break;
     }
    }
    $$124 = $$125;$285 = $291;$286 = $292;$c$8 = $c$8$ph;
    label = 79;
   } else {
    $$124 = $$125;$285 = $287;$286 = $288;$c$8 = $c$6$lcssa;
    label = 79;
   }
  }
 } while(0);
 if ((label|0) == 79) {
  $$sum16 = (($c$8) + 1)|0;
  $232 = (3640 + ($$sum16)|0);
  $233 = HEAP8[$232>>0]|0;
  $234 = $233&255;
  $235 = ($234>>>0)<($$124>>>0);
  if ($235) {
   while(1) {
    $236 = HEAP32[$3>>2]|0;
    $237 = HEAP32[$4>>2]|0;
    $238 = ($236>>>0)<($237>>>0);
    if ($238) {
     $239 = (($236) + 1|0);
     HEAP32[$3>>2] = $239;
     $240 = HEAP8[$236>>0]|0;
     $241 = $240&255;
     $c$9$be = $241;
    } else {
     $242 = (___shgetc($f)|0);
     $c$9$be = $242;
    }
    $$sum17 = (($c$9$be) + 1)|0;
    $243 = (3640 + ($$sum17)|0);
    $244 = HEAP8[$243>>0]|0;
    $245 = $244&255;
    $246 = ($245>>>0)<($$124>>>0);
    if (!($246)) {
     break;
    }
   }
   $247 = (___errno_location()|0);
   HEAP32[$247>>2] = 34;
   $252 = $1;$254 = $0;
  } else {
   $252 = $286;$254 = $285;
  }
 }
 $248 = HEAP32[$4>>2]|0;
 $249 = ($248|0)==(0|0);
 if (!($249)) {
  $250 = HEAP32[$3>>2]|0;
  $251 = (($250) + -1|0);
  HEAP32[$3>>2] = $251;
 }
 $253 = ($252>>>0)<($1>>>0);
 $255 = ($254>>>0)<($0>>>0);
 $256 = ($252|0)==($1|0);
 $257 = $256 & $255;
 $258 = $253 | $257;
 if (!($258)) {
  $259 = $0 & 1;
  $260 = ($259|0)!=(0);
  $261 = (0)!=(0);
  $262 = $260 | $261;
  $263 = ($neg$0|0)!=(0);
  $or$cond12 = $262 | $263;
  if (!($or$cond12)) {
   $264 = (___errno_location()|0);
   HEAP32[$264>>2] = 34;
   $265 = (_i64Add(($0|0),($1|0),-1,-1)|0);
   $266 = tempRet0;
   $279 = $266;$280 = $265;
   tempRet0 = $279;
   return ($280|0);
  }
  $267 = ($252>>>0)>($1>>>0);
  $268 = ($254>>>0)>($0>>>0);
  $269 = ($252|0)==($1|0);
  $270 = $269 & $268;
  $271 = $267 | $270;
  if ($271) {
   $272 = (___errno_location()|0);
   HEAP32[$272>>2] = 34;
   $279 = $1;$280 = $0;
   tempRet0 = $279;
   return ($280|0);
  }
 }
 $273 = ($neg$0|0)<(0);
 $274 = $273 << 31 >> 31;
 $275 = $254 ^ $neg$0;
 $276 = $252 ^ $274;
 $277 = (_i64Subtract(($275|0),($276|0),($neg$0|0),($274|0))|0);
 $278 = tempRet0;
 $279 = $278;$280 = $277;
 tempRet0 = $279;
 return ($280|0);
}
function ___floatscan($f,$prec,$pok) {
 $f = $f|0;
 $prec = $prec|0;
 $pok = $pok|0;
 var $$$i = 0, $$0 = 0.0, $$0$i27 = 0.0, $$012$i = 0, $$012$i$be = 0, $$012$i$lcssa = 0, $$013$i = 0, $$01335$i = 0, $$01336$i = 0, $$07$i = 0, $$0711$i = 0, $$0712$i = 0, $$1$be$i = 0, $$1$be$i$lcssa = 0, $$1$ph$i = 0, $$14$i = 0, $$2$i = 0, $$21$i = 0, $$3$be$i = 0, $$3$be$i$lcssa = 0;
 var $$3$lcssa$i = 0, $$3131$i = 0, $$in = 0, $$k$0$i = 0, $$lcssa = 0, $$lcssa190 = 0, $$lcssa191 = 0, $$lcssa201 = 0, $$lcssa202 = 0, $$lcssa205 = 0, $$lcssa207 = 0, $$lcssa207$lcssa = 0, $$lcssa208 = 0, $$lcssa208$lcssa = 0, $$lcssa211 = 0, $$lcssa214 = 0, $$lcssa215 = 0, $$lcssa221 = 0, $$lcssa222 = 0, $$lcssa232 = 0;
 var $$lcssa59$i = 0, $$lnz$0$i = 0, $$neg41$i = 0, $$old$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre$i = 0.0, $$pre$i18 = 0, $$pre$phi$iZ2D = 0.0, $$promoted$i = 0, $$sink$off0$us$i = 0, $$sink$off0$us102$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0.0;
 var $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0.0, $181 = 0, $182 = 0, $183 = 0.0, $184 = 0.0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0.0, $205 = 0.0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0.0, $254 = 0.0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0.0, $263 = 0.0, $264 = 0.0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0.0, $276 = 0.0, $277 = 0.0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0.0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0.0, $312 = 0.0, $313 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0, $318 = 0, $319 = 0.0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0.0, $417 = 0.0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0.0, $434 = 0.0, $435 = 0.0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0.0, $446 = 0.0, $447 = 0.0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0.0, $458 = 0.0, $459 = 0.0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0.0, $472 = 0, $473 = 0.0, $474 = 0.0, $475 = 0, $476 = 0.0, $477 = 0, $478 = 0.0, $479 = 0.0, $48 = 0.0, $480 = 0, $481 = 0, $482 = 0, $483 = 0.0;
 var $484 = 0.0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0.0, $490 = 0.0, $491 = 0.0, $492 = 0.0, $493 = 0, $494 = 0, $495 = 0, $496 = 0.0, $497 = 0.0, $498 = 0, $499 = 0, $5 = 0, $50 = 0.0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0.0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0.0, $643 = 0.0, $644 = 0.0, $645 = 0;
 var $646 = 0.0, $647 = 0.0, $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0.0, $663 = 0;
 var $664 = 0.0, $665 = 0.0, $666 = 0, $667 = 0, $668 = 0, $669 = 0.0, $67 = 0, $670 = 0.0, $671 = 0.0, $672 = 0.0, $673 = 0, $674 = 0, $675 = 0.0, $676 = 0, $677 = 0.0, $678 = 0.0, $679 = 0.0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0.0, $685 = 0, $686 = 0, $687 = 0, $688 = 0.0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0.0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0.0, $701 = 0, $702 = 0, $703 = 0.0, $704 = 0.0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $a$0$lcssa186$i = 0, $a$0110$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph47$i = 0, $a$2$ph47$i$lcssa = 0, $a$2$ph47$i$lcssa219 = 0;
 var $a$2$ph47$i$ph = 0, $a$2$ph47$i220 = 0, $a$3$i = 0, $a$3$i$lcssa = 0, $a$3$i$lcssa198 = 0, $a$3$i$lcssa199 = 0, $a$3$i$ph = 0, $a$3$i200 = 0, $a$3$ph$i = 0, $a$487$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i24 = 0.0, $bits$0$ph = 0, $brmerge = 0, $brmerge136 = 0, $c$0 = 0, $c$0$i = 0;
 var $c$0$i$be = 0, $c$0$i$lcssa = 0, $c$0$i$ph = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$186 = 0, $c$2 = 0, $c$2$i = 0, $c$2$i$be = 0, $c$2$i$ph = 0, $c$2$lcssa$i = 0, $c$4 = 0, $c$4$1 = 0, $c$6 = 0, $carry$0112$i = 0, $carry1$0$us$i = 0, $carry1$0$us98$i = 0, $carry1$1$lcssa$lcssa$i = 0, $carry1$1$us$i = 0, $carry1$1$us$i$lcssa = 0;
 var $carry1$1$us$i$lcssa$lcssa = 0, $carry1$1$us103$i = 0, $carry1$1$us103$i$lcssa = 0, $carry1$1$us103$i$lcssa$lcssa = 0, $carry3$090$i = 0, $cond$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$033$i = 0, $denormal$034$i = 0, $denormal$1$i = 0, $denormal$2$i = 0, $e2$0$ph$i = 0, $e2$0$ph$i$lcssa = 0, $e2$0$us$i = 0, $e2$0$us93$i = 0, $e2$0$us93$i$lcssa = 0, $e2$1$i = 0, $e2$1$i$lcssa = 0, $e2$1$i$lcssa195 = 0;
 var $e2$1$i$ph = 0, $e2$1$i197 = 0, $e2$1$ph$i = 0, $e2$1$ph$i$ph = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $exitcond175$i = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa = 0, $gotdig$0$i$lcssa193 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa = 0, $gotdig$0$i12$lcssa230 = 0, $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i$ph = 0;
 var $gotdig$2$i13 = 0, $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3127$i = 0, $gotdig$3127$i$lcssa = 0, $gotdig$4$i = 0, $gotdig$4$i$lcssa = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i$ph = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1128$i = 0, $gotrad$2$i = 0, $gotrad$2$i$lcssa = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0;
 var $i$085 = 0, $i$1 = 0, $i$4 = 0, $i$4$lcssa = 0, $j$0$lcssa$i = 0, $j$0130$i = 0, $j$0130$i$lcssa = 0, $j$076$i = 0, $j$077$i = 0, $j$078$i = 0, $j$2$i = 0, $j$2$i$lcssa = 0, $j$3119$i = 0, $k$0$lcssa$i = 0, $k$0129$i = 0, $k$0129$i$lcssa = 0, $k$072$i = 0, $k$073$i = 0, $k$074$i = 0, $k$2$i = 0;
 var $k$2$i$lcssa = 0, $k$3$i = 0, $k$4111$i = 0, $k$5$in$us$i = 0, $k$5$in$us97$i = 0, $k$5$us$i = 0, $k$5$us99$i = 0, $k$5$z$2$us$i = 0, $k$5$z$2$us105$i = 0, $k$688$i = 0, $lnz$0$lcssa$i = 0, $lnz$0126$i = 0, $lnz$0126$i$lcssa = 0, $lnz$066$i = 0, $lnz$067$i = 0, $lnz$068$i = 0, $lnz$2$i = 0, $lnz$2$i$lcssa = 0, $notlhs = 0, $notrhs = 0;
 var $or$cond = 0, $or$cond$i = 0, $or$cond$i17 = 0, $or$cond11$i = 0, $or$cond11123$i = 0, $or$cond16$i = 0, $or$cond18$i = 0, $or$cond19$i = 0, $or$cond191$i = 0, $or$cond192$i = 0, $or$cond20$us$i = 0, $or$cond20$us104$i = 0, $or$cond22$i = 0, $or$cond23$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5 = 0, $or$cond6$i = 0, $or$cond7 = 0, $or$cond9$i = 0;
 var $or$cond9$i26 = 0, $or$cond9$not = 0, $rp$0$lcssa187$i = 0, $rp$0109$i = 0, $rp$1$i19 = 0, $rp$1$i19$lcssa = 0, $rp$2$ph45$i = 0, $rp$2$ph45$i$lcssa = 0, $rp$2$ph45$i$ph = 0, $rp$3$i$ph = 0, $rp$3$ph43$i = 0, $rp$3$ph43$i$ph = 0, $rp$486$i = 0, $rp$5$i = 0, $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0;
 var $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$325$i = 0, $x$4$lcssa$i = 0, $x$420$i = 0, $x$5$i = 0, $x$5$i$lcssa = 0, $x$6$i = 0, $x$i = 0, $y$0$i = 0.0, $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i23 = 0.0, $y$2$i = 0.0, $y$2$i25 = 0.0;
 var $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$321$i = 0.0, $y$4$i = 0.0, $y$4$i$lcssa = 0.0, $y$5$i = 0.0, $z$0$i = 0, $z$1$ph46$i = 0, $z$1$ph46$i$lcssa = 0, $z$1$ph46$i$ph = 0, $z$1$us$i = 0, $z$1$us94$i = 0, $z$1$us94$i$lcssa = 0, $z$2$us$i = 0, $z$2$us96$i = 0, $z$3$lcssa$lcssa$i = 0, $z$3$us$i = 0, $z$3$us$i$lcssa = 0, $z$3$us$i$lcssa$lcssa = 0, $z$3$us106$i = 0;
 var $z$3$us106$i$lcssa = 0, $z$3$us106$i$lcssa$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$5$ph$i$lcssa = 0, $z$5$ph$i$lcssa209 = 0, $z$5$ph$i$ph = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $x$i = sp;
 if ((($prec|0) == 1)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else if ((($prec|0) == 0)) {
  $bits$0$ph = 24;$emin$0$ph = -149;
 } else if ((($prec|0) == 2)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else {
  $$0 = 0.0;
  STACKTOP = sp;return (+$$0);
 }
 $0 = (($f) + 4|0);
 $1 = (($f) + 100|0);
 while(1) {
  $2 = HEAP32[$0>>2]|0;
  $3 = HEAP32[$1>>2]|0;
  $4 = ($2>>>0)<($3>>>0);
  if ($4) {
   $5 = (($2) + 1|0);
   HEAP32[$0>>2] = $5;
   $6 = HEAP8[$2>>0]|0;
   $7 = $6&255;
   $9 = $7;
  } else {
   $8 = (___shgetc($f)|0);
   $9 = $8;
  }
  $10 = (_isspace($9)|0);
  $11 = ($10|0)==(0);
  if ($11) {
   $$lcssa232 = $9;
   break;
  }
 }
 $12 = ($$lcssa232|0)==(45);
 do {
  if ((($$lcssa232|0) == 43) | (($$lcssa232|0) == 45)) {
   $13 = $12&1;
   $14 = $13 << 1;
   $15 = (1 - ($14))|0;
   $16 = HEAP32[$0>>2]|0;
   $17 = HEAP32[$1>>2]|0;
   $18 = ($16>>>0)<($17>>>0);
   if ($18) {
    $19 = (($16) + 1|0);
    HEAP32[$0>>2] = $19;
    $20 = HEAP8[$16>>0]|0;
    $21 = $20&255;
    $c$0 = $21;$sign$0 = $15;
    break;
   } else {
    $22 = (___shgetc($f)|0);
    $c$0 = $22;$sign$0 = $15;
    break;
   }
  } else {
   $c$0 = $$lcssa232;$sign$0 = 1;
  }
 } while(0);
 $c$186 = $c$0;$i$085 = 0;
 while(1) {
  $23 = $c$186 | 32;
  $24 = (3920 + ($i$085)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25 << 24 >> 24;
  $27 = ($23|0)==($26|0);
  if (!($27)) {
   $c$1$lcssa = $c$186;$i$0$lcssa = $i$085;
   break;
  }
  $28 = ($i$085>>>0)<(7);
  do {
   if ($28) {
    $29 = HEAP32[$0>>2]|0;
    $30 = HEAP32[$1>>2]|0;
    $31 = ($29>>>0)<($30>>>0);
    if ($31) {
     $32 = (($29) + 1|0);
     HEAP32[$0>>2] = $32;
     $33 = HEAP8[$29>>0]|0;
     $34 = $33&255;
     $c$2 = $34;
     break;
    } else {
     $35 = (___shgetc($f)|0);
     $c$2 = $35;
     break;
    }
   } else {
    $c$2 = $c$186;
   }
  } while(0);
  $36 = (($i$085) + 1)|0;
  $37 = ($36>>>0)<(8);
  if ($37) {
   $c$186 = $c$2;$i$085 = $36;
  } else {
   $c$1$lcssa = $c$2;$i$0$lcssa = $36;
   break;
  }
 }
 do {
  if ((($i$0$lcssa|0) == 3)) {
   label = 23;
  } else if (!((($i$0$lcssa|0) == 8))) {
   $38 = ($i$0$lcssa>>>0)>(3);
   $39 = ($pok|0)!=(0);
   $or$cond5 = $39 & $38;
   if ($or$cond5) {
    $40 = ($i$0$lcssa|0)==(8);
    if ($40) {
     break;
    } else {
     label = 23;
     break;
    }
   }
   $51 = ($i$0$lcssa|0)==(0);
   do {
    if ($51) {
     $52 = $c$1$lcssa | 32;
     $53 = ($52|0)==(110);
     if ($53) {
      $54 = HEAP32[$0>>2]|0;
      $55 = HEAP32[$1>>2]|0;
      $56 = ($54>>>0)<($55>>>0);
      if ($56) {
       $57 = (($54) + 1|0);
       HEAP32[$0>>2] = $57;
       $58 = HEAP8[$54>>0]|0;
       $59 = $58&255;
       $c$4 = $59;
      } else {
       $60 = (___shgetc($f)|0);
       $c$4 = $60;
      }
      $61 = $c$4 | 32;
      $62 = ($61|0)==(97);
      if (!($62)) {
       break;
      }
      $710 = HEAP32[$0>>2]|0;
      $711 = HEAP32[$1>>2]|0;
      $712 = ($710>>>0)<($711>>>0);
      if ($712) {
       $714 = (($710) + 1|0);
       HEAP32[$0>>2] = $714;
       $715 = HEAP8[$710>>0]|0;
       $716 = $715&255;
       $c$4$1 = $716;
      } else {
       $713 = (___shgetc($f)|0);
       $c$4$1 = $713;
      }
      $717 = $c$4$1 | 32;
      $718 = ($717|0)==(110);
      if (!($718)) {
       break;
      }
      $63 = HEAP32[$0>>2]|0;
      $64 = HEAP32[$1>>2]|0;
      $65 = ($63>>>0)<($64>>>0);
      if ($65) {
       $66 = (($63) + 1|0);
       HEAP32[$0>>2] = $66;
       $67 = HEAP8[$63>>0]|0;
       $68 = $67&255;
       $70 = $68;
      } else {
       $69 = (___shgetc($f)|0);
       $70 = $69;
      }
      $71 = ($70|0)==(40);
      if (!($71)) {
       $72 = HEAP32[$1>>2]|0;
       $73 = ($72|0)==(0|0);
       if ($73) {
        $$0 = nan;
        STACKTOP = sp;return (+$$0);
       }
       $74 = HEAP32[$0>>2]|0;
       $75 = (($74) + -1|0);
       HEAP32[$0>>2] = $75;
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $i$4 = 1;
      while(1) {
       $76 = HEAP32[$0>>2]|0;
       $77 = HEAP32[$1>>2]|0;
       $78 = ($76>>>0)<($77>>>0);
       if ($78) {
        $79 = (($76) + 1|0);
        HEAP32[$0>>2] = $79;
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $84 = $81;
       } else {
        $82 = (___shgetc($f)|0);
        $84 = $82;
       }
       $83 = (($84) + -48)|0;
       $85 = ($83>>>0)<(10);
       $86 = (($84) + -65)|0;
       $87 = ($86>>>0)<(26);
       $or$cond = $85 | $87;
       if (!($or$cond)) {
        $88 = (($84) + -97)|0;
        $89 = ($88>>>0)<(26);
        $90 = ($84|0)==(95);
        $or$cond7 = $90 | $89;
        if (!($or$cond7)) {
         $$lcssa = $84;$i$4$lcssa = $i$4;
         break;
        }
       }
       $102 = (($i$4) + 1)|0;
       $i$4 = $102;
      }
      $91 = ($$lcssa|0)==(41);
      if ($91) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $92 = HEAP32[$1>>2]|0;
      $93 = ($92|0)==(0|0);
      if (!($93)) {
       $94 = HEAP32[$0>>2]|0;
       $95 = (($94) + -1|0);
       HEAP32[$0>>2] = $95;
      }
      if (!($39)) {
       $97 = (___errno_location()|0);
       HEAP32[$97>>2] = 22;
       ___shlim($f,0);
       $$0 = 0.0;
       STACKTOP = sp;return (+$$0);
      }
      $96 = ($i$4$lcssa|0)==(0);
      $brmerge136 = $96 | $93;
      if ($brmerge136) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $$in = $i$4$lcssa;
      while(1) {
       $98 = (($$in) + -1)|0;
       $99 = HEAP32[$0>>2]|0;
       $100 = (($99) + -1|0);
       HEAP32[$0>>2] = $100;
       $101 = ($98|0)==(0);
       if ($101) {
        break;
       } else {
        $$in = $98;
       }
      }
      $$0 = nan;
      STACKTOP = sp;return (+$$0);
     }
     $108 = ($c$1$lcssa|0)==(48);
     do {
      if ($108) {
       $109 = HEAP32[$0>>2]|0;
       $110 = HEAP32[$1>>2]|0;
       $111 = ($109>>>0)<($110>>>0);
       if ($111) {
        $112 = (($109) + 1|0);
        HEAP32[$0>>2] = $112;
        $113 = HEAP8[$109>>0]|0;
        $114 = $113&255;
        $117 = $114;
       } else {
        $115 = (___shgetc($f)|0);
        $117 = $115;
       }
       $116 = $117 | 32;
       $118 = ($116|0)==(120);
       if (!($118)) {
        $320 = HEAP32[$1>>2]|0;
        $321 = ($320|0)==(0|0);
        if ($321) {
         $c$6 = 48;
         break;
        }
        $322 = HEAP32[$0>>2]|0;
        $323 = (($322) + -1|0);
        HEAP32[$0>>2] = $323;
        $c$6 = 48;
        break;
       }
       $119 = HEAP32[$0>>2]|0;
       $120 = HEAP32[$1>>2]|0;
       $121 = ($119>>>0)<($120>>>0);
       if ($121) {
        $122 = (($119) + 1|0);
        HEAP32[$0>>2] = $122;
        $123 = HEAP8[$119>>0]|0;
        $124 = $123&255;
        $c$0$i$ph = $124;
       } else {
        $125 = (___shgetc($f)|0);
        $c$0$i$ph = $125;
       }
       $c$0$i = $c$0$i$ph;$gotdig$0$i = 0;
       while(1) {
        if ((($c$0$i|0) == 46)) {
         $gotdig$0$i$lcssa193 = $gotdig$0$i;
         label = 74;
         break;
        } else if (!((($c$0$i|0) == 48))) {
         $c$0$i$lcssa = $c$0$i;$gotdig$0$i$lcssa = $gotdig$0$i;
         label = 84;
         break;
        }
        $126 = HEAP32[$0>>2]|0;
        $127 = HEAP32[$1>>2]|0;
        $128 = ($126>>>0)<($127>>>0);
        if ($128) {
         $129 = (($126) + 1|0);
         HEAP32[$0>>2] = $129;
         $130 = HEAP8[$126>>0]|0;
         $131 = $130&255;
         $c$0$i$be = $131;
        } else {
         $132 = (___shgetc($f)|0);
         $c$0$i$be = $132;
        }
        $c$0$i = $c$0$i$be;$gotdig$0$i = 1;
       }
       if ((label|0) == 74) {
        $133 = HEAP32[$0>>2]|0;
        $134 = HEAP32[$1>>2]|0;
        $135 = ($133>>>0)<($134>>>0);
        if ($135) {
         $136 = (($133) + 1|0);
         HEAP32[$0>>2] = $136;
         $137 = HEAP8[$133>>0]|0;
         $138 = $137&255;
         $c$1$ph$i = $138;
        } else {
         $139 = (___shgetc($f)|0);
         $c$1$ph$i = $139;
        }
        $140 = ($c$1$ph$i|0)==(48);
        if ($140) {
         $148 = 0;$149 = 0;
         while(1) {
          $141 = HEAP32[$0>>2]|0;
          $142 = HEAP32[$1>>2]|0;
          $143 = ($141>>>0)<($142>>>0);
          if ($143) {
           $144 = (($141) + 1|0);
           HEAP32[$0>>2] = $144;
           $145 = HEAP8[$141>>0]|0;
           $146 = $145&255;
           $152 = $146;
          } else {
           $147 = (___shgetc($f)|0);
           $152 = $147;
          }
          $150 = (_i64Add(($148|0),($149|0),-1,-1)|0);
          $151 = tempRet0;
          $153 = ($152|0)==(48);
          if ($153) {
           $148 = $150;$149 = $151;
          } else {
           $$lcssa191 = $152;$721 = $150;$722 = $151;
           break;
          }
         }
         $719 = $721;$720 = $722;$c$2$i$ph = $$lcssa191;$gotdig$2$i$ph = 1;$gotrad$0$i$ph = 1;
        } else {
         $719 = 0;$720 = 0;$c$2$i$ph = $c$1$ph$i;$gotdig$2$i$ph = $gotdig$0$i$lcssa193;$gotrad$0$i$ph = 1;
        }
       }
       else if ((label|0) == 84) {
        $719 = 0;$720 = 0;$c$2$i$ph = $c$0$i$lcssa;$gotdig$2$i$ph = $gotdig$0$i$lcssa;$gotrad$0$i$ph = 0;
       }
       $163 = 0;$165 = 0;$723 = $719;$724 = $720;$c$2$i = $c$2$i$ph;$gotdig$2$i = $gotdig$2$i$ph;$gotrad$0$i = $gotrad$0$i$ph;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
       L124: while(1) {
        $154 = (($c$2$i) + -48)|0;
        $155 = ($154>>>0)<(10);
        do {
         if ($155) {
          $d$0$i = $154;
          label = 91;
         } else {
          $156 = $c$2$i | 32;
          $157 = (($156) + -97)|0;
          $158 = ($157>>>0)<(6);
          $159 = ($c$2$i|0)==(46);
          $or$cond6$i = $159 | $158;
          if (!($or$cond6$i)) {
           $207 = $723;$208 = $165;$210 = $724;$211 = $163;$c$2$lcssa$i = $c$2$i;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
           break L124;
          }
          if ($159) {
           $160 = ($gotrad$0$i|0)==(0);
           if ($160) {
            $725 = $165;$726 = $163;$727 = $165;$728 = $163;$gotdig$3$i = $gotdig$2$i;$gotrad$1$i = 1;$gottail$2$i = $gottail$0$i;$scale$2$i = $scale$0$i;$x$2$i = $x$0$i;$y$2$i = $y$0$i;
            break;
           } else {
            $207 = $723;$208 = $165;$210 = $724;$211 = $163;$c$2$lcssa$i = 46;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
            break L124;
           }
          } else {
           $161 = ($c$2$i|0)>(57);
           $162 = (($156) + -87)|0;
           $$$i = $161 ? $162 : $154;
           $d$0$i = $$$i;
           label = 91;
           break;
          }
         }
        } while(0);
        if ((label|0) == 91) {
         label = 0;
         $164 = ($163|0)<(0);
         $166 = ($165>>>0)<(8);
         $167 = ($163|0)==(0);
         $168 = $167 & $166;
         $169 = $164 | $168;
         do {
          if ($169) {
           $170 = $x$0$i << 4;
           $171 = (($d$0$i) + ($170))|0;
           $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $171;$y$1$i = $y$0$i;
          } else {
           $172 = ($163|0)<(0);
           $173 = ($165>>>0)<(14);
           $174 = ($163|0)==(0);
           $175 = $174 & $173;
           $176 = $172 | $175;
           if ($176) {
            $177 = (+($d$0$i|0));
            $178 = $scale$0$i * 0.0625;
            $179 = $178 * $177;
            $180 = $y$0$i + $179;
            $gottail$1$i = $gottail$0$i;$scale$1$i = $178;$x$1$i = $x$0$i;$y$1$i = $180;
            break;
           }
           $181 = ($d$0$i|0)==(0);
           $182 = ($gottail$0$i|0)!=(0);
           $or$cond$i = $182 | $181;
           if ($or$cond$i) {
            $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $y$0$i;
           } else {
            $183 = $scale$0$i * 0.5;
            $184 = $y$0$i + $183;
            $gottail$1$i = 1;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $184;
           }
          }
         } while(0);
         $185 = (_i64Add(($165|0),($163|0),1,0)|0);
         $186 = tempRet0;
         $725 = $723;$726 = $724;$727 = $185;$728 = $186;$gotdig$3$i = 1;$gotrad$1$i = $gotrad$0$i;$gottail$2$i = $gottail$1$i;$scale$2$i = $scale$1$i;$x$2$i = $x$1$i;$y$2$i = $y$1$i;
        }
        $187 = HEAP32[$0>>2]|0;
        $188 = HEAP32[$1>>2]|0;
        $189 = ($187>>>0)<($188>>>0);
        if ($189) {
         $190 = (($187) + 1|0);
         HEAP32[$0>>2] = $190;
         $191 = HEAP8[$187>>0]|0;
         $192 = $191&255;
         $c$2$i$be = $192;
        } else {
         $193 = (___shgetc($f)|0);
         $c$2$i$be = $193;
        }
        $163 = $728;$165 = $727;$723 = $725;$724 = $726;$c$2$i = $c$2$i$be;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
       }
       $194 = ($gotdig$2$i$lcssa|0)==(0);
       if ($194) {
        $195 = HEAP32[$1>>2]|0;
        $196 = ($195|0)==(0|0);
        if (!($196)) {
         $197 = HEAP32[$0>>2]|0;
         $198 = (($197) + -1|0);
         HEAP32[$0>>2] = $198;
        }
        $199 = ($pok|0)==(0);
        if ($199) {
         ___shlim($f,0);
        } else {
         if (!($196)) {
          $200 = HEAP32[$0>>2]|0;
          $201 = (($200) + -1|0);
          HEAP32[$0>>2] = $201;
          $202 = ($gotrad$0$i$lcssa|0)==(0);
          if (!($202)) {
           $203 = (($200) + -2|0);
           HEAP32[$0>>2] = $203;
          }
         }
        }
        $204 = (+($sign$0|0));
        $205 = $204 * 0.0;
        $$0 = $205;
        STACKTOP = sp;return (+$$0);
       }
       $206 = ($gotrad$0$i$lcssa|0)==(0);
       $209 = $206 ? $208 : $207;
       $212 = $206 ? $211 : $210;
       $213 = ($211|0)<(0);
       $214 = ($208>>>0)<(8);
       $215 = ($211|0)==(0);
       $216 = $215 & $214;
       $217 = $213 | $216;
       if ($217) {
        $219 = $208;$220 = $211;$x$325$i = $x$0$i$lcssa;
        while(1) {
         $218 = $x$325$i << 4;
         $221 = (_i64Add(($219|0),($220|0),1,0)|0);
         $222 = tempRet0;
         $223 = ($222|0)<(0);
         $224 = ($221>>>0)<(8);
         $225 = ($222|0)==(0);
         $226 = $225 & $224;
         $227 = $223 | $226;
         if ($227) {
          $219 = $221;$220 = $222;$x$325$i = $218;
         } else {
          $$lcssa190 = $218;
          break;
         }
        }
        $x$3$lcssa$i = $$lcssa190;
       } else {
        $x$3$lcssa$i = $x$0$i$lcssa;
       }
       $228 = $c$2$lcssa$i | 32;
       $229 = ($228|0)==(112);
       do {
        if ($229) {
         $230 = (_scanexp($f,$pok)|0);
         $231 = tempRet0;
         $232 = ($230|0)==(0);
         $233 = ($231|0)==(-2147483648);
         $234 = $232 & $233;
         if ($234) {
          $235 = ($pok|0)==(0);
          if ($235) {
           ___shlim($f,0);
           $$0 = 0.0;
           STACKTOP = sp;return (+$$0);
          } else {
           $236 = HEAP32[$1>>2]|0;
           $237 = ($236|0)==(0|0);
           if ($237) {
            $248 = 0;$249 = 0;
            break;
           }
           $238 = HEAP32[$0>>2]|0;
           $239 = (($238) + -1|0);
           HEAP32[$0>>2] = $239;
           $248 = 0;$249 = 0;
           break;
          }
         } else {
          $248 = $230;$249 = $231;
         }
        } else {
         $240 = HEAP32[$1>>2]|0;
         $241 = ($240|0)==(0|0);
         if ($241) {
          $248 = 0;$249 = 0;
         } else {
          $242 = HEAP32[$0>>2]|0;
          $243 = (($242) + -1|0);
          HEAP32[$0>>2] = $243;
          $248 = 0;$249 = 0;
         }
        }
       } while(0);
       $244 = (_bitshift64Shl(($209|0),($212|0),2)|0);
       $245 = tempRet0;
       $246 = (_i64Add(($244|0),($245|0),-32,-1)|0);
       $247 = tempRet0;
       $250 = (_i64Add(($246|0),($247|0),($248|0),($249|0))|0);
       $251 = tempRet0;
       $252 = ($x$3$lcssa$i|0)==(0);
       if ($252) {
        $253 = (+($sign$0|0));
        $254 = $253 * 0.0;
        $$0 = $254;
        STACKTOP = sp;return (+$$0);
       }
       $255 = (0 - ($emin$0$ph))|0;
       $256 = ($251|0)>(0);
       $257 = ($250>>>0)>($255>>>0);
       $258 = ($251|0)==(0);
       $259 = $258 & $257;
       $260 = $256 | $259;
       if ($260) {
        $261 = (___errno_location()|0);
        HEAP32[$261>>2] = 34;
        $262 = (+($sign$0|0));
        $263 = $262 * 1.7976931348623157E+308;
        $264 = $263 * 1.7976931348623157E+308;
        $$0 = $264;
        STACKTOP = sp;return (+$$0);
       }
       $265 = (($emin$0$ph) + -106)|0;
       $266 = ($265|0)<(0);
       $267 = $266 << 31 >> 31;
       $268 = ($251|0)<($267|0);
       $269 = ($250>>>0)<($265>>>0);
       $270 = ($251|0)==($267|0);
       $271 = $270 & $269;
       $272 = $268 | $271;
       if ($272) {
        $274 = (___errno_location()|0);
        HEAP32[$274>>2] = 34;
        $275 = (+($sign$0|0));
        $276 = $275 * 2.2250738585072014E-308;
        $277 = $276 * 2.2250738585072014E-308;
        $$0 = $277;
        STACKTOP = sp;return (+$$0);
       }
       $273 = ($x$3$lcssa$i|0)>(-1);
       if ($273) {
        $282 = $250;$283 = $251;$x$420$i = $x$3$lcssa$i;$y$321$i = $y$0$i$lcssa;
        while(1) {
         $278 = !($y$321$i >= 0.5);
         $279 = $x$420$i << 1;
         if ($278) {
          $$pn$i = $y$321$i;$x$5$i = $279;
         } else {
          $280 = $279 | 1;
          $281 = $y$321$i + -1.0;
          $$pn$i = $281;$x$5$i = $280;
         }
         $y$4$i = $y$321$i + $$pn$i;
         $284 = (_i64Add(($282|0),($283|0),-1,-1)|0);
         $285 = tempRet0;
         $286 = ($x$5$i|0)>(-1);
         if ($286) {
          $282 = $284;$283 = $285;$x$420$i = $x$5$i;$y$321$i = $y$4$i;
         } else {
          $729 = $284;$730 = $285;$x$5$i$lcssa = $x$5$i;$y$4$i$lcssa = $y$4$i;
          break;
         }
        }
        $291 = $729;$292 = $730;$x$4$lcssa$i = $x$5$i$lcssa;$y$3$lcssa$i = $y$4$i$lcssa;
       } else {
        $291 = $250;$292 = $251;$x$4$lcssa$i = $x$3$lcssa$i;$y$3$lcssa$i = $y$0$i$lcssa;
       }
       $287 = ($emin$0$ph|0)<(0);
       $288 = $287 << 31 >> 31;
       $289 = (_i64Subtract(32,0,($emin$0$ph|0),($288|0))|0);
       $290 = tempRet0;
       $293 = (_i64Add(($291|0),($292|0),($289|0),($290|0))|0);
       $294 = tempRet0;
       $295 = (0)>($294|0);
       $296 = ($bits$0$ph>>>0)>($293>>>0);
       $297 = (0)==($294|0);
       $298 = $297 & $296;
       $299 = $295 | $298;
       if ($299) {
        $300 = ($293|0)<(0);
        if ($300) {
         $$0711$i = 0;
         label = 139;
        } else {
         $$07$i = $293;
         label = 137;
        }
       } else {
        $$07$i = $bits$0$ph;
        label = 137;
       }
       do {
        if ((label|0) == 137) {
         $301 = ($$07$i|0)<(53);
         if ($301) {
          $$0711$i = $$07$i;
          label = 139;
          break;
         }
         $$pre$i = (+($sign$0|0));
         $$0712$i = $$07$i;$$pre$phi$iZ2D = $$pre$i;$bias$0$i = 0.0;
        }
       } while(0);
       if ((label|0) == 139) {
        $302 = (84 - ($$0711$i))|0;
        $303 = (+_scalbn(1.0,$302));
        $304 = (+($sign$0|0));
        $305 = (+_copysignl($303,$304));
        $$0712$i = $$0711$i;$$pre$phi$iZ2D = $304;$bias$0$i = $305;
       }
       $306 = ($$0712$i|0)<(32);
       $307 = $y$3$lcssa$i != 0.0;
       $or$cond4$i = $307 & $306;
       $308 = $x$4$lcssa$i & 1;
       $309 = ($308|0)==(0);
       $or$cond9$i = $309 & $or$cond4$i;
       $310 = $or$cond9$i&1;
       $x$6$i = (($310) + ($x$4$lcssa$i))|0;
       $y$5$i = $or$cond9$i ? 0.0 : $y$3$lcssa$i;
       $311 = (+($x$6$i>>>0));
       $312 = $$pre$phi$iZ2D * $311;
       $313 = $bias$0$i + $312;
       $314 = $$pre$phi$iZ2D * $y$5$i;
       $315 = $314 + $313;
       $316 = $315 - $bias$0$i;
       $317 = $316 != 0.0;
       if (!($317)) {
        $318 = (___errno_location()|0);
        HEAP32[$318>>2] = 34;
       }
       $319 = (+_scalbnl($316,$291));
       $$0 = $319;
       STACKTOP = sp;return (+$$0);
      } else {
       $c$6 = $c$1$lcssa;
      }
     } while(0);
     $sum$i = (($emin$0$ph) + ($bits$0$ph))|0;
     $324 = (0 - ($sum$i))|0;
     $$012$i = $c$6;$gotdig$0$i12 = 0;
     while(1) {
      if ((($$012$i|0) == 46)) {
       $gotdig$0$i12$lcssa230 = $gotdig$0$i12;
       label = 151;
       break;
      } else if (!((($$012$i|0) == 48))) {
       $$012$i$lcssa = $$012$i;$gotdig$0$i12$lcssa = $gotdig$0$i12;
       label = 161;
       break;
      }
      $325 = HEAP32[$0>>2]|0;
      $326 = HEAP32[$1>>2]|0;
      $327 = ($325>>>0)<($326>>>0);
      if ($327) {
       $328 = (($325) + 1|0);
       HEAP32[$0>>2] = $328;
       $329 = HEAP8[$325>>0]|0;
       $330 = $329&255;
       $$012$i$be = $330;
      } else {
       $331 = (___shgetc($f)|0);
       $$012$i$be = $331;
      }
      $$012$i = $$012$i$be;$gotdig$0$i12 = 1;
     }
     if ((label|0) == 151) {
      $332 = HEAP32[$0>>2]|0;
      $333 = HEAP32[$1>>2]|0;
      $334 = ($332>>>0)<($333>>>0);
      if ($334) {
       $335 = (($332) + 1|0);
       HEAP32[$0>>2] = $335;
       $336 = HEAP8[$332>>0]|0;
       $337 = $336&255;
       $$1$ph$i = $337;
      } else {
       $338 = (___shgetc($f)|0);
       $$1$ph$i = $338;
      }
      $339 = ($$1$ph$i|0)==(48);
      if ($339) {
       $340 = 0;$341 = 0;
       while(1) {
        $342 = (_i64Add(($340|0),($341|0),-1,-1)|0);
        $343 = tempRet0;
        $344 = HEAP32[$0>>2]|0;
        $345 = HEAP32[$1>>2]|0;
        $346 = ($344>>>0)<($345>>>0);
        if ($346) {
         $347 = (($344) + 1|0);
         HEAP32[$0>>2] = $347;
         $348 = HEAP8[$344>>0]|0;
         $349 = $348&255;
         $$1$be$i = $349;
        } else {
         $350 = (___shgetc($f)|0);
         $$1$be$i = $350;
        }
        $351 = ($$1$be$i|0)==(48);
        if ($351) {
         $340 = $342;$341 = $343;
        } else {
         $$1$be$i$lcssa = $$1$be$i;$733 = $342;$734 = $343;
         break;
        }
       }
       $$2$i = $$1$be$i$lcssa;$731 = $733;$732 = $734;$gotdig$2$i13 = 1;$gotrad$0$i14 = 1;
      } else {
       $$2$i = $$1$ph$i;$731 = 0;$732 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa230;$gotrad$0$i14 = 1;
      }
     }
     else if ((label|0) == 161) {
      $$2$i = $$012$i$lcssa;$731 = 0;$732 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa;$gotrad$0$i14 = 0;
     }
     HEAP32[$x$i>>2] = 0;
     $352 = (($$2$i) + -48)|0;
     $353 = ($352>>>0)<(10);
     $354 = ($$2$i|0)==(46);
     $or$cond11123$i = $354 | $353;
     do {
      if ($or$cond11123$i) {
       $355 = (($x$i) + 496|0);
       $$3131$i = $$2$i;$358 = 0;$359 = 0;$735 = $354;$736 = $352;$737 = $731;$738 = $732;$gotdig$3127$i = $gotdig$2$i13;$gotrad$1128$i = $gotrad$0$i14;$j$0130$i = 0;$k$0129$i = 0;$lnz$0126$i = 0;
       L237: while(1) {
        do {
         if ($735) {
          $cond$i = ($gotrad$1128$i|0)==(0);
          if ($cond$i) {
           $739 = $358;$740 = $359;$741 = $358;$742 = $359;$gotdig$4$i = $gotdig$3127$i;$gotrad$2$i = 1;$j$2$i = $j$0130$i;$k$2$i = $k$0129$i;$lnz$2$i = $lnz$0126$i;
          } else {
           $743 = $737;$744 = $738;$745 = $358;$746 = $359;$gotdig$3127$i$lcssa = $gotdig$3127$i;$j$0130$i$lcssa = $j$0130$i;$k$0129$i$lcssa = $k$0129$i;$lnz$0126$i$lcssa = $lnz$0126$i;
           label = 166;
           break L237;
          }
         } else {
          $357 = ($k$0129$i|0)<(125);
          $360 = (_i64Add(($358|0),($359|0),1,0)|0);
          $361 = tempRet0;
          $362 = ($$3131$i|0)!=(48);
          if (!($357)) {
           if (!($362)) {
            $739 = $737;$740 = $738;$741 = $360;$742 = $361;$gotdig$4$i = $gotdig$3127$i;$gotrad$2$i = $gotrad$1128$i;$j$2$i = $j$0130$i;$k$2$i = $k$0129$i;$lnz$2$i = $lnz$0126$i;
            break;
           }
           $372 = HEAP32[$355>>2]|0;
           $373 = $372 | 1;
           HEAP32[$355>>2] = $373;
           $739 = $737;$740 = $738;$741 = $360;$742 = $361;$gotdig$4$i = $gotdig$3127$i;$gotrad$2$i = $gotrad$1128$i;$j$2$i = $j$0130$i;$k$2$i = $k$0129$i;$lnz$2$i = $lnz$0126$i;
           break;
          }
          $$lnz$0$i = $362 ? $360 : $lnz$0126$i;
          $363 = ($j$0130$i|0)==(0);
          $364 = (($x$i) + ($k$0129$i<<2)|0);
          if ($363) {
           $storemerge$i = $736;
          } else {
           $365 = HEAP32[$364>>2]|0;
           $366 = ($365*10)|0;
           $367 = (($$3131$i) + -48)|0;
           $368 = (($367) + ($366))|0;
           $storemerge$i = $368;
          }
          HEAP32[$364>>2] = $storemerge$i;
          $369 = (($j$0130$i) + 1)|0;
          $370 = ($369|0)==(9);
          $371 = $370&1;
          $$k$0$i = (($371) + ($k$0129$i))|0;
          $$14$i = $370 ? 0 : $369;
          $739 = $737;$740 = $738;$741 = $360;$742 = $361;$gotdig$4$i = 1;$gotrad$2$i = $gotrad$1128$i;$j$2$i = $$14$i;$k$2$i = $$k$0$i;$lnz$2$i = $$lnz$0$i;
         }
        } while(0);
        $374 = HEAP32[$0>>2]|0;
        $375 = HEAP32[$1>>2]|0;
        $376 = ($374>>>0)<($375>>>0);
        if ($376) {
         $377 = (($374) + 1|0);
         HEAP32[$0>>2] = $377;
         $378 = HEAP8[$374>>0]|0;
         $379 = $378&255;
         $$3$be$i = $379;
        } else {
         $380 = (___shgetc($f)|0);
         $$3$be$i = $380;
        }
        $381 = (($$3$be$i) + -48)|0;
        $382 = ($381>>>0)<(10);
        $383 = ($$3$be$i|0)==(46);
        $or$cond11$i = $383 | $382;
        if ($or$cond11$i) {
         $$3131$i = $$3$be$i;$358 = $741;$359 = $742;$735 = $383;$736 = $381;$737 = $739;$738 = $740;$gotdig$3127$i = $gotdig$4$i;$gotrad$1128$i = $gotrad$2$i;$j$0130$i = $j$2$i;$k$0129$i = $k$2$i;$lnz$0126$i = $lnz$2$i;
        } else {
         $$3$be$i$lcssa = $$3$be$i;$752 = $741;$753 = $742;$754 = $739;$755 = $740;$gotdig$4$i$lcssa = $gotdig$4$i;$gotrad$2$i$lcssa = $gotrad$2$i;$j$2$i$lcssa = $j$2$i;$k$2$i$lcssa = $k$2$i;$lnz$2$i$lcssa = $lnz$2$i;
         label = 177;
         break;
        }
       }
       if ((label|0) == 166) {
        $356 = ($gotdig$3127$i$lcssa|0)!=(0);
        $747 = $745;$748 = $746;$749 = $743;$750 = $744;$751 = $356;$j$078$i = $j$0130$i$lcssa;$k$074$i = $k$0129$i$lcssa;$lnz$068$i = $lnz$0126$i$lcssa;
        label = 186;
        break;
       }
       else if ((label|0) == 177) {
        $$3$lcssa$i = $$3$be$i$lcssa;$385 = $754;$386 = $752;$388 = $755;$389 = $753;$gotdig$3$lcssa$i = $gotdig$4$i$lcssa;$gotrad$1$lcssa$i = $gotrad$2$i$lcssa;$j$0$lcssa$i = $j$2$i$lcssa;$k$0$lcssa$i = $k$2$i$lcssa;$lnz$0$lcssa$i = $lnz$2$i$lcssa;
        label = 178;
        break;
       }
      } else {
       $$3$lcssa$i = $$2$i;$385 = $731;$386 = 0;$388 = $732;$389 = 0;$gotdig$3$lcssa$i = $gotdig$2$i13;$gotrad$1$lcssa$i = $gotrad$0$i14;$j$0$lcssa$i = 0;$k$0$lcssa$i = 0;$lnz$0$lcssa$i = 0;
       label = 178;
      }
     } while(0);
     do {
      if ((label|0) == 178) {
       $384 = ($gotrad$1$lcssa$i|0)==(0);
       $387 = $384 ? $386 : $385;
       $390 = $384 ? $389 : $388;
       $391 = ($gotdig$3$lcssa$i|0)!=(0);
       $392 = $$3$lcssa$i | 32;
       $393 = ($392|0)==(101);
       $or$cond16$i = $393 & $391;
       if (!($or$cond16$i)) {
        $408 = ($$3$lcssa$i|0)>(-1);
        if ($408) {
         $747 = $386;$748 = $389;$749 = $387;$750 = $390;$751 = $391;$j$078$i = $j$0$lcssa$i;$k$074$i = $k$0$lcssa$i;$lnz$068$i = $lnz$0$lcssa$i;
         label = 186;
         break;
        } else {
         $756 = $386;$757 = $389;$758 = $391;$759 = $387;$760 = $390;$j$077$i = $j$0$lcssa$i;$k$073$i = $k$0$lcssa$i;$lnz$067$i = $lnz$0$lcssa$i;
         label = 188;
         break;
        }
       }
       $394 = (_scanexp($f,$pok)|0);
       $395 = tempRet0;
       $396 = ($394|0)==(0);
       $397 = ($395|0)==(-2147483648);
       $398 = $396 & $397;
       if ($398) {
        $399 = ($pok|0)==(0);
        if ($399) {
         ___shlim($f,0);
         $$0$i27 = 0.0;
         break;
        }
        $400 = HEAP32[$1>>2]|0;
        $401 = ($400|0)==(0|0);
        if ($401) {
         $404 = 0;$405 = 0;
        } else {
         $402 = HEAP32[$0>>2]|0;
         $403 = (($402) + -1|0);
         HEAP32[$0>>2] = $403;
         $404 = 0;$405 = 0;
        }
       } else {
        $404 = $394;$405 = $395;
       }
       $406 = (_i64Add(($404|0),($405|0),($387|0),($390|0))|0);
       $407 = tempRet0;
       $418 = $406;$420 = $386;$421 = $407;$423 = $389;$j$076$i = $j$0$lcssa$i;$k$072$i = $k$0$lcssa$i;$lnz$066$i = $lnz$0$lcssa$i;
       label = 190;
      }
     } while(0);
     if ((label|0) == 186) {
      $409 = HEAP32[$1>>2]|0;
      $410 = ($409|0)==(0|0);
      if ($410) {
       $756 = $747;$757 = $748;$758 = $751;$759 = $749;$760 = $750;$j$077$i = $j$078$i;$k$073$i = $k$074$i;$lnz$067$i = $lnz$068$i;
       label = 188;
      } else {
       $411 = HEAP32[$0>>2]|0;
       $412 = (($411) + -1|0);
       HEAP32[$0>>2] = $412;
       if ($751) {
        $418 = $749;$420 = $747;$421 = $750;$423 = $748;$j$076$i = $j$078$i;$k$072$i = $k$074$i;$lnz$066$i = $lnz$068$i;
        label = 190;
       } else {
        label = 189;
       }
      }
     }
     if ((label|0) == 188) {
      if ($758) {
       $418 = $759;$420 = $756;$421 = $760;$423 = $757;$j$076$i = $j$077$i;$k$072$i = $k$073$i;$lnz$066$i = $lnz$067$i;
       label = 190;
      } else {
       label = 189;
      }
     }
     do {
      if ((label|0) == 189) {
       $413 = (___errno_location()|0);
       HEAP32[$413>>2] = 22;
       ___shlim($f,0);
       $$0$i27 = 0.0;
      }
      else if ((label|0) == 190) {
       $414 = HEAP32[$x$i>>2]|0;
       $415 = ($414|0)==(0);
       if ($415) {
        $416 = (+($sign$0|0));
        $417 = $416 * 0.0;
        $$0$i27 = $417;
        break;
       }
       $419 = ($418|0)==($420|0);
       $422 = ($421|0)==($423|0);
       $424 = $419 & $422;
       $425 = ($423|0)<(0);
       $426 = ($420>>>0)<(10);
       $427 = ($423|0)==(0);
       $428 = $427 & $426;
       $429 = $425 | $428;
       $or$cond$i17 = $429 & $424;
       if ($or$cond$i17) {
        $430 = ($bits$0$ph>>>0)>(30);
        $431 = $414 >>> $bits$0$ph;
        $432 = ($431|0)==(0);
        $or$cond18$i = $430 | $432;
        if ($or$cond18$i) {
         $433 = (+($sign$0|0));
         $434 = (+($414>>>0));
         $435 = $433 * $434;
         $$0$i27 = $435;
         break;
        }
       }
       $436 = (($emin$0$ph|0) / -2)&-1;
       $437 = ($436|0)<(0);
       $438 = $437 << 31 >> 31;
       $439 = ($421|0)>($438|0);
       $440 = ($418>>>0)>($436>>>0);
       $441 = ($421|0)==($438|0);
       $442 = $441 & $440;
       $443 = $439 | $442;
       if ($443) {
        $444 = (___errno_location()|0);
        HEAP32[$444>>2] = 34;
        $445 = (+($sign$0|0));
        $446 = $445 * 1.7976931348623157E+308;
        $447 = $446 * 1.7976931348623157E+308;
        $$0$i27 = $447;
        break;
       }
       $448 = (($emin$0$ph) + -106)|0;
       $449 = ($448|0)<(0);
       $450 = $449 << 31 >> 31;
       $451 = ($421|0)<($450|0);
       $452 = ($418>>>0)<($448>>>0);
       $453 = ($421|0)==($450|0);
       $454 = $453 & $452;
       $455 = $451 | $454;
       if ($455) {
        $456 = (___errno_location()|0);
        HEAP32[$456>>2] = 34;
        $457 = (+($sign$0|0));
        $458 = $457 * 2.2250738585072014E-308;
        $459 = $458 * 2.2250738585072014E-308;
        $$0$i27 = $459;
        break;
       }
       $460 = ($j$076$i|0)==(0);
       if ($460) {
        $k$3$i = $k$072$i;
       } else {
        $461 = ($j$076$i|0)<(9);
        if ($461) {
         $462 = (($x$i) + ($k$072$i<<2)|0);
         $$promoted$i = HEAP32[$462>>2]|0;
         $464 = $$promoted$i;$j$3119$i = $j$076$i;
         while(1) {
          $463 = ($464*10)|0;
          $465 = (($j$3119$i) + 1)|0;
          $exitcond175$i = ($j$3119$i|0)==(8);
          if ($exitcond175$i) {
           $$lcssa222 = $463;
           break;
          } else {
           $464 = $463;$j$3119$i = $465;
          }
         }
         HEAP32[$462>>2] = $$lcssa222;
        }
        $466 = (($k$072$i) + 1)|0;
        $k$3$i = $466;
       }
       $467 = ($lnz$066$i|0)<(9);
       if ($467) {
        $468 = ($lnz$066$i|0)<=($418|0);
        $469 = ($418|0)<(18);
        $or$cond3$i = $468 & $469;
        if ($or$cond3$i) {
         $470 = ($418|0)==(9);
         if ($470) {
          $471 = (+($sign$0|0));
          $472 = HEAP32[$x$i>>2]|0;
          $473 = (+($472>>>0));
          $474 = $471 * $473;
          $$0$i27 = $474;
          break;
         }
         $475 = ($418|0)<(9);
         if ($475) {
          $476 = (+($sign$0|0));
          $477 = HEAP32[$x$i>>2]|0;
          $478 = (+($477>>>0));
          $479 = $476 * $478;
          $480 = (8 - ($418))|0;
          $481 = (3936 + ($480<<2)|0);
          $482 = HEAP32[$481>>2]|0;
          $483 = (+($482|0));
          $484 = $479 / $483;
          $$0$i27 = $484;
          break;
         }
         $$neg41$i = (($bits$0$ph) + 27)|0;
         $485 = Math_imul($418, -3)|0;
         $486 = (($$neg41$i) + ($485))|0;
         $487 = ($486|0)>(30);
         $$pre$i18 = HEAP32[$x$i>>2]|0;
         $488 = $$pre$i18 >>> $486;
         $489 = ($488|0)==(0);
         $or$cond191$i = $487 | $489;
         if ($or$cond191$i) {
          $490 = (+($sign$0|0));
          $491 = (+($$pre$i18>>>0));
          $492 = $490 * $491;
          $493 = (($418) + -10)|0;
          $494 = (3936 + ($493<<2)|0);
          $495 = HEAP32[$494>>2]|0;
          $496 = (+($495|0));
          $497 = $492 * $496;
          $$0$i27 = $497;
          break;
         }
        }
       }
       $498 = (($418|0) % 9)&-1;
       $499 = ($498|0)==(0);
       if ($499) {
        $a$2$ph47$i$ph = 0;$rp$2$ph45$i$ph = $418;$z$1$ph46$i$ph = $k$3$i;
       } else {
        $500 = ($418|0)>(-1);
        $501 = (($498) + 9)|0;
        $502 = $500 ? $498 : $501;
        $503 = (8 - ($502))|0;
        $504 = (3936 + ($503<<2)|0);
        $505 = HEAP32[$504>>2]|0;
        $506 = ($k$3$i|0)==(0);
        if ($506) {
         $a$0$lcssa186$i = 0;$rp$0$lcssa187$i = $418;$z$0$i = 0;
        } else {
         $507 = (1000000000 / ($505|0))&-1;
         $a$0110$i = 0;$carry$0112$i = 0;$k$4111$i = 0;$rp$0109$i = $418;
         while(1) {
          $508 = (($x$i) + ($k$4111$i<<2)|0);
          $509 = HEAP32[$508>>2]|0;
          $510 = (($509>>>0) % ($505>>>0))&-1;
          $511 = (($509>>>0) / ($505>>>0))&-1;
          $512 = (($511) + ($carry$0112$i))|0;
          HEAP32[$508>>2] = $512;
          $513 = Math_imul($510, $507)|0;
          $514 = ($k$4111$i|0)==($a$0110$i|0);
          $515 = ($512|0)==(0);
          $or$cond19$i = $514 & $515;
          $516 = (($k$4111$i) + 1)|0;
          if ($or$cond19$i) {
           $517 = $516 & 127;
           $518 = (($rp$0109$i) + -9)|0;
           $a$1$i = $517;$rp$1$i19 = $518;
          } else {
           $a$1$i = $a$0110$i;$rp$1$i19 = $rp$0109$i;
          }
          $519 = ($516|0)==($k$3$i|0);
          if ($519) {
           $$lcssa221 = $513;$a$1$i$lcssa = $a$1$i;$rp$1$i19$lcssa = $rp$1$i19;
           break;
          } else {
           $a$0110$i = $a$1$i;$carry$0112$i = $513;$k$4111$i = $516;$rp$0109$i = $rp$1$i19;
          }
         }
         $520 = ($$lcssa221|0)==(0);
         if ($520) {
          $a$0$lcssa186$i = $a$1$i$lcssa;$rp$0$lcssa187$i = $rp$1$i19$lcssa;$z$0$i = $k$3$i;
         } else {
          $521 = (($k$3$i) + 1)|0;
          $522 = (($x$i) + ($k$3$i<<2)|0);
          HEAP32[$522>>2] = $$lcssa221;
          $a$0$lcssa186$i = $a$1$i$lcssa;$rp$0$lcssa187$i = $rp$1$i19$lcssa;$z$0$i = $521;
         }
        }
        $523 = (9 - ($502))|0;
        $524 = (($523) + ($rp$0$lcssa187$i))|0;
        $a$2$ph47$i$ph = $a$0$lcssa186$i;$rp$2$ph45$i$ph = $524;$z$1$ph46$i$ph = $z$0$i;
       }
       $a$2$ph47$i = $a$2$ph47$i$ph;$e2$0$ph$i = 0;$rp$2$ph45$i = $rp$2$ph45$i$ph;$z$1$ph46$i = $z$1$ph46$i$ph;
       L323: while(1) {
        $525 = ($rp$2$ph45$i|0)<(18);
        $526 = (($x$i) + ($a$2$ph47$i<<2)|0);
        if ($525) {
         $e2$0$us$i = $e2$0$ph$i;$z$1$us$i = $z$1$ph46$i;
         while(1) {
          $528 = (($z$1$us$i) + 127)|0;
          $carry1$0$us$i = 0;$k$5$in$us$i = $528;$z$2$us$i = $z$1$us$i;
          while(1) {
           $k$5$us$i = $k$5$in$us$i & 127;
           $529 = (($x$i) + ($k$5$us$i<<2)|0);
           $530 = HEAP32[$529>>2]|0;
           $531 = (_bitshift64Shl(($530|0),0,29)|0);
           $532 = tempRet0;
           $533 = (_i64Add(($531|0),($532|0),($carry1$0$us$i|0),0)|0);
           $534 = tempRet0;
           $535 = ($534>>>0)>(0);
           $536 = ($533>>>0)>(1000000000);
           $537 = ($534|0)==(0);
           $538 = $537 & $536;
           $539 = $535 | $538;
           if ($539) {
            $540 = (___udivdi3(($533|0),($534|0),1000000000,0)|0);
            $541 = tempRet0;
            $542 = (___uremdi3(($533|0),($534|0),1000000000,0)|0);
            $543 = tempRet0;
            $$sink$off0$us$i = $542;$carry1$1$us$i = $540;
           } else {
            $$sink$off0$us$i = $533;$carry1$1$us$i = 0;
           }
           HEAP32[$529>>2] = $$sink$off0$us$i;
           $544 = (($z$2$us$i) + 127)|0;
           $545 = $544 & 127;
           $546 = ($k$5$us$i|0)!=($545|0);
           $547 = ($k$5$us$i|0)==($a$2$ph47$i|0);
           $or$cond20$us$i = $546 | $547;
           if ($or$cond20$us$i) {
            $z$3$us$i = $z$2$us$i;
           } else {
            $548 = ($$sink$off0$us$i|0)==(0);
            $k$5$z$2$us$i = $548 ? $k$5$us$i : $z$2$us$i;
            $z$3$us$i = $k$5$z$2$us$i;
           }
           $549 = (($k$5$us$i) + -1)|0;
           if ($547) {
            $carry1$1$us$i$lcssa = $carry1$1$us$i;$z$3$us$i$lcssa = $z$3$us$i;
            break;
           } else {
            $carry1$0$us$i = $carry1$1$us$i;$k$5$in$us$i = $549;$z$2$us$i = $z$3$us$i;
           }
          }
          $550 = (($e2$0$us$i) + -29)|0;
          $551 = ($carry1$1$us$i$lcssa|0)==(0);
          if ($551) {
           $e2$0$us$i = $550;$z$1$us$i = $z$3$us$i$lcssa;
          } else {
           $$lcssa215 = $550;$carry1$1$us$i$lcssa$lcssa = $carry1$1$us$i$lcssa;$z$3$us$i$lcssa$lcssa = $z$3$us$i$lcssa;
           break;
          }
         }
         $$lcssa59$i = $$lcssa215;$carry1$1$lcssa$lcssa$i = $carry1$1$us$i$lcssa$lcssa;$z$3$lcssa$lcssa$i = $z$3$us$i$lcssa$lcssa;
        } else {
         $527 = ($rp$2$ph45$i|0)==(18);
         if (!($527)) {
          $a$2$ph47$i$lcssa = $a$2$ph47$i;$e2$0$ph$i$lcssa = $e2$0$ph$i;$rp$2$ph45$i$lcssa = $rp$2$ph45$i;$z$1$ph46$i$lcssa = $z$1$ph46$i;
          label = 236;
          break;
         }
         $e2$0$us93$i = $e2$0$ph$i;$z$1$us94$i = $z$1$ph46$i;
         while(1) {
          $552 = HEAP32[$526>>2]|0;
          $553 = ($552>>>0)<(9007199);
          if (!($553)) {
           $a$2$ph47$i$lcssa219 = $a$2$ph47$i;$e2$0$us93$i$lcssa = $e2$0$us93$i;$z$1$us94$i$lcssa = $z$1$us94$i;
           label = 235;
           break L323;
          }
          $554 = (($z$1$us94$i) + 127)|0;
          $carry1$0$us98$i = 0;$k$5$in$us97$i = $554;$z$2$us96$i = $z$1$us94$i;
          while(1) {
           $k$5$us99$i = $k$5$in$us97$i & 127;
           $555 = (($x$i) + ($k$5$us99$i<<2)|0);
           $556 = HEAP32[$555>>2]|0;
           $557 = (_bitshift64Shl(($556|0),0,29)|0);
           $558 = tempRet0;
           $559 = (_i64Add(($557|0),($558|0),($carry1$0$us98$i|0),0)|0);
           $560 = tempRet0;
           $561 = ($560>>>0)>(0);
           $562 = ($559>>>0)>(1000000000);
           $563 = ($560|0)==(0);
           $564 = $563 & $562;
           $565 = $561 | $564;
           if ($565) {
            $566 = (___udivdi3(($559|0),($560|0),1000000000,0)|0);
            $567 = tempRet0;
            $568 = (___uremdi3(($559|0),($560|0),1000000000,0)|0);
            $569 = tempRet0;
            $$sink$off0$us102$i = $568;$carry1$1$us103$i = $566;
           } else {
            $$sink$off0$us102$i = $559;$carry1$1$us103$i = 0;
           }
           HEAP32[$555>>2] = $$sink$off0$us102$i;
           $570 = (($z$2$us96$i) + 127)|0;
           $571 = $570 & 127;
           $572 = ($k$5$us99$i|0)!=($571|0);
           $573 = ($k$5$us99$i|0)==($a$2$ph47$i|0);
           $or$cond20$us104$i = $572 | $573;
           if ($or$cond20$us104$i) {
            $z$3$us106$i = $z$2$us96$i;
           } else {
            $574 = ($$sink$off0$us102$i|0)==(0);
            $k$5$z$2$us105$i = $574 ? $k$5$us99$i : $z$2$us96$i;
            $z$3$us106$i = $k$5$z$2$us105$i;
           }
           $575 = (($k$5$us99$i) + -1)|0;
           if ($573) {
            $carry1$1$us103$i$lcssa = $carry1$1$us103$i;$z$3$us106$i$lcssa = $z$3$us106$i;
            break;
           } else {
            $carry1$0$us98$i = $carry1$1$us103$i;$k$5$in$us97$i = $575;$z$2$us96$i = $z$3$us106$i;
           }
          }
          $576 = (($e2$0$us93$i) + -29)|0;
          $577 = ($carry1$1$us103$i$lcssa|0)==(0);
          if ($577) {
           $e2$0$us93$i = $576;$z$1$us94$i = $z$3$us106$i$lcssa;
          } else {
           $$lcssa214 = $576;$carry1$1$us103$i$lcssa$lcssa = $carry1$1$us103$i$lcssa;$z$3$us106$i$lcssa$lcssa = $z$3$us106$i$lcssa;
           break;
          }
         }
         $$lcssa59$i = $$lcssa214;$carry1$1$lcssa$lcssa$i = $carry1$1$us103$i$lcssa$lcssa;$z$3$lcssa$lcssa$i = $z$3$us106$i$lcssa$lcssa;
        }
        $578 = (($rp$2$ph45$i) + 9)|0;
        $579 = (($a$2$ph47$i) + 127)|0;
        $580 = $579 & 127;
        $581 = ($580|0)==($z$3$lcssa$lcssa$i|0);
        if ($581) {
         $582 = (($z$3$lcssa$lcssa$i) + 127)|0;
         $583 = $582 & 127;
         $584 = (($x$i) + ($583<<2)|0);
         $585 = HEAP32[$584>>2]|0;
         $586 = (($z$3$lcssa$lcssa$i) + 126)|0;
         $587 = $586 & 127;
         $588 = (($x$i) + ($587<<2)|0);
         $589 = HEAP32[$588>>2]|0;
         $590 = $589 | $585;
         HEAP32[$588>>2] = $590;
         $z$4$i = $583;
        } else {
         $z$4$i = $z$3$lcssa$lcssa$i;
        }
        $591 = (($x$i) + ($580<<2)|0);
        HEAP32[$591>>2] = $carry1$1$lcssa$lcssa$i;
        $a$2$ph47$i = $580;$e2$0$ph$i = $$lcssa59$i;$rp$2$ph45$i = $578;$z$1$ph46$i = $z$4$i;
       }
       if ((label|0) == 235) {
        $a$2$ph47$i220 = $a$2$ph47$i$lcssa219;$e2$1$ph$i$ph = $e2$0$us93$i$lcssa;$rp$3$ph43$i$ph = 18;$z$5$ph$i$ph = $z$1$us94$i$lcssa;
       }
       else if ((label|0) == 236) {
        $a$2$ph47$i220 = $a$2$ph47$i$lcssa;$e2$1$ph$i$ph = $e2$0$ph$i$lcssa;$rp$3$ph43$i$ph = $rp$2$ph45$i$lcssa;$z$5$ph$i$ph = $z$1$ph46$i$lcssa;
       }
       $a$3$ph$i = $a$2$ph47$i220;$e2$1$ph$i = $e2$1$ph$i$ph;$rp$3$ph43$i = $rp$3$ph43$i$ph;$z$5$ph$i = $z$5$ph$i$ph;
       L362: while(1) {
        $622 = (($z$5$ph$i) + 1)|0;
        $619 = $622 & 127;
        $623 = (($z$5$ph$i) + 127)|0;
        $624 = $623 & 127;
        $625 = (($x$i) + ($624<<2)|0);
        $a$3$i$ph = $a$3$ph$i;$e2$1$i$ph = $e2$1$ph$i;$rp$3$i$ph = $rp$3$ph43$i;
        while(1) {
         $$old$i = ($rp$3$i$ph|0)==(18);
         $626 = ($rp$3$i$ph|0)>(27);
         $$21$i = $626 ? 9 : 1;
         $a$3$i = $a$3$i$ph;$e2$1$i = $e2$1$i$ph;
         while(1) {
          $592 = $a$3$i & 127;
          $593 = ($592|0)==($z$5$ph$i|0);
          do {
           if ($593) {
            label = 254;
           } else {
            $594 = (($x$i) + ($592<<2)|0);
            $595 = HEAP32[$594>>2]|0;
            $596 = ($595>>>0)<(9007199);
            if ($596) {
             label = 254;
             break;
            }
            $597 = ($595>>>0)>(9007199);
            if ($597) {
             break;
            }
            $598 = (($a$3$i) + 1)|0;
            $599 = $598 & 127;
            $600 = ($599|0)==($z$5$ph$i|0);
            if ($600) {
             label = 254;
             break;
            }
            $706 = (($x$i) + ($599<<2)|0);
            $707 = HEAP32[$706>>2]|0;
            $708 = ($707>>>0)<(254740991);
            if ($708) {
             label = 254;
             break;
            }
            $709 = ($707>>>0)<(254740992);
            $or$cond192$i = $$old$i & $709;
            if ($or$cond192$i) {
             $$lcssa201 = $592;$a$3$i$lcssa = $a$3$i;$e2$1$i$lcssa = $e2$1$i;$z$5$ph$i$lcssa = $z$5$ph$i;
             label = 267;
             break L362;
            }
           }
          } while(0);
          if ((label|0) == 254) {
           label = 0;
           if ($$old$i) {
            $$lcssa202 = $592;$$lcssa205 = $593;$$lcssa211 = $619;$a$3$i$lcssa198 = $a$3$i;$e2$1$i$lcssa195 = $e2$1$i;$z$5$ph$i$lcssa209 = $z$5$ph$i;
            label = 255;
            break L362;
           }
          }
          $601 = (($$21$i) + ($e2$1$i))|0;
          $602 = ($a$3$i|0)==($z$5$ph$i|0);
          if ($602) {
           $a$3$i = $z$5$ph$i;$e2$1$i = $601;
          } else {
           $$lcssa207 = $601;$a$3$i$lcssa199 = $a$3$i;
           break;
          }
         }
         $603 = 1 << $$21$i;
         $604 = (($603) + -1)|0;
         $605 = 1000000000 >>> $$21$i;
         $a$487$i = $a$3$i$lcssa199;$carry3$090$i = 0;$k$688$i = $a$3$i$lcssa199;$rp$486$i = $rp$3$i$ph;
         while(1) {
          $606 = (($x$i) + ($k$688$i<<2)|0);
          $607 = HEAP32[$606>>2]|0;
          $608 = $607 & $604;
          $609 = $607 >>> $$21$i;
          $610 = (($609) + ($carry3$090$i))|0;
          HEAP32[$606>>2] = $610;
          $611 = Math_imul($608, $605)|0;
          $612 = ($k$688$i|0)==($a$487$i|0);
          $613 = ($610|0)==(0);
          $or$cond22$i = $612 & $613;
          $614 = (($k$688$i) + 1)|0;
          $615 = $614 & 127;
          $616 = (($rp$486$i) + -9)|0;
          $rp$5$i = $or$cond22$i ? $616 : $rp$486$i;
          $a$5$i = $or$cond22$i ? $615 : $a$487$i;
          $617 = ($615|0)==($z$5$ph$i|0);
          if ($617) {
           $$lcssa208 = $611;$a$5$i$lcssa = $a$5$i;$rp$5$i$lcssa = $rp$5$i;
           break;
          } else {
           $a$487$i = $a$5$i;$carry3$090$i = $611;$k$688$i = $615;$rp$486$i = $rp$5$i;
          }
         }
         $618 = ($$lcssa208|0)==(0);
         if (!($618)) {
          $620 = ($619|0)==($a$5$i$lcssa|0);
          if (!($620)) {
           $$lcssa207$lcssa = $$lcssa207;$$lcssa208$lcssa = $$lcssa208;$a$5$i$lcssa$lcssa = $a$5$i$lcssa;$rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
           break;
          }
          $627 = HEAP32[$625>>2]|0;
          $628 = $627 | 1;
          HEAP32[$625>>2] = $628;
         }
         $a$3$i$ph = $a$5$i$lcssa;$e2$1$i$ph = $$lcssa207;$rp$3$i$ph = $rp$5$i$lcssa;
        }
        $621 = (($x$i) + ($z$5$ph$i<<2)|0);
        HEAP32[$621>>2] = $$lcssa208$lcssa;
        $a$3$ph$i = $a$5$i$lcssa$lcssa;$e2$1$ph$i = $$lcssa207$lcssa;$rp$3$ph43$i = $rp$5$i$lcssa$lcssa;$z$5$ph$i = $619;
       }
       if ((label|0) == 255) {
        if ($$lcssa205) {
         $629 = (($$lcssa211) + -1)|0;
         $630 = (($x$i) + ($629<<2)|0);
         HEAP32[$630>>2] = 0;
         $632 = $z$5$ph$i$lcssa209;$a$3$i200 = $a$3$i$lcssa198;$e2$1$i197 = $e2$1$i$lcssa195;$z$7$i = $$lcssa211;
        } else {
         $632 = $$lcssa202;$a$3$i200 = $a$3$i$lcssa198;$e2$1$i197 = $e2$1$i$lcssa195;$z$7$i = $z$5$ph$i$lcssa209;
        }
       }
       else if ((label|0) == 267) {
        $632 = $$lcssa201;$a$3$i200 = $a$3$i$lcssa;$e2$1$i197 = $e2$1$i$lcssa;$z$7$i = $z$5$ph$i$lcssa;
       }
       $631 = (($x$i) + ($632<<2)|0);
       $633 = HEAP32[$631>>2]|0;
       $634 = (+($633>>>0));
       $635 = (($a$3$i200) + 1)|0;
       $636 = $635 & 127;
       $637 = ($636|0)==($z$7$i|0);
       if ($637) {
        $696 = (($z$7$i) + 1)|0;
        $697 = $696 & 127;
        $698 = (($697) + -1)|0;
        $699 = (($x$i) + ($698<<2)|0);
        HEAP32[$699>>2] = 0;
        $z$7$1$i = $697;
       } else {
        $z$7$1$i = $z$7$i;
       }
       $700 = $634 * 1.0E+9;
       $701 = (($x$i) + ($636<<2)|0);
       $702 = HEAP32[$701>>2]|0;
       $703 = (+($702>>>0));
       $704 = $700 + $703;
       $661 = (+($sign$0|0));
       $643 = $661 * $704;
       $681 = (($e2$1$i197) + 53)|0;
       $638 = (($681) - ($emin$0$ph))|0;
       $705 = ($638|0)<($bits$0$ph|0);
       if ($705) {
        $639 = ($638|0)<(0);
        if ($639) {
         $$01335$i = 0;$denormal$034$i = 1;
         label = 271;
        } else {
         $$013$i = $638;$denormal$0$i = 1;
         label = 270;
        }
       } else {
        $$013$i = $bits$0$ph;$denormal$0$i = 0;
        label = 270;
       }
       if ((label|0) == 270) {
        $640 = ($$013$i|0)<(53);
        if ($640) {
         $$01335$i = $$013$i;$denormal$034$i = $denormal$0$i;
         label = 271;
        } else {
         $$01336$i = $$013$i;$bias$0$i24 = 0.0;$denormal$033$i = $denormal$0$i;$frac$0$i = 0.0;$y$1$i23 = $643;
        }
       }
       if ((label|0) == 271) {
        $641 = (105 - ($$01335$i))|0;
        $642 = (+_scalbn(1.0,$641));
        $644 = (+_copysignl($642,$643));
        $645 = (53 - ($$01335$i))|0;
        $646 = (+_scalbn(1.0,$645));
        $647 = (+_fmodl($643,$646));
        $648 = $643 - $647;
        $649 = $644 + $648;
        $$01336$i = $$01335$i;$bias$0$i24 = $644;$denormal$033$i = $denormal$034$i;$frac$0$i = $647;$y$1$i23 = $649;
       }
       $650 = (($a$3$i200) + 2)|0;
       $651 = $650 & 127;
       $652 = ($651|0)==($z$7$1$i|0);
       do {
        if ($652) {
         $frac$2$i = $frac$0$i;
        } else {
         $653 = (($x$i) + ($651<<2)|0);
         $654 = HEAP32[$653>>2]|0;
         $655 = ($654>>>0)<(500000000);
         do {
          if ($655) {
           $656 = ($654|0)==(0);
           if ($656) {
            $657 = (($a$3$i200) + 3)|0;
            $658 = $657 & 127;
            $659 = ($658|0)==($z$7$1$i|0);
            if ($659) {
             $frac$1$i = $frac$0$i;
             break;
            }
           }
           $660 = $661 * 0.25;
           $662 = $660 + $frac$0$i;
           $frac$1$i = $662;
          } else {
           $663 = ($654>>>0)>(500000000);
           if ($663) {
            $664 = $661 * 0.75;
            $665 = $664 + $frac$0$i;
            $frac$1$i = $665;
            break;
           }
           $666 = (($a$3$i200) + 3)|0;
           $667 = $666 & 127;
           $668 = ($667|0)==($z$7$1$i|0);
           if ($668) {
            $669 = $661 * 0.5;
            $670 = $669 + $frac$0$i;
            $frac$1$i = $670;
            break;
           } else {
            $671 = $661 * 0.75;
            $672 = $671 + $frac$0$i;
            $frac$1$i = $672;
            break;
           }
          }
         } while(0);
         $673 = (53 - ($$01336$i))|0;
         $674 = ($673|0)>(1);
         if (!($674)) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $675 = (+_fmodl($frac$1$i,1.0));
         $676 = $675 != 0.0;
         if ($676) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $677 = $frac$1$i + 1.0;
         $frac$2$i = $677;
        }
       } while(0);
       $678 = $y$1$i23 + $frac$2$i;
       $679 = $678 - $bias$0$i24;
       $680 = $681 & 2147483647;
       $682 = (-2 - ($sum$i))|0;
       $683 = ($680|0)>($682|0);
       do {
        if ($683) {
         $684 = (+Math_abs((+$679)));
         $685 = !($684 >= 9007199254740992.0);
         if ($685) {
          $denormal$2$i = $denormal$033$i;$e2$2$i = $e2$1$i197;$y$2$i25 = $679;
         } else {
          $686 = ($denormal$033$i|0)!=(0);
          $687 = ($$01336$i|0)==($638|0);
          $or$cond23$i = $687 & $686;
          $denormal$1$i = $or$cond23$i ? 0 : $denormal$033$i;
          $688 = $679 * 0.5;
          $689 = (($e2$1$i197) + 1)|0;
          $denormal$2$i = $denormal$1$i;$e2$2$i = $689;$y$2$i25 = $688;
         }
         $690 = (($e2$2$i) + 50)|0;
         $691 = ($690|0)>($324|0);
         if (!($691)) {
          $692 = ($denormal$2$i|0)!=(0);
          $693 = $frac$2$i != 0.0;
          $or$cond9$i26 = $693 & $692;
          if (!($or$cond9$i26)) {
           $e2$3$i = $e2$2$i;$y$3$i = $y$2$i25;
           break;
          }
         }
         $694 = (___errno_location()|0);
         HEAP32[$694>>2] = 34;
         $e2$3$i = $e2$2$i;$y$3$i = $y$2$i25;
        } else {
         $e2$3$i = $e2$1$i197;$y$3$i = $679;
        }
       } while(0);
       $695 = (+_scalbnl($y$3$i,$e2$3$i));
       $$0$i27 = $695;
      }
     } while(0);
     $$0 = $$0$i27;
     STACKTOP = sp;return (+$$0);
    }
   } while(0);
   $103 = HEAP32[$1>>2]|0;
   $104 = ($103|0)==(0|0);
   if (!($104)) {
    $105 = HEAP32[$0>>2]|0;
    $106 = (($105) + -1|0);
    HEAP32[$0>>2] = $106;
   }
   $107 = (___errno_location()|0);
   HEAP32[$107>>2] = 22;
   ___shlim($f,0);
   $$0 = 0.0;
   STACKTOP = sp;return (+$$0);
  }
 } while(0);
 if ((label|0) == 23) {
  $41 = HEAP32[$1>>2]|0;
  $42 = ($41|0)==(0|0);
  if (!($42)) {
   $43 = HEAP32[$0>>2]|0;
   $44 = (($43) + -1|0);
   HEAP32[$0>>2] = $44;
  }
  $notlhs = ($pok|0)==(0);
  $notrhs = ($i$0$lcssa>>>0)<(4);
  $or$cond9$not = $notrhs | $notlhs;
  $brmerge = $or$cond9$not | $42;
  if (!($brmerge)) {
   $i$1 = $i$0$lcssa;
   while(1) {
    $45 = HEAP32[$0>>2]|0;
    $46 = (($45) + -1|0);
    HEAP32[$0>>2] = $46;
    $47 = (($i$1) + -1)|0;
    $$old8 = ($47>>>0)>(3);
    if ($$old8) {
     $i$1 = $47;
    } else {
     break;
    }
   }
  }
 }
 $48 = (+($sign$0|0));
 $49 = $48 * inf;
 $50 = $49;
 $$0 = $50;
 STACKTOP = sp;return (+$$0);
}
function ___shlim($f,$lim) {
 $f = $f|0;
 $lim = $lim|0;
 var $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 104|0);
 HEAP32[$0>>2] = $lim;
 $1 = (($f) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($f) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($f) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($lim|0)!=(0);
 $10 = ($7|0)>($lim|0);
 $or$cond = $9 & $10;
 if (!($or$cond)) {
  $$sink = $2;
  $12 = (($f) + 100|0);
  HEAP32[$12>>2] = $$sink;
  return;
 }
 $11 = (($4) + ($lim)|0);
 $$sink = $11;
 $12 = (($f) + 100|0);
 HEAP32[$12>>2] = $$sink;
 return;
}
function ___shgetc($f) {
 $f = $f|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert2 = 0, $$pre = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 104|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  label = 3;
 } else {
  $3 = (($f) + 108|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)<($1|0);
  if ($5) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $6 = (___uflow($f)|0);
  $7 = ($6|0)<(0);
  if (!($7)) {
   $9 = HEAP32[$0>>2]|0;
   $10 = ($9|0)==(0);
   $$phi$trans$insert = (($f) + 8|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   if ($10) {
    label = 8;
   } else {
    $11 = (($f) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $$pre;
    $14 = $12;
    $15 = (($13) - ($14))|0;
    $16 = (($f) + 108|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = (($9) - ($17))|0;
    $19 = (($18) + -1)|0;
    $20 = ($15|0)>($19|0);
    if ($20) {
     $21 = (($12) + ($19)|0);
     $22 = (($f) + 100|0);
     HEAP32[$22>>2] = $21;
    } else {
     label = 8;
    }
   }
   if ((label|0) == 8) {
    $23 = (($f) + 100|0);
    HEAP32[$23>>2] = $$pre;
   }
   $24 = ($$pre|0)==(0|0);
   $$phi$trans$insert2 = (($f) + 4|0);
   $$pre3 = HEAP32[$$phi$trans$insert2>>2]|0;
   if (!($24)) {
    $25 = $$pre;
    $26 = $$pre3;
    $27 = (($f) + 108|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = (($25) + 1)|0;
    $30 = (($29) - ($26))|0;
    $31 = (($30) + ($28))|0;
    HEAP32[$27>>2] = $31;
   }
   $32 = (($$pre3) + -1|0);
   $33 = HEAP8[$32>>0]|0;
   $34 = $33&255;
   $35 = ($34|0)==($6|0);
   if ($35) {
    $$0 = $6;
    return ($$0|0);
   }
   $36 = $6&255;
   HEAP8[$32>>0] = $36;
   $$0 = $6;
   return ($$0|0);
  }
 }
 $8 = (($f) + 100|0);
 HEAP32[$8>>2] = 0;
 $$0 = -1;
 return ($$0|0);
}
function _copysign($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $1 & 2147483647;
 $5 = $3 & -2147483648;
 $6 = $5 | $4;
 HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $6;$7 = +HEAPF64[tempDoublePtr>>3];
 return (+$7);
}
function _copysignl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_copysign($x,$y));
 return (+$0);
}
function _fmod($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa49 = 0, $$lcssa51 = 0, $$lcssa53 = 0, $$lcssa54 = 0, $$lcssa55 = 0, $$lcssa7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0, $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $5 = tempRet0;
 $6 = $4 & 2047;
 $7 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $8 = tempRet0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = (_bitshift64Shl(($2|0),($3|0),1)|0);
 $12 = tempRet0;
 $13 = ($11|0)==(0);
 $14 = ($12|0)==(0);
 $15 = $13 & $14;
 if (!($15)) {
  $16 = $3 & 2147483647;
  $17 = ($16>>>0)>(2146435072);
  $18 = ($2>>>0)>(0);
  $19 = ($16|0)==(2146435072);
  $20 = $19 & $18;
  $21 = $17 | $20;
  $22 = ($6|0)==(2047);
  $or$cond = $21 | $22;
  if (!($or$cond)) {
   $25 = (_bitshift64Shl(($0|0),($1|0),1)|0);
   $26 = tempRet0;
   $27 = ($26>>>0)>($12>>>0);
   $28 = ($25>>>0)>($11>>>0);
   $29 = ($26|0)==($12|0);
   $30 = $29 & $28;
   $31 = $27 | $30;
   if (!($31)) {
    $32 = ($25|0)==($11|0);
    $33 = ($26|0)==($12|0);
    $34 = $32 & $33;
    if (!($34)) {
     $$0 = $x;
     return (+$$0);
    }
    $35 = $x * 0.0;
    $$0 = $35;
    return (+$$0);
   }
   $36 = ($6|0)==(0);
   if ($36) {
    $37 = (_bitshift64Shl(($0|0),($1|0),12)|0);
    $38 = tempRet0;
    $39 = ($38|0)>(-1);
    $40 = ($37>>>0)>(4294967295);
    $41 = ($38|0)==(-1);
    $42 = $41 & $40;
    $43 = $39 | $42;
    if ($43) {
     $45 = $37;$46 = $38;$ex$026 = 0;
     while(1) {
      $44 = (($ex$026) + -1)|0;
      $47 = (_bitshift64Shl(($45|0),($46|0),1)|0);
      $48 = tempRet0;
      $49 = ($48|0)>(-1);
      $50 = ($47>>>0)>(4294967295);
      $51 = ($48|0)==(-1);
      $52 = $51 & $50;
      $53 = $49 | $52;
      if ($53) {
       $45 = $47;$46 = $48;$ex$026 = $44;
      } else {
       $$lcssa55 = $44;
       break;
      }
     }
     $ex$0$lcssa = $$lcssa55;
    } else {
     $ex$0$lcssa = 0;
    }
    $54 = (1 - ($ex$0$lcssa))|0;
    $55 = (_bitshift64Shl(($0|0),($1|0),($54|0))|0);
    $56 = tempRet0;
    $83 = $55;$84 = $56;$ex$1 = $ex$0$lcssa;
   } else {
    $57 = $1 & 1048575;
    $58 = $57 | 1048576;
    $83 = $0;$84 = $58;$ex$1 = $6;
   }
   $59 = ($9|0)==(0);
   if ($59) {
    $60 = (_bitshift64Shl(($2|0),($3|0),12)|0);
    $61 = tempRet0;
    $62 = ($61|0)>(-1);
    $63 = ($60>>>0)>(4294967295);
    $64 = ($61|0)==(-1);
    $65 = $64 & $63;
    $66 = $62 | $65;
    if ($66) {
     $68 = $60;$69 = $61;$ey$020 = 0;
     while(1) {
      $67 = (($ey$020) + -1)|0;
      $70 = (_bitshift64Shl(($68|0),($69|0),1)|0);
      $71 = tempRet0;
      $72 = ($71|0)>(-1);
      $73 = ($70>>>0)>(4294967295);
      $74 = ($71|0)==(-1);
      $75 = $74 & $73;
      $76 = $72 | $75;
      if ($76) {
       $68 = $70;$69 = $71;$ey$020 = $67;
      } else {
       $$lcssa54 = $67;
       break;
      }
     }
     $ey$0$lcssa = $$lcssa54;
    } else {
     $ey$0$lcssa = 0;
    }
    $77 = (1 - ($ey$0$lcssa))|0;
    $78 = (_bitshift64Shl(($2|0),($3|0),($77|0))|0);
    $79 = tempRet0;
    $85 = $78;$86 = $79;$ey$1$ph = $ey$0$lcssa;
   } else {
    $80 = $3 & 1048575;
    $81 = $80 | 1048576;
    $85 = $2;$86 = $81;$ey$1$ph = $9;
   }
   $82 = ($ex$1|0)>($ey$1$ph|0);
   $87 = (_i64Subtract(($83|0),($84|0),($85|0),($86|0))|0);
   $88 = tempRet0;
   $89 = ($88|0)>(-1);
   $90 = ($87>>>0)>(4294967295);
   $91 = ($88|0)==(-1);
   $92 = $91 & $90;
   $93 = $89 | $92;
   do {
    if ($82) {
     $154 = $93;$155 = $87;$156 = $88;$94 = $83;$96 = $84;$ex$212 = $ex$1;
     while(1) {
      if ($154) {
       $95 = ($94|0)==($85|0);
       $97 = ($96|0)==($86|0);
       $98 = $95 & $97;
       if ($98) {
        break;
       } else {
        $100 = $155;$101 = $156;
       }
      } else {
       $100 = $94;$101 = $96;
      }
      $102 = (_bitshift64Shl(($100|0),($101|0),1)|0);
      $103 = tempRet0;
      $104 = (($ex$212) + -1)|0;
      $105 = ($104|0)>($ey$1$ph|0);
      $106 = (_i64Subtract(($102|0),($103|0),($85|0),($86|0))|0);
      $107 = tempRet0;
      $108 = ($107|0)>(-1);
      $109 = ($106>>>0)>(4294967295);
      $110 = ($107|0)==(-1);
      $111 = $110 & $109;
      $112 = $108 | $111;
      if ($105) {
       $154 = $112;$155 = $106;$156 = $107;$94 = $102;$96 = $103;$ex$212 = $104;
      } else {
       $$lcssa51 = $104;$$lcssa53 = $112;$157 = $106;$158 = $107;$159 = $102;$160 = $103;
       label = 27;
       break;
      }
     }
     if ((label|0) == 27) {
      $$lcssa7 = $$lcssa53;$113 = $159;$115 = $160;$152 = $157;$153 = $158;$ex$2$lcssa = $$lcssa51;
      break;
     }
     $99 = $x * 0.0;
     $$0 = $99;
     return (+$$0);
    } else {
     $$lcssa7 = $93;$113 = $83;$115 = $84;$152 = $87;$153 = $88;$ex$2$lcssa = $ex$1;
    }
   } while(0);
   if ($$lcssa7) {
    $114 = ($113|0)==($85|0);
    $116 = ($115|0)==($86|0);
    $117 = $114 & $116;
    if ($117) {
     $125 = $x * 0.0;
     $$0 = $125;
     return (+$$0);
    } else {
     $118 = $153;$120 = $152;
    }
   } else {
    $118 = $115;$120 = $113;
   }
   $119 = ($118>>>0)<(1048576);
   $121 = ($120>>>0)<(0);
   $122 = ($118|0)==(1048576);
   $123 = $122 & $121;
   $124 = $119 | $123;
   if ($124) {
    $126 = $120;$127 = $118;$ex$39 = $ex$2$lcssa;
    while(1) {
     $128 = (_bitshift64Shl(($126|0),($127|0),1)|0);
     $129 = tempRet0;
     $130 = (($ex$39) + -1)|0;
     $131 = ($129>>>0)<(1048576);
     $132 = ($128>>>0)<(0);
     $133 = ($129|0)==(1048576);
     $134 = $133 & $132;
     $135 = $131 | $134;
     if ($135) {
      $126 = $128;$127 = $129;$ex$39 = $130;
     } else {
      $$lcssa49 = $130;$161 = $128;$162 = $129;
      break;
     }
    }
    $137 = $161;$138 = $162;$ex$3$lcssa = $$lcssa49;
   } else {
    $137 = $120;$138 = $118;$ex$3$lcssa = $ex$2$lcssa;
   }
   $136 = ($ex$3$lcssa|0)>(0);
   if ($136) {
    $139 = (_i64Add(($137|0),($138|0),0,-1048576)|0);
    $140 = tempRet0;
    $141 = (_bitshift64Shl(($ex$3$lcssa|0),0,52)|0);
    $142 = tempRet0;
    $143 = $139 | $141;
    $144 = $140 | $142;
    $149 = $144;$151 = $143;
   } else {
    $145 = (1 - ($ex$3$lcssa))|0;
    $146 = (_bitshift64Lshr(($137|0),($138|0),($145|0))|0);
    $147 = tempRet0;
    $149 = $147;$151 = $146;
   }
   $148 = $149 | $10;
   HEAP32[tempDoublePtr>>2] = $151;HEAP32[tempDoublePtr+4>>2] = $148;$150 = +HEAPF64[tempDoublePtr>>3];
   $$0 = $150;
   return (+$$0);
  }
 }
 $23 = $x * $y;
 $24 = $23 / $23;
 $$0 = $24;
 return (+$$0);
}
function _fmodl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_fmod($x,$y));
 return (+$0);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 if ((($4|0) == 2047)) {
  $$0 = $x;
  return (+$$0);
 } else if ((($4|0) == 0)) {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  return (+$$0);
 } else {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
  return (+$$0);
 }
 return +(0.0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_frexp($x,$e));
 return (+$0);
}
function _scalbn($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)>(1023);
 if ($0) {
  $1 = $x * 8.9884656743115795E+307;
  $2 = (($n) + -1023)|0;
  $3 = ($2|0)>(1023);
  if ($3) {
   $4 = $1 * 8.9884656743115795E+307;
   $5 = (($n) + -2046)|0;
   $6 = ($5|0)>(1023);
   $$ = $6 ? 1023 : $5;
   $$0 = $$;$y$0 = $4;
  } else {
   $$0 = $2;$y$0 = $1;
  }
 } else {
  $7 = ($n|0)<(-1022);
  if ($7) {
   $8 = $x * 2.2250738585072014E-308;
   $9 = (($n) + 1022)|0;
   $10 = ($9|0)<(-1022);
   if ($10) {
    $11 = $8 * 2.2250738585072014E-308;
    $12 = (($n) + 2044)|0;
    $13 = ($12|0)<(-1022);
    $$1 = $13 ? -1022 : $12;
    $$0 = $$1;$y$0 = $11;
   } else {
    $$0 = $9;$y$0 = $8;
   }
  } else {
   $$0 = $n;$y$0 = $x;
  }
 }
 $14 = (($$0) + 1023)|0;
 $15 = (_bitshift64Shl(($14|0),0,52)|0);
 $16 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $15;HEAP32[tempDoublePtr+4>>2] = $16;$17 = +HEAPF64[tempDoublePtr>>3];
 $18 = $y$0 * $17;
 return (+$18);
}
function _scalbnl($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_scalbn($x,$n));
 return (+$0);
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 0;
 } else {
  $1 = (_wcrtomb($s,$wc,0)|0);
  $$0 = $1;
 }
 return ($$0|0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 1;
  return ($$0|0);
 }
 $1 = ($wc>>>0)<(128);
 if ($1) {
  $2 = $wc&255;
  HEAP8[$s>>0] = $2;
  $$0 = 1;
  return ($$0|0);
 }
 $3 = ($wc>>>0)<(2048);
 if ($3) {
  $4 = $wc >>> 6;
  $5 = $4 | 192;
  $6 = $5&255;
  $7 = (($s) + 1|0);
  HEAP8[$s>>0] = $6;
  $8 = $wc & 63;
  $9 = $8 | 128;
  $10 = $9&255;
  HEAP8[$7>>0] = $10;
  $$0 = 2;
  return ($$0|0);
 }
 $11 = ($wc>>>0)<(55296);
 $12 = $wc & -8192;
 $13 = ($12|0)==(57344);
 $or$cond = $11 | $13;
 if ($or$cond) {
  $14 = $wc >>> 12;
  $15 = $14 | 224;
  $16 = $15&255;
  $17 = (($s) + 1|0);
  HEAP8[$s>>0] = $16;
  $18 = $wc >>> 6;
  $19 = $18 & 63;
  $20 = $19 | 128;
  $21 = $20&255;
  $22 = (($s) + 2|0);
  HEAP8[$17>>0] = $21;
  $23 = $wc & 63;
  $24 = $23 | 128;
  $25 = $24&255;
  HEAP8[$22>>0] = $25;
  $$0 = 3;
  return ($$0|0);
 }
 $26 = (($wc) + -65536)|0;
 $27 = ($26>>>0)<(1048576);
 if ($27) {
  $28 = $wc >>> 18;
  $29 = $28 | 240;
  $30 = $29&255;
  $31 = (($s) + 1|0);
  HEAP8[$s>>0] = $30;
  $32 = $wc >>> 12;
  $33 = $32 & 63;
  $34 = $33 | 128;
  $35 = $34&255;
  $36 = (($s) + 2|0);
  HEAP8[$31>>0] = $35;
  $37 = $wc >>> 6;
  $38 = $37 & 63;
  $39 = $38 | 128;
  $40 = $39&255;
  $41 = (($s) + 3|0);
  HEAP8[$36>>0] = $40;
  $42 = $wc & 63;
  $43 = $42 | 128;
  $44 = $43&255;
  HEAP8[$41>>0] = $44;
  $$0 = 4;
  return ($$0|0);
 } else {
  $45 = (___errno_location()|0);
  HEAP32[$45>>2] = 84;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___toread($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = (($f) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($f) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $11 = (($f) + 36|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiii[$12 & 1023]($f,0,0)|0);
 }
 $13 = (($f) + 16|0);
 HEAP32[$13>>2] = 0;
 $14 = (($f) + 28|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$6>>2] = 0;
 $15 = HEAP32[$f>>2]|0;
 $16 = $15 & 20;
 $17 = ($16|0)==(0);
 if ($17) {
  $21 = HEAP32[$8>>2]|0;
  $22 = (($f) + 8|0);
  HEAP32[$22>>2] = $21;
  $23 = (($f) + 4|0);
  HEAP32[$23>>2] = $21;
  $$0 = 0;
  return ($$0|0);
 }
 $18 = $15 & 4;
 $19 = ($18|0)==(0);
 if ($19) {
  $$0 = -1;
  return ($$0|0);
 }
 $20 = $15 | 32;
 HEAP32[$f>>2] = $20;
 $$0 = -1;
 return ($$0|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = HEAP32[$f>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = (($f) + 8|0);
  HEAP32[$10>>2] = 0;
  $11 = (($f) + 4|0);
  HEAP32[$11>>2] = 0;
  $12 = (($f) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($f) + 28|0);
  HEAP32[$14>>2] = $13;
  $15 = (($f) + 20|0);
  HEAP32[$15>>2] = $13;
  $16 = (($f) + 48|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = (($13) + ($17)|0);
  $19 = (($f) + 16|0);
  HEAP32[$19>>2] = $18;
  $$0 = 0;
  return ($$0|0);
 } else {
  $9 = $6 | 32;
  HEAP32[$f>>2] = $9;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___uflow($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $c = sp;
 $0 = (($f) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___toread($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $$0 = -1;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $5 = (($f) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (FUNCTION_TABLE_iiii[$6 & 1023]($f,$c,1)|0);
  $8 = ($7|0)==(1);
  if ($8) {
   $9 = HEAP8[$c>>0]|0;
   $10 = $9&255;
   $$0 = $10;
  } else {
   $$0 = -1;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa8 = 0;
 var $i$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   $3 = (___towrite($f)|0);
   $4 = ($3|0)==(0);
   if ($4) {
    $$pre = HEAP32[$0>>2]|0;
    $7 = $$pre;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $7 = $1;
  }
 } while(0);
 $5 = (($f) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $8 = $7;
 $9 = $6;
 $10 = (($8) - ($9))|0;
 $11 = ($10>>>0)<($l>>>0);
 if ($11) {
  $12 = (($f) + 36|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_iiii[$13 & 1023]($f,$s,$l)|0);
  $$0 = $14;
  return ($$0|0);
 }
 $15 = (($f) + 75|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)>(-1);
 do {
  if ($17) {
   $i$0 = $l;
   while(1) {
    $18 = ($i$0|0)==(0);
    if ($18) {
     label = 12;
     break;
    }
    $19 = (($i$0) + -1)|0;
    $20 = (($s) + ($19)|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = ($21<<24>>24)==(10);
    if ($22) {
     $i$0$lcssa8 = $i$0;
     break;
    } else {
     $i$0 = $19;
    }
   }
   if ((label|0) == 12) {
    $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
    break;
   }
   $23 = (($f) + 36|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (FUNCTION_TABLE_iiii[$24 & 1023]($f,$s,$i$0$lcssa8)|0);
   $26 = ($25>>>0)<($i$0$lcssa8>>>0);
   if ($26) {
    $$0 = $i$0$lcssa8;
    return ($$0|0);
   } else {
    $27 = (($s) + ($i$0$lcssa8)|0);
    $28 = (($l) - ($i$0$lcssa8))|0;
    $$pre6 = HEAP32[$5>>2]|0;
    $$01 = $28;$$02 = $27;$29 = $$pre6;$i$1 = $i$0$lcssa8;
    break;
   }
  } else {
   $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
  }
 } while(0);
 _memcpy(($29|0),($$02|0),($$01|0))|0;
 $30 = HEAP32[$5>>2]|0;
 $31 = (($30) + ($$01)|0);
 HEAP32[$5>>2] = $31;
 $32 = (($i$1) + ($$01))|0;
 $$0 = $32;
 return ($$0|0);
}
function _snprintf($s,$n,$fmt,$varargs) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsnprintf($s,$n,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _MUSL_vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $0 = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = (($f) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if ($4) {
  $6 = (($f) + 44|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$6>>2] = $internal_buf;
  $8 = (($f) + 28|0);
  HEAP32[$8>>2] = $internal_buf;
  $9 = (($f) + 20|0);
  HEAP32[$9>>2] = $internal_buf;
  HEAP32[$2>>2] = 80;
  $10 = (($internal_buf) + 80|0);
  $11 = (($f) + 16|0);
  HEAP32[$11>>2] = $10;
  $12 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $13 = ($7|0)==(0|0);
  if ($13) {
   $ret$1 = $12;
  } else {
   $14 = (($f) + 36|0);
   $15 = HEAP32[$14>>2]|0;
   (FUNCTION_TABLE_iiii[$15 & 1023]($f,0,0)|0);
   $16 = HEAP32[$9>>2]|0;
   $17 = ($16|0)==(0|0);
   $$ = $17 ? -1 : $12;
   HEAP32[$6>>2] = $7;
   HEAP32[$2>>2] = 0;
   HEAP32[$11>>2] = 0;
   HEAP32[$8>>2] = 0;
   HEAP32[$9>>2] = 0;
   $ret$1 = $$;
  }
 } else {
  $5 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $ret$1 = $5;
 }
 $$0 = $ret$1;
 STACKTOP = sp;return ($$0|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $b = sp + 112|0;
 $f = sp;
 dest=$f+0|0; src=4536+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $0 = (($n) + -1)|0;
 $1 = ($0>>>0)>(2147483646);
 if ($1) {
  $2 = ($n|0)==(0);
  if ($2) {
   $$01 = $b;$$02 = 1;
  } else {
   $3 = (___errno_location()|0);
   HEAP32[$3>>2] = 75;
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  $$01 = $s;$$02 = $n;
 }
 $4 = $$01;
 $5 = (-2 - ($4))|0;
 $6 = ($$02>>>0)>($5>>>0);
 $$$02 = $6 ? $5 : $$02;
 $7 = (($f) + 48|0);
 HEAP32[$7>>2] = $$$02;
 $8 = (($f) + 20|0);
 HEAP32[$8>>2] = $$01;
 $9 = (($f) + 44|0);
 HEAP32[$9>>2] = $$01;
 $10 = (($$01) + ($$$02)|0);
 $11 = (($f) + 16|0);
 HEAP32[$11>>2] = $10;
 $12 = (($f) + 28|0);
 HEAP32[$12>>2] = $10;
 $13 = (_MUSL_vfprintf($f,$fmt,$ap)|0);
 $14 = ($$$02|0)==(0);
 if ($14) {
  $$0 = $13;
  STACKTOP = sp;return ($$0|0);
 }
 $15 = HEAP32[$8>>2]|0;
 $16 = HEAP32[$11>>2]|0;
 $17 = ($15|0)==($16|0);
 $18 = $17 << 31 >> 31;
 $19 = (($15) + ($18)|0);
 HEAP8[$19>>0] = 0;
 $$0 = $13;
 STACKTOP = sp;return ($$0|0);
}
function _atof($s) {
 $s = $s|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_strtod($s,0));
 return (+$0);
}
function _strtod($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i = sp;
 dest=$f$i+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = (($f$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = (($f$i) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = (($f$i) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i,0);
 $4 = (+___floatscan($f$i,1,1));
 $5 = (($f$i) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)==(0);
 if ($14) {
  $16 = $s;
 } else {
  $15 = (($s) + ($12)|0);
  $16 = $15;
 }
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtold_l($s,$p,$loc) {
 $s = $s|0;
 $p = $p|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i$i = sp;
 dest=$f$i$i+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = (($f$i$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i$i) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = (($f$i$i) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = (($f$i$i) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i$i,0);
 $4 = (+___floatscan($f$i$i,2,1));
 $5 = (($f$i$i) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)==(0);
 if ($14) {
  $16 = $s;
 } else {
  $15 = (($s) + ($12)|0);
  $16 = $15;
 }
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtoull($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = (($f$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = (($s) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = (($f$i) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = (($f$i) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,-1,-1)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = $7;
  STACKTOP = sp;return ($6|0);
 }
 $9 = (($f$i) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = $7;
 STACKTOP = sp;return ($6|0);
}
function _strtoll($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = (($f$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = (($s) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = (($f$i) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = (($f$i) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,0,-2147483648)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = $7;
  STACKTOP = sp;return ($6|0);
 }
 $9 = (($f$i) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = $7;
 STACKTOP = sp;return ($6|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$019$lcssa = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$24$ph = 0, $$3 = 0, $$3$ph = 0, $$lcssa = 0, $$lcssa57 = 0, $$lcssa58 = 0, $$lcssa61 = 0, $$lcssa62 = 0, $$lcssa63 = 0, $0 = 0, $1 = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond18 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$020$lcssa = 0;
 var $s$15 = 0, $s$15$ph = 0, $s$2 = 0, $s$2$ph = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = $src;
 $2 = $1 & 3;
 $3 = ($2|0)!=(0);
 $4 = ($n|0)!=(0);
 $or$cond18 = $4 & $3;
 do {
  if ($or$cond18) {
   $5 = $c&255;
   $$019 = $n;$s$020 = $src;
   while(1) {
    $6 = HEAP8[$s$020>>0]|0;
    $7 = ($6<<24>>24)==($5<<24>>24);
    if ($7) {
     $$019$lcssa = $$019;$s$020$lcssa = $s$020;
     label = 7;
     break;
    }
    $8 = (($s$020) + 1|0);
    $9 = (($$019) + -1)|0;
    $10 = $8;
    $11 = $10 & 3;
    $12 = ($11|0)!=(0);
    $13 = ($9|0)!=(0);
    $or$cond = $13 & $12;
    if ($or$cond) {
     $$019 = $9;$s$020 = $8;
    } else {
     $$lcssa61 = $8;$$lcssa62 = $9;$$lcssa63 = $13;
     label = 5;
     break;
    }
   }
   if ((label|0) == 5) {
    $$0$lcssa = $$lcssa62;$$lcssa = $$lcssa63;$s$0$lcssa = $$lcssa61;
    label = 6;
    break;
   }
   else if ((label|0) == 7) {
    $$0$lcssa44 = $$019$lcssa;$s$0$lcssa43 = $s$020$lcssa;
    break;
   }
  } else {
   $$0$lcssa = $n;$$lcssa = $4;$s$0$lcssa = $src;
   label = 6;
  }
 } while(0);
 if ((label|0) == 6) {
  if ($$lcssa) {
   $$0$lcssa44 = $$0$lcssa;$s$0$lcssa43 = $s$0$lcssa;
  } else {
   $$3 = 0;$s$2 = $s$0$lcssa;
   $35 = ($$3|0)!=(0);
   $36 = $35 ? $s$2 : 0;
   return ($36|0);
  }
 }
 $14 = HEAP8[$s$0$lcssa43>>0]|0;
 $15 = $c&255;
 $16 = ($14<<24>>24)==($15<<24>>24);
 if ($16) {
  $$3 = $$0$lcssa44;$s$2 = $s$0$lcssa43;
  $35 = ($$3|0)!=(0);
  $36 = $35 ? $s$2 : 0;
  return ($36|0);
 }
 $17 = Math_imul($0, 16843009)|0;
 $18 = ($$0$lcssa44>>>0)>(3);
 do {
  if ($18) {
   $$110 = $$0$lcssa44;$w$011 = $s$0$lcssa43;
   while(1) {
    $19 = HEAP32[$w$011>>2]|0;
    $20 = $19 ^ $17;
    $21 = (($20) + -16843009)|0;
    $22 = $20 & -2139062144;
    $23 = $22 ^ -2139062144;
    $24 = $23 & $21;
    $25 = ($24|0)==(0);
    if (!($25)) {
     $$110$lcssa = $$110;$w$011$lcssa = $w$011;
     label = 12;
     break;
    }
    $26 = (($w$011) + 4|0);
    $27 = (($$110) + -4)|0;
    $28 = ($27>>>0)>(3);
    if ($28) {
     $$110 = $27;$w$011 = $26;
    } else {
     $$lcssa57 = $26;$$lcssa58 = $27;
     label = 14;
     break;
    }
   }
   if ((label|0) == 12) {
    $$24$ph = $$110$lcssa;$s$15$ph = $w$011$lcssa;
    break;
   }
   else if ((label|0) == 14) {
    $$1$lcssa = $$lcssa58;$w$0$lcssa = $$lcssa57;
    label = 15;
    break;
   }
  } else {
   $$1$lcssa = $$0$lcssa44;$w$0$lcssa = $s$0$lcssa43;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $29 = ($$1$lcssa|0)==(0);
  if ($29) {
   $$3 = 0;$s$2 = $w$0$lcssa;
   $35 = ($$3|0)!=(0);
   $36 = $35 ? $s$2 : 0;
   return ($36|0);
  } else {
   $$24$ph = $$1$lcssa;$s$15$ph = $w$0$lcssa;
  }
 }
 $$24 = $$24$ph;$s$15 = $s$15$ph;
 while(1) {
  $30 = HEAP8[$s$15>>0]|0;
  $31 = ($30<<24>>24)==($15<<24>>24);
  if ($31) {
   $$3$ph = $$24;$s$2$ph = $s$15;
   break;
  }
  $32 = (($s$15) + 1|0);
  $33 = (($$24) + -1)|0;
  $34 = ($33|0)==(0);
  if ($34) {
   $$3$ph = 0;$s$2$ph = $32;
   break;
  } else {
   $$24 = $33;$s$15 = $32;
  }
 }
 $$3 = $$3$ph;$s$2 = $s$2$ph;
 $35 = ($$3|0)!=(0);
 $36 = $35 ? $s$2 : 0;
 return ($36|0);
}
function _try_realloc_chunk($p,$nb) {
 $p = $p|0;
 $nb = $nb|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum2728 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum78 = 0;
 var $$sum910 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0;
 var $RP$0$ph = 0, $cond = 0, $newp$0 = 0, $notlhs = 0, $notrhs = 0, $or$cond$not = 0, $or$cond30 = 0, $storemerge = 0, $storemerge21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & -8;
 $3 = (($p) + ($2)|0);
 $4 = HEAP32[((3144 + 16|0))>>2]|0;
 $5 = $1 & 3;
 $notlhs = ($p>>>0)>=($4>>>0);
 $notrhs = ($5|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $6 = ($p>>>0)<($3>>>0);
 $or$cond30 = $or$cond$not & $6;
 if (!($or$cond30)) {
  _abort();
  // unreachable;
 }
 $$sum2728 = $2 | 4;
 $7 = (($p) + ($$sum2728)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 & 1;
 $10 = ($9|0)==(0);
 if ($10) {
  _abort();
  // unreachable;
 }
 $11 = ($5|0)==(0);
 if ($11) {
  $12 = ($nb>>>0)<(256);
  if ($12) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $13 = (($nb) + 4)|0;
  $14 = ($2>>>0)<($13>>>0);
  if (!($14)) {
   $15 = (($2) - ($nb))|0;
   $16 = HEAP32[((3616 + 8|0))>>2]|0;
   $17 = $16 << 1;
   $18 = ($15>>>0)>($17>>>0);
   if (!($18)) {
    $newp$0 = $p;
    return ($newp$0|0);
   }
  }
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $19 = ($2>>>0)<($nb>>>0);
 if (!($19)) {
  $20 = (($2) - ($nb))|0;
  $21 = ($20>>>0)>(15);
  if (!($21)) {
   $newp$0 = $p;
   return ($newp$0|0);
  }
  $22 = (($p) + ($nb)|0);
  $23 = $1 & 1;
  $24 = $23 | $nb;
  $25 = $24 | 2;
  HEAP32[$0>>2] = $25;
  $$sum23 = (($nb) + 4)|0;
  $26 = (($p) + ($$sum23)|0);
  $27 = $20 | 3;
  HEAP32[$26>>2] = $27;
  $28 = HEAP32[$7>>2]|0;
  $29 = $28 | 1;
  HEAP32[$7>>2] = $29;
  _dispose_chunk($22,$20);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $30 = HEAP32[((3144 + 24|0))>>2]|0;
 $31 = ($3|0)==($30|0);
 if ($31) {
  $32 = HEAP32[((3144 + 12|0))>>2]|0;
  $33 = (($32) + ($2))|0;
  $34 = ($33>>>0)>($nb>>>0);
  if (!($34)) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $35 = (($33) - ($nb))|0;
  $36 = (($p) + ($nb)|0);
  $37 = $1 & 1;
  $38 = $37 | $nb;
  $39 = $38 | 2;
  HEAP32[$0>>2] = $39;
  $$sum22 = (($nb) + 4)|0;
  $40 = (($p) + ($$sum22)|0);
  $41 = $35 | 1;
  HEAP32[$40>>2] = $41;
  HEAP32[((3144 + 24|0))>>2] = $36;
  HEAP32[((3144 + 12|0))>>2] = $35;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $42 = HEAP32[((3144 + 20|0))>>2]|0;
 $43 = ($3|0)==($42|0);
 if ($43) {
  $44 = HEAP32[((3144 + 8|0))>>2]|0;
  $45 = (($44) + ($2))|0;
  $46 = ($45>>>0)<($nb>>>0);
  if ($46) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $47 = (($45) - ($nb))|0;
  $48 = ($47>>>0)>(15);
  if ($48) {
   $49 = (($p) + ($nb)|0);
   $50 = (($p) + ($45)|0);
   $51 = $1 & 1;
   $52 = $51 | $nb;
   $53 = $52 | 2;
   HEAP32[$0>>2] = $53;
   $$sum19 = (($nb) + 4)|0;
   $54 = (($p) + ($$sum19)|0);
   $55 = $47 | 1;
   HEAP32[$54>>2] = $55;
   HEAP32[$50>>2] = $47;
   $$sum20 = (($45) + 4)|0;
   $56 = (($p) + ($$sum20)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = $57 & -2;
   HEAP32[$56>>2] = $58;
   $storemerge = $49;$storemerge21 = $47;
  } else {
   $59 = $1 & 1;
   $60 = $59 | $45;
   $61 = $60 | 2;
   HEAP32[$0>>2] = $61;
   $$sum17 = (($45) + 4)|0;
   $62 = (($p) + ($$sum17)|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = $63 | 1;
   HEAP32[$62>>2] = $64;
   $storemerge = 0;$storemerge21 = 0;
  }
  HEAP32[((3144 + 8|0))>>2] = $storemerge21;
  HEAP32[((3144 + 20|0))>>2] = $storemerge;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $65 = $8 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $67 = $8 & -8;
 $68 = (($67) + ($2))|0;
 $69 = ($68>>>0)<($nb>>>0);
 if ($69) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $70 = (($68) - ($nb))|0;
 $71 = $8 >>> 3;
 $72 = ($8>>>0)<(256);
 do {
  if ($72) {
   $$sum15 = (($2) + 8)|0;
   $73 = (($p) + ($$sum15)|0);
   $74 = HEAP32[$73>>2]|0;
   $$sum16 = (($2) + 12)|0;
   $75 = (($p) + ($$sum16)|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = $71 << 1;
   $78 = ((3144 + ($77<<2)|0) + 40|0);
   $79 = ($74|0)==($78|0);
   if (!($79)) {
    $80 = ($74>>>0)<($4>>>0);
    if ($80) {
     _abort();
     // unreachable;
    }
    $81 = (($74) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==($3|0);
    if (!($83)) {
     _abort();
     // unreachable;
    }
   }
   $84 = ($76|0)==($74|0);
   if ($84) {
    $85 = 1 << $71;
    $86 = $85 ^ -1;
    $87 = HEAP32[3144>>2]|0;
    $88 = $87 & $86;
    HEAP32[3144>>2] = $88;
    break;
   }
   $89 = ($76|0)==($78|0);
   if ($89) {
    $$pre = (($76) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $90 = ($76>>>0)<($4>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = (($76) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==($3|0);
    if ($93) {
     $$pre$phiZ2D = $91;
    } else {
     _abort();
     // unreachable;
    }
   }
   $94 = (($74) + 12|0);
   HEAP32[$94>>2] = $76;
   HEAP32[$$pre$phiZ2D>>2] = $74;
  } else {
   $$sum = (($2) + 24)|0;
   $95 = (($p) + ($$sum)|0);
   $96 = HEAP32[$95>>2]|0;
   $$sum2 = (($2) + 12)|0;
   $97 = (($p) + ($$sum2)|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ($98|0)==($3|0);
   do {
    if ($99) {
     $$sum4 = (($2) + 20)|0;
     $109 = (($p) + ($$sum4)|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $$sum3 = (($2) + 16)|0;
      $112 = (($p) + ($$sum3)|0);
      $113 = HEAP32[$112>>2]|0;
      $114 = ($113|0)==(0|0);
      if ($114) {
       $R$1 = 0;
       break;
      } else {
       $R$0$ph = $113;$RP$0$ph = $112;
      }
     } else {
      $R$0$ph = $110;$RP$0$ph = $109;
     }
     $R$0 = $R$0$ph;$RP$0 = $RP$0$ph;
     while(1) {
      $115 = (($R$0) + 20|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = ($116|0)==(0|0);
      if ($117) {
       $118 = (($R$0) + 16|0);
       $119 = HEAP32[$118>>2]|0;
       $120 = ($119|0)==(0|0);
       if ($120) {
        $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0$be = $119;$RP$0$be = $118;
       }
      } else {
       $R$0$be = $116;$RP$0$be = $115;
      }
      $R$0 = $R$0$be;$RP$0 = $RP$0$be;
     }
     $121 = ($RP$0$lcssa>>>0)<($4>>>0);
     if ($121) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum14 = (($2) + 8)|0;
     $100 = (($p) + ($$sum14)|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = ($101>>>0)<($4>>>0);
     if ($102) {
      _abort();
      // unreachable;
     }
     $103 = (($101) + 12|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = ($104|0)==($3|0);
     if (!($105)) {
      _abort();
      // unreachable;
     }
     $106 = (($98) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($107|0)==($3|0);
     if ($108) {
      HEAP32[$103>>2] = $98;
      HEAP32[$106>>2] = $101;
      $R$1 = $98;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $122 = ($96|0)==(0|0);
   if (!($122)) {
    $$sum11 = (($2) + 28)|0;
    $123 = (($p) + ($$sum11)|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = ((3144 + ($124<<2)|0) + 304|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($3|0)==($126|0);
    if ($127) {
     HEAP32[$125>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $128 = 1 << $124;
      $129 = $128 ^ -1;
      $130 = HEAP32[((3144 + 4|0))>>2]|0;
      $131 = $130 & $129;
      HEAP32[((3144 + 4|0))>>2] = $131;
      break;
     }
    } else {
     $132 = HEAP32[((3144 + 16|0))>>2]|0;
     $133 = ($96>>>0)<($132>>>0);
     if ($133) {
      _abort();
      // unreachable;
     }
     $134 = (($96) + 16|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = ($135|0)==($3|0);
     if ($136) {
      HEAP32[$134>>2] = $R$1;
     } else {
      $137 = (($96) + 20|0);
      HEAP32[$137>>2] = $R$1;
     }
     $138 = ($R$1|0)==(0|0);
     if ($138) {
      break;
     }
    }
    $139 = HEAP32[((3144 + 16|0))>>2]|0;
    $140 = ($R$1>>>0)<($139>>>0);
    if ($140) {
     _abort();
     // unreachable;
    }
    $141 = (($R$1) + 24|0);
    HEAP32[$141>>2] = $96;
    $$sum12 = (($2) + 16)|0;
    $142 = (($p) + ($$sum12)|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = ($143|0)==(0|0);
    do {
     if (!($144)) {
      $145 = ($143>>>0)<($139>>>0);
      if ($145) {
       _abort();
       // unreachable;
      } else {
       $146 = (($R$1) + 16|0);
       HEAP32[$146>>2] = $143;
       $147 = (($143) + 24|0);
       HEAP32[$147>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum13 = (($2) + 20)|0;
    $148 = (($p) + ($$sum13)|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ($149|0)==(0|0);
    if (!($150)) {
     $151 = HEAP32[((3144 + 16|0))>>2]|0;
     $152 = ($149>>>0)<($151>>>0);
     if ($152) {
      _abort();
      // unreachable;
     } else {
      $153 = (($R$1) + 20|0);
      HEAP32[$153>>2] = $149;
      $154 = (($149) + 24|0);
      HEAP32[$154>>2] = $R$1;
      break;
     }
    }
   }
  }
 } while(0);
 $155 = ($70>>>0)<(16);
 if ($155) {
  $156 = $1 & 1;
  $157 = $68 | $156;
  $158 = $157 | 2;
  HEAP32[$0>>2] = $158;
  $$sum910 = $68 | 4;
  $159 = (($p) + ($$sum910)|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = $160 | 1;
  HEAP32[$159>>2] = $161;
  $newp$0 = $p;
  return ($newp$0|0);
 } else {
  $162 = (($p) + ($nb)|0);
  $163 = $1 & 1;
  $164 = $163 | $nb;
  $165 = $164 | 2;
  HEAP32[$0>>2] = $165;
  $$sum5 = (($nb) + 4)|0;
  $166 = (($p) + ($$sum5)|0);
  $167 = $70 | 3;
  HEAP32[$166>>2] = $167;
  $$sum78 = $68 | 4;
  $168 = (($p) + ($$sum78)|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = $169 | 1;
  HEAP32[$168>>2] = $170;
  _dispose_chunk($162,$70);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 return (0)|0;
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$lcssa62 = 0, $$pre = 0, $$pre$phi51Z2D = 0, $$pre$phi53Z2D = 0, $$pre$phiZ2D = 0, $$pre50 = 0, $$pre52 = 0, $$sum = 0, $$sum1 = 0, $$sum10 = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum21 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum6$pre = 0, $$sum7 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$045 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $R7$0 = 0, $R7$0$be = 0, $R7$0$lcssa = 0, $R7$0$ph = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0;
 var $RP$0$ph = 0, $RP9$0 = 0, $RP9$0$be = 0, $RP9$0$lcssa = 0, $RP9$0$ph = 0, $T$0$lcssa = 0, $T$044 = 0, $T$044$lcssa = 0, $cond = 0, $cond40 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + ($psize)|0);
 $1 = (($p) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   $5 = HEAP32[$p>>2]|0;
   $6 = $2 & 3;
   $7 = ($6|0)==(0);
   if ($7) {
    return;
   }
   $8 = (0 - ($5))|0;
   $9 = (($p) + ($8)|0);
   $10 = (($5) + ($psize))|0;
   $11 = HEAP32[((3144 + 16|0))>>2]|0;
   $12 = ($9>>>0)<($11>>>0);
   if ($12) {
    _abort();
    // unreachable;
   }
   $13 = HEAP32[((3144 + 20|0))>>2]|0;
   $14 = ($9|0)==($13|0);
   if ($14) {
    $$sum = (($psize) + 4)|0;
    $99 = (($p) + ($$sum)|0);
    $100 = HEAP32[$99>>2]|0;
    $101 = $100 & 3;
    $102 = ($101|0)==(3);
    if (!($102)) {
     $$0 = $9;$$02 = $10;
     break;
    }
    HEAP32[((3144 + 8|0))>>2] = $10;
    $103 = $100 & -2;
    HEAP32[$99>>2] = $103;
    $104 = $10 | 1;
    $$sum14 = (4 - ($5))|0;
    $105 = (($p) + ($$sum14)|0);
    HEAP32[$105>>2] = $104;
    HEAP32[$0>>2] = $10;
    return;
   }
   $15 = $5 >>> 3;
   $16 = ($5>>>0)<(256);
   if ($16) {
    $$sum24 = (8 - ($5))|0;
    $17 = (($p) + ($$sum24)|0);
    $18 = HEAP32[$17>>2]|0;
    $$sum25 = (12 - ($5))|0;
    $19 = (($p) + ($$sum25)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $15 << 1;
    $22 = ((3144 + ($21<<2)|0) + 40|0);
    $23 = ($18|0)==($22|0);
    if (!($23)) {
     $24 = ($18>>>0)<($11>>>0);
     if ($24) {
      _abort();
      // unreachable;
     }
     $25 = (($18) + 12|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($26|0)==($9|0);
     if (!($27)) {
      _abort();
      // unreachable;
     }
    }
    $28 = ($20|0)==($18|0);
    if ($28) {
     $29 = 1 << $15;
     $30 = $29 ^ -1;
     $31 = HEAP32[3144>>2]|0;
     $32 = $31 & $30;
     HEAP32[3144>>2] = $32;
     $$0 = $9;$$02 = $10;
     break;
    }
    $33 = ($20|0)==($22|0);
    if ($33) {
     $$pre52 = (($20) + 8|0);
     $$pre$phi53Z2D = $$pre52;
    } else {
     $34 = ($20>>>0)<($11>>>0);
     if ($34) {
      _abort();
      // unreachable;
     }
     $35 = (($20) + 8|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = ($36|0)==($9|0);
     if ($37) {
      $$pre$phi53Z2D = $35;
     } else {
      _abort();
      // unreachable;
     }
    }
    $38 = (($18) + 12|0);
    HEAP32[$38>>2] = $20;
    HEAP32[$$pre$phi53Z2D>>2] = $18;
    $$0 = $9;$$02 = $10;
    break;
   }
   $$sum16 = (24 - ($5))|0;
   $39 = (($p) + ($$sum16)|0);
   $40 = HEAP32[$39>>2]|0;
   $$sum17 = (12 - ($5))|0;
   $41 = (($p) + ($$sum17)|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)==($9|0);
   do {
    if ($43) {
     $$sum18 = (16 - ($5))|0;
     $$sum19 = (($$sum18) + 4)|0;
     $53 = (($p) + ($$sum19)|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==(0|0);
     if ($55) {
      $56 = (($p) + ($$sum18)|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = ($57|0)==(0|0);
      if ($58) {
       $R$1 = 0;
       break;
      } else {
       $R$0$ph = $57;$RP$0$ph = $56;
      }
     } else {
      $R$0$ph = $54;$RP$0$ph = $53;
     }
     $R$0 = $R$0$ph;$RP$0 = $RP$0$ph;
     while(1) {
      $59 = (($R$0) + 20|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ($60|0)==(0|0);
      if ($61) {
       $62 = (($R$0) + 16|0);
       $63 = HEAP32[$62>>2]|0;
       $64 = ($63|0)==(0|0);
       if ($64) {
        $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0$be = $63;$RP$0$be = $62;
       }
      } else {
       $R$0$be = $60;$RP$0$be = $59;
      }
      $R$0 = $R$0$be;$RP$0 = $RP$0$be;
     }
     $65 = ($RP$0$lcssa>>>0)<($11>>>0);
     if ($65) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum23 = (8 - ($5))|0;
     $44 = (($p) + ($$sum23)|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ($45>>>0)<($11>>>0);
     if ($46) {
      _abort();
      // unreachable;
     }
     $47 = (($45) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($48|0)==($9|0);
     if (!($49)) {
      _abort();
      // unreachable;
     }
     $50 = (($42) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51|0)==($9|0);
     if ($52) {
      HEAP32[$47>>2] = $42;
      HEAP32[$50>>2] = $45;
      $R$1 = $42;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $66 = ($40|0)==(0|0);
   if ($66) {
    $$0 = $9;$$02 = $10;
   } else {
    $$sum20 = (28 - ($5))|0;
    $67 = (($p) + ($$sum20)|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = ((3144 + ($68<<2)|0) + 304|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($9|0)==($70|0);
    if ($71) {
     HEAP32[$69>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $72 = 1 << $68;
      $73 = $72 ^ -1;
      $74 = HEAP32[((3144 + 4|0))>>2]|0;
      $75 = $74 & $73;
      HEAP32[((3144 + 4|0))>>2] = $75;
      $$0 = $9;$$02 = $10;
      break;
     }
    } else {
     $76 = HEAP32[((3144 + 16|0))>>2]|0;
     $77 = ($40>>>0)<($76>>>0);
     if ($77) {
      _abort();
      // unreachable;
     }
     $78 = (($40) + 16|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = ($79|0)==($9|0);
     if ($80) {
      HEAP32[$78>>2] = $R$1;
     } else {
      $81 = (($40) + 20|0);
      HEAP32[$81>>2] = $R$1;
     }
     $82 = ($R$1|0)==(0|0);
     if ($82) {
      $$0 = $9;$$02 = $10;
      break;
     }
    }
    $83 = HEAP32[((3144 + 16|0))>>2]|0;
    $84 = ($R$1>>>0)<($83>>>0);
    if ($84) {
     _abort();
     // unreachable;
    }
    $85 = (($R$1) + 24|0);
    HEAP32[$85>>2] = $40;
    $$sum21 = (16 - ($5))|0;
    $86 = (($p) + ($$sum21)|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==(0|0);
    do {
     if (!($88)) {
      $89 = ($87>>>0)<($83>>>0);
      if ($89) {
       _abort();
       // unreachable;
      } else {
       $90 = (($R$1) + 16|0);
       HEAP32[$90>>2] = $87;
       $91 = (($87) + 24|0);
       HEAP32[$91>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum22 = (($$sum21) + 4)|0;
    $92 = (($p) + ($$sum22)|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    if ($94) {
     $$0 = $9;$$02 = $10;
    } else {
     $95 = HEAP32[((3144 + 16|0))>>2]|0;
     $96 = ($93>>>0)<($95>>>0);
     if ($96) {
      _abort();
      // unreachable;
     } else {
      $97 = (($R$1) + 20|0);
      HEAP32[$97>>2] = $93;
      $98 = (($93) + 24|0);
      HEAP32[$98>>2] = $R$1;
      $$0 = $9;$$02 = $10;
      break;
     }
    }
   }
  } else {
   $$0 = $p;$$02 = $psize;
  }
 } while(0);
 $106 = HEAP32[((3144 + 16|0))>>2]|0;
 $107 = ($0>>>0)<($106>>>0);
 if ($107) {
  _abort();
  // unreachable;
 }
 $$sum1 = (($psize) + 4)|0;
 $108 = (($p) + ($$sum1)|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $109 & 2;
 $111 = ($110|0)==(0);
 if ($111) {
  $112 = HEAP32[((3144 + 24|0))>>2]|0;
  $113 = ($0|0)==($112|0);
  if ($113) {
   $114 = HEAP32[((3144 + 12|0))>>2]|0;
   $115 = (($114) + ($$02))|0;
   HEAP32[((3144 + 12|0))>>2] = $115;
   HEAP32[((3144 + 24|0))>>2] = $$0;
   $116 = $115 | 1;
   $117 = (($$0) + 4|0);
   HEAP32[$117>>2] = $116;
   $118 = HEAP32[((3144 + 20|0))>>2]|0;
   $119 = ($$0|0)==($118|0);
   if (!($119)) {
    return;
   }
   HEAP32[((3144 + 20|0))>>2] = 0;
   HEAP32[((3144 + 8|0))>>2] = 0;
   return;
  }
  $120 = HEAP32[((3144 + 20|0))>>2]|0;
  $121 = ($0|0)==($120|0);
  if ($121) {
   $122 = HEAP32[((3144 + 8|0))>>2]|0;
   $123 = (($122) + ($$02))|0;
   HEAP32[((3144 + 8|0))>>2] = $123;
   HEAP32[((3144 + 20|0))>>2] = $$0;
   $124 = $123 | 1;
   $125 = (($$0) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = (($$0) + ($123)|0);
   HEAP32[$126>>2] = $123;
   return;
  }
  $127 = $109 & -8;
  $128 = (($127) + ($$02))|0;
  $129 = $109 >>> 3;
  $130 = ($109>>>0)<(256);
  do {
   if ($130) {
    $$sum12 = (($psize) + 8)|0;
    $131 = (($p) + ($$sum12)|0);
    $132 = HEAP32[$131>>2]|0;
    $$sum13 = (($psize) + 12)|0;
    $133 = (($p) + ($$sum13)|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = $129 << 1;
    $136 = ((3144 + ($135<<2)|0) + 40|0);
    $137 = ($132|0)==($136|0);
    if (!($137)) {
     $138 = ($132>>>0)<($106>>>0);
     if ($138) {
      _abort();
      // unreachable;
     }
     $139 = (($132) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==($0|0);
     if (!($141)) {
      _abort();
      // unreachable;
     }
    }
    $142 = ($134|0)==($132|0);
    if ($142) {
     $143 = 1 << $129;
     $144 = $143 ^ -1;
     $145 = HEAP32[3144>>2]|0;
     $146 = $145 & $144;
     HEAP32[3144>>2] = $146;
     break;
    }
    $147 = ($134|0)==($136|0);
    if ($147) {
     $$pre50 = (($134) + 8|0);
     $$pre$phi51Z2D = $$pre50;
    } else {
     $148 = ($134>>>0)<($106>>>0);
     if ($148) {
      _abort();
      // unreachable;
     }
     $149 = (($134) + 8|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($0|0);
     if ($151) {
      $$pre$phi51Z2D = $149;
     } else {
      _abort();
      // unreachable;
     }
    }
    $152 = (($132) + 12|0);
    HEAP32[$152>>2] = $134;
    HEAP32[$$pre$phi51Z2D>>2] = $132;
   } else {
    $$sum2 = (($psize) + 24)|0;
    $153 = (($p) + ($$sum2)|0);
    $154 = HEAP32[$153>>2]|0;
    $$sum3 = (($psize) + 12)|0;
    $155 = (($p) + ($$sum3)|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ($156|0)==($0|0);
    do {
     if ($157) {
      $$sum5 = (($psize) + 20)|0;
      $167 = (($p) + ($$sum5)|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ($168|0)==(0|0);
      if ($169) {
       $$sum4 = (($psize) + 16)|0;
       $170 = (($p) + ($$sum4)|0);
       $171 = HEAP32[$170>>2]|0;
       $172 = ($171|0)==(0|0);
       if ($172) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0$ph = $171;$RP9$0$ph = $170;
       }
      } else {
       $R7$0$ph = $168;$RP9$0$ph = $167;
      }
      $R7$0 = $R7$0$ph;$RP9$0 = $RP9$0$ph;
      while(1) {
       $173 = (($R7$0) + 20|0);
       $174 = HEAP32[$173>>2]|0;
       $175 = ($174|0)==(0|0);
       if ($175) {
        $176 = (($R7$0) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
         break;
        } else {
         $R7$0$be = $177;$RP9$0$be = $176;
        }
       } else {
        $R7$0$be = $174;$RP9$0$be = $173;
       }
       $R7$0 = $R7$0$be;$RP9$0 = $RP9$0$be;
      }
      $179 = ($RP9$0$lcssa>>>0)<($106>>>0);
      if ($179) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $$sum11 = (($psize) + 8)|0;
      $158 = (($p) + ($$sum11)|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($159>>>0)<($106>>>0);
      if ($160) {
       _abort();
       // unreachable;
      }
      $161 = (($159) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162|0)==($0|0);
      if (!($163)) {
       _abort();
       // unreachable;
      }
      $164 = (($156) + 8|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==($0|0);
      if ($166) {
       HEAP32[$161>>2] = $156;
       HEAP32[$164>>2] = $159;
       $R7$1 = $156;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $180 = ($154|0)==(0|0);
    if (!($180)) {
     $$sum8 = (($psize) + 28)|0;
     $181 = (($p) + ($$sum8)|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = ((3144 + ($182<<2)|0) + 304|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = ($0|0)==($184|0);
     if ($185) {
      HEAP32[$183>>2] = $R7$1;
      $cond40 = ($R7$1|0)==(0|0);
      if ($cond40) {
       $186 = 1 << $182;
       $187 = $186 ^ -1;
       $188 = HEAP32[((3144 + 4|0))>>2]|0;
       $189 = $188 & $187;
       HEAP32[((3144 + 4|0))>>2] = $189;
       break;
      }
     } else {
      $190 = HEAP32[((3144 + 16|0))>>2]|0;
      $191 = ($154>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      }
      $192 = (($154) + 16|0);
      $193 = HEAP32[$192>>2]|0;
      $194 = ($193|0)==($0|0);
      if ($194) {
       HEAP32[$192>>2] = $R7$1;
      } else {
       $195 = (($154) + 20|0);
       HEAP32[$195>>2] = $R7$1;
      }
      $196 = ($R7$1|0)==(0|0);
      if ($196) {
       break;
      }
     }
     $197 = HEAP32[((3144 + 16|0))>>2]|0;
     $198 = ($R7$1>>>0)<($197>>>0);
     if ($198) {
      _abort();
      // unreachable;
     }
     $199 = (($R7$1) + 24|0);
     HEAP32[$199>>2] = $154;
     $$sum9 = (($psize) + 16)|0;
     $200 = (($p) + ($$sum9)|0);
     $201 = HEAP32[$200>>2]|0;
     $202 = ($201|0)==(0|0);
     do {
      if (!($202)) {
       $203 = ($201>>>0)<($197>>>0);
       if ($203) {
        _abort();
        // unreachable;
       } else {
        $204 = (($R7$1) + 16|0);
        HEAP32[$204>>2] = $201;
        $205 = (($201) + 24|0);
        HEAP32[$205>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum10 = (($psize) + 20)|0;
     $206 = (($p) + ($$sum10)|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($207|0)==(0|0);
     if (!($208)) {
      $209 = HEAP32[((3144 + 16|0))>>2]|0;
      $210 = ($207>>>0)<($209>>>0);
      if ($210) {
       _abort();
       // unreachable;
      } else {
       $211 = (($R7$1) + 20|0);
       HEAP32[$211>>2] = $207;
       $212 = (($207) + 24|0);
       HEAP32[$212>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $213 = $128 | 1;
  $214 = (($$0) + 4|0);
  HEAP32[$214>>2] = $213;
  $215 = (($$0) + ($128)|0);
  HEAP32[$215>>2] = $128;
  $216 = HEAP32[((3144 + 20|0))>>2]|0;
  $217 = ($$0|0)==($216|0);
  if ($217) {
   HEAP32[((3144 + 8|0))>>2] = $128;
   return;
  } else {
   $$1 = $128;
  }
 } else {
  $218 = $109 & -2;
  HEAP32[$108>>2] = $218;
  $219 = $$02 | 1;
  $220 = (($$0) + 4|0);
  HEAP32[$220>>2] = $219;
  $221 = (($$0) + ($$02)|0);
  HEAP32[$221>>2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 $223 = ($$1>>>0)<(256);
 if ($223) {
  $224 = $222 << 1;
  $225 = ((3144 + ($224<<2)|0) + 40|0);
  $226 = HEAP32[3144>>2]|0;
  $227 = 1 << $222;
  $228 = $226 & $227;
  $229 = ($228|0)==(0);
  if ($229) {
   $230 = $226 | $227;
   HEAP32[3144>>2] = $230;
   $$sum6$pre = (($224) + 2)|0;
   $$pre = ((3144 + ($$sum6$pre<<2)|0) + 40|0);
   $$pre$phiZ2D = $$pre;$F16$0 = $225;
  } else {
   $$sum7 = (($224) + 2)|0;
   $231 = ((3144 + ($$sum7<<2)|0) + 40|0);
   $232 = HEAP32[$231>>2]|0;
   $233 = HEAP32[((3144 + 16|0))>>2]|0;
   $234 = ($232>>>0)<($233>>>0);
   if ($234) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $231;$F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$0;
  $235 = (($F16$0) + 12|0);
  HEAP32[$235>>2] = $$0;
  $236 = (($$0) + 8|0);
  HEAP32[$236>>2] = $F16$0;
  $237 = (($$0) + 12|0);
  HEAP32[$237>>2] = $225;
  return;
 }
 $238 = $$1 >>> 8;
 $239 = ($238|0)==(0);
 if ($239) {
  $I19$0 = 0;
 } else {
  $240 = ($$1>>>0)>(16777215);
  if ($240) {
   $I19$0 = 31;
  } else {
   $241 = (($238) + 1048320)|0;
   $242 = $241 >>> 16;
   $243 = $242 & 8;
   $244 = $238 << $243;
   $245 = (($244) + 520192)|0;
   $246 = $245 >>> 16;
   $247 = $246 & 4;
   $248 = $247 | $243;
   $249 = $244 << $247;
   $250 = (($249) + 245760)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 2;
   $253 = $248 | $252;
   $254 = (14 - ($253))|0;
   $255 = $249 << $252;
   $256 = $255 >>> 15;
   $257 = (($254) + ($256))|0;
   $258 = $257 << 1;
   $259 = (($257) + 7)|0;
   $260 = $$1 >>> $259;
   $261 = $260 & 1;
   $262 = $261 | $258;
   $I19$0 = $262;
  }
 }
 $263 = ((3144 + ($I19$0<<2)|0) + 304|0);
 $264 = (($$0) + 28|0);
 HEAP32[$264>>2] = $I19$0;
 $265 = (($$0) + 16|0);
 $266 = (($$0) + 20|0);
 HEAP32[$266>>2] = 0;
 HEAP32[$265>>2] = 0;
 $267 = HEAP32[((3144 + 4|0))>>2]|0;
 $268 = 1 << $I19$0;
 $269 = $267 & $268;
 $270 = ($269|0)==(0);
 if ($270) {
  $271 = $267 | $268;
  HEAP32[((3144 + 4|0))>>2] = $271;
  HEAP32[$263>>2] = $$0;
  $272 = (($$0) + 24|0);
  HEAP32[$272>>2] = $263;
  $273 = (($$0) + 12|0);
  HEAP32[$273>>2] = $$0;
  $274 = (($$0) + 8|0);
  HEAP32[$274>>2] = $$0;
  return;
 }
 $275 = HEAP32[$263>>2]|0;
 $276 = ($I19$0|0)==(31);
 if ($276) {
  $284 = 0;
 } else {
  $277 = $I19$0 >>> 1;
  $278 = (25 - ($277))|0;
  $284 = $278;
 }
 $279 = (($275) + 4|0);
 $280 = HEAP32[$279>>2]|0;
 $281 = $280 & -8;
 $282 = ($281|0)==($$1|0);
 do {
  if ($282) {
   $T$0$lcssa = $275;
  } else {
   $283 = $$1 << $284;
   $K20$045 = $283;$T$044 = $275;
   while(1) {
    $291 = $K20$045 >>> 31;
    $292 = ((($T$044) + ($291<<2)|0) + 16|0);
    $287 = HEAP32[$292>>2]|0;
    $293 = ($287|0)==(0|0);
    if ($293) {
     $$lcssa = $292;$T$044$lcssa = $T$044;
     break;
    }
    $285 = $K20$045 << 1;
    $286 = (($287) + 4|0);
    $288 = HEAP32[$286>>2]|0;
    $289 = $288 & -8;
    $290 = ($289|0)==($$1|0);
    if ($290) {
     $$lcssa62 = $287;
     label = 134;
     break;
    } else {
     $K20$045 = $285;$T$044 = $287;
    }
   }
   if ((label|0) == 134) {
    $T$0$lcssa = $$lcssa62;
    break;
   }
   $294 = HEAP32[((3144 + 16|0))>>2]|0;
   $295 = ($$lcssa>>>0)<($294>>>0);
   if ($295) {
    _abort();
    // unreachable;
   }
   HEAP32[$$lcssa>>2] = $$0;
   $296 = (($$0) + 24|0);
   HEAP32[$296>>2] = $T$044$lcssa;
   $297 = (($$0) + 12|0);
   HEAP32[$297>>2] = $$0;
   $298 = (($$0) + 8|0);
   HEAP32[$298>>2] = $$0;
   return;
  }
 } while(0);
 $299 = (($T$0$lcssa) + 8|0);
 $300 = HEAP32[$299>>2]|0;
 $301 = HEAP32[((3144 + 16|0))>>2]|0;
 $302 = ($T$0$lcssa>>>0)>=($301>>>0);
 $303 = ($300>>>0)>=($301>>>0);
 $or$cond = $302 & $303;
 if (!($or$cond)) {
  _abort();
  // unreachable;
 }
 $304 = (($300) + 12|0);
 HEAP32[$304>>2] = $$0;
 HEAP32[$299>>2] = $$0;
 $305 = (($$0) + 8|0);
 HEAP32[$305>>2] = $300;
 $306 = (($$0) + 12|0);
 HEAP32[$306>>2] = $T$0$lcssa;
 $307 = (($$0) + 24|0);
 HEAP32[$307>>2] = 0;
 return;
}
function _scanexp($f,$pok) {
 $f = $f|0;
 $pok = $pok|0;
 var $$ = 0, $$lcssa18 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$111 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $or$cond3 = 0, $or$cond5 = 0, $x$012 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($f) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  $5 = (($1) + 1|0);
  HEAP32[$0>>2] = $5;
  $6 = HEAP8[$1>>0]|0;
  $7 = $6&255;
  $9 = $7;
 } else {
  $8 = (___shgetc($f)|0);
  $9 = $8;
 }
 $10 = ($9|0)==(45);
 if ((($9|0) == 43) | (($9|0) == 45)) {
  $11 = $10&1;
  $12 = HEAP32[$0>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = ($12>>>0)<($13>>>0);
  if ($14) {
   $15 = (($12) + 1|0);
   HEAP32[$0>>2] = $15;
   $16 = HEAP8[$12>>0]|0;
   $17 = $16&255;
   $20 = $17;
  } else {
   $18 = (___shgetc($f)|0);
   $20 = $18;
  }
  $19 = (($20) + -48)|0;
  $21 = ($19>>>0)>(9);
  $22 = ($pok|0)!=(0);
  $or$cond3 = $22 & $21;
  if ($or$cond3) {
   $23 = HEAP32[$2>>2]|0;
   $24 = ($23|0)==(0|0);
   if ($24) {
    $c$0 = $20;$neg$0 = $11;
   } else {
    $25 = HEAP32[$0>>2]|0;
    $26 = (($25) + -1|0);
    HEAP32[$0>>2] = $26;
    $c$0 = $20;$neg$0 = $11;
   }
  } else {
   $c$0 = $20;$neg$0 = $11;
  }
 } else {
  $c$0 = $9;$neg$0 = 0;
 }
 $27 = (($c$0) + -48)|0;
 $28 = ($27>>>0)>(9);
 if ($28) {
  $29 = HEAP32[$2>>2]|0;
  $30 = ($29|0)==(0|0);
  if ($30) {
   $96 = -2147483648;$97 = 0;
   tempRet0 = $96;
   return ($97|0);
  }
  $31 = HEAP32[$0>>2]|0;
  $32 = (($31) + -1|0);
  HEAP32[$0>>2] = $32;
  $96 = -2147483648;$97 = 0;
  tempRet0 = $96;
  return ($97|0);
 }
 $c$111 = $c$0;$x$012 = 0;
 while(1) {
  $33 = ($x$012*10)|0;
  $34 = (($c$111) + -48)|0;
  $35 = (($34) + ($33))|0;
  $36 = HEAP32[$0>>2]|0;
  $37 = HEAP32[$2>>2]|0;
  $38 = ($36>>>0)<($37>>>0);
  if ($38) {
   $39 = (($36) + 1|0);
   HEAP32[$0>>2] = $39;
   $40 = HEAP8[$36>>0]|0;
   $41 = $40&255;
   $c$1$be = $41;
  } else {
   $42 = (___shgetc($f)|0);
   $c$1$be = $42;
  }
  $43 = (($c$1$be) + -48)|0;
  $44 = ($43>>>0)<(10);
  $45 = ($35|0)<(214748364);
  $$ = $44 & $45;
  if ($$) {
   $c$111 = $c$1$be;$x$012 = $35;
  } else {
   $$lcssa18 = $35;$c$1$be$lcssa = $c$1$be;
   break;
  }
 }
 $46 = ($$lcssa18|0)<(0);
 $47 = $46 << 31 >> 31;
 $48 = (($c$1$be$lcssa) + -48)|0;
 $49 = ($48>>>0)<(10);
 if ($49) {
  $52 = $$lcssa18;$53 = $47;$c$27 = $c$1$be$lcssa;
  while(1) {
   $54 = (___muldi3(($52|0),($53|0),10,0)|0);
   $55 = tempRet0;
   $56 = ($c$27|0)<(0);
   $57 = $56 << 31 >> 31;
   $58 = (_i64Add(($c$27|0),($57|0),-48,-1)|0);
   $59 = tempRet0;
   $60 = (_i64Add(($58|0),($59|0),($54|0),($55|0))|0);
   $61 = tempRet0;
   $62 = HEAP32[$0>>2]|0;
   $63 = HEAP32[$2>>2]|0;
   $64 = ($62>>>0)<($63>>>0);
   if ($64) {
    $65 = (($62) + 1|0);
    HEAP32[$0>>2] = $65;
    $66 = HEAP8[$62>>0]|0;
    $67 = $66&255;
    $c$2$be = $67;
   } else {
    $68 = (___shgetc($f)|0);
    $c$2$be = $68;
   }
   $69 = (($c$2$be) + -48)|0;
   $70 = ($69>>>0)<(10);
   $71 = ($61|0)<(21474836);
   $72 = ($60>>>0)<(2061584302);
   $73 = ($61|0)==(21474836);
   $74 = $73 & $72;
   $75 = $71 | $74;
   $or$cond5 = $70 & $75;
   if ($or$cond5) {
    $52 = $60;$53 = $61;$c$27 = $c$2$be;
   } else {
    $98 = $60;$99 = $61;$c$2$be$lcssa = $c$2$be;
    break;
   }
  }
  $90 = $98;$91 = $99;$c$2$lcssa = $c$2$be$lcssa;
 } else {
  $90 = $$lcssa18;$91 = $47;$c$2$lcssa = $c$1$be$lcssa;
 }
 $50 = (($c$2$lcssa) + -48)|0;
 $51 = ($50>>>0)<(10);
 if ($51) {
  while(1) {
   $76 = HEAP32[$0>>2]|0;
   $77 = HEAP32[$2>>2]|0;
   $78 = ($76>>>0)<($77>>>0);
   if ($78) {
    $79 = (($76) + 1|0);
    HEAP32[$0>>2] = $79;
    $80 = HEAP8[$76>>0]|0;
    $81 = $80&255;
    $c$3$be = $81;
   } else {
    $82 = (___shgetc($f)|0);
    $c$3$be = $82;
   }
   $83 = (($c$3$be) + -48)|0;
   $84 = ($83>>>0)<(10);
   if (!($84)) {
    break;
   }
  }
 }
 $85 = HEAP32[$2>>2]|0;
 $86 = ($85|0)==(0|0);
 if (!($86)) {
  $87 = HEAP32[$0>>2]|0;
  $88 = (($87) + -1|0);
  HEAP32[$0>>2] = $88;
 }
 $89 = ($neg$0|0)!=(0);
 $92 = (_i64Subtract(0,0,($90|0),($91|0))|0);
 $93 = tempRet0;
 $94 = $89 ? $92 : $90;
 $95 = $89 ? $93 : $91;
 $96 = $95;$97 = $94;
 tempRet0 = $96;
 return ($97|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$5$i = 0, $$$i = 0, $$$p$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i105$i = 0, $$0$lcssa$i112$i = 0, $$0$lcssa$i136$i = 0, $$0$lcssa$i151$i = 0, $$0$lcssa$i47 = 0, $$0$lcssa$i47$i = 0, $$0$lcssa$i52 = 0, $$0$lcssa$i54 = 0, $$0$lcssa$i54$i = 0, $$0$lcssa$i56$i = 0, $$0$lcssa$i62 = 0, $$0$lcssa$i64$i = 0;
 var $$0$lcssa$i69 = 0, $$0$lcssa$i71$i = 0, $$0$lcssa$i76 = 0, $$0$lcssa$i77$i = 0, $$0$lcssa$i84$i = 0, $$0$lcssa$i86 = 0, $$0$lcssa$i92$i = 0, $$0$ph = 0, $$0$ph340 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i103$i = 0, $$01$i110$i = 0, $$01$i134$i = 0, $$01$i149$i = 0, $$01$i45 = 0, $$01$i45$i = 0, $$01$i52$i = 0, $$01$i60 = 0, $$01$i62$i = 0;
 var $$01$i67 = 0, $$01$i69$i = 0, $$01$i74 = 0, $$01$i75$i = 0, $$01$i82$i = 0, $$01$i84 = 0, $$01$lcssa$off0$i = 0, $$01$lcssa$off0$i$i = 0, $$01$lcssa$off0$i93$i = 0, $$012$i = 0, $$013$i = 0.0, $$019$i = 0, $$03$i49 = 0, $$05$i = 0, $$05$i$i = 0, $$05$i87$i = 0, $$1$i = 0.0, $$1$lcssa$i$i = 0, $$1$lcssa$i120$i = 0, $$12$i = 0;
 var $$12$i$i = 0, $$12$i118$i = 0, $$12$i127$i = 0, $$12$i142$i = 0, $$12$i142$i$lcssa = 0, $$12$i95$i = 0, $$120$i = 0, $$2$i = 0.0, $$2$us$i = 0.0, $$2$us$us$i = 0.0, $$21 = 0, $$216$$29$i = 0, $$216$$31$i = 0, $$216$i = 0, $$25 = 0, $$26 = 0, $$26$i = 0, $$26$us$i = 0, $$27$i = 0, $$28$i = 0.0;
 var $$29$i = 0, $$3$i = 0.0, $$31$i = 0, $$317$i = 0, $$39$i = 0, $$4$i = 0.0, $$418$lcssa$i = 0, $$418193$i = 0, $$5205$i = 0, $$93 = 0, $$a$3$i = 0, $$a$3$us$i = 0, $$a$3$us309$i = 0, $$a$3$us310$i = 0, $$a$3$us310$i$lcssa = 0, $$a$3311$i = 0, $$a$3312$i = 0, $$a$3312$i$lcssa = 0, $$be = 0, $$be341 = 0;
 var $$be342 = 0, $$fl$4 = 0, $$l10n$0 = 0, $$lcssa = 0, $$lcssa107 = 0, $$lcssa107$ph = 0, $$lcssa283$i = 0, $$lcssa344 = 0, $$lcssa345 = 0, $$lcssa346 = 0, $$lcssa347 = 0, $$lcssa348 = 0, $$lcssa350 = 0, $$lcssa352 = 0, $$lcssa353 = 0, $$lcssa354 = 0, $$lcssa355 = 0, $$lcssa356 = 0, $$lcssa357 = 0, $$lcssa358 = 0;
 var $$lcssa359 = 0, $$lcssa360 = 0, $$lcssa361 = 0, $$lcssa362 = 0, $$lcssa363 = 0, $$lcssa364 = 0, $$lcssa365 = 0, $$lcssa367 = 0, $$lcssa368 = 0, $$lcssa369 = 0, $$lcssa370 = 0, $$lcssa371 = 0, $$lcssa372 = 0, $$lcssa373 = 0, $$lcssa374 = 0, $$lcssa375 = 0, $$lcssa376 = 0, $$lcssa377 = 0, $$lcssa378 = 0.0, $$lcssa379 = 0;
 var $$lcssa381 = 0, $$lcssa382 = 0, $$lcssa384 = 0, $$lcssa385 = 0, $$lcssa386 = 0, $$mask$i = 0, $$mask$i39 = 0, $$mask1$i = 0, $$mask1$i38 = 0, $$neg159$i = 0, $$neg160$i = 0, $$not$i = 0, $$p$5 = 0, $$p$i = 0, $$ph = 0, $$pn$i = 0, $$pr$i = 0, $$pr154$i = 0, $$pre = 0, $$pre$i = 0;
 var $$pre269 = 0, $$pre308$i = 0, $$sum$i = 0, $$sum21$i = 0, $$sum22$i = 0, $$z$3$i = 0, $$z$4$us$i = 0, $$z$4$us$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0;
 var $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0;
 var $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0;
 var $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0;
 var $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0;
 var $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0;
 var $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0;
 var $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0;
 var $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0;
 var $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0.0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0.0, $1168 = 0, $1169 = 0, $117 = 0;
 var $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0;
 var $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $140$phi = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0.0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0.0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0.0, $433 = 0, $434 = 0.0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0.0, $473 = 0.0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0.0, $487 = 0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0.0, $491 = 0.0, $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0.0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0.0;
 var $544 = 0.0, $545 = 0.0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0.0, $559 = 0.0, $56 = 0, $560 = 0.0, $561 = 0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0.0, $574 = 0.0, $575 = 0.0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0.0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0.0, $638 = 0.0, $639 = 0.0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $655$phi = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0;
 var $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0;
 var $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0;
 var $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0;
 var $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0;
 var $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0;
 var $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0.0, $777 = 0.0;
 var $778 = 0, $779 = 0.0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0;
 var $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0;
 var $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0;
 var $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0;
 var $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0;
 var $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0;
 var $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0;
 var $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0;
 var $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0;
 var $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $955$phi = 0, $956 = 0;
 var $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0;
 var $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0;
 var $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1261$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$2$ph$i$lcssa = 0, $a$3$lcssa$i = 0, $a$3248$i = 0, $a$3248$us$i = 0, $a$5$lcssa$i = 0, $a$5223$i = 0, $a$6$i = 0;
 var $a$6$i$lcssa = 0, $a$7$i = 0, $a$8$ph$i = 0, $a$8$ph294$i = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current29 = 0, $arglist_current32 = 0, $arglist_current35 = 0, $arglist_current38 = 0, $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current5 = 0;
 var $arglist_current50 = 0, $arglist_current53 = 0, $arglist_current56 = 0, $arglist_current59 = 0, $arglist_current62 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next30 = 0, $arglist_next33 = 0, $arglist_next36 = 0, $arglist_next39 = 0, $arglist_next42 = 0, $arglist_next45 = 0;
 var $arglist_next48 = 0, $arglist_next51 = 0, $arglist_next54 = 0, $arglist_next57 = 0, $arglist_next6 = 0, $arglist_next60 = 0, $arglist_next63 = 0, $arglist_next9 = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0254$i = 0, $carry3$0242$i = 0, $carry3$0242$us$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0253$i = 0;
 var $d$0255$i = 0, $d$1241$i = 0, $d$1241$us$i = 0, $d$2$lcssa$i = 0, $d$2222$i = 0, $d$3$i = 0, $d$4199$i = 0, $d$5192$i = 0, $d$6204$i = 0, $e$0237$i = 0, $e$1$i = 0, $e$2218$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$1$ph$i = 0, $estr$1209$i = 0;
 var $estr$2$i = 0, $exitcond$i = 0, $expanded = 0, $expanded101 = 0, $expanded102 = 0, $expanded103 = 0, $expanded105 = 0, $expanded106 = 0, $expanded108 = 0, $expanded109 = 0, $expanded110 = 0, $expanded112 = 0, $expanded113 = 0, $expanded115 = 0, $expanded116 = 0, $expanded117 = 0, $expanded119 = 0, $expanded120 = 0, $expanded122 = 0, $expanded123 = 0;
 var $expanded124 = 0, $expanded126 = 0, $expanded127 = 0, $expanded129 = 0, $expanded130 = 0, $expanded131 = 0, $expanded133 = 0, $expanded134 = 0, $expanded136 = 0, $expanded137 = 0, $expanded138 = 0, $expanded140 = 0, $expanded141 = 0, $expanded143 = 0, $expanded144 = 0, $expanded145 = 0, $expanded147 = 0, $expanded148 = 0, $expanded150 = 0, $expanded151 = 0;
 var $expanded152 = 0, $expanded154 = 0, $expanded155 = 0, $expanded157 = 0, $expanded158 = 0, $expanded159 = 0, $expanded161 = 0, $expanded162 = 0, $expanded164 = 0, $expanded165 = 0, $expanded166 = 0, $expanded168 = 0, $expanded169 = 0, $expanded171 = 0, $expanded172 = 0, $expanded173 = 0, $expanded175 = 0, $expanded176 = 0, $expanded178 = 0, $expanded179 = 0;
 var $expanded180 = 0, $expanded182 = 0, $expanded183 = 0, $expanded185 = 0, $expanded186 = 0, $expanded187 = 0, $expanded189 = 0, $expanded190 = 0, $expanded192 = 0, $expanded193 = 0, $expanded194 = 0, $expanded196 = 0, $expanded197 = 0, $expanded199 = 0, $expanded200 = 0, $expanded201 = 0, $expanded203 = 0, $expanded204 = 0, $expanded206 = 0, $expanded207 = 0;
 var $expanded208 = 0, $expanded210 = 0, $expanded211 = 0, $expanded213 = 0, $expanded214 = 0, $expanded215 = 0, $expanded64 = 0, $expanded66 = 0, $expanded67 = 0, $expanded68 = 0, $expanded70 = 0, $expanded71 = 0, $expanded73 = 0, $expanded74 = 0, $expanded75 = 0, $expanded77 = 0, $expanded78 = 0, $expanded80 = 0, $expanded81 = 0, $expanded82 = 0;
 var $expanded84 = 0, $expanded85 = 0, $expanded87 = 0, $expanded88 = 0, $expanded89 = 0, $expanded91 = 0, $expanded92 = 0, $expanded94 = 0, $expanded95 = 0, $expanded96 = 0, $expanded98 = 0, $expanded99 = 0, $fl$0111 = 0, $fl$0111$ph = 0, $fl$0171 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0;
 var $i$0$lcssa = 0, $i$0$lcssa272 = 0, $i$0176 = 0, $i$0236$i = 0, $i$03$i = 0, $i$03$i31 = 0, $i$1$lcssa$i = 0, $i$1187 = 0, $i$1230$i = 0, $i$2163 = 0, $i$2163$lcssa = 0, $i$2217$i = 0, $i$3161 = 0, $i$3213$i = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i33 = 0, $isdigit10 = 0, $isdigit12 = 0, $isdigit2$i = 0;
 var $isdigit2$i29 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0, $isdigittmp$i32 = 0, $isdigittmp1$i = 0, $isdigittmp1$i28 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i30 = 0, $isdigittmp9 = 0, $j$0$i = 0, $j$0229$i = 0, $j$0231$i = 0, $j$1214$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$be = 0, $l$0$i = 0, $l$1$i = 0;
 var $l$1175 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$be = 0, $l10n$0$lcssa = 0, $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $notlhs$us$us$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i101$i = 0, $or$cond$i108$i = 0, $or$cond$i43$i = 0, $or$cond$i50$i = 0, $or$cond$i58 = 0, $or$cond$i60$i = 0;
 var $or$cond$i65 = 0, $or$cond$i67$i = 0, $or$cond$i72 = 0, $or$cond$i80 = 0, $or$cond$i80$i = 0, $or$cond$i82 = 0, $or$cond10$i = 0, $or$cond10191$i = 0, $or$cond12$i = 0, $or$cond15 = 0, $or$cond19 = 0, $or$cond23 = 0, $or$cond274 = 0, $or$cond35$i = 0, $or$cond37$i = 0, $or$cond6$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0;
 var $p$4271 = 0, $p$5 = 0, $pad$i = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$1187$i = 0, $round$0186$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$0$us$i = 0, $s$0$us$us$i = 0;
 var $s$1$i = 0, $s$1$i$lcssa = 0, $s$1$lcssa$i = 0, $s$1$us$i = 0, $s$1$us$i$lcssa = 0, $s$1$us$us$i = 0, $s$1$us$us$i$lcssa = 0, $s1$0$i = 0, $s7$0196$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$0188$i = 0, $s8$0188$i$ph = 0, $s9$0$i = 0, $s9$1200$i = 0, $s9$2$i = 0, $sext = 0, $sext94 = 0, $small$0$i = 0.0, $small$1$i = 0.0;
 var $st$0 = 0, $st$0$lcssa351 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8109 = 0, $storemerge8109$ph = 0, $storemerge8170 = 0, $t$0 = 0, $t$1 = 0, $uglygep$i = 0, $uglygep296$i = 0, $uglygep300$i = 0, $uglygep300301$i = 0, $umax$i = 0, $umax297$i = 0, $umax297298299$i = 0, $w$$i = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0;
 var $w$25$i = 0, $w$38$i = 0, $wc = 0, $ws$0177 = 0, $ws$1188 = 0, $y$03$i = 0, $y$03$i$i = 0, $y$03$i117$i = 0, $y$03$i126$i = 0, $y$03$i141$i = 0, $y$03$i94$i = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0$lcssa$ph = 0, $z$0164 = 0, $z$1$lcssa$i = 0, $z$1260$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0;
 var $z$2$i$lcssa$lcssa = 0, $z$3$lcssa$i = 0, $z$3247$i = 0, $z$3247$us$i = 0, $z$4$i = 0, $z$4$us$i = 0, $z$5$i = 0, $z$5$i$lcssa = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $big$i = sp + 16|0;
 $e2$i = sp + 8|0;
 $buf$i = sp + 836|0;
 $0 = $buf$i;
 $ebuf0$i = sp + 824|0;
 $pad$i = sp + 568|0;
 $buf = sp + 528|0;
 $wc = sp;
 $mb = sp + 520|0;
 $1 = ($f|0)!=(0|0);
 $2 = (($buf) + 40|0);
 $3 = $2;
 $4 = (($buf) + 39|0);
 $5 = (($wc) + 4|0);
 $6 = $wc;
 $7 = (($ebuf0$i) + 12|0);
 $8 = (($ebuf0$i) + 11|0);
 $9 = $7;
 $10 = (($9) - ($0))|0;
 $11 = (-2 - ($0))|0;
 $12 = (($9) + 2)|0;
 $13 = (($big$i) + 288|0);
 $14 = (($buf$i) + 9|0);
 $15 = $14;
 $16 = (($buf$i) + 8|0);
 $1175 = 0;$1176 = 0;$23 = $fmt;$cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $17 = ($cnt$0|0)>(-1);
  do {
   if ($17) {
    $18 = (2147483647 - ($cnt$0))|0;
    $19 = ($l$0|0)>($18|0);
    if ($19) {
     $20 = (___errno_location()|0);
     HEAP32[$20>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $21 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $21;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $22 = HEAP8[$23>>0]|0;
  $24 = ($22<<24>>24)==(0);
  if ($24) {
   $cnt$1$lcssa = $cnt$1;$l10n$0$lcssa = $l10n$0;
   label = 429;
   break;
  }
  $1177 = $22;$26 = $23;
  while(1) {
   if ((($1177<<24>>24) == 0)) {
    $$lcssa344 = $26;
    label = 14;
    break;
   } else if ((($1177<<24>>24) == 37)) {
    $$lcssa = $26;
    label = 9;
    break;
   }
   $25 = (($26) + 1|0);
   $$pre = HEAP8[$25>>0]|0;
   $1177 = $$pre;$26 = $25;
  }
  if ((label|0) == 9) {
   label = 0;
   $28 = $$lcssa;$z$0164 = $$lcssa;
   while(1) {
    $27 = (($28) + 1|0);
    $29 = HEAP8[$27>>0]|0;
    $30 = ($29<<24>>24)==(37);
    if (!($30)) {
     $$lcssa107$ph = $28;$z$0$lcssa$ph = $z$0164;
     break;
    }
    $31 = (($z$0164) + 1|0);
    $32 = (($28) + 2|0);
    $33 = HEAP8[$32>>0]|0;
    $34 = ($33<<24>>24)==(37);
    if ($34) {
     $28 = $32;$z$0164 = $31;
    } else {
     $$lcssa107$ph = $32;$z$0$lcssa$ph = $31;
     break;
    }
   }
   $$lcssa107 = $$lcssa107$ph;$z$0$lcssa = $z$0$lcssa$ph;
  }
  else if ((label|0) == 14) {
   label = 0;
   $$lcssa107 = $$lcssa344;$z$0$lcssa = $$lcssa344;
  }
  $35 = $z$0$lcssa;
  $36 = $23;
  $37 = (($35) - ($36))|0;
  if ($1) {
   (___fwritex($23,$37,$f)|0);
  }
  $38 = ($z$0$lcssa|0)==($23|0);
  L24: do {
   if ($38) {
    $39 = (($$lcssa107) + 1|0);
    $40 = HEAP8[$39>>0]|0;
    $41 = $40 << 24 >> 24;
    $isdigittmp = (($41) + -48)|0;
    $isdigit = ($isdigittmp>>>0)<(10);
    if ($isdigit) {
     $42 = (($$lcssa107) + 2|0);
     $43 = HEAP8[$42>>0]|0;
     $44 = ($43<<24>>24)==(36);
     $45 = (($$lcssa107) + 3|0);
     $$93 = $44 ? $45 : $39;
     $$l10n$0 = $44 ? 1 : $l10n$0;
     $isdigittmp$ = $44 ? $isdigittmp : -1;
     $$pre269 = HEAP8[$$93>>0]|0;
     $47 = $$pre269;$argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $$93;
    } else {
     $47 = $40;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $39;
    }
    $46 = $47 << 24 >> 24;
    $48 = $46 & -32;
    $49 = ($48|0)==(32);
    if ($49) {
     $51 = $46;$56 = $47;$fl$0171 = 0;$storemerge8170 = $storemerge;
     while(1) {
      $50 = (($51) + -32)|0;
      $52 = 1 << $50;
      $53 = $52 & 75913;
      $54 = ($53|0)==(0);
      if ($54) {
       $$ph = $56;$fl$0111$ph = $fl$0171;$storemerge8109$ph = $storemerge8170;
       break;
      }
      $55 = $56 << 24 >> 24;
      $57 = (($55) + -32)|0;
      $58 = 1 << $57;
      $59 = $58 | $fl$0171;
      $60 = (($storemerge8170) + 1|0);
      $61 = HEAP8[$60>>0]|0;
      $62 = $61 << 24 >> 24;
      $63 = $62 & -32;
      $64 = ($63|0)==(32);
      if ($64) {
       $51 = $62;$56 = $61;$fl$0171 = $59;$storemerge8170 = $60;
      } else {
       $$ph = $61;$fl$0111$ph = $59;$storemerge8109$ph = $60;
       break;
      }
     }
     $65 = $$ph;$fl$0111 = $fl$0111$ph;$storemerge8109 = $storemerge8109$ph;
    } else {
     $65 = $47;$fl$0111 = 0;$storemerge8109 = $storemerge;
    }
    $66 = ($65<<24>>24)==(42);
    do {
     if ($66) {
      $67 = (($storemerge8109) + 1|0);
      $68 = HEAP8[$67>>0]|0;
      $69 = $68 << 24 >> 24;
      $isdigittmp11 = (($69) + -48)|0;
      $isdigit12 = ($isdigittmp11>>>0)<(10);
      if ($isdigit12) {
       $70 = (($storemerge8109) + 2|0);
       $71 = HEAP8[$70>>0]|0;
       $72 = ($71<<24>>24)==(36);
       if ($72) {
        $73 = (($nl_type) + ($isdigittmp11<<2)|0);
        HEAP32[$73>>2] = 10;
        $74 = HEAP8[$67>>0]|0;
        $75 = $74 << 24 >> 24;
        $76 = (($75) + -48)|0;
        $77 = (($nl_arg) + ($76<<3)|0);
        $78 = $77;
        $79 = $78;
        $80 = HEAP32[$79>>2]|0;
        $81 = (($78) + 4)|0;
        $82 = $81;
        $83 = HEAP32[$82>>2]|0;
        $84 = (($storemerge8109) + 3|0);
        $l10n$2 = 1;$storemerge13 = $84;$w$0 = $80;
       } else {
        label = 29;
       }
      } else {
       label = 29;
      }
      if ((label|0) == 29) {
       label = 0;
       $85 = ($l10n$1|0)==(0);
       if (!($85)) {
        $$0$ph340 = -1;
        label = 453;
        break L1;
       }
       if (!($1)) {
        $105 = $67;$fl$1 = $fl$0111;$l10n$3 = 0;$w$1 = 0;
        break;
       }
       $arglist_current = HEAP32[$ap>>2]|0;
       $86 = $arglist_current;
       $87 = (0 + 4|0);
       $expanded64 = $87;
       $expanded = (($expanded64) - 1)|0;
       $88 = (($86) + ($expanded))|0;
       $89 = (0 + 4|0);
       $expanded68 = $89;
       $expanded67 = (($expanded68) - 1)|0;
       $expanded66 = $expanded67 ^ -1;
       $90 = $88 & $expanded66;
       $91 = $90;
       $92 = HEAP32[$91>>2]|0;
       $arglist_next = (($91) + 4|0);
       HEAP32[$ap>>2] = $arglist_next;
       $l10n$2 = 0;$storemerge13 = $67;$w$0 = $92;
      }
      $93 = ($w$0|0)<(0);
      if ($93) {
       $94 = $fl$0111 | 8192;
       $95 = (0 - ($w$0))|0;
       $105 = $storemerge13;$fl$1 = $94;$l10n$3 = $l10n$2;$w$1 = $95;
      } else {
       $105 = $storemerge13;$fl$1 = $fl$0111;$l10n$3 = $l10n$2;$w$1 = $w$0;
      }
     } else {
      $96 = $65 << 24 >> 24;
      $isdigittmp1$i = (($96) + -48)|0;
      $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
      if ($isdigit2$i) {
       $100 = $storemerge8109;$i$03$i = 0;$isdigittmp4$i = $isdigittmp1$i;
       while(1) {
        $97 = ($i$03$i*10)|0;
        $98 = (($97) + ($isdigittmp4$i))|0;
        $99 = (($100) + 1|0);
        $101 = HEAP8[$99>>0]|0;
        $102 = $101 << 24 >> 24;
        $isdigittmp$i = (($102) + -48)|0;
        $isdigit$i = ($isdigittmp$i>>>0)<(10);
        if ($isdigit$i) {
         $100 = $99;$i$03$i = $98;$isdigittmp4$i = $isdigittmp$i;
        } else {
         $$lcssa345 = $98;$$lcssa346 = $99;
         break;
        }
       }
       $103 = ($$lcssa345|0)<(0);
       if ($103) {
        $$0$ph340 = -1;
        label = 453;
        break L1;
       } else {
        $105 = $$lcssa346;$fl$1 = $fl$0111;$l10n$3 = $l10n$1;$w$1 = $$lcssa345;
       }
      } else {
       $105 = $storemerge8109;$fl$1 = $fl$0111;$l10n$3 = $l10n$1;$w$1 = 0;
      }
     }
    } while(0);
    $104 = HEAP8[$105>>0]|0;
    $106 = ($104<<24>>24)==(46);
    do {
     if ($106) {
      $107 = (($105) + 1|0);
      $108 = HEAP8[$107>>0]|0;
      $109 = ($108<<24>>24)==(42);
      if (!($109)) {
       $136 = $108 << 24 >> 24;
       $isdigittmp1$i28 = (($136) + -48)|0;
       $isdigit2$i29 = ($isdigittmp1$i28>>>0)<(10);
       if (!($isdigit2$i29)) {
        $1178 = $107;$p$0 = 0;
        break;
       }
       $1179 = $107;$140 = $105;$i$03$i31 = 0;$isdigittmp4$i30 = $isdigittmp1$i28;
       while(1) {
        $137 = ($i$03$i31*10)|0;
        $138 = (($137) + ($isdigittmp4$i30))|0;
        $139 = (($140) + 2|0);
        $141 = HEAP8[$139>>0]|0;
        $142 = $141 << 24 >> 24;
        $isdigittmp$i32 = (($142) + -48)|0;
        $isdigit$i33 = ($isdigittmp$i32>>>0)<(10);
        if ($isdigit$i33) {
         $140$phi = $1179;$1179 = $139;$i$03$i31 = $138;$isdigittmp4$i30 = $isdigittmp$i32;$140 = $140$phi;
        } else {
         $$lcssa347 = $138;$$lcssa348 = $139;
         break;
        }
       }
       $1178 = $$lcssa348;$p$0 = $$lcssa347;
       break;
      }
      $110 = (($105) + 2|0);
      $111 = HEAP8[$110>>0]|0;
      $112 = $111 << 24 >> 24;
      $isdigittmp9 = (($112) + -48)|0;
      $isdigit10 = ($isdigittmp9>>>0)<(10);
      if ($isdigit10) {
       $113 = (($105) + 3|0);
       $114 = HEAP8[$113>>0]|0;
       $115 = ($114<<24>>24)==(36);
       if ($115) {
        $116 = (($nl_type) + ($isdigittmp9<<2)|0);
        HEAP32[$116>>2] = 10;
        $117 = HEAP8[$110>>0]|0;
        $118 = $117 << 24 >> 24;
        $119 = (($118) + -48)|0;
        $120 = (($nl_arg) + ($119<<3)|0);
        $121 = $120;
        $122 = $121;
        $123 = HEAP32[$122>>2]|0;
        $124 = (($121) + 4)|0;
        $125 = $124;
        $126 = HEAP32[$125>>2]|0;
        $127 = (($105) + 4|0);
        $1178 = $127;$p$0 = $123;
        break;
       }
      }
      $128 = ($l10n$3|0)==(0);
      if (!($128)) {
       $$0$ph340 = -1;
       label = 453;
       break L1;
      }
      if ($1) {
       $arglist_current2 = HEAP32[$ap>>2]|0;
       $129 = $arglist_current2;
       $130 = (0 + 4|0);
       $expanded71 = $130;
       $expanded70 = (($expanded71) - 1)|0;
       $131 = (($129) + ($expanded70))|0;
       $132 = (0 + 4|0);
       $expanded75 = $132;
       $expanded74 = (($expanded75) - 1)|0;
       $expanded73 = $expanded74 ^ -1;
       $133 = $131 & $expanded73;
       $134 = $133;
       $135 = HEAP32[$134>>2]|0;
       $arglist_next3 = (($134) + 4|0);
       HEAP32[$ap>>2] = $arglist_next3;
       $1178 = $110;$p$0 = $135;
      } else {
       $1178 = $110;$p$0 = 0;
      }
     } else {
      $1178 = $105;$p$0 = -1;
     }
    } while(0);
    $144 = $1178;$st$0 = 0;
    while(1) {
     $143 = HEAP8[$144>>0]|0;
     $145 = $143 << 24 >> 24;
     $146 = (($145) + -65)|0;
     $147 = ($146>>>0)>(57);
     if ($147) {
      label = 452;
      break L1;
     }
     $148 = (($144) + 1|0);
     $149 = ((3968 + (($st$0*58)|0)|0) + ($146)|0);
     $150 = HEAP8[$149>>0]|0;
     $151 = $150&255;
     $152 = (($151) + -1)|0;
     $153 = ($152>>>0)<(8);
     if ($153) {
      $144 = $148;$st$0 = $151;
     } else {
      $$lcssa350 = $144;$$lcssa352 = $148;$$lcssa353 = $150;$$lcssa354 = $151;$st$0$lcssa351 = $st$0;
      break;
     }
    }
    $154 = ($$lcssa353<<24>>24)==(0);
    if ($154) {
     $$0$ph340 = -1;
     label = 453;
     break L1;
    }
    $155 = ($$lcssa353<<24>>24)==(19);
    $156 = ($argpos$0|0)>(-1);
    L74: do {
     if ($155) {
      if ($156) {
       $$0$ph340 = -1;
       label = 453;
       break L1;
      } else {
       $1180 = $1175;$1181 = $1176;
       label = 71;
      }
     } else {
      if ($156) {
       $157 = (($nl_type) + ($argpos$0<<2)|0);
       HEAP32[$157>>2] = $$lcssa354;
       $158 = (($nl_arg) + ($argpos$0<<3)|0);
       $159 = $158;
       $160 = $159;
       $161 = HEAP32[$160>>2]|0;
       $162 = (($159) + 4)|0;
       $163 = $162;
       $164 = HEAP32[$163>>2]|0;
       $1180 = $164;$1181 = $161;
       label = 71;
       break;
      }
      if (!($1)) {
       $$0$ph340 = 0;
       label = 453;
       break L1;
      }
      $165 = ($$lcssa353&255)>(20);
      if ($165) {
       $1182 = $$lcssa352;$267 = $1176;$294 = $1175;
      } else {
       do {
        switch ($$lcssa354|0) {
        case 11:  {
         $arglist_current11 = HEAP32[$ap>>2]|0;
         $183 = $arglist_current11;
         $184 = (0 + 4|0);
         $expanded92 = $184;
         $expanded91 = (($expanded92) - 1)|0;
         $185 = (($183) + ($expanded91))|0;
         $186 = (0 + 4|0);
         $expanded96 = $186;
         $expanded95 = (($expanded96) - 1)|0;
         $expanded94 = $expanded95 ^ -1;
         $187 = $185 & $expanded94;
         $188 = $187;
         $189 = HEAP32[$188>>2]|0;
         $arglist_next12 = (($188) + 4|0);
         HEAP32[$ap>>2] = $arglist_next12;
         $1182 = $$lcssa352;$267 = $189;$294 = 0;
         break L74;
         break;
        }
        case 12:  {
         $arglist_current14 = HEAP32[$ap>>2]|0;
         $190 = $arglist_current14;
         $191 = (0 + 8|0);
         $expanded99 = $191;
         $expanded98 = (($expanded99) - 1)|0;
         $192 = (($190) + ($expanded98))|0;
         $193 = (0 + 8|0);
         $expanded103 = $193;
         $expanded102 = (($expanded103) - 1)|0;
         $expanded101 = $expanded102 ^ -1;
         $194 = $192 & $expanded101;
         $195 = $194;
         $196 = $195;
         $197 = $196;
         $198 = HEAP32[$197>>2]|0;
         $199 = (($196) + 4)|0;
         $200 = $199;
         $201 = HEAP32[$200>>2]|0;
         $arglist_next15 = (($195) + 8|0);
         HEAP32[$ap>>2] = $arglist_next15;
         $1182 = $$lcssa352;$267 = $198;$294 = $201;
         break L74;
         break;
        }
        case 16:  {
         $arglist_current26 = HEAP32[$ap>>2]|0;
         $233 = $arglist_current26;
         $234 = (0 + 4|0);
         $expanded127 = $234;
         $expanded126 = (($expanded127) - 1)|0;
         $235 = (($233) + ($expanded126))|0;
         $236 = (0 + 4|0);
         $expanded131 = $236;
         $expanded130 = (($expanded131) - 1)|0;
         $expanded129 = $expanded130 ^ -1;
         $237 = $235 & $expanded129;
         $238 = $237;
         $239 = HEAP32[$238>>2]|0;
         $arglist_next27 = (($238) + 4|0);
         HEAP32[$ap>>2] = $arglist_next27;
         $$mask$i39 = $239 & 255;
         $1182 = $$lcssa352;$267 = $$mask$i39;$294 = 0;
         break L74;
         break;
        }
        case 10:  {
         $arglist_current8 = HEAP32[$ap>>2]|0;
         $174 = $arglist_current8;
         $175 = (0 + 4|0);
         $expanded85 = $175;
         $expanded84 = (($expanded85) - 1)|0;
         $176 = (($174) + ($expanded84))|0;
         $177 = (0 + 4|0);
         $expanded89 = $177;
         $expanded88 = (($expanded89) - 1)|0;
         $expanded87 = $expanded88 ^ -1;
         $178 = $176 & $expanded87;
         $179 = $178;
         $180 = HEAP32[$179>>2]|0;
         $arglist_next9 = (($179) + 4|0);
         HEAP32[$ap>>2] = $arglist_next9;
         $181 = ($180|0)<(0);
         $182 = $181 << 31 >> 31;
         $1182 = $$lcssa352;$267 = $180;$294 = $182;
         break L74;
         break;
        }
        case 18:  {
         $arglist_current32 = HEAP32[$ap>>2]|0;
         $249 = $arglist_current32;
         $250 = (0 + 8|0);
         $expanded141 = $250;
         $expanded140 = (($expanded141) - 1)|0;
         $251 = (($249) + ($expanded140))|0;
         $252 = (0 + 8|0);
         $expanded145 = $252;
         $expanded144 = (($expanded145) - 1)|0;
         $expanded143 = $expanded144 ^ -1;
         $253 = $251 & $expanded143;
         $254 = $253;
         $255 = +HEAPF64[$254>>3];
         $arglist_next33 = (($254) + 8|0);
         HEAP32[$ap>>2] = $arglist_next33;
         HEAPF64[tempDoublePtr>>3] = $255;$256 = HEAP32[tempDoublePtr>>2]|0;
         $257 = HEAP32[tempDoublePtr+4>>2]|0;
         $1182 = $$lcssa352;$267 = $256;$294 = $257;
         break L74;
         break;
        }
        case 14:  {
         $arglist_current20 = HEAP32[$ap>>2]|0;
         $214 = $arglist_current20;
         $215 = (0 + 4|0);
         $expanded113 = $215;
         $expanded112 = (($expanded113) - 1)|0;
         $216 = (($214) + ($expanded112))|0;
         $217 = (0 + 4|0);
         $expanded117 = $217;
         $expanded116 = (($expanded117) - 1)|0;
         $expanded115 = $expanded116 ^ -1;
         $218 = $216 & $expanded115;
         $219 = $218;
         $220 = HEAP32[$219>>2]|0;
         $arglist_next21 = (($219) + 4|0);
         HEAP32[$ap>>2] = $arglist_next21;
         $$mask1$i38 = $220 & 65535;
         $1182 = $$lcssa352;$267 = $$mask1$i38;$294 = 0;
         break L74;
         break;
        }
        case 9:  {
         $arglist_current5 = HEAP32[$ap>>2]|0;
         $166 = $arglist_current5;
         $167 = (0 + 4|0);
         $expanded78 = $167;
         $expanded77 = (($expanded78) - 1)|0;
         $168 = (($166) + ($expanded77))|0;
         $169 = (0 + 4|0);
         $expanded82 = $169;
         $expanded81 = (($expanded82) - 1)|0;
         $expanded80 = $expanded81 ^ -1;
         $170 = $168 & $expanded80;
         $171 = $170;
         $172 = HEAP32[$171>>2]|0;
         $arglist_next6 = (($171) + 4|0);
         HEAP32[$ap>>2] = $arglist_next6;
         $173 = $172;
         $1182 = $$lcssa352;$267 = $173;$294 = $1175;
         break L74;
         break;
        }
        case 17:  {
         $arglist_current29 = HEAP32[$ap>>2]|0;
         $240 = $arglist_current29;
         $241 = (0 + 8|0);
         $expanded134 = $241;
         $expanded133 = (($expanded134) - 1)|0;
         $242 = (($240) + ($expanded133))|0;
         $243 = (0 + 8|0);
         $expanded138 = $243;
         $expanded137 = (($expanded138) - 1)|0;
         $expanded136 = $expanded137 ^ -1;
         $244 = $242 & $expanded136;
         $245 = $244;
         $246 = +HEAPF64[$245>>3];
         $arglist_next30 = (($245) + 8|0);
         HEAP32[$ap>>2] = $arglist_next30;
         HEAPF64[tempDoublePtr>>3] = $246;$247 = HEAP32[tempDoublePtr>>2]|0;
         $248 = HEAP32[tempDoublePtr+4>>2]|0;
         $1182 = $$lcssa352;$267 = $247;$294 = $248;
         break L74;
         break;
        }
        case 15:  {
         $arglist_current23 = HEAP32[$ap>>2]|0;
         $221 = $arglist_current23;
         $222 = (0 + 4|0);
         $expanded120 = $222;
         $expanded119 = (($expanded120) - 1)|0;
         $223 = (($221) + ($expanded119))|0;
         $224 = (0 + 4|0);
         $expanded124 = $224;
         $expanded123 = (($expanded124) - 1)|0;
         $expanded122 = $expanded123 ^ -1;
         $225 = $223 & $expanded122;
         $226 = $225;
         $227 = HEAP32[$226>>2]|0;
         $arglist_next24 = (($226) + 4|0);
         HEAP32[$ap>>2] = $arglist_next24;
         $228 = $227&255;
         $229 = $228 << 24 >> 24;
         $230 = ($229|0)<(0);
         $231 = $230 << 31 >> 31;
         $sext = $227 << 24;
         $232 = $sext >> 24;
         $1182 = $$lcssa352;$267 = $232;$294 = $231;
         break L74;
         break;
        }
        case 13:  {
         $arglist_current17 = HEAP32[$ap>>2]|0;
         $202 = $arglist_current17;
         $203 = (0 + 4|0);
         $expanded106 = $203;
         $expanded105 = (($expanded106) - 1)|0;
         $204 = (($202) + ($expanded105))|0;
         $205 = (0 + 4|0);
         $expanded110 = $205;
         $expanded109 = (($expanded110) - 1)|0;
         $expanded108 = $expanded109 ^ -1;
         $206 = $204 & $expanded108;
         $207 = $206;
         $208 = HEAP32[$207>>2]|0;
         $arglist_next18 = (($207) + 4|0);
         HEAP32[$ap>>2] = $arglist_next18;
         $209 = $208&65535;
         $210 = $209 << 16 >> 16;
         $211 = ($210|0)<(0);
         $212 = $211 << 31 >> 31;
         $sext94 = $208 << 16;
         $213 = $sext94 >> 16;
         $1182 = $$lcssa352;$267 = $213;$294 = $212;
         break L74;
         break;
        }
        default: {
         $1182 = $$lcssa352;$267 = $1176;$294 = $1175;
         break L74;
        }
        }
       } while(0);
      }
     }
    } while(0);
    if ((label|0) == 71) {
     label = 0;
     if ($1) {
      $1182 = $$lcssa352;$267 = $1181;$294 = $1180;
     } else {
      $$be = $$lcssa352;$$be341 = $1180;$$be342 = $1181;$l$0$be = $37;$l10n$0$be = $l10n$3;
      break;
     }
    }
    $258 = HEAP8[$$lcssa350>>0]|0;
    $259 = $258 << 24 >> 24;
    $260 = ($st$0$lcssa351|0)!=(0);
    $261 = $259 & 15;
    $262 = ($261|0)==(3);
    $or$cond15 = $260 & $262;
    $263 = $259 & -33;
    $t$0 = $or$cond15 ? $263 : $259;
    $264 = $fl$1 & 8192;
    $265 = ($264|0)==(0);
    $266 = $fl$1 & -65537;
    $fl$1$ = $265 ? $fl$1 : $266;
    L96: do {
     switch ($t$0|0) {
     case 105: case 100:  {
      $332 = ($294|0)<(0);
      if ($332) {
       $333 = (_i64Subtract(0,0,($267|0),($294|0))|0);
       $334 = tempRet0;
       $339 = $334;$341 = $333;$pl$0 = 1;$prefix$0 = 4432;
       label = 96;
       break L96;
      }
      $335 = $fl$1$ & 2048;
      $336 = ($335|0)==(0);
      if ($336) {
       $337 = $fl$1$ & 1;
       $338 = ($337|0)==(0);
       $$ = $338 ? 4432 : ((4432 + 2|0));
       $339 = $294;$341 = $267;$pl$0 = $337;$prefix$0 = $$;
       label = 96;
      } else {
       $339 = $294;$341 = $267;$pl$0 = 1;$prefix$0 = ((4432 + 1|0));
       label = 96;
      }
      break;
     }
     case 88: case 120:  {
      $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
      label = 82;
      break;
     }
     case 67:  {
      HEAP32[$wc>>2] = $267;
      HEAP32[$5>>2] = 0;
      $1187 = $wc;$1188 = $6;$p$4271 = -1;
      label = 114;
      break;
     }
     case 83:  {
      $393 = $267;
      $394 = ($p$0|0)==(0);
      if ($394) {
       $1189 = $267;$1190 = $393;$i$0$lcssa272 = 0;
       label = 119;
      } else {
       $1187 = $393;$1188 = $267;$p$4271 = $p$0;
       label = 114;
      }
      break;
     }
     case 99:  {
      $381 = $267&255;
      HEAP8[$4>>0] = $381;
      $1183 = $294;$1184 = $267;$a$2 = $4;$fl$6 = $266;$p$5 = 1;$pl$2 = 0;$prefix$2 = 4432;$z$2 = $2;
      break;
     }
     case 109:  {
      $382 = (___errno_location()|0);
      $383 = HEAP32[$382>>2]|0;
      $384 = (_strerror(($383|0))|0);
      $a$1 = $384;
      label = 109;
      break;
     }
     case 115:  {
      $385 = $267;
      $386 = ($267|0)==(0);
      $$21 = $386 ? 4448 : $385;
      $a$1 = $$21;
      label = 109;
      break;
     }
     case 111:  {
      $315 = ($267|0)==(0);
      $316 = ($294|0)==(0);
      $317 = $315 & $316;
      if ($317) {
       $$0$lcssa$i52 = $2;
      } else {
       $$03$i49 = $2;$319 = $267;$323 = $294;
       while(1) {
        $318 = $319 & 7;
        $320 = $318 | 48;
        $321 = $320&255;
        $322 = (($$03$i49) + -1|0);
        HEAP8[$322>>0] = $321;
        $324 = (_bitshift64Lshr(($319|0),($323|0),3)|0);
        $325 = tempRet0;
        $326 = ($324|0)==(0);
        $327 = ($325|0)==(0);
        $328 = $326 & $327;
        if ($328) {
         $$lcssa385 = $322;
         break;
        } else {
         $$03$i49 = $322;$319 = $324;$323 = $325;
        }
       }
       $$0$lcssa$i52 = $$lcssa385;
      }
      $329 = $fl$1$ & 8;
      $330 = ($329|0)==(0);
      $or$cond19 = $330 | $317;
      $$25 = $or$cond19 ? 4432 : ((4432 + 5|0));
      $331 = $or$cond19&1;
      $$26 = $331 ^ 1;
      $369 = $267;$371 = $294;$a$0 = $$0$lcssa$i52;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $$26;$prefix$1 = $$25;
      label = 104;
      break;
     }
     case 117:  {
      $339 = $294;$341 = $267;$pl$0 = 0;$prefix$0 = 4432;
      label = 96;
      break;
     }
     case 112:  {
      $289 = ($p$0>>>0)>(8);
      $290 = $289 ? $p$0 : 8;
      $291 = $fl$1$ | 8;
      $fl$3 = $291;$p$1 = $290;$t$1 = 120;
      label = 82;
      break;
     }
     case 110:  {
      switch ($st$0$lcssa351|0) {
      case 1:  {
       $269 = $267;
       HEAP32[$269>>2] = $cnt$1;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 2:  {
       $270 = ($cnt$1|0)<(0);
       $271 = $270 << 31 >> 31;
       $272 = $267;
       $273 = $272;
       $274 = $273;
       HEAP32[$274>>2] = $cnt$1;
       $275 = (($273) + 4)|0;
       $276 = $275;
       HEAP32[$276>>2] = $271;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 3:  {
       $277 = $cnt$1&65535;
       $278 = $267;
       HEAP16[$278>>1] = $277;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 4:  {
       $279 = $cnt$1&255;
       $280 = $267;
       HEAP8[$280>>0] = $279;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 6:  {
       $281 = $267;
       HEAP32[$281>>2] = $cnt$1;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 7:  {
       $282 = ($cnt$1|0)<(0);
       $283 = $282 << 31 >> 31;
       $284 = $267;
       $285 = $284;
       $286 = $285;
       HEAP32[$286>>2] = $cnt$1;
       $287 = (($285) + 4)|0;
       $288 = $287;
       HEAP32[$288>>2] = $283;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 0:  {
       $268 = $267;
       HEAP32[$268>>2] = $cnt$1;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      default: {
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
      }
      }
      break;
     }
     case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
      HEAP32[tempDoublePtr>>2] = $267;HEAP32[tempDoublePtr+4>>2] = $294;$432 = +HEAPF64[tempDoublePtr>>3];
      HEAP32[$e2$i>>2] = 0;
      $433 = ($294|0)<(0);
      if ($433) {
       $434 = -$432;
       $$013$i = $434;$pl$0$i = 1;$prefix$0$i = 4456;
      } else {
       $435 = $fl$1$ & 2048;
       $436 = ($435|0)==(0);
       if ($436) {
        $437 = $fl$1$ & 1;
        $438 = ($437|0)==(0);
        $$$i = $438 ? ((4456 + 1|0)) : ((4456 + 6|0));
        $$013$i = $432;$pl$0$i = $437;$prefix$0$i = $$$i;
       } else {
        $$013$i = $432;$pl$0$i = 1;$prefix$0$i = ((4456 + 3|0));
       }
      }
      HEAPF64[tempDoublePtr>>3] = $$013$i;$439 = HEAP32[tempDoublePtr>>2]|0;
      $440 = HEAP32[tempDoublePtr+4>>2]|0;
      $441 = $440 & 2146435072;
      $442 = ($441>>>0)<(2146435072);
      $443 = (0)<(0);
      $444 = ($441|0)==(2146435072);
      $445 = $444 & $443;
      $446 = $442 | $445;
      do {
       if ($446) {
        $472 = (+_frexpl($$013$i,$e2$i));
        $473 = $472 * 2.0;
        $474 = $473 != 0.0;
        if ($474) {
         $475 = HEAP32[$e2$i>>2]|0;
         $476 = (($475) + -1)|0;
         HEAP32[$e2$i>>2] = $476;
        }
        $477 = $t$0 | 32;
        $478 = ($477|0)==(97);
        if ($478) {
         $479 = $t$0 & 32;
         $480 = ($479|0)==(0);
         $481 = (($prefix$0$i) + 9|0);
         $prefix$0$$i = $480 ? $prefix$0$i : $481;
         $482 = $pl$0$i | 2;
         $483 = ($p$0>>>0)>(11);
         do {
          if ($483) {
           $$1$i = $473;
          } else {
           $484 = (12 - ($p$0))|0;
           $re$1187$i = $484;$round$0186$i = 8.0;
           while(1) {
            $485 = (($re$1187$i) + -1)|0;
            $486 = $round$0186$i * 16.0;
            $487 = ($485|0)==(0);
            if ($487) {
             $$lcssa378 = $486;
             break;
            } else {
             $re$1187$i = $485;$round$0186$i = $486;
            }
           }
           $488 = HEAP8[$prefix$0$$i>>0]|0;
           $489 = ($488<<24>>24)==(45);
           if ($489) {
            $490 = -$473;
            $491 = $490 - $$lcssa378;
            $492 = $$lcssa378 + $491;
            $493 = -$492;
            $$1$i = $493;
            break;
           } else {
            $494 = $473 + $$lcssa378;
            $495 = $494 - $$lcssa378;
            $$1$i = $495;
            break;
           }
          }
         } while(0);
         $496 = HEAP32[$e2$i>>2]|0;
         $497 = ($496|0)<(0);
         $498 = (0 - ($496))|0;
         $499 = $497 ? $498 : $496;
         $500 = ($499|0)<(0);
         if ($500) {
          $501 = ($499|0)<(0);
          $502 = $501 << 31 >> 31;
          $$05$i$i = $7;$503 = $499;$504 = $502;
          while(1) {
           $505 = (___uremdi3(($503|0),($504|0),10,0)|0);
           $506 = tempRet0;
           $507 = $505 | 48;
           $508 = $507&255;
           $509 = (($$05$i$i) + -1|0);
           HEAP8[$509>>0] = $508;
           $510 = (___udivdi3(($503|0),($504|0),10,0)|0);
           $511 = tempRet0;
           $512 = ($504>>>0)>(9);
           $513 = ($503>>>0)>(4294967295);
           $514 = ($504|0)==(9);
           $515 = $514 & $513;
           $516 = $512 | $515;
           if ($516) {
            $$05$i$i = $509;$503 = $510;$504 = $511;
           } else {
            $$lcssa379 = $509;$1191 = $510;$1192 = $511;
            break;
           }
          }
          $$0$lcssa$i56$i = $$lcssa379;$$01$lcssa$off0$i$i = $1191;
         } else {
          $$0$lcssa$i56$i = $7;$$01$lcssa$off0$i$i = $499;
         }
         $517 = ($$01$lcssa$off0$i$i|0)==(0);
         if ($517) {
          $$1$lcssa$i$i = $$0$lcssa$i56$i;
         } else {
          $$12$i$i = $$0$lcssa$i56$i;$y$03$i$i = $$01$lcssa$off0$i$i;
          while(1) {
           $518 = (($y$03$i$i>>>0) % 10)&-1;
           $519 = $518 | 48;
           $520 = $519&255;
           $521 = (($$12$i$i) + -1|0);
           HEAP8[$521>>0] = $520;
           $522 = (($y$03$i$i>>>0) / 10)&-1;
           $523 = ($y$03$i$i>>>0)<(10);
           if ($523) {
            $$lcssa381 = $521;
            break;
           } else {
            $$12$i$i = $521;$y$03$i$i = $522;
           }
          }
          $$1$lcssa$i$i = $$lcssa381;
         }
         $524 = ($$1$lcssa$i$i|0)==($7|0);
         if ($524) {
          HEAP8[$8>>0] = 48;
          $estr$0$i = $8;
         } else {
          $estr$0$i = $$1$lcssa$i$i;
         }
         $525 = HEAP32[$e2$i>>2]|0;
         $526 = $525 >> 31;
         $527 = $526 & 2;
         $528 = (($527) + 43)|0;
         $529 = $528&255;
         $530 = (($estr$0$i) + -1|0);
         HEAP8[$530>>0] = $529;
         $531 = (($t$0) + 15)|0;
         $532 = $531&255;
         $533 = (($estr$0$i) + -2|0);
         HEAP8[$533>>0] = $532;
         $534 = $fl$1$ & 8;
         $535 = ($534|0)==(0);
         do {
          if ($535) {
           $notrhs$i = ($p$0|0)<(1);
           if ($notrhs$i) {
            $$2$us$us$i = $$1$i;$s$0$us$us$i = $buf$i;
            while(1) {
             $536 = (~~(($$2$us$us$i)));
             $537 = (4512 + ($536)|0);
             $538 = HEAP8[$537>>0]|0;
             $539 = $538&255;
             $540 = $539 | $479;
             $541 = $540&255;
             $542 = (($s$0$us$us$i) + 1|0);
             HEAP8[$s$0$us$us$i>>0] = $541;
             $543 = (+($536|0));
             $544 = $$2$us$us$i - $543;
             $545 = $544 * 16.0;
             $546 = $542;
             $547 = (($546) - ($0))|0;
             $548 = ($547|0)!=(1);
             $notlhs$us$us$i = $545 == 0.0;
             $or$cond$i80 = $548 | $notlhs$us$us$i;
             if ($or$cond$i80) {
              $s$1$us$us$i = $542;
             } else {
              $549 = (($s$0$us$us$i) + 2|0);
              HEAP8[$542>>0] = 46;
              $s$1$us$us$i = $549;
             }
             $550 = $545 != 0.0;
             if ($550) {
              $$2$us$us$i = $545;$s$0$us$us$i = $s$1$us$us$i;
             } else {
              $s$1$us$us$i$lcssa = $s$1$us$us$i;
              break;
             }
            }
            $s$1$lcssa$i = $s$1$us$us$i$lcssa;
            break;
           } else {
            $$2$us$i = $$1$i;$s$0$us$i = $buf$i;
            while(1) {
             $551 = (~~(($$2$us$i)));
             $552 = (4512 + ($551)|0);
             $553 = HEAP8[$552>>0]|0;
             $554 = $553&255;
             $555 = $554 | $479;
             $556 = $555&255;
             $557 = (($s$0$us$i) + 1|0);
             HEAP8[$s$0$us$i>>0] = $556;
             $558 = (+($551|0));
             $559 = $$2$us$i - $558;
             $560 = $559 * 16.0;
             $561 = $557;
             $562 = (($561) - ($0))|0;
             $563 = ($562|0)==(1);
             if ($563) {
              $564 = (($s$0$us$i) + 2|0);
              HEAP8[$557>>0] = 46;
              $s$1$us$i = $564;
             } else {
              $s$1$us$i = $557;
             }
             $565 = $560 != 0.0;
             if ($565) {
              $$2$us$i = $560;$s$0$us$i = $s$1$us$i;
             } else {
              $s$1$us$i$lcssa = $s$1$us$i;
              break;
             }
            }
            $s$1$lcssa$i = $s$1$us$i$lcssa;
            break;
           }
          } else {
           $$2$i = $$1$i;$s$0$i = $buf$i;
           while(1) {
            $566 = (~~(($$2$i)));
            $567 = (4512 + ($566)|0);
            $568 = HEAP8[$567>>0]|0;
            $569 = $568&255;
            $570 = $569 | $479;
            $571 = $570&255;
            $572 = (($s$0$i) + 1|0);
            HEAP8[$s$0$i>>0] = $571;
            $573 = (+($566|0));
            $574 = $$2$i - $573;
            $575 = $574 * 16.0;
            $576 = $572;
            $577 = (($576) - ($0))|0;
            $578 = ($577|0)==(1);
            if ($578) {
             $579 = (($s$0$i) + 2|0);
             HEAP8[$572>>0] = 46;
             $s$1$i = $579;
            } else {
             $s$1$i = $572;
            }
            $580 = $575 != 0.0;
            if ($580) {
             $$2$i = $575;$s$0$i = $s$1$i;
            } else {
             $s$1$i$lcssa = $s$1$i;
             break;
            }
           }
           $s$1$lcssa$i = $s$1$i$lcssa;
          }
         } while(0);
         $581 = ($p$0|0)!=(0);
         $$pre308$i = $s$1$lcssa$i;
         $582 = (($11) + ($$pre308$i))|0;
         $583 = ($582|0)<($p$0|0);
         $or$cond274 = $581 & $583;
         $584 = $533;
         if ($or$cond274) {
          $585 = (($12) + ($p$0))|0;
          $586 = (($585) - ($584))|0;
          $l$0$i = $586;
         } else {
          $587 = (($10) - ($584))|0;
          $588 = (($587) + ($$pre308$i))|0;
          $l$0$i = $588;
         }
         $589 = (($l$0$i) + ($482))|0;
         $590 = $fl$1$ & 73728;
         $591 = ($590|0)==(0);
         $592 = ($w$1|0)>($589|0);
         $or$cond$i60$i = $591 & $592;
         if ($or$cond$i60$i) {
          $593 = (($w$1) - ($589))|0;
          $594 = ($593>>>0)>(256);
          $595 = $594 ? 256 : $593;
          _memset(($pad$i|0),32,($595|0))|0;
          $596 = ($593>>>0)>(255);
          if ($596) {
           $$01$i62$i = $593;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $597 = (($$01$i62$i) + -256)|0;
            $598 = ($597>>>0)>(255);
            if ($598) {
             $$01$i62$i = $597;
            } else {
             break;
            }
           }
           $599 = $593 & 255;
           $$0$lcssa$i64$i = $599;
          } else {
           $$0$lcssa$i64$i = $593;
          }
          (___fwritex($pad$i,$$0$lcssa$i64$i,$f)|0);
         }
         (___fwritex($prefix$0$$i,$482,$f)|0);
         $600 = ($590|0)==(65536);
         $or$cond$i67$i = $600 & $592;
         if ($or$cond$i67$i) {
          $601 = (($w$1) - ($589))|0;
          $602 = ($601>>>0)>(256);
          $603 = $602 ? 256 : $601;
          _memset(($pad$i|0),48,($603|0))|0;
          $604 = ($601>>>0)>(255);
          if ($604) {
           $$01$i69$i = $601;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $605 = (($$01$i69$i) + -256)|0;
            $606 = ($605>>>0)>(255);
            if ($606) {
             $$01$i69$i = $605;
            } else {
             break;
            }
           }
           $607 = $601 & 255;
           $$0$lcssa$i71$i = $607;
          } else {
           $$0$lcssa$i71$i = $601;
          }
          (___fwritex($pad$i,$$0$lcssa$i71$i,$f)|0);
         }
         $608 = (($$pre308$i) - ($0))|0;
         (___fwritex($buf$i,$608,$f)|0);
         $609 = $533;
         $610 = (($9) - ($609))|0;
         $611 = (($l$0$i) - ($610))|0;
         $612 = (($611) - ($608))|0;
         $613 = ($612|0)>(0);
         if ($613) {
          $614 = ($612>>>0)>(256);
          $615 = $614 ? 256 : $612;
          _memset(($pad$i|0),48,($615|0))|0;
          $616 = ($612>>>0)>(255);
          if ($616) {
           $$01$i75$i = $612;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $617 = (($$01$i75$i) + -256)|0;
            $618 = ($617>>>0)>(255);
            if ($618) {
             $$01$i75$i = $617;
            } else {
             break;
            }
           }
           $619 = $612 & 255;
           $$0$lcssa$i77$i = $619;
          } else {
           $$0$lcssa$i77$i = $612;
          }
          (___fwritex($pad$i,$$0$lcssa$i77$i,$f)|0);
         }
         (___fwritex($533,$610,$f)|0);
         $620 = ($590|0)==(8192);
         $or$cond$i80$i = $620 & $592;
         if ($or$cond$i80$i) {
          $621 = (($w$1) - ($589))|0;
          $622 = ($621>>>0)>(256);
          $623 = $622 ? 256 : $621;
          _memset(($pad$i|0),32,($623|0))|0;
          $624 = ($621>>>0)>(255);
          if ($624) {
           $$01$i82$i = $621;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $625 = (($$01$i82$i) + -256)|0;
            $626 = ($625>>>0)>(255);
            if ($626) {
             $$01$i82$i = $625;
            } else {
             break;
            }
           }
           $627 = $621 & 255;
           $$0$lcssa$i84$i = $627;
          } else {
           $$0$lcssa$i84$i = $621;
          }
          (___fwritex($pad$i,$$0$lcssa$i84$i,$f)|0);
         }
         $w$25$i = $592 ? $w$1 : $589;
         $$0$i = $w$25$i;
         break;
        }
        $628 = ($p$0|0)<(0);
        $$p$i = $628 ? 6 : $p$0;
        if ($474) {
         $629 = $473 * 268435456.0;
         $630 = HEAP32[$e2$i>>2]|0;
         $631 = (($630) + -28)|0;
         HEAP32[$e2$i>>2] = $631;
         $$3$i = $629;$632 = $631;
        } else {
         $$pre$i = HEAP32[$e2$i>>2]|0;
         $$3$i = $473;$632 = $$pre$i;
        }
        $633 = ($632|0)<(0);
        $$39$i = $633 ? $big$i : $13;
        $634 = $$39$i;
        $$4$i = $$3$i;$z$0$i = $$39$i;
        while(1) {
         $635 = (~~(($$4$i))>>>0);
         HEAP32[$z$0$i>>2] = $635;
         $636 = (($z$0$i) + 4|0);
         $637 = (+($635>>>0));
         $638 = $$4$i - $637;
         $639 = $638 * 1.0E+9;
         $640 = $639 != 0.0;
         if ($640) {
          $$4$i = $639;$z$0$i = $636;
         } else {
          $$lcssa355 = $636;
          break;
         }
        }
        $$pr$i = HEAP32[$e2$i>>2]|0;
        $641 = ($$pr$i|0)>(0);
        if ($641) {
         $642 = $$pr$i;$a$1261$i = $$39$i;$z$1260$i = $$lcssa355;
         while(1) {
          $643 = ($642|0)>(29);
          $644 = $643 ? 29 : $642;
          $d$0253$i = (($z$1260$i) + -4|0);
          $645 = ($d$0253$i>>>0)<($a$1261$i>>>0);
          do {
           if ($645) {
            $a$2$ph$i = $a$1261$i;
           } else {
            $655 = $z$1260$i;$carry$0254$i = 0;$d$0255$i = $d$0253$i;
            while(1) {
             $646 = HEAP32[$d$0255$i>>2]|0;
             $647 = (_bitshift64Shl(($646|0),0,($644|0))|0);
             $648 = tempRet0;
             $649 = (_i64Add(($647|0),($648|0),($carry$0254$i|0),0)|0);
             $650 = tempRet0;
             $651 = (___uremdi3(($649|0),($650|0),1000000000,0)|0);
             $652 = tempRet0;
             HEAP32[$d$0255$i>>2] = $651;
             $653 = (___udivdi3(($649|0),($650|0),1000000000,0)|0);
             $654 = tempRet0;
             $d$0$i = (($655) + -8|0);
             $656 = ($d$0$i>>>0)<($a$1261$i>>>0);
             if ($656) {
              $$lcssa356 = $653;
              break;
             } else {
              $655$phi = $d$0255$i;$carry$0254$i = $653;$d$0255$i = $d$0$i;$655 = $655$phi;
             }
            }
            $657 = ($$lcssa356|0)==(0);
            if ($657) {
             $a$2$ph$i = $a$1261$i;
             break;
            }
            $658 = (($a$1261$i) + -4|0);
            HEAP32[$658>>2] = $$lcssa356;
            $a$2$ph$i = $658;
           }
          } while(0);
          $z$2$i = $z$1260$i;
          while(1) {
           $659 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
           if (!($659)) {
            $z$2$i$lcssa = $z$2$i;
            break;
           }
           $660 = (($z$2$i) + -4|0);
           $661 = HEAP32[$660>>2]|0;
           $662 = ($661|0)==(0);
           if ($662) {
            $z$2$i = $660;
           } else {
            $z$2$i$lcssa = $z$2$i;
            break;
           }
          }
          $663 = HEAP32[$e2$i>>2]|0;
          $664 = (($663) - ($644))|0;
          HEAP32[$e2$i>>2] = $664;
          $665 = ($664|0)>(0);
          if ($665) {
           $642 = $664;$a$1261$i = $a$2$ph$i;$z$1260$i = $z$2$i$lcssa;
          } else {
           $$lcssa357 = $664;$a$2$ph$i$lcssa = $a$2$ph$i;$z$2$i$lcssa$lcssa = $z$2$i$lcssa;
           break;
          }
         }
         $$pr154$i = $$lcssa357;$a$1$lcssa$i = $a$2$ph$i$lcssa;$z$1$lcssa$i = $z$2$i$lcssa$lcssa;
        } else {
         $$pr154$i = $$pr$i;$a$1$lcssa$i = $$39$i;$z$1$lcssa$i = $$lcssa355;
        }
        $666 = ($$pr154$i|0)<(0);
        do {
         if ($666) {
          $667 = (($$p$i) + 25)|0;
          $668 = (($667|0) / 9)&-1;
          $669 = (($668) + 1)|0;
          $670 = ($477|0)==(102);
          if ($670) {
           $671 = (($$39$i) + ($669<<2)|0);
           $672 = $$pr154$i;$a$3248$us$i = $a$1$lcssa$i;$z$3247$us$i = $z$1$lcssa$i;
           while(1) {
            $673 = ($672|0)<(-9);
            $674 = (0 - ($672))|0;
            $$26$us$i = $673 ? 9 : $674;
            $675 = ($a$3248$us$i>>>0)<($z$3247$us$i>>>0);
            do {
             if ($675) {
              $700 = 1 << $$26$us$i;
              $693 = (($700) + -1)|0;
              $697 = 1000000000 >>> $$26$us$i;
              $carry3$0242$us$i = 0;$d$1241$us$i = $a$3248$us$i;
              while(1) {
               $691 = HEAP32[$d$1241$us$i>>2]|0;
               $692 = $691 & $693;
               $694 = $691 >>> $$26$us$i;
               $695 = (($694) + ($carry3$0242$us$i))|0;
               HEAP32[$d$1241$us$i>>2] = $695;
               $696 = Math_imul($692, $697)|0;
               $698 = (($d$1241$us$i) + 4|0);
               $699 = ($698>>>0)<($z$3247$us$i>>>0);
               if ($699) {
                $carry3$0242$us$i = $696;$d$1241$us$i = $698;
               } else {
                $$lcssa359 = $696;
                break;
               }
              }
              $679 = HEAP32[$a$3248$us$i>>2]|0;
              $680 = ($679|0)==(0);
              $681 = (($a$3248$us$i) + 4|0);
              $$a$3$us$i = $680 ? $681 : $a$3248$us$i;
              $682 = ($$lcssa359|0)==(0);
              if ($682) {
               $$a$3$us310$i = $$a$3$us$i;$z$4$us$i = $z$3247$us$i;
               break;
              }
              $683 = (($z$3247$us$i) + 4|0);
              HEAP32[$z$3247$us$i>>2] = $$lcssa359;
              $$a$3$us310$i = $$a$3$us$i;$z$4$us$i = $683;
             } else {
              $676 = HEAP32[$a$3248$us$i>>2]|0;
              $677 = ($676|0)==(0);
              $678 = (($a$3248$us$i) + 4|0);
              $$a$3$us309$i = $677 ? $678 : $a$3248$us$i;
              $$a$3$us310$i = $$a$3$us309$i;$z$4$us$i = $z$3247$us$i;
             }
            } while(0);
            $684 = $z$4$us$i;
            $685 = (($684) - ($634))|0;
            $686 = $685 >> 2;
            $687 = ($686|0)>($669|0);
            $$z$4$us$i = $687 ? $671 : $z$4$us$i;
            $688 = HEAP32[$e2$i>>2]|0;
            $689 = (($688) + ($$26$us$i))|0;
            HEAP32[$e2$i>>2] = $689;
            $690 = ($689|0)<(0);
            if ($690) {
             $672 = $689;$a$3248$us$i = $$a$3$us310$i;$z$3247$us$i = $$z$4$us$i;
            } else {
             $$a$3$us310$i$lcssa = $$a$3$us310$i;$$z$4$us$i$lcssa = $$z$4$us$i;
             break;
            }
           }
           $a$3$lcssa$i = $$a$3$us310$i$lcssa;$z$3$lcssa$i = $$z$4$us$i$lcssa;
           break;
          }
          $701 = $$pr154$i;$a$3248$i = $a$1$lcssa$i;$z$3247$i = $z$1$lcssa$i;
          while(1) {
           $702 = ($701|0)<(-9);
           $703 = (0 - ($701))|0;
           $$26$i = $702 ? 9 : $703;
           $704 = ($a$3248$i>>>0)<($z$3247$i>>>0);
           do {
            if ($704) {
             $708 = 1 << $$26$i;
             $709 = (($708) + -1)|0;
             $710 = 1000000000 >>> $$26$i;
             $carry3$0242$i = 0;$d$1241$i = $a$3248$i;
             while(1) {
              $711 = HEAP32[$d$1241$i>>2]|0;
              $712 = $711 & $709;
              $713 = $711 >>> $$26$i;
              $714 = (($713) + ($carry3$0242$i))|0;
              HEAP32[$d$1241$i>>2] = $714;
              $715 = Math_imul($712, $710)|0;
              $716 = (($d$1241$i) + 4|0);
              $717 = ($716>>>0)<($z$3247$i>>>0);
              if ($717) {
               $carry3$0242$i = $715;$d$1241$i = $716;
              } else {
               $$lcssa358 = $715;
               break;
              }
             }
             $718 = HEAP32[$a$3248$i>>2]|0;
             $719 = ($718|0)==(0);
             $720 = (($a$3248$i) + 4|0);
             $$a$3$i = $719 ? $720 : $a$3248$i;
             $721 = ($$lcssa358|0)==(0);
             if ($721) {
              $$a$3312$i = $$a$3$i;$z$4$i = $z$3247$i;
              break;
             }
             $722 = (($z$3247$i) + 4|0);
             HEAP32[$z$3247$i>>2] = $$lcssa358;
             $$a$3312$i = $$a$3$i;$z$4$i = $722;
            } else {
             $705 = HEAP32[$a$3248$i>>2]|0;
             $706 = ($705|0)==(0);
             $707 = (($a$3248$i) + 4|0);
             $$a$3311$i = $706 ? $707 : $a$3248$i;
             $$a$3312$i = $$a$3311$i;$z$4$i = $z$3247$i;
            }
           } while(0);
           $723 = $z$4$i;
           $724 = $$a$3312$i;
           $725 = (($723) - ($724))|0;
           $726 = $725 >> 2;
           $727 = ($726|0)>($669|0);
           if ($727) {
            $728 = (($$a$3312$i) + ($669<<2)|0);
            $z$5$i = $728;
           } else {
            $z$5$i = $z$4$i;
           }
           $729 = HEAP32[$e2$i>>2]|0;
           $730 = (($729) + ($$26$i))|0;
           HEAP32[$e2$i>>2] = $730;
           $731 = ($730|0)<(0);
           if ($731) {
            $701 = $730;$a$3248$i = $$a$3312$i;$z$3247$i = $z$5$i;
           } else {
            $$a$3312$i$lcssa = $$a$3312$i;$z$5$i$lcssa = $z$5$i;
            break;
           }
          }
          $a$3$lcssa$i = $$a$3312$i$lcssa;$z$3$lcssa$i = $z$5$i$lcssa;
         } else {
          $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
         }
        } while(0);
        $732 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
        do {
         if ($732) {
          $733 = $a$3$lcssa$i;
          $734 = (($634) - ($733))|0;
          $735 = $734 >> 2;
          $736 = ($735*9)|0;
          $737 = HEAP32[$a$3$lcssa$i>>2]|0;
          $738 = ($737>>>0)<(10);
          if ($738) {
           $e$1$i = $736;
           break;
          }
          $e$0237$i = $736;$i$0236$i = 10;
          while(1) {
           $739 = ($i$0236$i*10)|0;
           $740 = (($e$0237$i) + 1)|0;
           $741 = ($737>>>0)<($739>>>0);
           if ($741) {
            $$lcssa360 = $740;
            break;
           } else {
            $e$0237$i = $740;$i$0236$i = $739;
           }
          }
          $e$1$i = $$lcssa360;
         } else {
          $e$1$i = 0;
         }
        } while(0);
        $742 = ($477|0)!=(102);
        $743 = $742 ? $e$1$i : 0;
        $744 = (($$p$i) - ($743))|0;
        $745 = ($477|0)==(103);
        $746 = ($$p$i|0)!=(0);
        $$27$i = $746 & $745;
        $$neg159$i = $$27$i << 31 >> 31;
        $747 = (($744) + ($$neg159$i))|0;
        $748 = $z$3$lcssa$i;
        $749 = (($748) - ($634))|0;
        $750 = $749 >> 2;
        $751 = ($750*9)|0;
        $752 = (($751) + -9)|0;
        $753 = ($747|0)<($752|0);
        if ($753) {
         $754 = (($747) + 9216)|0;
         $755 = (($754|0) / 9)&-1;
         $$sum$i = (($755) + -1023)|0;
         $756 = (($$39$i) + ($$sum$i<<2)|0);
         $757 = (($754|0) % 9)&-1;
         $j$0229$i = (($757) + 1)|0;
         $758 = ($j$0229$i|0)<(9);
         if ($758) {
          $i$1230$i = 10;$j$0231$i = $j$0229$i;
          while(1) {
           $759 = ($i$1230$i*10)|0;
           $j$0$i = (($j$0231$i) + 1)|0;
           $exitcond$i = ($j$0231$i|0)==(8);
           if ($exitcond$i) {
            $$lcssa361 = $759;
            break;
           } else {
            $i$1230$i = $759;$j$0231$i = $j$0$i;
           }
          }
          $i$1$lcssa$i = $$lcssa361;
         } else {
          $i$1$lcssa$i = 10;
         }
         $760 = HEAP32[$756>>2]|0;
         $761 = (($760>>>0) % ($i$1$lcssa$i>>>0))&-1;
         $762 = ($761|0)==(0);
         if ($762) {
          $$sum21$i = (($755) + -1022)|0;
          $763 = (($$39$i) + ($$sum21$i<<2)|0);
          $764 = ($763|0)==($z$3$lcssa$i|0);
          if ($764) {
           $a$7$i = $a$3$lcssa$i;$d$3$i = $756;$e$3$i = $e$1$i;
          } else {
           label = 274;
          }
         } else {
          label = 274;
         }
         do {
          if ((label|0) == 274) {
           label = 0;
           $765 = (($760>>>0) / ($i$1$lcssa$i>>>0))&-1;
           $766 = $765 & 1;
           $767 = ($766|0)==(0);
           $$28$i = $767 ? 9007199254740992.0 : 9007199254740994.0;
           $768 = (($i$1$lcssa$i|0) / 2)&-1;
           $769 = ($761>>>0)<($768>>>0);
           do {
            if ($769) {
             $small$0$i = 0.5;
            } else {
             $770 = ($761|0)==($768|0);
             if ($770) {
              $$sum22$i = (($755) + -1022)|0;
              $771 = (($$39$i) + ($$sum22$i<<2)|0);
              $772 = ($771|0)==($z$3$lcssa$i|0);
              if ($772) {
               $small$0$i = 1.0;
               break;
              }
             }
             $small$0$i = 1.5;
            }
           } while(0);
           $773 = ($pl$0$i|0)==(0);
           do {
            if ($773) {
             $round6$1$i = $$28$i;$small$1$i = $small$0$i;
            } else {
             $774 = HEAP8[$prefix$0$i>>0]|0;
             $775 = ($774<<24>>24)==(45);
             if (!($775)) {
              $round6$1$i = $$28$i;$small$1$i = $small$0$i;
              break;
             }
             $776 = -$$28$i;
             $777 = -$small$0$i;
             $round6$1$i = $776;$small$1$i = $777;
            }
           } while(0);
           $778 = (($760) - ($761))|0;
           HEAP32[$756>>2] = $778;
           $779 = $round6$1$i + $small$1$i;
           $780 = $779 != $round6$1$i;
           if (!($780)) {
            $a$7$i = $a$3$lcssa$i;$d$3$i = $756;$e$3$i = $e$1$i;
            break;
           }
           $781 = (($778) + ($i$1$lcssa$i))|0;
           HEAP32[$756>>2] = $781;
           $782 = ($781>>>0)>(999999999);
           if ($782) {
            $a$5223$i = $a$3$lcssa$i;$d$2222$i = $756;
            while(1) {
             $783 = (($d$2222$i) + -4|0);
             HEAP32[$d$2222$i>>2] = 0;
             $784 = ($783>>>0)<($a$5223$i>>>0);
             if ($784) {
              $785 = (($a$5223$i) + -4|0);
              HEAP32[$785>>2] = 0;
              $a$6$i = $785;
             } else {
              $a$6$i = $a$5223$i;
             }
             $786 = HEAP32[$783>>2]|0;
             $787 = (($786) + 1)|0;
             HEAP32[$783>>2] = $787;
             $788 = ($787>>>0)>(999999999);
             if ($788) {
              $a$5223$i = $a$6$i;$d$2222$i = $783;
             } else {
              $$lcssa362 = $783;$a$6$i$lcssa = $a$6$i;
              break;
             }
            }
            $a$5$lcssa$i = $a$6$i$lcssa;$d$2$lcssa$i = $$lcssa362;
           } else {
            $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $756;
           }
           $789 = $a$5$lcssa$i;
           $790 = (($634) - ($789))|0;
           $791 = $790 >> 2;
           $792 = ($791*9)|0;
           $793 = HEAP32[$a$5$lcssa$i>>2]|0;
           $794 = ($793>>>0)<(10);
           if ($794) {
            $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $792;
            break;
           }
           $e$2218$i = $792;$i$2217$i = 10;
           while(1) {
            $795 = ($i$2217$i*10)|0;
            $796 = (($e$2218$i) + 1)|0;
            $797 = ($793>>>0)<($795>>>0);
            if ($797) {
             $$lcssa363 = $796;
             break;
            } else {
             $e$2218$i = $796;$i$2217$i = $795;
            }
           }
           $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $$lcssa363;
          }
         } while(0);
         $798 = (($d$3$i) + 4|0);
         $799 = ($z$3$lcssa$i>>>0)>($798>>>0);
         $$z$3$i = $799 ? $798 : $z$3$lcssa$i;
         $a$8$ph$i = $a$7$i;$e$4$ph$i = $e$3$i;$z$6$ph$i = $$z$3$i;
        } else {
         $a$8$ph$i = $a$3$lcssa$i;$e$4$ph$i = $e$1$i;$z$6$ph$i = $z$3$lcssa$i;
        }
        $a$8$ph294$i = $a$8$ph$i;
        $800 = (0 - ($e$4$ph$i))|0;
        $z$6$i = $z$6$ph$i;
        while(1) {
         $801 = ($z$6$i>>>0)>($a$8$ph$i>>>0);
         if (!($801)) {
          $$lcssa283$i = 0;$z$6$i$lcssa = $z$6$i;
          break;
         }
         $802 = (($z$6$i) + -4|0);
         $803 = HEAP32[$802>>2]|0;
         $804 = ($803|0)==(0);
         if ($804) {
          $z$6$i = $802;
         } else {
          $$lcssa283$i = 1;$z$6$i$lcssa = $z$6$i;
          break;
         }
        }
        do {
         if ($745) {
          $805 = ($$p$i|0)==(0);
          $806 = $805&1;
          $$$p$i = (($806) + ($$p$i))|0;
          $807 = ($$$p$i|0)>($e$4$ph$i|0);
          $808 = ($e$4$ph$i|0)>(-5);
          $or$cond6$i = $807 & $808;
          if ($or$cond6$i) {
           $809 = (($t$0) + -1)|0;
           $$neg160$i = (($$$p$i) + -1)|0;
           $810 = (($$neg160$i) - ($e$4$ph$i))|0;
           $$019$i = $809;$$216$i = $810;
          } else {
           $811 = (($t$0) + -2)|0;
           $812 = (($$$p$i) + -1)|0;
           $$019$i = $811;$$216$i = $812;
          }
          $813 = $fl$1$ & 8;
          $814 = ($813|0)==(0);
          if (!($814)) {
           $$120$i = $$019$i;$$317$i = $$216$i;
           break;
          }
          do {
           if ($$lcssa283$i) {
            $815 = (($z$6$i$lcssa) + -4|0);
            $816 = HEAP32[$815>>2]|0;
            $817 = ($816|0)==(0);
            if ($817) {
             $j$2$i = 9;
             break;
            }
            $818 = (($816>>>0) % 10)&-1;
            $819 = ($818|0)==(0);
            if (!($819)) {
             $j$2$i = 0;
             break;
            }
            $i$3213$i = 10;$j$1214$i = 0;
            while(1) {
             $820 = ($i$3213$i*10)|0;
             $821 = (($j$1214$i) + 1)|0;
             $822 = (($816>>>0) % ($820>>>0))&-1;
             $823 = ($822|0)==(0);
             if ($823) {
              $i$3213$i = $820;$j$1214$i = $821;
             } else {
              $$lcssa364 = $821;
              break;
             }
            }
            $j$2$i = $$lcssa364;
           } else {
            $j$2$i = 9;
           }
          } while(0);
          $824 = $$019$i | 32;
          $825 = ($824|0)==(102);
          $826 = $z$6$i$lcssa;
          $827 = (($826) - ($634))|0;
          $828 = $827 >> 2;
          $829 = ($828*9)|0;
          $830 = (($829) + -9)|0;
          if ($825) {
           $831 = (($830) - ($j$2$i))|0;
           $832 = ($831|0)<(0);
           $$29$i = $832 ? 0 : $831;
           $833 = ($$216$i|0)<($$29$i|0);
           $$216$$29$i = $833 ? $$216$i : $$29$i;
           $$120$i = $$019$i;$$317$i = $$216$$29$i;
           break;
          } else {
           $834 = (($830) + ($e$4$ph$i))|0;
           $835 = (($834) - ($j$2$i))|0;
           $836 = ($835|0)<(0);
           $$31$i = $836 ? 0 : $835;
           $837 = ($$216$i|0)<($$31$i|0);
           $$216$$31$i = $837 ? $$216$i : $$31$i;
           $$120$i = $$019$i;$$317$i = $$216$$31$i;
           break;
          }
         } else {
          $$120$i = $t$0;$$317$i = $$p$i;
         }
        } while(0);
        $838 = ($$317$i|0)!=(0);
        if ($838) {
         $842 = 1;
        } else {
         $839 = $fl$1$ & 8;
         $840 = ($839|0)!=(0);
         $842 = $840;
        }
        $841 = $842&1;
        $843 = $$120$i | 32;
        $844 = ($843|0)==(102);
        if ($844) {
         $845 = ($e$4$ph$i|0)>(0);
         $846 = $845 ? $e$4$ph$i : 0;
         $$pn$i = $846;$estr$2$i = 0;
        } else {
         $847 = ($e$4$ph$i|0)<(0);
         $848 = $847 ? $800 : $e$4$ph$i;
         $849 = ($848|0)<(0);
         if ($849) {
          $850 = ($848|0)<(0);
          $851 = $850 << 31 >> 31;
          $$05$i87$i = $7;$852 = $848;$853 = $851;
          while(1) {
           $854 = (___uremdi3(($852|0),($853|0),10,0)|0);
           $855 = tempRet0;
           $856 = $854 | 48;
           $857 = $856&255;
           $858 = (($$05$i87$i) + -1|0);
           HEAP8[$858>>0] = $857;
           $859 = (___udivdi3(($852|0),($853|0),10,0)|0);
           $860 = tempRet0;
           $861 = ($853>>>0)>(9);
           $862 = ($852>>>0)>(4294967295);
           $863 = ($853|0)==(9);
           $864 = $863 & $862;
           $865 = $861 | $864;
           if ($865) {
            $$05$i87$i = $858;$852 = $859;$853 = $860;
           } else {
            $$lcssa365 = $858;$1193 = $859;$1194 = $860;
            break;
           }
          }
          $$0$lcssa$i92$i = $$lcssa365;$$01$lcssa$off0$i93$i = $1193;
         } else {
          $$0$lcssa$i92$i = $7;$$01$lcssa$off0$i93$i = $848;
         }
         $866 = ($$01$lcssa$off0$i93$i|0)==(0);
         if ($866) {
          $estr$1$ph$i = $$0$lcssa$i92$i;
         } else {
          $$12$i95$i = $$0$lcssa$i92$i;$y$03$i94$i = $$01$lcssa$off0$i93$i;
          while(1) {
           $867 = (($y$03$i94$i>>>0) % 10)&-1;
           $868 = $867 | 48;
           $869 = $868&255;
           $870 = (($$12$i95$i) + -1|0);
           HEAP8[$870>>0] = $869;
           $871 = (($y$03$i94$i>>>0) / 10)&-1;
           $872 = ($y$03$i94$i>>>0)<(10);
           if ($872) {
            $$lcssa367 = $870;
            break;
           } else {
            $$12$i95$i = $870;$y$03$i94$i = $871;
           }
          }
          $estr$1$ph$i = $$lcssa367;
         }
         $873 = $estr$1$ph$i;
         $874 = (($9) - ($873))|0;
         $875 = ($874|0)<(2);
         if ($875) {
          $estr$1209$i = $estr$1$ph$i;
          while(1) {
           $876 = (($estr$1209$i) + -1|0);
           HEAP8[$876>>0] = 48;
           $877 = $876;
           $878 = (($9) - ($877))|0;
           $879 = ($878|0)<(2);
           if ($879) {
            $estr$1209$i = $876;
           } else {
            $$lcssa368 = $876;
            break;
           }
          }
          $estr$1$lcssa$i = $$lcssa368;
         } else {
          $estr$1$lcssa$i = $estr$1$ph$i;
         }
         $880 = $e$4$ph$i >> 31;
         $881 = $880 & 2;
         $882 = (($881) + 43)|0;
         $883 = $882&255;
         $884 = (($estr$1$lcssa$i) + -1|0);
         HEAP8[$884>>0] = $883;
         $885 = $$120$i&255;
         $886 = (($estr$1$lcssa$i) + -2|0);
         HEAP8[$886>>0] = $885;
         $887 = $886;
         $888 = (($9) - ($887))|0;
         $$pn$i = $888;$estr$2$i = $886;
        }
        $889 = (($pl$0$i) + 1)|0;
        $890 = (($889) + ($$317$i))|0;
        $l$1$i = (($890) + ($841))|0;
        $891 = (($l$1$i) + ($$pn$i))|0;
        $892 = $fl$1$ & 73728;
        $893 = ($892|0)==(0);
        $894 = ($w$1|0)>($891|0);
        $or$cond$i101$i = $893 & $894;
        if ($or$cond$i101$i) {
         $895 = (($w$1) - ($891))|0;
         $896 = ($895>>>0)>(256);
         $897 = $896 ? 256 : $895;
         _memset(($pad$i|0),32,($897|0))|0;
         $898 = ($895>>>0)>(255);
         if ($898) {
          $$01$i103$i = $895;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $899 = (($$01$i103$i) + -256)|0;
           $900 = ($899>>>0)>(255);
           if ($900) {
            $$01$i103$i = $899;
           } else {
            break;
           }
          }
          $901 = $895 & 255;
          $$0$lcssa$i105$i = $901;
         } else {
          $$0$lcssa$i105$i = $895;
         }
         (___fwritex($pad$i,$$0$lcssa$i105$i,$f)|0);
        }
        (___fwritex($prefix$0$i,$pl$0$i,$f)|0);
        $902 = ($892|0)==(65536);
        $or$cond$i108$i = $902 & $894;
        if ($or$cond$i108$i) {
         $903 = (($w$1) - ($891))|0;
         $904 = ($903>>>0)>(256);
         $905 = $904 ? 256 : $903;
         _memset(($pad$i|0),48,($905|0))|0;
         $906 = ($903>>>0)>(255);
         if ($906) {
          $$01$i110$i = $903;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $907 = (($$01$i110$i) + -256)|0;
           $908 = ($907>>>0)>(255);
           if ($908) {
            $$01$i110$i = $907;
           } else {
            break;
           }
          }
          $909 = $903 & 255;
          $$0$lcssa$i112$i = $909;
         } else {
          $$0$lcssa$i112$i = $903;
         }
         (___fwritex($pad$i,$$0$lcssa$i112$i,$f)|0);
        }
        if ($844) {
         $910 = ($a$8$ph$i>>>0)>($$39$i>>>0);
         $r$0$a$8$i = $910 ? $$39$i : $a$8$ph$i;
         $911 = $634 ^ -1;
         $912 = $a$8$ph294$i ^ -1;
         $913 = ($911>>>0)>($912>>>0);
         $umax$i = $913 ? $911 : $912;
         $914 = (3 - ($umax$i))|0;
         $uglygep$i = (($$39$i) + 1|0);
         $uglygep296$i = $uglygep$i;
         $915 = ($914>>>0)>($uglygep296$i>>>0);
         $umax297$i = $915 ? $914 : $uglygep296$i;
         $umax297298299$i = $umax297$i;
         $uglygep300$i = (($umax297298299$i) + ($umax$i)|0);
         $uglygep300301$i = $uglygep300$i;
         $916 = $umax$i ^ -1;
         $d$4199$i = $r$0$a$8$i;
         while(1) {
          $917 = HEAP32[$d$4199$i>>2]|0;
          $918 = ($917|0)==(0);
          if ($918) {
           $$1$lcssa$i120$i = $14;
          } else {
           $$12$i118$i = $14;$y$03$i117$i = $917;
           while(1) {
            $919 = (($y$03$i117$i>>>0) % 10)&-1;
            $920 = $919 | 48;
            $921 = $920&255;
            $922 = (($$12$i118$i) + -1|0);
            HEAP8[$922>>0] = $921;
            $923 = (($y$03$i117$i>>>0) / 10)&-1;
            $924 = ($y$03$i117$i>>>0)<(10);
            if ($924) {
             $$lcssa372 = $922;
             break;
            } else {
             $$12$i118$i = $922;$y$03$i117$i = $923;
            }
           }
           $$1$lcssa$i120$i = $$lcssa372;
          }
          $925 = ($d$4199$i|0)==($r$0$a$8$i|0);
          do {
           if ($925) {
            $929 = ($$1$lcssa$i120$i|0)==($14|0);
            if (!($929)) {
             $s7$1$i = $$1$lcssa$i120$i;
             break;
            }
            HEAP8[$16>>0] = 48;
            $s7$1$i = $16;
           } else {
            $926 = ($$1$lcssa$i120$i>>>0)>($buf$i>>>0);
            if (!($926)) {
             $s7$1$i = $$1$lcssa$i120$i;
             break;
            }
            $s7$0196$i = $$1$lcssa$i120$i;
            while(1) {
             $927 = (($s7$0196$i) + -1|0);
             HEAP8[$927>>0] = 48;
             $928 = ($927>>>0)>($buf$i>>>0);
             if ($928) {
              $s7$0196$i = $927;
             } else {
              $$lcssa373 = $927;
              break;
             }
            }
            $s7$1$i = $$lcssa373;
           }
          } while(0);
          $930 = $s7$1$i;
          $931 = (($15) - ($930))|0;
          (___fwritex($s7$1$i,$931,$f)|0);
          $932 = (($d$4199$i) + 4|0);
          $933 = ($932>>>0)>($$39$i>>>0);
          if ($933) {
           $$lcssa374 = $932;
           break;
          } else {
           $d$4199$i = $932;
          }
         }
         $934 = $uglygep300301$i & -4;
         $935 = (($934) + ($916))|0;
         $936 = $935;
         $$not$i = $838 ^ 1;
         $937 = $fl$1$ & 8;
         $938 = ($937|0)==(0);
         $or$cond35$i = $938 & $$not$i;
         if (!($or$cond35$i)) {
          (___fwritex(4528,1,$f)|0);
         }
         $939 = ($$lcssa374>>>0)<($z$6$i$lcssa>>>0);
         $940 = ($$317$i|0)>(0);
         $or$cond10191$i = $940 & $939;
         if ($or$cond10191$i) {
          $$418193$i = $$317$i;$955 = $936;$d$5192$i = $$lcssa374;
          while(1) {
           $941 = HEAP32[$d$5192$i>>2]|0;
           $942 = ($941|0)==(0);
           if ($942) {
            $s8$0188$i$ph = $14;
            label = 361;
           } else {
            $$12$i127$i = $14;$y$03$i126$i = $941;
            while(1) {
             $943 = (($y$03$i126$i>>>0) % 10)&-1;
             $944 = $943 | 48;
             $945 = $944&255;
             $946 = (($$12$i127$i) + -1|0);
             HEAP8[$946>>0] = $945;
             $947 = (($y$03$i126$i>>>0) / 10)&-1;
             $948 = ($y$03$i126$i>>>0)<(10);
             if ($948) {
              $$lcssa375 = $946;
              break;
             } else {
              $$12$i127$i = $946;$y$03$i126$i = $947;
             }
            }
            $949 = ($$lcssa375>>>0)>($buf$i>>>0);
            if ($949) {
             $s8$0188$i$ph = $$lcssa375;
             label = 361;
            } else {
             $s8$0$lcssa$i = $$lcssa375;
            }
           }
           if ((label|0) == 361) {
            label = 0;
            $s8$0188$i = $s8$0188$i$ph;
            while(1) {
             $950 = (($s8$0188$i) + -1|0);
             HEAP8[$950>>0] = 48;
             $951 = ($950>>>0)>($buf$i>>>0);
             if ($951) {
              $s8$0188$i = $950;
             } else {
              $$lcssa376 = $950;
              break;
             }
            }
            $s8$0$lcssa$i = $$lcssa376;
           }
           $952 = ($$418193$i|0)>(9);
           $953 = $952 ? 9 : $$418193$i;
           (___fwritex($s8$0$lcssa$i,$953,$f)|0);
           $954 = (($955) + 8|0);
           $956 = (($$418193$i) + -9)|0;
           $957 = ($954>>>0)<($z$6$i$lcssa>>>0);
           $or$cond10$i = $952 & $957;
           if ($or$cond10$i) {
            $955$phi = $d$5192$i;$$418193$i = $956;$d$5192$i = $954;$955 = $955$phi;
           } else {
            $$lcssa377 = $956;
            break;
           }
          }
          $$418$lcssa$i = $$lcssa377;
         } else {
          $$418$lcssa$i = $$317$i;
         }
         $958 = ($$418$lcssa$i|0)>(0);
         if ($958) {
          $959 = ($$418$lcssa$i>>>0)>(256);
          $960 = $959 ? 256 : $$418$lcssa$i;
          _memset(($pad$i|0),48,($960|0))|0;
          $961 = ($$418$lcssa$i>>>0)>(255);
          if ($961) {
           $$01$i134$i = $$418$lcssa$i;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $962 = (($$01$i134$i) + -256)|0;
            $963 = ($962>>>0)>(255);
            if ($963) {
             $$01$i134$i = $962;
            } else {
             break;
            }
           }
           $964 = $$418$lcssa$i & 255;
           $$0$lcssa$i136$i = $964;
          } else {
           $$0$lcssa$i136$i = $$418$lcssa$i;
          }
          (___fwritex($pad$i,$$0$lcssa$i136$i,$f)|0);
         }
        } else {
         $965 = (($a$8$ph$i) + 4|0);
         $z$6$$i = $$lcssa283$i ? $z$6$i$lcssa : $965;
         $966 = ($$317$i|0)>(-1);
         do {
          if ($966) {
           $967 = $fl$1$ & 8;
           $968 = ($967|0)==(0);
           $$5205$i = $$317$i;$d$6204$i = $a$8$ph$i;
           while(1) {
            $969 = HEAP32[$d$6204$i>>2]|0;
            $970 = ($969|0)==(0);
            if ($970) {
             label = 380;
            } else {
             $$12$i142$i = $14;$y$03$i141$i = $969;
             while(1) {
              $971 = (($y$03$i141$i>>>0) % 10)&-1;
              $972 = $971 | 48;
              $973 = $972&255;
              $974 = (($$12$i142$i) + -1|0);
              HEAP8[$974>>0] = $973;
              $975 = (($y$03$i141$i>>>0) / 10)&-1;
              $976 = ($y$03$i141$i>>>0)<(10);
              if ($976) {
               $$12$i142$i$lcssa = $$12$i142$i;$$lcssa369 = $974;
               break;
              } else {
               $$12$i142$i = $974;$y$03$i141$i = $975;
              }
             }
             $977 = ($$lcssa369|0)==($14|0);
             if ($977) {
              label = 380;
             } else {
              $1195 = $$12$i142$i$lcssa;$s9$0$i = $$lcssa369;
             }
            }
            if ((label|0) == 380) {
             label = 0;
             HEAP8[$16>>0] = 48;
             $1195 = $14;$s9$0$i = $16;
            }
            $978 = ($d$6204$i|0)==($a$8$ph$i|0);
            do {
             if ($978) {
              (___fwritex($s9$0$i,1,$f)|0);
              $982 = ($$5205$i|0)<(1);
              $or$cond37$i = $968 & $982;
              if ($or$cond37$i) {
               $s9$2$i = $1195;
               break;
              }
              (___fwritex(4528,1,$f)|0);
              $s9$2$i = $1195;
             } else {
              $979 = ($s9$0$i>>>0)>($buf$i>>>0);
              if (!($979)) {
               $s9$2$i = $s9$0$i;
               break;
              }
              $s9$1200$i = $s9$0$i;
              while(1) {
               $980 = (($s9$1200$i) + -1|0);
               HEAP8[$980>>0] = 48;
               $981 = ($980>>>0)>($buf$i>>>0);
               if ($981) {
                $s9$1200$i = $980;
               } else {
                $$lcssa370 = $980;
                break;
               }
              }
              $s9$2$i = $$lcssa370;
             }
            } while(0);
            $983 = $s9$2$i;
            $984 = (($15) - ($983))|0;
            $985 = ($$5205$i|0)>($984|0);
            $$$5$i = $985 ? $984 : $$5205$i;
            (___fwritex($s9$2$i,$$$5$i,$f)|0);
            $986 = (($$5205$i) - ($984))|0;
            $987 = (($d$6204$i) + 4|0);
            $988 = ($987>>>0)<($z$6$$i>>>0);
            $989 = ($986|0)>(-1);
            $or$cond12$i = $988 & $989;
            if ($or$cond12$i) {
             $$5205$i = $986;$d$6204$i = $987;
            } else {
             $$lcssa371 = $986;
             break;
            }
           }
           $990 = ($$lcssa371|0)>(0);
           if (!($990)) {
            break;
           }
           $991 = ($$lcssa371>>>0)>(256);
           $992 = $991 ? 256 : $$lcssa371;
           _memset(($pad$i|0),48,($992|0))|0;
           $993 = ($$lcssa371>>>0)>(255);
           if ($993) {
            $$01$i149$i = $$lcssa371;
            while(1) {
             (___fwritex($pad$i,256,$f)|0);
             $994 = (($$01$i149$i) + -256)|0;
             $995 = ($994>>>0)>(255);
             if ($995) {
              $$01$i149$i = $994;
             } else {
              break;
             }
            }
            $996 = $$lcssa371 & 255;
            $$0$lcssa$i151$i = $996;
           } else {
            $$0$lcssa$i151$i = $$lcssa371;
           }
           (___fwritex($pad$i,$$0$lcssa$i151$i,$f)|0);
          } else {
          }
         } while(0);
         $997 = $estr$2$i;
         $998 = (($9) - ($997))|0;
         (___fwritex($estr$2$i,$998,$f)|0);
        }
        $999 = ($892|0)==(8192);
        $or$cond$i$i = $999 & $894;
        if ($or$cond$i$i) {
         $1000 = (($w$1) - ($891))|0;
         $1001 = ($1000>>>0)>(256);
         $1002 = $1001 ? 256 : $1000;
         _memset(($pad$i|0),32,($1002|0))|0;
         $1003 = ($1000>>>0)>(255);
         if ($1003) {
          $$01$i$i = $1000;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $1004 = (($$01$i$i) + -256)|0;
           $1005 = ($1004>>>0)>(255);
           if ($1005) {
            $$01$i$i = $1004;
           } else {
            break;
           }
          }
          $1006 = $1000 & 255;
          $$0$lcssa$i$i = $1006;
         } else {
          $$0$lcssa$i$i = $1000;
         }
         (___fwritex($pad$i,$$0$lcssa$i$i,$f)|0);
        }
        $w$38$i = $894 ? $w$1 : $891;
        $$0$i = $w$38$i;
       } else {
        $447 = $t$0 & 32;
        $448 = ($447|0)!=(0);
        $449 = $448 ? 4480 : 4488;
        $450 = ($$013$i != $$013$i) | (0.0 != 0.0);
        if ($450) {
         $451 = $448 ? 4496 : 4504;
         $pl$1$i = 0;$s1$0$i = $451;
        } else {
         $pl$1$i = $pl$0$i;$s1$0$i = $449;
        }
        $452 = (($pl$1$i) + 3)|0;
        $453 = $fl$1$ & 8192;
        $454 = ($453|0)==(0);
        $455 = ($w$1|0)>($452|0);
        $or$cond$i43$i = $454 & $455;
        if ($or$cond$i43$i) {
         $456 = (($w$1) - ($452))|0;
         $457 = ($456>>>0)>(256);
         $458 = $457 ? 256 : $456;
         _memset(($pad$i|0),32,($458|0))|0;
         $459 = ($456>>>0)>(255);
         if ($459) {
          $$01$i45$i = $456;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $460 = (($$01$i45$i) + -256)|0;
           $461 = ($460>>>0)>(255);
           if ($461) {
            $$01$i45$i = $460;
           } else {
            break;
           }
          }
          $462 = $456 & 255;
          $$0$lcssa$i47$i = $462;
         } else {
          $$0$lcssa$i47$i = $456;
         }
         (___fwritex($pad$i,$$0$lcssa$i47$i,$f)|0);
        }
        (___fwritex($prefix$0$i,$pl$1$i,$f)|0);
        (___fwritex($s1$0$i,3,$f)|0);
        $463 = $fl$1$ & 73728;
        $464 = ($463|0)==(8192);
        $or$cond$i50$i = $464 & $455;
        if ($or$cond$i50$i) {
         $465 = (($w$1) - ($452))|0;
         $466 = ($465>>>0)>(256);
         $467 = $466 ? 256 : $465;
         _memset(($pad$i|0),32,($467|0))|0;
         $468 = ($465>>>0)>(255);
         if ($468) {
          $$01$i52$i = $465;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $469 = (($$01$i52$i) + -256)|0;
           $470 = ($469>>>0)>(255);
           if ($470) {
            $$01$i52$i = $469;
           } else {
            break;
           }
          }
          $471 = $465 & 255;
          $$0$lcssa$i54$i = $471;
         } else {
          $$0$lcssa$i54$i = $465;
         }
         (___fwritex($pad$i,$$0$lcssa$i54$i,$f)|0);
        }
        $w$$i = $455 ? $w$1 : $452;
        $$0$i = $w$$i;
       }
      } while(0);
      $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $$0$i;$l10n$0$be = $l10n$3;
      break L24;
      break;
     }
     default: {
      $1183 = $294;$1184 = $267;$a$2 = $23;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 4432;$z$2 = $2;
     }
     }
    } while(0);
    do {
     if ((label|0) == 82) {
      label = 0;
      $292 = $t$1 & 32;
      $293 = ($267|0)==(0);
      $295 = ($294|0)==(0);
      $296 = $293 & $295;
      if ($296) {
       $369 = $267;$371 = $294;$a$0 = $2;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4432;
       label = 104;
      } else {
       $$012$i = $2;$298 = $267;$305 = $294;
       while(1) {
        $297 = $298 & 15;
        $299 = (4512 + ($297)|0);
        $300 = HEAP8[$299>>0]|0;
        $301 = $300&255;
        $302 = $301 | $292;
        $303 = $302&255;
        $304 = (($$012$i) + -1|0);
        HEAP8[$304>>0] = $303;
        $306 = (_bitshift64Lshr(($298|0),($305|0),4)|0);
        $307 = tempRet0;
        $308 = ($306|0)==(0);
        $309 = ($307|0)==(0);
        $310 = $308 & $309;
        if ($310) {
         $$lcssa386 = $304;
         break;
        } else {
         $$012$i = $304;$298 = $306;$305 = $307;
        }
       }
       $311 = $fl$3 & 8;
       $312 = ($311|0)==(0);
       if ($312) {
        $369 = $267;$371 = $294;$a$0 = $$lcssa386;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4432;
        label = 104;
       } else {
        $313 = $t$1 >> 4;
        $314 = (4432 + ($313)|0);
        $369 = $267;$371 = $294;$a$0 = $$lcssa386;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $314;
        label = 104;
       }
      }
     }
     else if ((label|0) == 96) {
      label = 0;
      $340 = ($339>>>0)>(0);
      $342 = ($341>>>0)>(4294967295);
      $343 = ($339|0)==(0);
      $344 = $343 & $342;
      $345 = $340 | $344;
      if ($345) {
       $$05$i = $2;$346 = $341;$347 = $339;
       while(1) {
        $348 = (___uremdi3(($346|0),($347|0),10,0)|0);
        $349 = tempRet0;
        $350 = $348 | 48;
        $351 = $350&255;
        $352 = (($$05$i) + -1|0);
        HEAP8[$352>>0] = $351;
        $353 = (___udivdi3(($346|0),($347|0),10,0)|0);
        $354 = tempRet0;
        $355 = ($347>>>0)>(9);
        $356 = ($346>>>0)>(4294967295);
        $357 = ($347|0)==(9);
        $358 = $357 & $356;
        $359 = $355 | $358;
        if ($359) {
         $$05$i = $352;$346 = $353;$347 = $354;
        } else {
         $$lcssa382 = $352;$1185 = $353;$1186 = $354;
         break;
        }
       }
       $$0$lcssa$i54 = $$lcssa382;$$01$lcssa$off0$i = $1185;
      } else {
       $$0$lcssa$i54 = $2;$$01$lcssa$off0$i = $341;
      }
      $360 = ($$01$lcssa$off0$i|0)==(0);
      if ($360) {
       $369 = $341;$371 = $339;$a$0 = $$0$lcssa$i54;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
       label = 104;
      } else {
       $$12$i = $$0$lcssa$i54;$y$03$i = $$01$lcssa$off0$i;
       while(1) {
        $361 = (($y$03$i>>>0) % 10)&-1;
        $362 = $361 | 48;
        $363 = $362&255;
        $364 = (($$12$i) + -1|0);
        HEAP8[$364>>0] = $363;
        $365 = (($y$03$i>>>0) / 10)&-1;
        $366 = ($y$03$i>>>0)<(10);
        if ($366) {
         $$lcssa384 = $364;
         break;
        } else {
         $$12$i = $364;$y$03$i = $365;
        }
       }
       $369 = $341;$371 = $339;$a$0 = $$lcssa384;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
       label = 104;
      }
     }
     else if ((label|0) == 109) {
      label = 0;
      $387 = (_memchr($a$1,0,$p$0)|0);
      $388 = ($387|0)==(0|0);
      if ($388) {
       $389 = (($a$1) + ($p$0)|0);
       $1183 = $294;$1184 = $267;$a$2 = $a$1;$fl$6 = $266;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 4432;$z$2 = $389;
       break;
      } else {
       $390 = $387;
       $391 = $a$1;
       $392 = (($390) - ($391))|0;
       $1183 = $294;$1184 = $267;$a$2 = $a$1;$fl$6 = $266;$p$5 = $392;$pl$2 = 0;$prefix$2 = 4432;$z$2 = $387;
       break;
      }
     }
     else if ((label|0) == 114) {
      label = 0;
      $i$0176 = 0;$l$1175 = 0;$ws$0177 = $1187;
      while(1) {
       $395 = HEAP32[$ws$0177>>2]|0;
       $396 = ($395|0)==(0);
       if ($396) {
        $i$0$lcssa = $i$0176;$l$2 = $l$1175;
        break;
       }
       $397 = (_wctomb($mb,$395)|0);
       $398 = ($397|0)<(0);
       $399 = (($p$4271) - ($i$0176))|0;
       $400 = ($397>>>0)>($399>>>0);
       $or$cond23 = $398 | $400;
       if ($or$cond23) {
        $i$0$lcssa = $i$0176;$l$2 = $397;
        break;
       }
       $401 = (($ws$0177) + 4|0);
       $402 = (($397) + ($i$0176))|0;
       $403 = ($p$4271>>>0)>($402>>>0);
       if ($403) {
        $i$0176 = $402;$l$1175 = $397;$ws$0177 = $401;
       } else {
        $i$0$lcssa = $402;$l$2 = $397;
        break;
       }
      }
      $404 = ($l$2|0)<(0);
      if ($404) {
       $$0$ph340 = -1;
       label = 453;
       break L1;
      } else {
       $1189 = $1188;$1190 = $1187;$i$0$lcssa272 = $i$0$lcssa;
       label = 119;
      }
     }
    } while(0);
    if ((label|0) == 104) {
     label = 0;
     $367 = ($p$2|0)>(-1);
     $368 = $fl$4 & -65537;
     $$fl$4 = $367 ? $368 : $fl$4;
     $370 = ($369|0)!=(0);
     $372 = ($371|0)!=(0);
     $373 = $370 | $372;
     $374 = ($p$2|0)!=(0);
     $or$cond = $373 | $374;
     if ($or$cond) {
      $375 = $a$0;
      $376 = (($3) - ($375))|0;
      $377 = $373&1;
      $378 = $377 ^ 1;
      $379 = (($378) + ($376))|0;
      $380 = ($p$2|0)>($379|0);
      $p$2$ = $380 ? $p$2 : $379;
      $1183 = $371;$1184 = $369;$a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
     } else {
      $1183 = $371;$1184 = $369;$a$2 = $2;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
     }
    }
    else if ((label|0) == 119) {
     label = 0;
     $405 = $fl$1$ & 73728;
     $406 = ($405|0)==(0);
     $407 = ($w$1|0)>($i$0$lcssa272|0);
     $or$cond$i65 = $406 & $407;
     if ($or$cond$i65) {
      $408 = (($w$1) - ($i$0$lcssa272))|0;
      $409 = ($408>>>0)>(256);
      $410 = $409 ? 256 : $408;
      _memset(($pad$i|0),32,($410|0))|0;
      $411 = ($408>>>0)>(255);
      if ($411) {
       $$01$i67 = $408;
       while(1) {
        (___fwritex($pad$i,256,$f)|0);
        $412 = (($$01$i67) + -256)|0;
        $413 = ($412>>>0)>(255);
        if ($413) {
         $$01$i67 = $412;
        } else {
         break;
        }
       }
       $414 = $408 & 255;
       $$0$lcssa$i69 = $414;
      } else {
       $$0$lcssa$i69 = $408;
      }
      (___fwritex($pad$i,$$0$lcssa$i69,$f)|0);
     }
     $415 = ($i$0$lcssa272|0)==(0);
     if (!($415)) {
      $i$1187 = 0;$ws$1188 = $1190;
      while(1) {
       $416 = HEAP32[$ws$1188>>2]|0;
       $417 = ($416|0)==(0);
       if ($417) {
        break;
       }
       $418 = (_wctomb($mb,$416)|0);
       $419 = (($418) + ($i$1187))|0;
       $420 = ($419|0)>($i$0$lcssa272|0);
       if ($420) {
        break;
       }
       $421 = (($ws$1188) + 4|0);
       (___fwritex($mb,$418,$f)|0);
       $422 = ($419>>>0)<($i$0$lcssa272>>>0);
       if ($422) {
        $i$1187 = $419;$ws$1188 = $421;
       } else {
        break;
       }
      }
     }
     $423 = ($405|0)==(8192);
     $or$cond$i72 = $423 & $407;
     if ($or$cond$i72) {
      $424 = (($w$1) - ($i$0$lcssa272))|0;
      $425 = ($424>>>0)>(256);
      $426 = $425 ? 256 : $424;
      _memset(($pad$i|0),32,($426|0))|0;
      $427 = ($424>>>0)>(255);
      if ($427) {
       $$01$i74 = $424;
       while(1) {
        (___fwritex($pad$i,256,$f)|0);
        $428 = (($$01$i74) + -256)|0;
        $429 = ($428>>>0)>(255);
        if ($429) {
         $$01$i74 = $428;
        } else {
         break;
        }
       }
       $430 = $424 & 255;
       $$0$lcssa$i76 = $430;
      } else {
       $$0$lcssa$i76 = $424;
      }
      (___fwritex($pad$i,$$0$lcssa$i76,$f)|0);
     }
     $431 = $407 ? $w$1 : $i$0$lcssa272;
     $$be = $1182;$$be341 = $294;$$be342 = $1189;$l$0$be = $431;$l10n$0$be = $l10n$3;
     break;
    }
    $1007 = $z$2;
    $1008 = $a$2;
    $1009 = (($1007) - ($1008))|0;
    $1010 = ($p$5|0)<($1009|0);
    $$p$5 = $1010 ? $1009 : $p$5;
    $1011 = (($pl$2) + ($$p$5))|0;
    $1012 = ($w$1|0)<($1011|0);
    $w$2 = $1012 ? $1011 : $w$1;
    $1013 = $fl$6 & 73728;
    $1014 = ($1013|0)==(0);
    $1015 = ($w$2|0)>($1011|0);
    $or$cond$i82 = $1014 & $1015;
    if ($or$cond$i82) {
     $1016 = (($w$2) - ($1011))|0;
     $1017 = ($1016>>>0)>(256);
     $1018 = $1017 ? 256 : $1016;
     _memset(($pad$i|0),32,($1018|0))|0;
     $1019 = ($1016>>>0)>(255);
     if ($1019) {
      $$01$i84 = $1016;
      while(1) {
       (___fwritex($pad$i,256,$f)|0);
       $1020 = (($$01$i84) + -256)|0;
       $1021 = ($1020>>>0)>(255);
       if ($1021) {
        $$01$i84 = $1020;
       } else {
        break;
       }
      }
      $1022 = $1016 & 255;
      $$0$lcssa$i86 = $1022;
     } else {
      $$0$lcssa$i86 = $1016;
     }
     (___fwritex($pad$i,$$0$lcssa$i86,$f)|0);
    }
    (___fwritex($prefix$2,$pl$2,$f)|0);
    $1023 = ($1013|0)==(65536);
    $or$cond$i58 = $1023 & $1015;
    if ($or$cond$i58) {
     $1024 = (($w$2) - ($1011))|0;
     $1025 = ($1024>>>0)>(256);
     $1026 = $1025 ? 256 : $1024;
     _memset(($pad$i|0),48,($1026|0))|0;
     $1027 = ($1024>>>0)>(255);
     if ($1027) {
      $$01$i60 = $1024;
      while(1) {
       (___fwritex($pad$i,256,$f)|0);
       $1028 = (($$01$i60) + -256)|0;
       $1029 = ($1028>>>0)>(255);
       if ($1029) {
        $$01$i60 = $1028;
       } else {
        break;
       }
      }
      $1030 = $1024 & 255;
      $$0$lcssa$i62 = $1030;
     } else {
      $$0$lcssa$i62 = $1024;
     }
     (___fwritex($pad$i,$$0$lcssa$i62,$f)|0);
    }
    $1031 = ($$p$5|0)>($1009|0);
    if ($1031) {
     $1032 = (($$p$5) - ($1009))|0;
     $1033 = ($1032>>>0)>(256);
     $1034 = $1033 ? 256 : $1032;
     _memset(($pad$i|0),48,($1034|0))|0;
     $1035 = ($1032>>>0)>(255);
     if ($1035) {
      $$01$i45 = $1032;
      while(1) {
       (___fwritex($pad$i,256,$f)|0);
       $1036 = (($$01$i45) + -256)|0;
       $1037 = ($1036>>>0)>(255);
       if ($1037) {
        $$01$i45 = $1036;
       } else {
        break;
       }
      }
      $1038 = $1032 & 255;
      $$0$lcssa$i47 = $1038;
     } else {
      $$0$lcssa$i47 = $1032;
     }
     (___fwritex($pad$i,$$0$lcssa$i47,$f)|0);
    }
    (___fwritex($a$2,$1009,$f)|0);
    $1039 = ($1013|0)==(8192);
    $or$cond$i = $1039 & $1015;
    if ($or$cond$i) {
     $1040 = (($w$2) - ($1011))|0;
     $1041 = ($1040>>>0)>(256);
     $1042 = $1041 ? 256 : $1040;
     _memset(($pad$i|0),32,($1042|0))|0;
     $1043 = ($1040>>>0)>(255);
     if ($1043) {
      $$01$i = $1040;
      while(1) {
       (___fwritex($pad$i,256,$f)|0);
       $1044 = (($$01$i) + -256)|0;
       $1045 = ($1044>>>0)>(255);
       if ($1045) {
        $$01$i = $1044;
       } else {
        break;
       }
      }
      $1046 = $1040 & 255;
      $$0$lcssa$i = $1046;
     } else {
      $$0$lcssa$i = $1040;
     }
     (___fwritex($pad$i,$$0$lcssa$i,$f)|0);
    }
    $$be = $1182;$$be341 = $1183;$$be342 = $1184;$l$0$be = $w$2;$l10n$0$be = $l10n$3;
   } else {
    $$be = $$lcssa107;$$be341 = $1175;$$be342 = $1176;$l$0$be = $37;$l10n$0$be = $l10n$0;
   }
  } while(0);
  $1175 = $$be341;$1176 = $$be342;$23 = $$be;$cnt$0 = $cnt$1;$l$0 = $l$0$be;$l10n$0 = $l10n$0$be;
 }
 if ((label|0) == 429) {
  $1047 = ($f|0)==(0|0);
  if (!($1047)) {
   $$0 = $cnt$1$lcssa;
   STACKTOP = sp;return ($$0|0);
  }
  $1048 = ($l10n$0$lcssa|0)==(0);
  if ($1048) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $i$2163 = 1;
  while(1) {
   $1049 = (($nl_type) + ($i$2163<<2)|0);
   $1050 = HEAP32[$1049>>2]|0;
   $1051 = ($1050|0)==(0);
   if ($1051) {
    $i$2163$lcssa = $i$2163;
    break;
   }
   $1053 = (($nl_arg) + ($i$2163<<3)|0);
   $1054 = ($1050>>>0)>(20);
   L614: do {
    if (!($1054)) {
     do {
      switch ($1050|0) {
      case 13:  {
       $arglist_current47 = HEAP32[$ap>>2]|0;
       $1102 = $arglist_current47;
       $1103 = (0 + 4|0);
       $expanded176 = $1103;
       $expanded175 = (($expanded176) - 1)|0;
       $1104 = (($1102) + ($expanded175))|0;
       $1105 = (0 + 4|0);
       $expanded180 = $1105;
       $expanded179 = (($expanded180) - 1)|0;
       $expanded178 = $expanded179 ^ -1;
       $1106 = $1104 & $expanded178;
       $1107 = $1106;
       $1108 = HEAP32[$1107>>2]|0;
       $arglist_next48 = (($1107) + 4|0);
       HEAP32[$ap>>2] = $arglist_next48;
       $1109 = $1108&65535;
       $1110 = $1109 << 16 >> 16;
       $1111 = ($1110|0)<(0);
       $1112 = $1111 << 31 >> 31;
       $1113 = $1053;
       $1114 = $1113;
       HEAP32[$1114>>2] = $1110;
       $1115 = (($1113) + 4)|0;
       $1116 = $1115;
       HEAP32[$1116>>2] = $1112;
       break L614;
       break;
      }
      case 14:  {
       $arglist_current50 = HEAP32[$ap>>2]|0;
       $1117 = $arglist_current50;
       $1118 = (0 + 4|0);
       $expanded183 = $1118;
       $expanded182 = (($expanded183) - 1)|0;
       $1119 = (($1117) + ($expanded182))|0;
       $1120 = (0 + 4|0);
       $expanded187 = $1120;
       $expanded186 = (($expanded187) - 1)|0;
       $expanded185 = $expanded186 ^ -1;
       $1121 = $1119 & $expanded185;
       $1122 = $1121;
       $1123 = HEAP32[$1122>>2]|0;
       $arglist_next51 = (($1122) + 4|0);
       HEAP32[$ap>>2] = $arglist_next51;
       $$mask1$i = $1123 & 65535;
       $1124 = $1053;
       $1125 = $1124;
       HEAP32[$1125>>2] = $$mask1$i;
       $1126 = (($1124) + 4)|0;
       $1127 = $1126;
       HEAP32[$1127>>2] = 0;
       break L614;
       break;
      }
      case 15:  {
       $arglist_current53 = HEAP32[$ap>>2]|0;
       $1128 = $arglist_current53;
       $1129 = (0 + 4|0);
       $expanded190 = $1129;
       $expanded189 = (($expanded190) - 1)|0;
       $1130 = (($1128) + ($expanded189))|0;
       $1131 = (0 + 4|0);
       $expanded194 = $1131;
       $expanded193 = (($expanded194) - 1)|0;
       $expanded192 = $expanded193 ^ -1;
       $1132 = $1130 & $expanded192;
       $1133 = $1132;
       $1134 = HEAP32[$1133>>2]|0;
       $arglist_next54 = (($1133) + 4|0);
       HEAP32[$ap>>2] = $arglist_next54;
       $1135 = $1134&255;
       $1136 = $1135 << 24 >> 24;
       $1137 = ($1136|0)<(0);
       $1138 = $1137 << 31 >> 31;
       $1139 = $1053;
       $1140 = $1139;
       HEAP32[$1140>>2] = $1136;
       $1141 = (($1139) + 4)|0;
       $1142 = $1141;
       HEAP32[$1142>>2] = $1138;
       break L614;
       break;
      }
      case 16:  {
       $arglist_current56 = HEAP32[$ap>>2]|0;
       $1143 = $arglist_current56;
       $1144 = (0 + 4|0);
       $expanded197 = $1144;
       $expanded196 = (($expanded197) - 1)|0;
       $1145 = (($1143) + ($expanded196))|0;
       $1146 = (0 + 4|0);
       $expanded201 = $1146;
       $expanded200 = (($expanded201) - 1)|0;
       $expanded199 = $expanded200 ^ -1;
       $1147 = $1145 & $expanded199;
       $1148 = $1147;
       $1149 = HEAP32[$1148>>2]|0;
       $arglist_next57 = (($1148) + 4|0);
       HEAP32[$ap>>2] = $arglist_next57;
       $$mask$i = $1149 & 255;
       $1150 = $1053;
       $1151 = $1150;
       HEAP32[$1151>>2] = $$mask$i;
       $1152 = (($1150) + 4)|0;
       $1153 = $1152;
       HEAP32[$1153>>2] = 0;
       break L614;
       break;
      }
      case 17:  {
       $arglist_current59 = HEAP32[$ap>>2]|0;
       $1154 = $arglist_current59;
       $1155 = (0 + 8|0);
       $expanded204 = $1155;
       $expanded203 = (($expanded204) - 1)|0;
       $1156 = (($1154) + ($expanded203))|0;
       $1157 = (0 + 8|0);
       $expanded208 = $1157;
       $expanded207 = (($expanded208) - 1)|0;
       $expanded206 = $expanded207 ^ -1;
       $1158 = $1156 & $expanded206;
       $1159 = $1158;
       $1160 = +HEAPF64[$1159>>3];
       $arglist_next60 = (($1159) + 8|0);
       HEAP32[$ap>>2] = $arglist_next60;
       HEAPF64[$1053>>3] = $1160;
       break L614;
       break;
      }
      case 18:  {
       $arglist_current62 = HEAP32[$ap>>2]|0;
       $1161 = $arglist_current62;
       $1162 = (0 + 8|0);
       $expanded211 = $1162;
       $expanded210 = (($expanded211) - 1)|0;
       $1163 = (($1161) + ($expanded210))|0;
       $1164 = (0 + 8|0);
       $expanded215 = $1164;
       $expanded214 = (($expanded215) - 1)|0;
       $expanded213 = $expanded214 ^ -1;
       $1165 = $1163 & $expanded213;
       $1166 = $1165;
       $1167 = +HEAPF64[$1166>>3];
       $arglist_next63 = (($1166) + 8|0);
       HEAP32[$ap>>2] = $arglist_next63;
       HEAPF64[$1053>>3] = $1167;
       break L614;
       break;
      }
      case 9:  {
       $arglist_current35 = HEAP32[$ap>>2]|0;
       $1055 = $arglist_current35;
       $1056 = (0 + 4|0);
       $expanded148 = $1056;
       $expanded147 = (($expanded148) - 1)|0;
       $1057 = (($1055) + ($expanded147))|0;
       $1058 = (0 + 4|0);
       $expanded152 = $1058;
       $expanded151 = (($expanded152) - 1)|0;
       $expanded150 = $expanded151 ^ -1;
       $1059 = $1057 & $expanded150;
       $1060 = $1059;
       $1061 = HEAP32[$1060>>2]|0;
       $arglist_next36 = (($1060) + 4|0);
       HEAP32[$ap>>2] = $arglist_next36;
       HEAP32[$1053>>2] = $1061;
       break L614;
       break;
      }
      case 10:  {
       $arglist_current38 = HEAP32[$ap>>2]|0;
       $1062 = $arglist_current38;
       $1063 = (0 + 4|0);
       $expanded155 = $1063;
       $expanded154 = (($expanded155) - 1)|0;
       $1064 = (($1062) + ($expanded154))|0;
       $1065 = (0 + 4|0);
       $expanded159 = $1065;
       $expanded158 = (($expanded159) - 1)|0;
       $expanded157 = $expanded158 ^ -1;
       $1066 = $1064 & $expanded157;
       $1067 = $1066;
       $1068 = HEAP32[$1067>>2]|0;
       $arglist_next39 = (($1067) + 4|0);
       HEAP32[$ap>>2] = $arglist_next39;
       $1069 = ($1068|0)<(0);
       $1070 = $1069 << 31 >> 31;
       $1071 = $1053;
       $1072 = $1071;
       HEAP32[$1072>>2] = $1068;
       $1073 = (($1071) + 4)|0;
       $1074 = $1073;
       HEAP32[$1074>>2] = $1070;
       break L614;
       break;
      }
      case 11:  {
       $arglist_current41 = HEAP32[$ap>>2]|0;
       $1075 = $arglist_current41;
       $1076 = (0 + 4|0);
       $expanded162 = $1076;
       $expanded161 = (($expanded162) - 1)|0;
       $1077 = (($1075) + ($expanded161))|0;
       $1078 = (0 + 4|0);
       $expanded166 = $1078;
       $expanded165 = (($expanded166) - 1)|0;
       $expanded164 = $expanded165 ^ -1;
       $1079 = $1077 & $expanded164;
       $1080 = $1079;
       $1081 = HEAP32[$1080>>2]|0;
       $arglist_next42 = (($1080) + 4|0);
       HEAP32[$ap>>2] = $arglist_next42;
       $1082 = $1053;
       $1083 = $1082;
       HEAP32[$1083>>2] = $1081;
       $1084 = (($1082) + 4)|0;
       $1085 = $1084;
       HEAP32[$1085>>2] = 0;
       break L614;
       break;
      }
      case 12:  {
       $arglist_current44 = HEAP32[$ap>>2]|0;
       $1086 = $arglist_current44;
       $1087 = (0 + 8|0);
       $expanded169 = $1087;
       $expanded168 = (($expanded169) - 1)|0;
       $1088 = (($1086) + ($expanded168))|0;
       $1089 = (0 + 8|0);
       $expanded173 = $1089;
       $expanded172 = (($expanded173) - 1)|0;
       $expanded171 = $expanded172 ^ -1;
       $1090 = $1088 & $expanded171;
       $1091 = $1090;
       $1092 = $1091;
       $1093 = $1092;
       $1094 = HEAP32[$1093>>2]|0;
       $1095 = (($1092) + 4)|0;
       $1096 = $1095;
       $1097 = HEAP32[$1096>>2]|0;
       $arglist_next45 = (($1091) + 8|0);
       HEAP32[$ap>>2] = $arglist_next45;
       $1098 = $1053;
       $1099 = $1098;
       HEAP32[$1099>>2] = $1094;
       $1100 = (($1098) + 4)|0;
       $1101 = $1100;
       HEAP32[$1101>>2] = $1097;
       break L614;
       break;
      }
      default: {
       break L614;
      }
      }
     } while(0);
    }
   } while(0);
   $1168 = (($i$2163) + 1)|0;
   $1169 = ($1168|0)<(10);
   if ($1169) {
    $i$2163 = $1168;
   } else {
    label = 451;
    break;
   }
  }
  if ((label|0) == 451) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  $1052 = ($i$2163$lcssa|0)<(10);
  if (!($1052)) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  $i$3161 = $i$2163$lcssa;
  while(1) {
   $1172 = (($nl_type) + ($i$3161<<2)|0);
   $1173 = HEAP32[$1172>>2]|0;
   $1174 = ($1173|0)==(0);
   $1170 = (($i$3161) + 1)|0;
   if (!($1174)) {
    $$0$ph = -1;
    break;
   }
   $1171 = ($1170|0)<(10);
   if ($1171) {
    $i$3161 = $1170;
   } else {
    $$0$ph = 1;
    break;
   }
  }
  $$0 = $$0$ph;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 452) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 453) {
  $$0 = $$0$ph340;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($f) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = ($6>>>0)>($l>>>0);
 $l$ = $7 ? $l : $6;
 _memcpy(($3|0),($s|0),($l$|0))|0;
 $8 = HEAP32[$2>>2]|0;
 $9 = (($8) + ($l$)|0);
 HEAP32[$2>>2] = $9;
 return ($l|0);
}
function __ZNSt11logic_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2344 + 8|0));
 $0 = (($this) + 4|0);
 __THREW__ = 0;
 invoke_vii(449,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___resumeException($3|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2368 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP8[$msg>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $6 = (($msg) + 1|0);
  $7 = $6;
 } else {
  $4 = (($msg) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $7 = $5;
 }
 __THREW__ = 0;
 invoke_vii(449,($0|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch()|0;
  $11 = tempRet0;
  ___resumeException($10|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt13runtime_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2368 + 8|0));
 $0 = (($this) + 4|0);
 __THREW__ = 0;
 invoke_vii(449,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___resumeException($3|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt3__118__libcpp_refstringC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($msg|0))|0);
 $1 = (($0) + 13)|0;
 $2 = (__Znwj($1)|0);
 HEAP32[$2>>2] = $0;
 $3 = (($2) + 4|0);
 HEAP32[$3>>2] = $0;
 $4 = (($2) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = (($2) + 12|0);
 $6 = (($0) + 1)|0;
 _memcpy(($5|0),($msg|0),($6|0))|0;
 HEAP32[$this>>2] = $5;
 return;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(450,($0|0),(4648|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  HEAP32[$0>>2] = ((2424 + 8|0));
  ___cxa_throw(($0|0),(2472|0),(59|0));
  // unreachable;
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i = 0, $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i = 0;
 while(1) {
  $exitcond$i = ($__i$0$i|0)==(3);
  if ($exitcond$i) {
   break;
  }
  $0 = (($this) + ($__i$0$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i) + 1)|0;
  $__i$0$i = $1;
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS4_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $__i$0$i = 0, $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i = 0;
 while(1) {
  $exitcond$i = ($__i$0$i|0)==(3);
  if ($exitcond$i) {
   break;
  }
  $0 = (($this) + ($__i$0$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i) + 1)|0;
  $__i$0$i = $1;
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  ;HEAP32[$this+0>>2]=HEAP32[$__str+0>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
 } else {
  $3 = (($__str) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($__str) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$4,$6);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = (($this) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = (($this) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7__allocEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ejc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(11);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = (($this) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = (($this) + 4|0);
  HEAP32[$10>>2] = $__n;
  $__p$0 = $7;
 }
 _memset(($__p$0|0),($__c|0),($__n|0))|0;
 $11 = (($__p$0) + ($__n)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = (($this) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 return ($7|0);
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = (($this) + 1|0);
  $6 = $5;
 } else {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $6 = $4;
 }
 return ($6|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==($__str|0);
 if (!($0)) {
  $1 = HEAP8[$__str>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  if ($3) {
   $8 = (($__str) + 1|0);
   $9 = $1&255;
   $10 = $9 >>> 1;
   $11 = $8;$12 = $10;
  } else {
   $4 = (($__str) + 8|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (($__str) + 4|0);
   $7 = HEAP32[$6>>2]|0;
   $11 = $5;$12 = $7;
  }
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$11,$12)|0);
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE15__set_long_sizeEj($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 HEAP32[$0>>2] = $__s;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE19__get_short_pointerEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 1|0);
 return ($0|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE16__set_short_sizeEj($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__s << 1;
 $1 = $0&255;
 HEAP8[$this>>0] = $1;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 10;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = (($this) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = (($this) + 1|0);
    $14 = $13;
   } else {
    $11 = (($this) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   _memmove(($14|0),($__s|0),($__n|0))|0;
   $15 = (($14) + ($__n)|0);
   HEAP8[$15>>0] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = (($this) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -17;
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = 10;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp = (($4) + -1)|0;
  $5 = $phitmp;
 }
 return ($5|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = (($this) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7>>>0)<($__n>>>0);
 do {
  if ($8) {
   $9 = (($__n) - ($7))|0;
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$9,$__c)|0);
  } else {
   if ($2) {
    $14 = ((($this) + ($__n)|0) + 1|0);
    HEAP8[$14>>0] = 0;
    $15 = $__n << 1;
    $16 = $15&255;
    HEAP8[$this>>0] = $16;
    break;
   } else {
    $10 = (($this) + 8|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($11) + ($__n)|0);
    HEAP8[$12>>0] = 0;
    $13 = (($this) + 4|0);
    HEAP32[$13>>2] = $__n;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)==(0);
 if (!($0)) {
  $1 = HEAP8[$this>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  if ($3) {
   $16 = 10;$8 = $1;
  } else {
   $4 = HEAP32[$this>>2]|0;
   $5 = $4 & -2;
   $phitmp$i = (($5) + -1)|0;
   $6 = $4&255;
   $16 = $phitmp$i;$8 = $6;
  }
  $7 = $8 & 1;
  $9 = ($7<<24>>24)==(0);
  if ($9) {
   $12 = $8&255;
   $13 = $12 >>> 1;
   $15 = $13;
  } else {
   $10 = (($this) + 4|0);
   $11 = HEAP32[$10>>2]|0;
   $15 = $11;
  }
  $14 = (($16) - ($15))|0;
  $17 = ($14>>>0)<($__n>>>0);
  if ($17) {
   $18 = (($__n) - ($16))|0;
   $19 = (($18) + ($15))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
   $$pre = HEAP8[$this>>0]|0;
   $21 = $$pre;
  } else {
   $21 = $8;
  }
  $20 = $21 & 1;
  $22 = ($20<<24>>24)==(0);
  if ($22) {
   $25 = (($this) + 1|0);
   $27 = $25;
  } else {
   $23 = (($this) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $27 = $24;
  }
  $26 = (($27) + ($15)|0);
  _memset(($26|0),($__c|0),($__n|0))|0;
  $28 = (($15) + ($__n))|0;
  $29 = HEAP8[$this>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $33 = $28 << 1;
   $34 = $33&255;
   HEAP8[$this>>0] = $34;
  } else {
   $32 = (($this) + 4|0);
   HEAP32[$32>>2] = $28;
  }
  $35 = (($27) + ($28)|0);
  HEAP8[$35>>0] = 0;
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0;
 var $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 10;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = (($this) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(11);
 if ($17) {
  $20 = 10;
 } else {
  $18 = (($16) + 16)|0;
  $19 = $18 & -16;
  $phitmp$i2 = (($19) + -1)|0;
  $20 = $phitmp$i2;
 }
 $21 = ($20|0)==($22|0);
 L14: do {
  if (!($21)) {
   $23 = ($20|0)==(10);
   do {
    if ($23) {
     $24 = (($this) + 1|0);
     $25 = (($this) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$1 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = ($20>>>0)>($22>>>0);
     $28 = (($20) + 1)|0;
     if ($27) {
      $29 = (__Znwj($28)|0);
      $__new_data$0 = $29;
     } else {
      __THREW__ = 0;
      $30 = (invoke_ii(451,($28|0))|0);
      $31 = __THREW__; __THREW__ = 0;
      $32 = $31&1;
      if ($32) {
       $33 = ___cxa_find_matching_catch(0|0)|0;
       $34 = tempRet0;
       (___cxa_begin_catch(($33|0))|0);
       ___cxa_end_catch();
       break L14;
      } else {
       $__new_data$0 = $30;
      }
     }
     $35 = $8 & 1;
     $36 = ($35<<24>>24)==(0);
     if ($36) {
      $39 = (($this) + 1|0);
      $__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $39;$__was_long$0$off0 = 0;
      break;
     } else {
      $37 = (($this) + 8|0);
      $38 = HEAP32[$37>>2]|0;
      $__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $38;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $40 = $8 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $44 = $8&255;
    $45 = $44 >>> 1;
    $47 = $45;
   } else {
    $42 = (($this) + 4|0);
    $43 = HEAP32[$42>>2]|0;
    $47 = $43;
   }
   $46 = (($47) + 1)|0;
   _memcpy(($__new_data$1|0),($__p$0|0),($46|0))|0;
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $48 = (($20) + 1)|0;
    $49 = $48 | 1;
    HEAP32[$this>>2] = $49;
    $50 = (($this) + 4|0);
    HEAP32[$50>>2] = $14;
    $51 = (($this) + 8|0);
    HEAP32[$51>>2] = $__new_data$1;
    break;
   } else {
    $52 = $14 << 1;
    $53 = $52&255;
    HEAP8[$this>>0] = $53;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE11__recommendEj($__s) {
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__s>>>0)<(11);
 if ($0) {
  $3 = 10;
 } else {
  $1 = (($__s) + 16)|0;
  $2 = $1 & -16;
  $phitmp = (($2) + -1)|0;
  $3 = $phitmp;
 }
 return ($3|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE14__set_long_capEj($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__s | 1;
 HEAP32[$this>>2] = $0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE18__set_long_pointerEPc($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 HEAP32[$0>>2] = $__p;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = (($this) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 10;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = (($this) + 1|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $__p$0$sum$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $__p$0$sum$pre;
 }
 else if ((label|0) == 8) {
  $18 = (($this) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = (($this) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0)|0);
 HEAP8[$__p$0>>0] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
 HEAP8[$22>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $15 = 10;$7 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $15 = $phitmp$i;$7 = $5;
 }
 $6 = $7 & 1;
 $8 = ($6<<24>>24)==(0);
 if ($8) {
  $11 = $7&255;
  $12 = $11 >>> 1;
  $14 = $12;
 } else {
  $9 = (($this) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $14 = $10;
 }
 $13 = (($15) - ($14))|0;
 $16 = ($13>>>0)<($__n>>>0);
 if ($16) {
  $33 = (($__n) - ($15))|0;
  $34 = (($33) + ($14))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$15,$34,$14,$14,0,$__n,$__s);
 } else {
  $17 = ($__n|0)==(0);
  if (!($17)) {
   $18 = $7 & 1;
   $19 = ($18<<24>>24)==(0);
   if ($19) {
    $22 = (($this) + 1|0);
    $24 = $22;
   } else {
    $20 = (($this) + 8|0);
    $21 = HEAP32[$20>>2]|0;
    $24 = $21;
   }
   $23 = (($24) + ($14)|0);
   _memcpy(($23|0),($__s|0),($__n|0))|0;
   $25 = (($14) + ($__n))|0;
   $26 = HEAP8[$this>>0]|0;
   $27 = $26 & 1;
   $28 = ($27<<24>>24)==(0);
   if ($28) {
    $30 = $25 << 1;
    $31 = $30&255;
    HEAP8[$this>>0] = $31;
   } else {
    $29 = (($this) + 4|0);
    HEAP32[$29>>2] = $25;
   }
   $32 = (($24) + ($25)|0);
   HEAP8[$32>>0] = 0;
  }
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-18 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 1|0);
  $19 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $19 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  if ($13) {
   $16 = 11;
  } else {
   $14 = (($12) + 16)|0;
   $15 = $14 & -16;
   $16 = $15;
  }
 } else {
  $16 = -17;
 }
 $17 = (__Znwj($16)|0);
 $18 = ($__n_copy|0)==(0);
 if (!($18)) {
  _memcpy(($17|0),($19|0),($__n_copy|0))|0;
 }
 $20 = ($__n_add|0)==(0);
 if (!($20)) {
  $21 = (($17) + ($__n_copy)|0);
  _memcpy(($21|0),($__p_new_stuff|0),($__n_add|0))|0;
 }
 $22 = (($__old_sz) - ($__n_del))|0;
 $23 = ($22|0)==($__n_copy|0);
 if (!($23)) {
  $24 = (($22) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $25 = (($17) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $26 = (($19) + ($$sum1)|0);
  _memcpy(($25|0),($26|0),($24|0))|0;
 }
 $27 = ($__old_cap|0)==(10);
 if (!($27)) {
  __ZdlPv($19);
 }
 $28 = (($this) + 8|0);
 HEAP32[$28>>2] = $17;
 $29 = $16 | 1;
 HEAP32[$this>>2] = $29;
 $30 = (($22) + ($__n_add))|0;
 $31 = (($this) + 4|0);
 HEAP32[$31>>2] = $30;
 $32 = (($17) + ($30)|0);
 HEAP8[$32>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-17 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 1|0);
  $19 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $19 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  if ($13) {
   $16 = 11;
  } else {
   $14 = (($12) + 16)|0;
   $15 = $14 & -16;
   $16 = $15;
  }
 } else {
  $16 = -17;
 }
 $17 = (__Znwj($16)|0);
 $18 = ($__n_copy|0)==(0);
 if (!($18)) {
  _memcpy(($17|0),($19|0),($__n_copy|0))|0;
 }
 $20 = (($__old_sz) - ($__n_del))|0;
 $21 = ($20|0)==($__n_copy|0);
 if (!($21)) {
  $22 = (($20) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $23 = (($17) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $24 = (($19) + ($$sum1)|0);
  _memcpy(($23|0),($24|0),($22|0))|0;
 }
 $25 = ($__old_cap|0)==(10);
 if (!($25)) {
  __ZdlPv($19);
 }
 $26 = (($this) + 8|0);
 HEAP32[$26>>2] = $17;
 $27 = $16 | 1;
 HEAP32[$this>>2] = $27;
 return;
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE13get_allocatorEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(2);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = (($this) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = (($this) + 4|0);
  HEAP32[$11>>2] = $__sz;
  $__p$0 = $8;
 }
 (_wmemcpy($__p$0,$__s,$__sz)|0);
 $12 = (($__p$0) + ($__sz<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(2);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = (($this) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = (($this) + 4|0);
  HEAP32[$11>>2] = $__n;
  $__p$0 = $8;
 }
 (_wmemset($__p$0,$__c,$__n)|0);
 $12 = (($__p$0) + ($__n<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 1;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = (($this) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = (($this) + 4|0);
    $14 = $13;
   } else {
    $11 = (($this) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   (_wmemmove($14,$__s,$__n)|0);
   $15 = (($14) + ($__n<<2)|0);
   HEAP32[$15>>2] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = (($this) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 var $phitmp$i = 0, $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 1;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = (($this) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(2);
 if ($17) {
  $20 = 1;
 } else {
  $18 = (($16) + 4)|0;
  $19 = $18 & -4;
  $phitmp$i2 = (($19) + -1)|0;
  $20 = $phitmp$i2;
 }
 $21 = ($20|0)==($22|0);
 L14: do {
  if (!($21)) {
   $23 = ($20|0)==(1);
   do {
    if ($23) {
     $24 = (($this) + 4|0);
     $25 = (($this) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$1 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = ($20>>>0)>($22>>>0);
     $28 = $20 << 2;
     $29 = (($28) + 4)|0;
     if ($27) {
      $30 = (__Znwj($29)|0);
      $$sink = $30;
     } else {
      __THREW__ = 0;
      $31 = (invoke_ii(451,($29|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       $34 = ___cxa_find_matching_catch(0|0)|0;
       $35 = tempRet0;
       (___cxa_begin_catch(($34|0))|0);
       ___cxa_end_catch();
       break L14;
      } else {
       $$sink = $31;
      }
     }
     $36 = $8 & 1;
     $37 = ($36<<24>>24)==(0);
     if ($37) {
      $40 = (($this) + 4|0);
      $__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $40;$__was_long$0$off0 = 0;
      break;
     } else {
      $38 = (($this) + 8|0);
      $39 = HEAP32[$38>>2]|0;
      $__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $39;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $41 = $8 & 1;
   $42 = ($41<<24>>24)==(0);
   if ($42) {
    $45 = $8&255;
    $46 = $45 >>> 1;
    $48 = $46;
   } else {
    $43 = (($this) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $48 = $44;
   }
   $47 = (($48) + 1)|0;
   (_wmemcpy($__new_data$1,$__p$0,$47)|0);
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $49 = (($20) + 1)|0;
    $50 = $49 | 1;
    HEAP32[$this>>2] = $50;
    $51 = (($this) + 4|0);
    HEAP32[$51>>2] = $14;
    $52 = (($this) + 8|0);
    HEAP32[$52>>2] = $__new_data$1;
    break;
   } else {
    $53 = $14 << 1;
    $54 = $53&255;
    HEAP8[$this>>0] = $54;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = (($this) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 1;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = (($this) + 4|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $__p$0$sum$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $__p$0$sum$pre;
 }
 else if ((label|0) == 8) {
  $18 = (($this) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = (($this) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0<<2)|0);
 HEAP32[$__p$0>>2] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D<<2)|0);
 HEAP32[$22>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741806 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 4|0);
  $20 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  if ($13) {
   $17 = 2;
  } else {
   $14 = (($12) + 4)|0;
   $15 = $14 & -4;
   $17 = $15;
  }
 } else {
  $17 = 1073741807;
 }
 $16 = $17 << 2;
 $18 = (__Znwj($16)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  (_wmemcpy($18,$20,$__n_copy)|0);
 }
 $21 = ($__n_add|0)==(0);
 if (!($21)) {
  $22 = (($18) + ($__n_copy<<2)|0);
  (_wmemcpy($22,$__p_new_stuff,$__n_add)|0);
 }
 $23 = (($__old_sz) - ($__n_del))|0;
 $24 = ($23|0)==($__n_copy|0);
 if (!($24)) {
  $25 = (($23) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $26 = (($18) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $27 = (($20) + ($$sum1<<2)|0);
  (_wmemcpy($26,$27,$25)|0);
 }
 $28 = ($__old_cap|0)==(1);
 if (!($28)) {
  __ZdlPv($20);
 }
 $29 = (($this) + 8|0);
 HEAP32[$29>>2] = $18;
 $30 = $17 | 1;
 HEAP32[$this>>2] = $30;
 $31 = (($23) + ($__n_add))|0;
 $32 = (($this) + 4|0);
 HEAP32[$32>>2] = $31;
 $33 = (($18) + ($31<<2)|0);
 HEAP32[$33>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741807 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 4|0);
  $20 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  if ($13) {
   $17 = 2;
  } else {
   $14 = (($12) + 4)|0;
   $15 = $14 & -4;
   $17 = $15;
  }
 } else {
  $17 = 1073741807;
 }
 $16 = $17 << 2;
 $18 = (__Znwj($16)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  (_wmemcpy($18,$20,$__n_copy)|0);
 }
 $21 = (($__old_sz) - ($__n_del))|0;
 $22 = ($21|0)==($__n_copy|0);
 if (!($22)) {
  $23 = (($21) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $24 = (($18) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $25 = (($20) + ($$sum1<<2)|0);
  (_wmemcpy($24,$25,$23)|0);
 }
 $26 = ($__old_cap|0)==(1);
 if (!($26)) {
  __ZdlPv($20);
 }
 $27 = (($this) + 8|0);
 HEAP32[$27>>2] = $18;
 $28 = $17 | 1;
 HEAP32[$this>>2] = $28;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__p$0 = 0, $__p$0$ph = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = ($2>>>0)>(4294967279);
 if ($3) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $4 = ($2>>>0)<(11);
 if ($4) {
  $5 = $2 << 1;
  $6 = $5&255;
  HEAP8[$this>>0] = $6;
  $7 = (($this) + 1|0);
  $__p$0$ph = $7;
 } else {
  $8 = (($2) + 16)|0;
  $9 = $8 & -16;
  $10 = (__Znwj($9)|0);
  $11 = (($this) + 8|0);
  HEAP32[$11>>2] = $10;
  $12 = $9 | 1;
  HEAP32[$this>>2] = $12;
  $13 = (($this) + 4|0);
  HEAP32[$13>>2] = $2;
  $__p$0$ph = $10;
 }
 $14 = $__last;
 $15 = (($14) - ($0))|0;
 $$0 = $__first;$__p$0 = $__p$0$ph;
 while(1) {
  $16 = ($$0|0)==($__last|0);
  if ($16) {
   break;
  }
  $17 = HEAP8[$$0>>0]|0;
  HEAP8[$__p$0>>0] = $17;
  $18 = (($$0) + 1|0);
  $19 = (($__p$0) + 1|0);
  $$0 = $18;$__p$0 = $19;
 }
 $scevgep2 = (($__p$0$ph) + ($15)|0);
 HEAP8[$scevgep2>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, $__p$0$ph = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)>(1073741807);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(2);
 if ($5) {
  $6 = $2 >>> 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = (($this) + 4|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 4)|0;
  $10 = $9 & -4;
  $11 = $10 << 2;
  $12 = (__Znwj($11)|0);
  $13 = (($this) + 8|0);
  HEAP32[$13>>2] = $12;
  $14 = $10 | 1;
  HEAP32[$this>>2] = $14;
  $15 = (($this) + 4|0);
  HEAP32[$15>>2] = $3;
  $__p$0$ph = $12;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $18 = $17 >>> 2;
 $$0 = $__first;$__p$0 = $__p$0$ph;
 while(1) {
  $19 = ($$0|0)==($__last|0);
  if ($19) {
   break;
  }
  $20 = HEAP32[$$0>>2]|0;
  HEAP32[$__p$0>>2] = $20;
  $21 = (($$0) + 4|0);
  $22 = (($__p$0) + 4|0);
  $$0 = $21;$__p$0 = $22;
 }
 $scevgep = (($__p$0$ph) + ($18<<2)|0);
 HEAP32[$scevgep>>2] = 0;
 return;
}
function __ZNSt3__18ios_base5clearEj($this,$state) {
 $this = $this|0;
 $state = $state|0;
 var $$state = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = (($this) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 $4 = $3&1;
 $$state = $4 | $state;
 $5 = (($this) + 16|0);
 HEAP32[$5>>2] = $$state;
 $6 = $3&1;
 $7 = $6 | $state;
 $8 = (($this) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $7 & $9;
 $11 = ($10|0)==(0);
 if ($11) {
  STACKTOP = sp;return;
 }
 $12 = (___cxa_allocate_exception(16)|0);
 (__ZNSt3__117iostream_categoryEv()|0);
 $13 = $0;
 $14 = $13;
 HEAP32[$14>>2] = 1;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = (4800);
 __THREW__ = 0;
 invoke_viii(452,($12|0),(4856|0),($0|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $19 = ___cxa_find_matching_catch()|0;
  $20 = tempRet0;
  ___cxa_free_exception(($12|0));
  ___resumeException($19|0);
  // unreachable;
 } else {
  ___cxa_throw(($12|0),(4904|0),(96|0));
  // unreachable;
 }
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEE8setstateEj($this,$__state) {
 $this = $this|0;
 $__state = $__state|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | $__state;
 __ZNSt3__18ios_base5clearEj($this,$2);
 return;
}
function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4840 + 8|0));
 __THREW__ = 0;
 invoke_vii(453,($this|0),0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $11 = ___cxa_find_matching_catch(0|0)|0;
  $12 = tempRet0;
  ___clang_call_terminate($11);
  // unreachable;
 } else {
  $2 = (($this) + 28|0);
  __ZNSt3__16localeD2Ev($2);
  $3 = (($this) + 32|0);
  $4 = HEAP32[$3>>2]|0;
  _free($4);
  $5 = (($this) + 36|0);
  $6 = HEAP32[$5>>2]|0;
  _free($6);
  $7 = (($this) + 48|0);
  $8 = HEAP32[$7>>2]|0;
  _free($8);
  $9 = (($this) + 60|0);
  $10 = HEAP32[$9>>2]|0;
  _free($10);
  return;
 }
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5rdbufEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 40|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 32|0);
 $3 = (($this) + 36|0);
 $i$0 = $1;
 while(1) {
  $4 = ($i$0|0)==(0);
  if ($4) {
   break;
  }
  $5 = (($i$0) + -1)|0;
  $6 = HEAP32[$2>>2]|0;
  $7 = (($6) + ($5<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$3>>2]|0;
  $10 = (($9) + ($5<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_viii[$8 & 1023]($ev,$this,$11);
  $i$0 = $5;
 }
 return;
}
function __ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE4fillEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = (($this) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(-1);
 do {
  if ($3) {
   $4 = (($this) + 28|0);
   __ZNSt3__16localeC2ERKS0_($0,$4);
   __THREW__ = 0;
   $5 = (invoke_iii(454,($0|0),(7032|0))|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if (!($7)) {
    $8 = HEAP32[$5>>2]|0;
    $9 = (($8) + 28|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    $11 = (invoke_iii($10|0,($5|0),32)|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     __ZNSt3__16localeD2Ev($0);
     $16 = $11 << 24 >> 24;
     HEAP32[$1>>2] = $16;
     $18 = $16;
     break;
    }
   }
   $14 = ___cxa_find_matching_catch()|0;
   $15 = tempRet0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($14|0);
   // unreachable;
  } else {
   $18 = $2;
  }
 } while(0);
 $17 = $18&255;
 STACKTOP = sp;return ($17|0);
}
function __ZNKSt3__18ios_base6getlocEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 28|0);
 __ZNSt3__16localeC2ERKS0_($agg$result,$0);
 return;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4664 + 8|0));
 return;
}
function __ZNSt3__18ios_base4initEPv($this,$sb) {
 $this = $this|0;
 $sb = $sb|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $not$ = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 HEAP32[$0>>2] = $sb;
 $not$ = ($sb|0)==(0|0);
 $1 = $not$&1;
 $2 = (($this) + 16|0);
 HEAP32[$2>>2] = $1;
 $3 = (($this) + 20|0);
 HEAP32[$3>>2] = 0;
 $4 = (($this) + 4|0);
 HEAP32[$4>>2] = 4098;
 $5 = (($this) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = (($this) + 8|0);
 HEAP32[$6>>2] = 6;
 $7 = (($this) + 32|0);
 $8 = (($this) + 28|0);
 dest=$7+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev($8);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4680 + 8|0));
 $0 = (($this) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4680 + 8|0));
 $0 = (($this) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputcEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = (($5) + 52|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = $__c&255;
  $9 = (FUNCTION_TABLE_iii[$7 & 1023]($this,$8)|0);
  $$0 = $9;
 } else {
  $10 = (($1) + 1|0);
  HEAP32[$0>>2] = $10;
  HEAP8[$1>>0] = $__c;
  $11 = $__c&255;
  $$0 = $11;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + 48|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iiii[$2 & 1023]($this,$__s,$__n)|0);
 return ($3|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4680 + 8|0));
 $0 = (($this) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = (($this) + 8|0);
 ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 return;
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($this,$__gbeg,$__gnext,$__gend) {
 $this = $this|0;
 $__gbeg = $__gbeg|0;
 $__gnext = $__gnext|0;
 $__gend = $__gend|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 HEAP32[$0>>2] = $__gbeg;
 $1 = (($this) + 12|0);
 HEAP32[$1>>2] = $__gnext;
 $2 = (($this) + 16|0);
 HEAP32[$2>>2] = $__gend;
 return;
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 20|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5epptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + ($__n)|0);
 HEAP32[$0>>2] = $2;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_($this,$__pbeg,$__pend) {
 $this = $this|0;
 $__pbeg = $__pbeg|0;
 $__pend = $__pend|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 HEAP32[$0>>2] = $__pbeg;
 $1 = (($this) + 20|0);
 HEAP32[$1>>2] = $__pbeg;
 $2 = (($this) + 28|0);
 HEAP32[$2>>2] = $__pend;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($agg$result) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($agg$result) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0 = 0, $__i$0$lcssa = 0, $storemerge = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = (($this) + 16|0);
 $$0 = $__s;$__i$0 = 0;
 while(1) {
  $2 = ($__i$0|0)<($__n|0);
  if (!($2)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0>>2]|0;
  $4 = HEAP32[$1>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = (($3) + 1|0);
   HEAP32[$0>>2] = $6;
   $7 = HEAP8[$3>>0]|0;
   $storemerge = $7;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = (($8) + 40|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (FUNCTION_TABLE_ii[$10 & 1023]($this)|0);
   $12 = ($11|0)==(-1);
   if ($12) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   $13 = $11&255;
   $storemerge = $13;
  }
  HEAP8[$$0>>0] = $storemerge;
  $14 = (($__i$0) + 1)|0;
  $15 = (($$0) + 1|0);
  $$0 = $15;$__i$0 = $14;
 }
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 1023]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
 } else {
  $5 = (($this) + 12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($6) + 1|0);
  HEAP32[$5>>2] = $7;
  $8 = HEAP8[$6>>0]|0;
  $9 = $8&255;
  $$0 = $9;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0 = 0, $__i$0$lcssa = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = (($this) + 28|0);
 $$0 = $__s;$__i$0 = 0;
 while(1) {
  $2 = ($__i$0|0)<($__n|0);
  if (!($2)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0>>2]|0;
  $4 = HEAP32[$1>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = HEAP8[$$0>>0]|0;
   $7 = (($3) + 1|0);
   HEAP32[$0>>2] = $7;
   HEAP8[$3>>0] = $6;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = (($8) + 52|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = HEAP8[$$0>>0]|0;
   $12 = $11&255;
   $13 = (FUNCTION_TABLE_iii[$10 & 1023]($this,$12)|0);
   $14 = ($13|0)==(-1);
   if ($14) {
    $__i$0$lcssa = $__i$0;
    break;
   }
  }
  $15 = (($$0) + 1|0);
  $16 = (($__i$0) + 1)|0;
  $$0 = $15;$__i$0 = $16;
 }
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 8)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this|0;
 var $$0 = 0, $$sum = 0, $$sum1 = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 24)|0;
 $3 = (($this) + ($$sum)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 L1: do {
  if (!($5)) {
   __THREW__ = 0;
   invoke_vii(412,($__s|0),($this|0));
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   L3: do {
    if ($7) {
     $31 = ___cxa_find_matching_catch(0|0)|0;
     $32 = tempRet0;
     $$0 = $31;
    } else {
     $8 = HEAP8[$__s>>0]|0;
     $9 = ($8<<24>>24)==(0);
     do {
      if (!($9)) {
       $10 = HEAP32[$this>>2]|0;
       $11 = (($10) + -12|0);
       $12 = HEAP32[$11>>2]|0;
       $$sum1 = (($12) + 24)|0;
       $13 = (($this) + ($$sum1)|0);
       $14 = HEAP32[$13>>2]|0;
       $15 = HEAP32[$14>>2]|0;
       $16 = (($15) + 24|0);
       $17 = HEAP32[$16>>2]|0;
       __THREW__ = 0;
       $18 = (invoke_ii($17|0,($14|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        $21 = ($18|0)==(-1);
        if (!($21)) {
         break;
        }
        $22 = HEAP32[$this>>2]|0;
        $23 = (($22) + -12|0);
        $24 = HEAP32[$23>>2]|0;
        $25 = (($this) + ($24)|0);
        $$sum2 = (($24) + 16)|0;
        $26 = (($this) + ($$sum2)|0);
        $27 = HEAP32[$26>>2]|0;
        $28 = $27 | 1;
        __THREW__ = 0;
        invoke_vii(455,($25|0),($28|0));
        $29 = __THREW__; __THREW__ = 0;
        $30 = $29&1;
        if (!($30)) {
         break;
        }
       }
       $33 = ___cxa_find_matching_catch(0|0)|0;
       $34 = tempRet0;
       __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
       $$0 = $33;
       break L3;
      }
     } while(0);
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     break L1;
    }
   } while(0);
   (___cxa_begin_catch(($$0|0))|0);
   $35 = HEAP32[$this>>2]|0;
   $36 = (($35) + -12|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (($this) + ($37)|0);
   __THREW__ = 0;
   invoke_vi(419,($38|0));
   $39 = __THREW__; __THREW__ = 0;
   $40 = $39&1;
   if (!($40)) {
    ___cxa_end_catch();
    break;
   }
   $41 = ___cxa_find_matching_catch()|0;
   $42 = tempRet0;
   __THREW__ = 0;
   invoke_v(420);
   $43 = __THREW__; __THREW__ = 0;
   $44 = $43&1;
   if ($44) {
    $45 = ___cxa_find_matching_catch(0|0)|0;
    $46 = tempRet0;
    ___clang_call_terminate($45);
    // unreachable;
   } else {
    ___resumeException($41|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | 1;
 HEAP32[$0>>2] = $2;
 $3 = (($this) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 if ($6) {
  return;
 } else {
  ___cxa_rethrow();
  // unreachable;
 }
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 4)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this,$__os) {
 $this = $this|0;
 $__os = $__os|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 0;
 $0 = (($this) + 4|0);
 HEAP32[$0>>2] = $__os;
 $1 = HEAP32[$__os>>2]|0;
 $2 = (($1) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $$sum = (($3) + 16)|0;
 $4 = (($__os) + ($$sum)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$sum1 = (($3) + 72)|0;
  $7 = (($__os) + ($$sum1)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8)|0);
  }
  HEAP8[$this>>0] = 1;
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $$sum3 = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $$sum = (($4) + 24)|0;
 $5 = (($1) + ($$sum)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 do {
  if (!($7)) {
   $$sum1 = (($4) + 16)|0;
   $8 = (($1) + ($$sum1)|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==(0);
   if ($10) {
    $$sum2 = (($4) + 4)|0;
    $11 = (($1) + ($$sum2)|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $12 & 8192;
    $14 = ($13|0)==(0);
    if (!($14)) {
     $15 = (__ZSt18uncaught_exceptionv()|0);
     if (!($15)) {
      $16 = HEAP32[$0>>2]|0;
      $17 = HEAP32[$16>>2]|0;
      $18 = (($17) + -12|0);
      $19 = HEAP32[$18>>2]|0;
      $$sum3 = (($19) + 24)|0;
      $20 = (($16) + ($$sum3)|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = HEAP32[$21>>2]|0;
      $23 = (($22) + 24|0);
      $24 = HEAP32[$23>>2]|0;
      __THREW__ = 0;
      $25 = (invoke_ii($24|0,($21|0))|0);
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       $28 = ($25|0)==(-1);
       if (!($28)) {
        break;
       }
       $29 = HEAP32[$0>>2]|0;
       $30 = HEAP32[$29>>2]|0;
       $31 = (($30) + -12|0);
       $32 = HEAP32[$31>>2]|0;
       $33 = (($29) + ($32)|0);
       $$sum4 = (($32) + 16)|0;
       $34 = (($29) + ($$sum4)|0);
       $35 = HEAP32[$34>>2]|0;
       $36 = $35 | 1;
       __THREW__ = 0;
       invoke_vii(455,($33|0),($36|0));
       $37 = __THREW__; __THREW__ = 0;
       $38 = $37&1;
       if (!($38)) {
        break;
       }
      }
      $39 = ___cxa_find_matching_catch(0|0)|0;
      $40 = tempRet0;
      (___cxa_begin_catch(($39|0))|0);
      __THREW__ = 0;
      invoke_v(420);
      $41 = __THREW__; __THREW__ = 0;
      $42 = $41&1;
      if ($42) {
       $43 = ___cxa_find_matching_catch(0|0)|0;
       $44 = tempRet0;
       ___clang_call_terminate($43);
       // unreachable;
      }
     }
    }
   }
  }
 } while(0);
 return;
}
function __ZNKSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentrycvbEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = ($0<<24>>24)!=(0);
 return ($1|0);
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum$i = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $8 = 0, $9 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $0 = sp + 20|0;
 $1 = sp + 16|0;
 $__s = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 __THREW__ = 0;
 invoke_vii(412,($__s|0),($this|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 L1: do {
  if ($5) {
   $55 = ___cxa_find_matching_catch(0|0)|0;
   $56 = tempRet0;
   $$1 = $55;$$pre$phi7Z2D = $this;$$pre$phiZ2D = $this;
   label = 18;
  } else {
   $6 = HEAP8[$__s>>0]|0;
   $7 = ($6<<24>>24)==(0);
   do {
    if (!($7)) {
     $8 = HEAP32[$this>>2]|0;
     $9 = (($8) + -12|0);
     $10 = HEAP32[$9>>2]|0;
     $$sum = (($10) + 28)|0;
     $11 = (($this) + ($$sum)|0);
     __ZNSt3__16localeC2ERKS0_($2,$11);
     __THREW__ = 0;
     $12 = (invoke_iii(454,($2|0),(5720|0))|0);
     $13 = __THREW__; __THREW__ = 0;
     $14 = $13&1;
     if ($14) {
      $59 = ___cxa_find_matching_catch(0|0)|0;
      $60 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $$0 = $59;
     } else {
      __ZNSt3__16localeD2Ev($2);
      $15 = HEAP32[$this>>2]|0;
      $16 = (($15) + -12|0);
      $17 = HEAP32[$16>>2]|0;
      $$sum$i = (($17) + 24)|0;
      $18 = (($this) + ($$sum$i)|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = (($this) + ($17)|0);
      $$sum3 = (($17) + 76)|0;
      $21 = (($this) + ($$sum3)|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = ($22|0)==(-1);
      do {
       if ($23) {
        $$sum5 = (($17) + 28)|0;
        $24 = (($this) + ($$sum5)|0);
        __ZNSt3__16localeC2ERKS0_($1,$24);
        __THREW__ = 0;
        $25 = (invoke_iii(454,($1|0),(7032|0))|0);
        $26 = __THREW__; __THREW__ = 0;
        $27 = $26&1;
        if (!($27)) {
         $28 = HEAP32[$25>>2]|0;
         $29 = (($28) + 28|0);
         $30 = HEAP32[$29>>2]|0;
         __THREW__ = 0;
         $31 = (invoke_iii($30|0,($25|0),32)|0);
         $32 = __THREW__; __THREW__ = 0;
         $33 = $32&1;
         if (!($33)) {
          __ZNSt3__16localeD2Ev($1);
          $36 = $31 << 24 >> 24;
          HEAP32[$21>>2] = $36;
          $38 = $36;
          label = 9;
          break;
         }
        }
        $34 = ___cxa_find_matching_catch(0|0)|0;
        $35 = tempRet0;
        __ZNSt3__16localeD2Ev($1);
        $eh$lpad$body$indexZ2D = $34;
       } else {
        $38 = $22;
        label = 9;
       }
      } while(0);
      if ((label|0) == 9) {
       $37 = $38&255;
       $39 = HEAP32[$12>>2]|0;
       $40 = (($39) + 16|0);
       $41 = HEAP32[$40>>2]|0;
       HEAP32[$0>>2] = $19;
       __THREW__ = 0;
       ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
       invoke_viiiiii($41|0,($3|0),($12|0),($$byval_copy|0),($20|0),($37|0),($__n|0));
       $42 = __THREW__; __THREW__ = 0;
       $43 = $42&1;
       if (!($43)) {
        $44 = HEAP32[$3>>2]|0;
        $45 = ($44|0)==(0|0);
        if (!($45)) {
         break;
        }
        $46 = HEAP32[$this>>2]|0;
        $47 = (($46) + -12|0);
        $48 = HEAP32[$47>>2]|0;
        $49 = (($this) + ($48)|0);
        $$sum4 = (($48) + 16)|0;
        $50 = (($this) + ($$sum4)|0);
        $51 = HEAP32[$50>>2]|0;
        $52 = $51 | 5;
        __THREW__ = 0;
        invoke_vii(455,($49|0),($52|0));
        $53 = __THREW__; __THREW__ = 0;
        $54 = $53&1;
        if (!($54)) {
         break;
        }
       }
       $57 = ___cxa_find_matching_catch(0|0)|0;
       $58 = tempRet0;
       $eh$lpad$body$indexZ2D = $57;
      }
      $$0 = $eh$lpad$body$indexZ2D;
     }
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     $$1 = $$0;$$pre$phi7Z2D = $this;$$pre$phiZ2D = $this;
     label = 18;
     break L1;
    }
   } while(0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  }
 } while(0);
 do {
  if ((label|0) == 18) {
   (___cxa_begin_catch(($$1|0))|0);
   $61 = HEAP32[$$pre$phiZ2D>>2]|0;
   $62 = (($61) + -12|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = (($$pre$phi7Z2D) + ($63)|0);
   __THREW__ = 0;
   invoke_vi(419,($64|0));
   $65 = __THREW__; __THREW__ = 0;
   $66 = $65&1;
   if (!($66)) {
    ___cxa_end_catch();
    break;
   }
   $67 = ___cxa_find_matching_catch()|0;
   $68 = tempRet0;
   __THREW__ = 0;
   invoke_v(420);
   $69 = __THREW__; __THREW__ = 0;
   $70 = $69&1;
   if ($70) {
    $71 = ___cxa_find_matching_catch(0|0)|0;
    $72 = tempRet0;
    ___clang_call_terminate($71);
    // unreachable;
   } else {
    ___resumeException($67|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEEC2EPNS_15basic_streambufIcS2_EE($this,$vtt,$__sb) {
 $this = $this|0;
 $vtt = $vtt|0;
 $__sb = $__sb|0;
 var $$sum$i = 0, $$sum1$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($vtt) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$this>>2] = $1;
 $2 = (($vtt) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) + -12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($this) + ($5)|0);
 HEAP32[$6>>2] = $3;
 $7 = (($this) + 4|0);
 HEAP32[$7>>2] = 0;
 $8 = HEAP32[$this>>2]|0;
 $9 = (($8) + -12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($this) + ($10)|0);
 __ZNSt3__18ios_base4initEPv($11,$__sb);
 $$sum$i = (($10) + 72)|0;
 $12 = (($this) + ($$sum$i)|0);
 HEAP32[$12>>2] = 0;
 $$sum1$i = (($10) + 76)|0;
 $13 = (($this) + ($$sum1$i)|0);
 HEAP32[$13>>2] = -1;
 $14 = (($this) + 8|0);
 $15 = (($vtt) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$14>>2] = $16;
 $17 = (($vtt) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (($16) + -12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (($14) + ($20)|0);
 HEAP32[$21>>2] = $18;
 $22 = HEAP32[$vtt>>2]|0;
 HEAP32[$this>>2] = $22;
 $23 = (($vtt) + 20|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (($22) + -12|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = (($this) + ($26)|0);
 HEAP32[$27>>2] = $24;
 $28 = (($vtt) + 24|0);
 $29 = HEAP32[$28>>2]|0;
 HEAP32[$14>>2] = $29;
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + -8|0);
 $1 = (($0) + 12|0);
 __ZNSt3__18ios_baseD2Ev($1);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 12)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + -8|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($0);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNKSt3__119__iostream_category4nameEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (4744|0);
}
function __ZNKSt3__119__iostream_category7messageEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($ev|0)!=(1);
 $1 = ($ev|0)<(257);
 $or$cond = $0 & $1;
 if ($or$cond) {
  __ZNKSt3__112__do_message7messageEi($agg$result,$this,$ev);
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,4760,35);
 }
 return;
}
function __ZNSt3__117iostream_categoryEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[4808>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((4808|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   HEAP32[4800>>2] = ((5304 + 8|0));
   ___cxa_guard_release((4808|0));
  }
 }
 return (4800|0);
}
function __ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE($this,$msg,$ec) {
 $this = $this|0;
 $msg = $msg|0;
 $ec = $ec|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmpcast$byval_copy = sp + 8|0;
 $0 = sp;
 $1 = $ec;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) + 4)|0;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = $0;
 $8 = $7;
 HEAP32[$8>>2] = $3;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $6;
 ;HEAP32[$tmpcast$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$0+4>>2]|0;
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$tmpcast$byval_copy,$msg);
 HEAP32[$this>>2] = ((4816 + 8|0));
 STACKTOP = sp;return;
}
function __ZNSt3__18ios_base7failureD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 return;
}
function __ZNSt3__18ios_base7failureD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__119__iostream_categoryD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$02 = 0, $$02$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$01 = $__lo2;$$02 = $__lo1;
 while(1) {
  $0 = ($$01|0)==($__hi2|0);
  if ($0) {
   $$02$lcssa = $$02;
   label = 7;
   break;
  }
  $1 = ($$02|0)==($__hi1|0);
  if ($1) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $2 = HEAP8[$$02>>0]|0;
  $3 = HEAP8[$$01>>0]|0;
  $4 = ($2<<24>>24)<($3<<24>>24);
  if ($4) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $5 = ($3<<24>>24)<($2<<24>>24);
  if ($5) {
   $$0$ph = 1;
   label = 8;
   break;
  }
  $6 = (($$02) + 1|0);
  $7 = (($$01) + 1|0);
  $$01 = $7;$$02 = $6;
 }
 if ((label|0) == 7) {
  $8 = ($$02$lcssa|0)!=($__hi1|0);
  $9 = $8&1;
  $$0 = $9;
 }
 else if ((label|0) == 8) {
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0 = 0, $__h$0$lcssa = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__h$0 = 0;$__p$0 = $__lo;
 while(1) {
  $0 = ($__p$0|0)==($__hi|0);
  if ($0) {
   $__h$0$lcssa = $__h$0;
   break;
  }
  $1 = $__h$0 << 4;
  $2 = HEAP8[$__p$0>>0]|0;
  $3 = $2 << 24 >> 24;
  $4 = (($3) + ($1))|0;
  $5 = $4 & -268435456;
  $6 = $5 >>> 24;
  $7 = $6 | $5;
  $8 = $7 ^ $4;
  $9 = (($__p$0) + 1|0);
  $__h$0 = $8;$__p$0 = $9;
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$02 = 0, $$02$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$01 = $__lo2;$$02 = $__lo1;
 while(1) {
  $0 = ($$01|0)==($__hi2|0);
  if ($0) {
   $$02$lcssa = $$02;
   label = 7;
   break;
  }
  $1 = ($$02|0)==($__hi1|0);
  if ($1) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $2 = HEAP32[$$02>>2]|0;
  $3 = HEAP32[$$01>>2]|0;
  $4 = ($2|0)<($3|0);
  if ($4) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $5 = ($3|0)<($2|0);
  if ($5) {
   $$0$ph = 1;
   label = 8;
   break;
  }
  $6 = (($$02) + 4|0);
  $7 = (($$01) + 4|0);
  $$01 = $7;$$02 = $6;
 }
 if ((label|0) == 7) {
  $8 = ($$02$lcssa|0)!=($__hi1|0);
  $9 = $8&1;
  $$0 = $9;
 }
 else if ((label|0) == 8) {
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__h$0 = 0, $__h$0$lcssa = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__h$0 = 0;$__p$0 = $__lo;
 while(1) {
  $0 = ($__p$0|0)==($__hi|0);
  if ($0) {
   $__h$0$lcssa = $__h$0;
   break;
  }
  $1 = $__h$0 << 4;
  $2 = HEAP32[$__p$0>>2]|0;
  $3 = (($2) + ($1))|0;
  $4 = $3 & -268435456;
  $5 = $4 >>> 24;
  $6 = $5 | $4;
  $7 = $6 ^ $3;
  $8 = (($__p$0) + 4|0);
  $__h$0 = $7;$__p$0 = $8;
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy2 = sp + 64|0;
 $$byval_copy1 = sp + 60|0;
 $$byval_copy = sp + 56|0;
 $__lv = sp + 52|0;
 $0 = sp + 48|0;
 $1 = sp + 44|0;
 $2 = sp + 40|0;
 $3 = sp + 36|0;
 $4 = sp + 32|0;
 $__names = sp + 8|0;
 $5 = sp;
 $6 = (($__iob) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 & 1;
 $9 = ($8|0)==(0);
 L1: do {
  if ($9) {
   HEAP32[$__lv>>2] = -1;
   $10 = HEAP32[$this>>2]|0;
   $11 = (($10) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAP32[$__b>>2]|0;
   HEAP32[$1>>2] = $13;
   $14 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $14;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$2+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$12 & 511]($0,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv);
   $15 = HEAP32[$0>>2]|0;
   HEAP32[$__b>>2] = $15;
   $16 = HEAP32[$__lv>>2]|0;
   if ((($16|0) == 1)) {
    HEAP8[$__v>>0] = 1;
   } else if ((($16|0) == 0)) {
    HEAP8[$__v>>0] = 0;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
   }
   HEAP32[$agg$result>>2] = $15;
  } else {
   __ZNKSt3__18ios_base6getlocEv($3,$__iob);
   __THREW__ = 0;
   $17 = (invoke_iii(454,($3|0),(7032|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   do {
    if ($19) {
     $45 = ___cxa_find_matching_catch()|0;
     $46 = tempRet0;
     $47 = HEAP32[$3>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
     $$0 = $45;$$01 = $46;
    } else {
     $20 = HEAP32[$3>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
     __ZNKSt3__18ios_base6getlocEv($4,$__iob);
     __THREW__ = 0;
     $21 = (invoke_iii(454,($4|0),(7176|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      $48 = ___cxa_find_matching_catch()|0;
      $49 = tempRet0;
      $50 = HEAP32[$4>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($50)|0);
      $$0 = $48;$$01 = $49;
      break;
     }
     $24 = HEAP32[$4>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($24)|0);
     $25 = HEAP32[$21>>2]|0;
     $26 = (($25) + 24|0);
     $27 = HEAP32[$26>>2]|0;
     __THREW__ = 0;
     invoke_vii($27|0,($__names|0),($21|0));
     $28 = __THREW__; __THREW__ = 0;
     $29 = $28&1;
     if ($29) {
      $$02 = $__names;
     } else {
      $30 = (($__names) + 12|0);
      $31 = HEAP32[$21>>2]|0;
      $32 = (($31) + 28|0);
      $33 = HEAP32[$32>>2]|0;
      __THREW__ = 0;
      invoke_vii($33|0,($30|0),($21|0));
      $34 = __THREW__; __THREW__ = 0;
      $35 = $34&1;
      if ($35) {
       $$02 = $30;
      } else {
       $36 = HEAP32[$__e>>2]|0;
       HEAP32[$5>>2] = $36;
       $37 = (($__names) + 24|0);
       __THREW__ = 0;
       ;HEAP32[$$byval_copy2+0>>2]=HEAP32[$5+0>>2]|0;
       $38 = (invoke_iiiiiiii(456,($__b|0),($$byval_copy2|0),($__names|0),($37|0),($17|0),($__err|0),1)|0);
       $39 = __THREW__; __THREW__ = 0;
       $40 = $39&1;
       if ($40) {
        $57 = ___cxa_find_matching_catch()|0;
        $58 = tempRet0;
        $59 = (($__names) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
        $$0 = $57;$$01 = $58;
        break;
       } else {
        $41 = ($38|0)==($__names|0);
        $42 = $41&1;
        HEAP8[$__v>>0] = $42;
        $43 = HEAP32[$__b>>2]|0;
        HEAP32[$agg$result>>2] = $43;
        $44 = (($__names) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
        break L1;
       }
      }
     }
     $51 = ___cxa_find_matching_catch()|0;
     $52 = tempRet0;
     $53 = ($__names|0)==($$02|0);
     if ($53) {
      $$0 = $51;$$01 = $52;
     } else {
      $55 = $$02;
      while(1) {
       $54 = (($55) + -12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
       $56 = ($54|0)==($__names|0);
       if ($56) {
        break;
       } else {
        $55 = $54;
       }
      }
      $$0 = $51;$$01 = $52;
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i10 = 0, $$pre$i2$i$i = 0, $$pre$phi37Z2D = 0, $$pre$phi39Z2D = 0, $$pre36 = 0, $$pre38 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0;
 var $__i$0$i$i5 = 0, $exitcond$i$i = 0, $exitcond$i$i6 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i26 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__grouping) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 __THREW__ = 0;
 invoke_vii(457,($0|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   $95 = ___cxa_find_matching_catch()|0;
   $96 = tempRet0;
   $$0 = $95;$$01 = $96;
  } else {
   __THREW__ = 0;
   $5 = (invoke_iii(454,($0|0),(7032|0))|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if (!($7)) {
    $8 = HEAP32[$5>>2]|0;
    $9 = (($8) + 32|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($10|0,($5|0),(5544|0),(((5544 + 26|0))|0),($__atoms|0))|0);
    $11 = __THREW__; __THREW__ = 0;
    $12 = $11&1;
    if (!($12)) {
     $13 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($13)|0);
     $__i$0$i$i5 = 0;
     while(1) {
      $exitcond$i$i6 = ($__i$0$i$i5|0)==(3);
      if ($exitcond$i$i6) {
       break;
      }
      $14 = (($__buf) + ($__i$0$i$i5<<2)|0);
      HEAP32[$14>>2] = 0;
      $15 = (($__i$0$i$i5) + 1)|0;
      $__i$0$i$i5 = $15;
     }
     $16 = HEAP8[$__buf>>0]|0;
     $17 = $16 & 1;
     $18 = ($17<<24>>24)==(0);
     if ($18) {
      $21 = 10;
     } else {
      $19 = HEAP32[$__buf>>2]|0;
      $20 = $19 & -2;
      $phitmp$i = (($20) + -1)|0;
      $21 = $phitmp$i;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($21|0),0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     L18: do {
      if ($23) {
       label = 47;
      } else {
       $24 = HEAP8[$__buf>>0]|0;
       $25 = $24 & 1;
       $26 = ($25<<24>>24)==(0);
       if ($26) {
        $29 = (($__buf) + 1|0);
        $$pre38 = (($__buf) + 8|0);
        $$pre$phi37Z2D = $29;$$pre$phi39Z2D = $$pre38;$30 = $29;
       } else {
        $27 = (($__buf) + 8|0);
        $28 = HEAP32[$27>>2]|0;
        $$pre36 = (($__buf) + 1|0);
        $$pre$phi37Z2D = $$pre36;$$pre$phi39Z2D = $27;$30 = $28;
       }
       HEAP32[$__a_end>>2] = $30;
       HEAP32[$__g_end>>2] = $__g;
       HEAP32[$__dc>>2] = 0;
       $31 = (($__buf) + 4|0);
       $$pre = HEAP32[$__b>>2]|0;
       $$pre$i$i$i10 = $$pre;$__a$0 = $30;
       L24: while(1) {
        $32 = ($$pre$i$i$i10|0)==(0|0);
        if ($32) {
         $45 = 0;
        } else {
         $33 = (($$pre$i$i$i10) + 12|0);
         $34 = HEAP32[$33>>2]|0;
         $35 = (($$pre$i$i$i10) + 16|0);
         $36 = HEAP32[$35>>2]|0;
         $37 = ($34|0)==($36|0);
         if ($37) {
          $38 = HEAP32[$$pre$i$i$i10>>2]|0;
          $39 = (($38) + 36|0);
          $40 = HEAP32[$39>>2]|0;
          __THREW__ = 0;
          $41 = (invoke_ii($40|0,($$pre$i$i$i10|0))|0);
          $42 = __THREW__; __THREW__ = 0;
          $43 = $42&1;
          if ($43) {
           label = 46;
           break;
          }
          $44 = ($41|0)==(-1);
          if ($44) {
           HEAP32[$__b>>2] = 0;
           $45 = 0;
          } else {
           $45 = $$pre$i$i$i10;
          }
         } else {
          $45 = $$pre$i$i$i10;
         }
        }
        $46 = ($45|0)==(0|0);
        $47 = HEAP32[$__e>>2]|0;
        $48 = ($47|0)==(0|0);
        do {
         if ($48) {
          label = 28;
         } else {
          $49 = (($47) + 12|0);
          $50 = HEAP32[$49>>2]|0;
          $51 = (($47) + 16|0);
          $52 = HEAP32[$51>>2]|0;
          $53 = ($50|0)==($52|0);
          if (!($53)) {
           if ($46) {
            $177 = $47;
            break;
           } else {
            $$lcssa = $45;$$pre$i2$i$i = $47;$__a$2 = $__a$0;
            break L24;
           }
          }
          $54 = HEAP32[$47>>2]|0;
          $55 = (($54) + 36|0);
          $56 = HEAP32[$55>>2]|0;
          __THREW__ = 0;
          $57 = (invoke_ii($56|0,($47|0))|0);
          $58 = __THREW__; __THREW__ = 0;
          $59 = $58&1;
          if ($59) {
           label = 46;
           break L24;
          }
          $60 = ($57|0)==(-1);
          if ($60) {
           HEAP32[$__e>>2] = 0;
           label = 28;
           break;
          } else {
           if ($46) {
            $177 = $47;
            break;
           } else {
            $$lcssa = $45;$$pre$i2$i$i = $47;$__a$2 = $__a$0;
            break L24;
           }
          }
         }
        } while(0);
        if ((label|0) == 28) {
         label = 0;
         if ($46) {
          $$lcssa = $45;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
          break;
         } else {
          $177 = 0;
         }
        }
        $61 = HEAP32[$__a_end>>2]|0;
        $62 = HEAP8[$__buf>>0]|0;
        $63 = $62 & 1;
        $64 = ($63<<24>>24)==(0);
        if ($64) {
         $66 = $62&255;
         $67 = $66 >>> 1;
         $69 = $67;
        } else {
         $65 = HEAP32[$31>>2]|0;
         $69 = $65;
        }
        $68 = (($__a$0) + ($69)|0);
        $70 = ($61|0)==($68|0);
        if ($70) {
         if ($64) {
          $72 = $62&255;
          $73 = $72 >>> 1;
          $74 = $62&255;
          $75 = $74 >>> 1;
          $77 = $75;$94 = $73;
         } else {
          $71 = HEAP32[$31>>2]|0;
          $77 = $71;$94 = $71;
         }
         $76 = $77 << 1;
         __THREW__ = 0;
         invoke_viii(458,($__buf|0),($76|0),0);
         $78 = __THREW__; __THREW__ = 0;
         $79 = $78&1;
         if ($79) {
          label = 46;
          break;
         }
         $80 = HEAP8[$__buf>>0]|0;
         $81 = $80 & 1;
         $82 = ($81<<24>>24)==(0);
         if ($82) {
          $85 = 10;
         } else {
          $83 = HEAP32[$__buf>>2]|0;
          $84 = $83 & -2;
          $phitmp$i26 = (($84) + -1)|0;
          $85 = $phitmp$i26;
         }
         __THREW__ = 0;
         invoke_viii(458,($__buf|0),($85|0),0);
         $86 = __THREW__; __THREW__ = 0;
         $87 = $86&1;
         if ($87) {
          label = 46;
          break;
         }
         $88 = HEAP8[$__buf>>0]|0;
         $89 = $88 & 1;
         $90 = ($89<<24>>24)==(0);
         if ($90) {
          $93 = $$pre$phi37Z2D;
         } else {
          $91 = HEAP32[$$pre$phi39Z2D>>2]|0;
          $93 = $91;
         }
         $92 = (($93) + ($94)|0);
         HEAP32[$__a_end>>2] = $92;
         $__a$1 = $93;
        } else {
         $__a$1 = $__a$0;
        }
        $104 = (($45) + 12|0);
        $105 = HEAP32[$104>>2]|0;
        $106 = (($45) + 16|0);
        $107 = HEAP32[$106>>2]|0;
        $108 = ($105|0)==($107|0);
        if ($108) {
         $109 = HEAP32[$45>>2]|0;
         $110 = (($109) + 36|0);
         $111 = HEAP32[$110>>2]|0;
         __THREW__ = 0;
         $112 = (invoke_ii($111|0,($45|0))|0);
         $113 = __THREW__; __THREW__ = 0;
         $114 = $113&1;
         if ($114) {
          label = 46;
          break;
         } else {
          $$0$i$i = $112;
         }
        } else {
         $115 = HEAP8[$105>>0]|0;
         $116 = $115&255;
         $$0$i$i = $116;
        }
        $117 = $$0$i$i&255;
        $118 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($117,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
        $119 = ($118|0)==(0);
        if (!($119)) {
         $$lcssa = $45;$$pre$i2$i$i = $177;$__a$2 = $__a$1;
         break;
        }
        $120 = HEAP32[$104>>2]|0;
        $121 = HEAP32[$106>>2]|0;
        $122 = ($120|0)==($121|0);
        if ($122) {
         $123 = HEAP32[$45>>2]|0;
         $124 = (($123) + 40|0);
         $125 = HEAP32[$124>>2]|0;
         __THREW__ = 0;
         (invoke_ii($125|0,($45|0))|0);
         $126 = __THREW__; __THREW__ = 0;
         $127 = $126&1;
         if ($127) {
          label = 46;
          break;
         }
        } else {
         $128 = (($120) + 1|0);
         HEAP32[$104>>2] = $128;
        }
        $$pre$i$i$i10 = $45;$__a$0 = $__a$1;
       }
       if ((label|0) == 46) {
        $100 = ___cxa_find_matching_catch()|0;
        $101 = tempRet0;
        $lpad$phi$index = $100;$lpad$phi$index2 = $101;
        break;
       }
       $129 = HEAP32[$__a_end>>2]|0;
       $130 = $129;
       $131 = $__a$2;
       $132 = (($130) - ($131))|0;
       __THREW__ = 0;
       invoke_viii(458,($__buf|0),($132|0),0);
       $133 = __THREW__; __THREW__ = 0;
       $134 = $133&1;
       if ($134) {
        label = 47;
       } else {
        $135 = HEAP8[$__buf>>0]|0;
        $136 = $135 & 1;
        $137 = ($136<<24>>24)==(0);
        if ($137) {
         $142 = $$pre$phi37Z2D;
        } else {
         $138 = HEAP32[$$pre$phi39Z2D>>2]|0;
         $142 = $138;
        }
        __THREW__ = 0;
        $139 = (invoke_i(459)|0);
        $140 = __THREW__; __THREW__ = 0;
        $141 = $140&1;
        if ($141) {
         label = 47;
        } else {
         __THREW__ = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $143 = (invoke_iiiii(460,($142|0),($139|0),(5584|0),($vararg_buffer|0))|0);
         $144 = __THREW__; __THREW__ = 0;
         $145 = $144&1;
         if ($145) {
          label = 47;
         } else {
          $146 = ($143|0)==(1);
          if (!($146)) {
           HEAP32[$__err>>2] = 4;
          }
          $147 = ($$lcssa|0)==(0|0);
          if ($147) {
           $160 = 0;
          } else {
           $148 = (($$lcssa) + 12|0);
           $149 = HEAP32[$148>>2]|0;
           $150 = (($$lcssa) + 16|0);
           $151 = HEAP32[$150>>2]|0;
           $152 = ($149|0)==($151|0);
           if ($152) {
            $153 = HEAP32[$$lcssa>>2]|0;
            $154 = (($153) + 36|0);
            $155 = HEAP32[$154>>2]|0;
            __THREW__ = 0;
            $156 = (invoke_ii($155|0,($$lcssa|0))|0);
            $157 = __THREW__; __THREW__ = 0;
            $158 = $157&1;
            if ($158) {
             label = 47;
             break;
            }
            $159 = ($156|0)==(-1);
            if ($159) {
             HEAP32[$__b>>2] = 0;
             $160 = 0;
            } else {
             $160 = $$lcssa;
            }
           } else {
            $160 = $$lcssa;
           }
          }
          $161 = ($160|0)==(0|0);
          $162 = ($$pre$i2$i$i|0)==(0|0);
          L90: do {
           if ($162) {
            label = 75;
           } else {
            $163 = (($$pre$i2$i$i) + 12|0);
            $164 = HEAP32[$163>>2]|0;
            $165 = (($$pre$i2$i$i) + 16|0);
            $166 = HEAP32[$165>>2]|0;
            $167 = ($164|0)==($166|0);
            do {
             if ($167) {
              $168 = HEAP32[$$pre$i2$i$i>>2]|0;
              $169 = (($168) + 36|0);
              $170 = HEAP32[$169>>2]|0;
              __THREW__ = 0;
              $171 = (invoke_ii($170|0,($$pre$i2$i$i|0))|0);
              $172 = __THREW__; __THREW__ = 0;
              $173 = $172&1;
              if ($173) {
               label = 47;
               break L18;
              }
              $174 = ($171|0)==(-1);
              if (!($174)) {
               break;
              }
              HEAP32[$__e>>2] = 0;
              label = 75;
              break L90;
             }
            } while(0);
            if (!($161)) {
             label = 76;
            }
           }
          } while(0);
          if ((label|0) == 75) {
           if ($161) {
            label = 76;
           }
          }
          if ((label|0) == 76) {
           $175 = HEAP32[$__err>>2]|0;
           $176 = $175 | 2;
           HEAP32[$__err>>2] = $176;
          }
          HEAP32[$agg$result>>2] = $160;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
          STACKTOP = sp;return;
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 47) {
      $102 = ___cxa_find_matching_catch()|0;
      $103 = tempRet0;
      $lpad$phi$index = $102;$lpad$phi$index2 = $103;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
     $$0 = $lpad$phi$index;$$01 = $lpad$phi$index2;
     break;
    }
   }
   $97 = ___cxa_find_matching_catch()|0;
   $98 = tempRet0;
   $99 = HEAP32[$0>>2]|0;
   (__ZNSt3__114__shared_count16__release_sharedEv($99)|0);
   $$0 = $97;$$01 = $98;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = (($__atoms) + 24|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==($__ct<<24>>24);
   if (!($4)) {
    $5 = (($__atoms) + 25|0);
    $6 = HEAP8[$5>>0]|0;
    $7 = ($6<<24>>24)==($__ct<<24>>24);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = (($__a) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = (($__grouping) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)!=(0);
   $19 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = (($20) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = (($__atoms) + 26|0);
   $$0$i = $__atoms;
   while(1) {
    $28 = ($$0$i|0)==($27|0);
    if ($28) {
     $$0$lcssa$i = $27;
     break;
    }
    $29 = HEAP8[$$0$i>>0]|0;
    $30 = ($29<<24>>24)==($__ct<<24>>24);
    if ($30) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $31 = (($$0$i) + 1|0);
    $$0$i = $31;
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = ($34|0)>(23);
   if ($35) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 16)) {
     $37 = ($34|0)<(22);
     if (!($37)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $38 = $0;
      $39 = $__a;
      $40 = (($38) - ($39))|0;
      $41 = ($40|0)<(3);
      if (!($41)) {
       $$0 = -1;
       break;
      }
      $42 = (($0) + -1|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = ($43<<24>>24)==(48);
      if (!($44)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $45 = (5544 + ($34)|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = (($0) + 1|0);
      HEAP32[$__a_end>>2] = $47;
      HEAP8[$0>>0] = $46;
      $$0 = 0;
      break;
     }
    } else if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $36 = ($34|0)<($__base|0);
     if (!($36)) {
      $$0 = -1;
      break;
     }
    }
    $48 = (5544 + ($34)|0);
    $49 = HEAP8[$48>>0]|0;
    $50 = (($0) + 1|0);
    HEAP32[$__a_end>>2] = $50;
    HEAP8[$0>>0] = $49;
    $51 = HEAP32[$__dc>>2]|0;
    $52 = (($51) + 1)|0;
    HEAP32[$__dc>>2] = $52;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__16__clocEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[6928>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((6928|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_iiii(461,2147483647,(6936|0),(0|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if ($6) {
     $8 = ___cxa_find_matching_catch()|0;
     $9 = tempRet0;
     ___cxa_guard_abort((6928|0));
     ___resumeException($8|0);
     // unreachable;
    } else {
     HEAP32[6920>>2] = $4;
     ___cxa_guard_release((6928|0));
     break;
    }
   }
  }
 } while(0);
 $7 = HEAP32[6920>>2]|0;
 return ($7|0);
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy2 = sp + 64|0;
 $$byval_copy1 = sp + 60|0;
 $$byval_copy = sp + 56|0;
 $__lv = sp + 52|0;
 $0 = sp + 48|0;
 $1 = sp + 44|0;
 $2 = sp + 40|0;
 $3 = sp + 36|0;
 $4 = sp + 32|0;
 $__names = sp + 8|0;
 $5 = sp;
 $6 = (($__iob) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 & 1;
 $9 = ($8|0)==(0);
 L1: do {
  if ($9) {
   HEAP32[$__lv>>2] = -1;
   $10 = HEAP32[$this>>2]|0;
   $11 = (($10) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAP32[$__b>>2]|0;
   HEAP32[$1>>2] = $13;
   $14 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $14;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$2+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$12 & 511]($0,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv);
   $15 = HEAP32[$0>>2]|0;
   HEAP32[$__b>>2] = $15;
   $16 = HEAP32[$__lv>>2]|0;
   if ((($16|0) == 1)) {
    HEAP8[$__v>>0] = 1;
   } else if ((($16|0) == 0)) {
    HEAP8[$__v>>0] = 0;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
   }
   HEAP32[$agg$result>>2] = $15;
  } else {
   __ZNKSt3__18ios_base6getlocEv($3,$__iob);
   __THREW__ = 0;
   $17 = (invoke_iii(454,($3|0),(7024|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   do {
    if ($19) {
     $45 = ___cxa_find_matching_catch()|0;
     $46 = tempRet0;
     $47 = HEAP32[$3>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
     $$0 = $45;$$01 = $46;
    } else {
     $20 = HEAP32[$3>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
     __ZNKSt3__18ios_base6getlocEv($4,$__iob);
     __THREW__ = 0;
     $21 = (invoke_iii(454,($4|0),(7184|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      $48 = ___cxa_find_matching_catch()|0;
      $49 = tempRet0;
      $50 = HEAP32[$4>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($50)|0);
      $$0 = $48;$$01 = $49;
      break;
     }
     $24 = HEAP32[$4>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($24)|0);
     $25 = HEAP32[$21>>2]|0;
     $26 = (($25) + 24|0);
     $27 = HEAP32[$26>>2]|0;
     __THREW__ = 0;
     invoke_vii($27|0,($__names|0),($21|0));
     $28 = __THREW__; __THREW__ = 0;
     $29 = $28&1;
     if ($29) {
      $$02 = $__names;
     } else {
      $30 = (($__names) + 12|0);
      $31 = HEAP32[$21>>2]|0;
      $32 = (($31) + 28|0);
      $33 = HEAP32[$32>>2]|0;
      __THREW__ = 0;
      invoke_vii($33|0,($30|0),($21|0));
      $34 = __THREW__; __THREW__ = 0;
      $35 = $34&1;
      if ($35) {
       $$02 = $30;
      } else {
       $36 = HEAP32[$__e>>2]|0;
       HEAP32[$5>>2] = $36;
       $37 = (($__names) + 24|0);
       __THREW__ = 0;
       ;HEAP32[$$byval_copy2+0>>2]=HEAP32[$5+0>>2]|0;
       $38 = (invoke_iiiiiiii(462,($__b|0),($$byval_copy2|0),($__names|0),($37|0),($17|0),($__err|0),1)|0);
       $39 = __THREW__; __THREW__ = 0;
       $40 = $39&1;
       if ($40) {
        $57 = ___cxa_find_matching_catch()|0;
        $58 = tempRet0;
        $59 = (($__names) + 12|0);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($59);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
        $$0 = $57;$$01 = $58;
        break;
       } else {
        $41 = ($38|0)==($__names|0);
        $42 = $41&1;
        HEAP8[$__v>>0] = $42;
        $43 = HEAP32[$__b>>2]|0;
        HEAP32[$agg$result>>2] = $43;
        $44 = (($__names) + 12|0);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($44);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
        break L1;
       }
      }
     }
     $51 = ___cxa_find_matching_catch()|0;
     $52 = tempRet0;
     $53 = ($__names|0)==($$02|0);
     if ($53) {
      $$0 = $51;$$01 = $52;
     } else {
      $55 = $$02;
      while(1) {
       $54 = (($55) + -12|0);
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($54);
       $56 = ($54|0)==($__names|0);
       if ($56) {
        break;
       } else {
        $55 = $54;
       }
      }
      $$0 = $51;$$01 = $52;
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i9 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i15 = 0, $$01 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i11 = 0, $$pre$i3$i$i = 0, $$pre$phi40Z2D = 0, $$pre$phi42Z2D = 0, $$pre39 = 0, $$pre41 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0;
 var $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__i$0$i$i5 = 0, $exitcond$i$i = 0, $exitcond$i$i6 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i30 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__grouping) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 __THREW__ = 0;
 invoke_vii(457,($0|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   $95 = ___cxa_find_matching_catch()|0;
   $96 = tempRet0;
   $$0 = $95;$$01 = $96;
  } else {
   __THREW__ = 0;
   $5 = (invoke_iii(454,($0|0),(7024|0))|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if (!($7)) {
    $8 = HEAP32[$5>>2]|0;
    $9 = (($8) + 48|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($10|0,($5|0),(5544|0),(((5544 + 26|0))|0),($__atoms|0))|0);
    $11 = __THREW__; __THREW__ = 0;
    $12 = $11&1;
    if (!($12)) {
     $13 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($13)|0);
     $__i$0$i$i5 = 0;
     while(1) {
      $exitcond$i$i6 = ($__i$0$i$i5|0)==(3);
      if ($exitcond$i$i6) {
       break;
      }
      $14 = (($__buf) + ($__i$0$i$i5<<2)|0);
      HEAP32[$14>>2] = 0;
      $15 = (($__i$0$i$i5) + 1)|0;
      $__i$0$i$i5 = $15;
     }
     $16 = HEAP8[$__buf>>0]|0;
     $17 = $16 & 1;
     $18 = ($17<<24>>24)==(0);
     if ($18) {
      $21 = 10;
     } else {
      $19 = HEAP32[$__buf>>2]|0;
      $20 = $19 & -2;
      $phitmp$i = (($20) + -1)|0;
      $21 = $phitmp$i;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($21|0),0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     L17: do {
      if ($23) {
       label = 48;
      } else {
       $24 = HEAP8[$__buf>>0]|0;
       $25 = $24 & 1;
       $26 = ($25<<24>>24)==(0);
       if ($26) {
        $29 = (($__buf) + 1|0);
        $$pre41 = (($__buf) + 8|0);
        $$pre$phi40Z2D = $29;$$pre$phi42Z2D = $$pre41;$30 = $29;
       } else {
        $27 = (($__buf) + 8|0);
        $28 = HEAP32[$27>>2]|0;
        $$pre39 = (($__buf) + 1|0);
        $$pre$phi40Z2D = $$pre39;$$pre$phi42Z2D = $27;$30 = $28;
       }
       HEAP32[$__a_end>>2] = $30;
       HEAP32[$__g_end>>2] = $__g;
       HEAP32[$__dc>>2] = 0;
       $31 = (($__buf) + 4|0);
       $$pre = HEAP32[$__b>>2]|0;
       $$pre$i$i$i11 = $$pre;$__a$0 = $30;
       L23: while(1) {
        $32 = ($$pre$i$i$i11|0)==(0|0);
        if ($32) {
         $105 = 0;$177 = 1;
        } else {
         $33 = (($$pre$i$i$i11) + 12|0);
         $34 = HEAP32[$33>>2]|0;
         $35 = (($$pre$i$i$i11) + 16|0);
         $36 = HEAP32[$35>>2]|0;
         $37 = ($34|0)==($36|0);
         if ($37) {
          $38 = HEAP32[$$pre$i$i$i11>>2]|0;
          $39 = (($38) + 36|0);
          $40 = HEAP32[$39>>2]|0;
          __THREW__ = 0;
          $41 = (invoke_ii($40|0,($$pre$i$i$i11|0))|0);
          $42 = __THREW__; __THREW__ = 0;
          $43 = $42&1;
          if ($43) {
           label = 47;
           break;
          } else {
           $$0$i$i$i$i9 = $41;
          }
         } else {
          $44 = HEAP32[$34>>2]|0;
          $$0$i$i$i$i9 = $44;
         }
         $45 = ($$0$i$i$i$i9|0)==(-1);
         if ($45) {
          HEAP32[$__b>>2] = 0;
          $105 = 0;$177 = 1;
         } else {
          $105 = $$pre$i$i$i11;$177 = 0;
         }
        }
        $46 = HEAP32[$__e>>2]|0;
        $47 = ($46|0)==(0|0);
        do {
         if ($47) {
          label = 29;
         } else {
          $48 = (($46) + 12|0);
          $49 = HEAP32[$48>>2]|0;
          $50 = (($46) + 16|0);
          $51 = HEAP32[$50>>2]|0;
          $52 = ($49|0)==($51|0);
          if ($52) {
           $53 = HEAP32[$46>>2]|0;
           $54 = (($53) + 36|0);
           $55 = HEAP32[$54>>2]|0;
           __THREW__ = 0;
           $56 = (invoke_ii($55|0,($46|0))|0);
           $57 = __THREW__; __THREW__ = 0;
           $58 = $57&1;
           if ($58) {
            label = 47;
            break L23;
           } else {
            $$0$i$i1$i$i15 = $56;
           }
          } else {
           $59 = HEAP32[$49>>2]|0;
           $$0$i$i1$i$i15 = $59;
          }
          $60 = ($$0$i$i1$i$i15|0)==(-1);
          if ($60) {
           HEAP32[$__e>>2] = 0;
           label = 29;
           break;
          } else {
           if ($177) {
            $178 = $46;
            break;
           } else {
            $$lcssa = $105;$$pre$i3$i$i = $46;$__a$2 = $__a$0;
            break L23;
           }
          }
         }
        } while(0);
        if ((label|0) == 29) {
         label = 0;
         if ($177) {
          $$lcssa = $105;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
          break;
         } else {
          $178 = 0;
         }
        }
        $61 = HEAP32[$__a_end>>2]|0;
        $62 = HEAP8[$__buf>>0]|0;
        $63 = $62 & 1;
        $64 = ($63<<24>>24)==(0);
        if ($64) {
         $66 = $62&255;
         $67 = $66 >>> 1;
         $69 = $67;
        } else {
         $65 = HEAP32[$31>>2]|0;
         $69 = $65;
        }
        $68 = (($__a$0) + ($69)|0);
        $70 = ($61|0)==($68|0);
        if ($70) {
         if ($64) {
          $72 = $62&255;
          $73 = $72 >>> 1;
          $74 = $62&255;
          $75 = $74 >>> 1;
          $77 = $75;$94 = $73;
         } else {
          $71 = HEAP32[$31>>2]|0;
          $77 = $71;$94 = $71;
         }
         $76 = $77 << 1;
         __THREW__ = 0;
         invoke_viii(458,($__buf|0),($76|0),0);
         $78 = __THREW__; __THREW__ = 0;
         $79 = $78&1;
         if ($79) {
          label = 47;
          break;
         }
         $80 = HEAP8[$__buf>>0]|0;
         $81 = $80 & 1;
         $82 = ($81<<24>>24)==(0);
         if ($82) {
          $85 = 10;
         } else {
          $83 = HEAP32[$__buf>>2]|0;
          $84 = $83 & -2;
          $phitmp$i30 = (($84) + -1)|0;
          $85 = $phitmp$i30;
         }
         __THREW__ = 0;
         invoke_viii(458,($__buf|0),($85|0),0);
         $86 = __THREW__; __THREW__ = 0;
         $87 = $86&1;
         if ($87) {
          label = 47;
          break;
         }
         $88 = HEAP8[$__buf>>0]|0;
         $89 = $88 & 1;
         $90 = ($89<<24>>24)==(0);
         if ($90) {
          $93 = $$pre$phi40Z2D;
         } else {
          $91 = HEAP32[$$pre$phi42Z2D>>2]|0;
          $93 = $91;
         }
         $92 = (($93) + ($94)|0);
         HEAP32[$__a_end>>2] = $92;
         $__a$1 = $93;
        } else {
         $__a$1 = $__a$0;
        }
        $104 = (($105) + 12|0);
        $106 = HEAP32[$104>>2]|0;
        $107 = (($105) + 16|0);
        $108 = HEAP32[$107>>2]|0;
        $109 = ($106|0)==($108|0);
        if ($109) {
         $110 = HEAP32[$105>>2]|0;
         $111 = (($110) + 36|0);
         $112 = HEAP32[$111>>2]|0;
         __THREW__ = 0;
         $113 = (invoke_ii($112|0,($105|0))|0);
         $114 = __THREW__; __THREW__ = 0;
         $115 = $114&1;
         if ($115) {
          label = 47;
          break;
         } else {
          $$0$i$i = $113;
         }
        } else {
         $116 = HEAP32[$106>>2]|0;
         $$0$i$i = $116;
        }
        $117 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
        $118 = ($117|0)==(0);
        if (!($118)) {
         $$lcssa = $105;$$pre$i3$i$i = $178;$__a$2 = $__a$1;
         break;
        }
        $119 = HEAP32[$104>>2]|0;
        $120 = HEAP32[$107>>2]|0;
        $121 = ($119|0)==($120|0);
        if ($121) {
         $122 = HEAP32[$105>>2]|0;
         $123 = (($122) + 40|0);
         $124 = HEAP32[$123>>2]|0;
         __THREW__ = 0;
         (invoke_ii($124|0,($105|0))|0);
         $125 = __THREW__; __THREW__ = 0;
         $126 = $125&1;
         if ($126) {
          label = 47;
          break;
         }
        } else {
         $127 = (($119) + 4|0);
         HEAP32[$104>>2] = $127;
        }
        $$pre$i$i$i11 = $105;$__a$0 = $__a$1;
       }
       if ((label|0) == 47) {
        $100 = ___cxa_find_matching_catch()|0;
        $101 = tempRet0;
        $lpad$phi$index = $100;$lpad$phi$index2 = $101;
        break;
       }
       $128 = HEAP32[$__a_end>>2]|0;
       $129 = $128;
       $130 = $__a$2;
       $131 = (($129) - ($130))|0;
       __THREW__ = 0;
       invoke_viii(458,($__buf|0),($131|0),0);
       $132 = __THREW__; __THREW__ = 0;
       $133 = $132&1;
       if ($133) {
        label = 48;
       } else {
        $134 = HEAP8[$__buf>>0]|0;
        $135 = $134 & 1;
        $136 = ($135<<24>>24)==(0);
        if ($136) {
         $141 = $$pre$phi40Z2D;
        } else {
         $137 = HEAP32[$$pre$phi42Z2D>>2]|0;
         $141 = $137;
        }
        __THREW__ = 0;
        $138 = (invoke_i(459)|0);
        $139 = __THREW__; __THREW__ = 0;
        $140 = $139&1;
        if ($140) {
         label = 48;
        } else {
         __THREW__ = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $142 = (invoke_iiiii(460,($141|0),($138|0),(5584|0),($vararg_buffer|0))|0);
         $143 = __THREW__; __THREW__ = 0;
         $144 = $143&1;
         if ($144) {
          label = 48;
         } else {
          $145 = ($142|0)==(1);
          if (!($145)) {
           HEAP32[$__err>>2] = 4;
          }
          $146 = ($$lcssa|0)==(0|0);
          if ($146) {
           $176 = 0;$179 = 1;
          } else {
           $147 = (($$lcssa) + 12|0);
           $148 = HEAP32[$147>>2]|0;
           $149 = (($$lcssa) + 16|0);
           $150 = HEAP32[$149>>2]|0;
           $151 = ($148|0)==($150|0);
           if ($151) {
            $152 = HEAP32[$$lcssa>>2]|0;
            $153 = (($152) + 36|0);
            $154 = HEAP32[$153>>2]|0;
            __THREW__ = 0;
            $155 = (invoke_ii($154|0,($$lcssa|0))|0);
            $156 = __THREW__; __THREW__ = 0;
            $157 = $156&1;
            if ($157) {
             label = 48;
             break;
            } else {
             $$0$i$i$i$i = $155;
            }
           } else {
            $158 = HEAP32[$148>>2]|0;
            $$0$i$i$i$i = $158;
           }
           $159 = ($$0$i$i$i$i|0)==(-1);
           if ($159) {
            HEAP32[$__b>>2] = 0;
            $176 = 0;$179 = 1;
           } else {
            $176 = $$lcssa;$179 = 0;
           }
          }
          $160 = ($$pre$i3$i$i|0)==(0|0);
          do {
           if ($160) {
            label = 77;
           } else {
            $161 = (($$pre$i3$i$i) + 12|0);
            $162 = HEAP32[$161>>2]|0;
            $163 = (($$pre$i3$i$i) + 16|0);
            $164 = HEAP32[$163>>2]|0;
            $165 = ($162|0)==($164|0);
            if ($165) {
             $166 = HEAP32[$$pre$i3$i$i>>2]|0;
             $167 = (($166) + 36|0);
             $168 = HEAP32[$167>>2]|0;
             __THREW__ = 0;
             $169 = (invoke_ii($168|0,($$pre$i3$i$i|0))|0);
             $170 = __THREW__; __THREW__ = 0;
             $171 = $170&1;
             if ($171) {
              label = 48;
              break L17;
             } else {
              $$0$i$i1$i$i = $169;
             }
            } else {
             $172 = HEAP32[$162>>2]|0;
             $$0$i$i1$i$i = $172;
            }
            $173 = ($$0$i$i1$i$i|0)==(-1);
            if ($173) {
             HEAP32[$__e>>2] = 0;
             label = 77;
             break;
            } else {
             if ($179) {
              break;
             } else {
              label = 79;
              break;
             }
            }
           }
          } while(0);
          if ((label|0) == 77) {
           if ($179) {
            label = 79;
           }
          }
          if ((label|0) == 79) {
           $174 = HEAP32[$__err>>2]|0;
           $175 = $174 | 2;
           HEAP32[$__err>>2] = $175;
          }
          HEAP32[$agg$result>>2] = $176;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
          STACKTOP = sp;return;
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 48) {
      $102 = ___cxa_find_matching_catch()|0;
      $103 = tempRet0;
      $lpad$phi$index = $102;$lpad$phi$index2 = $103;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
     $$0 = $lpad$phi$index;$$01 = $lpad$phi$index2;
     break;
    }
   }
   $97 = ___cxa_find_matching_catch()|0;
   $98 = tempRet0;
   $99 = HEAP32[$0>>2]|0;
   (__ZNSt3__114__shared_count16__release_sharedEv($99)|0);
   $$0 = $97;$$01 = $98;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = (($__atoms) + 96|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)==($__ct|0);
   if (!($4)) {
    $5 = (($__atoms) + 100|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($6|0)==($__ct|0);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = (($__a) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = (($__grouping) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)!=(0);
   $19 = ($__ct|0)==($__thousands_sep|0);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = (($20) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = (($__atoms) + 104|0);
   $$0$i = $__atoms;
   while(1) {
    $28 = ($$0$i|0)==($27|0);
    if ($28) {
     $$0$lcssa$i = $27;
     break;
    }
    $29 = HEAP32[$$0$i>>2]|0;
    $30 = ($29|0)==($__ct|0);
    if ($30) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $31 = (($$0$i) + 4|0);
    $$0$i = $31;
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = $34 >> 2;
   $36 = ($34|0)>(92);
   if ($36) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $37 = ($35|0)<($__base|0);
     if (!($37)) {
      $$0 = -1;
      break;
     }
    } else if ((($__base|0) == 16)) {
     $38 = ($34|0)<(88);
     if (!($38)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $39 = $0;
      $40 = $__a;
      $41 = (($39) - ($40))|0;
      $42 = ($41|0)<(3);
      if (!($42)) {
       $$0 = -1;
       break;
      }
      $43 = (($0) + -1|0);
      $44 = HEAP8[$43>>0]|0;
      $45 = ($44<<24>>24)==(48);
      if (!($45)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $46 = (5544 + ($35)|0);
      $47 = HEAP8[$46>>0]|0;
      $48 = (($0) + 1|0);
      HEAP32[$__a_end>>2] = $48;
      HEAP8[$0>>0] = $47;
      $$0 = 0;
      break;
     }
    }
    $49 = (5544 + ($35)|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = (($0) + 1|0);
    HEAP32[$__a_end>>2] = $51;
    HEAP8[$0>>0] = $50;
    $52 = HEAP32[$__dc>>2]|0;
    $53 = (($52) + 1)|0;
    HEAP32[$__dc>>2] = $53;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $0 = (invoke_iii(454,($__loc|0),(7032|0))|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  $3 = HEAP32[$0>>2]|0;
  $4 = (($3) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($5|0,($0|0),(5544|0),(((5544 + 26|0))|0),($__atoms|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if (!($7)) {
   __THREW__ = 0;
   $8 = (invoke_iii(454,($__loc|0),(7176|0))|0);
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if (!($10)) {
    $11 = HEAP32[$8>>2]|0;
    $12 = (($11) + 16|0);
    $13 = HEAP32[$12>>2]|0;
    __THREW__ = 0;
    $14 = (invoke_ii($13|0,($8|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     HEAP8[$__thousands_sep>>0] = $14;
     $17 = HEAP32[$8>>2]|0;
     $18 = (($17) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     __THREW__ = 0;
     invoke_vii($19|0,($agg$result|0),($8|0));
     $20 = __THREW__; __THREW__ = 0;
     $21 = $20&1;
     if (!($21)) {
      $22 = HEAP32[$__loc>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($22)|0);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch()|0;
 $24 = tempRet0;
 $25 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($25)|0);
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $0 = (invoke_iii(454,($__loc|0),(7032|0))|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  $3 = HEAP32[$0>>2]|0;
  $4 = (($3) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($5|0,($0|0),(5544|0),(((5544 + 32|0))|0),($__atoms|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if (!($7)) {
   __THREW__ = 0;
   $8 = (invoke_iii(454,($__loc|0),(7176|0))|0);
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if (!($10)) {
    $11 = HEAP32[$8>>2]|0;
    $12 = (($11) + 12|0);
    $13 = HEAP32[$12>>2]|0;
    __THREW__ = 0;
    $14 = (invoke_ii($13|0,($8|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     HEAP8[$__decimal_point>>0] = $14;
     $17 = HEAP32[$8>>2]|0;
     $18 = (($17) + 16|0);
     $19 = HEAP32[$18>>2]|0;
     __THREW__ = 0;
     $20 = (invoke_ii($19|0,($8|0))|0);
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if (!($22)) {
      HEAP8[$__thousands_sep>>0] = $20;
      $23 = HEAP32[$8>>2]|0;
      $24 = (($23) + 20|0);
      $25 = HEAP32[$24>>2]|0;
      __THREW__ = 0;
      invoke_vii($25|0,($agg$result|0),($8|0));
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       $28 = HEAP32[$__loc>>2]|0;
       (__ZNSt3__114__shared_count16__release_sharedEv($28)|0);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch()|0;
 $30 = tempRet0;
 $31 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($31)|0);
 ___resumeException($29|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct<<24>>24)==($__decimal_point<<24>>24);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = (($3) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    if ($7) {
     $10 = $5&255;
     $11 = $10 >>> 1;
     $12 = $11;
    } else {
     $8 = (($__grouping) + 4|0);
     $9 = HEAP32[$8>>2]|0;
     $12 = $9;
    }
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = (($14) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    if ($24) {
     $27 = $22&255;
     $28 = $27 >>> 1;
     $29 = $28;
    } else {
     $25 = (($__grouping) + 4|0);
     $26 = HEAP32[$25>>2]|0;
     $29 = $26;
    }
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = (($33) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = (($__atoms) + 32|0);
   $$0$i = $__atoms;
   while(1) {
    $41 = ($$0$i|0)==($40|0);
    if ($41) {
     $$0$lcssa$i = $40;
     break;
    }
    $42 = HEAP8[$$0$i>>0]|0;
    $43 = ($42<<24>>24)==($__ct<<24>>24);
    if ($43) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $44 = (($$0$i) + 1|0);
    $$0$i = $44;
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = ($47|0)>(31);
   if ($48) {
    $$0 = -1;
   } else {
    $49 = (5544 + ($47)|0);
    $50 = HEAP8[$49>>0]|0;
    if ((($47|0) == 23) | (($47|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
     $62 = HEAP32[$__a_end>>2]|0;
     $63 = (($62) + 1|0);
     HEAP32[$__a_end>>2] = $63;
     HEAP8[$62>>0] = $50;
     $$0 = 0;
     break;
    } else if ((($47|0) == 24) | (($47|0) == 25)) {
     $51 = HEAP32[$__a_end>>2]|0;
     $52 = ($51|0)==($__a|0);
     if (!($52)) {
      $53 = (($51) + -1|0);
      $54 = HEAP8[$53>>0]|0;
      $55 = $54&255;
      $56 = $55 & 95;
      $57 = HEAP8[$__exp>>0]|0;
      $58 = $57&255;
      $59 = $58 & 127;
      $60 = ($56|0)==($59|0);
      if (!($60)) {
       $$0 = -1;
       break;
      }
     }
     $61 = (($51) + 1|0);
     HEAP32[$__a_end>>2] = $61;
     HEAP8[$51>>0] = $50;
     $$0 = 0;
     break;
    } else {
     $64 = $50&255;
     $65 = $64 & 95;
     $66 = HEAP8[$__exp>>0]|0;
     $67 = $66 << 24 >> 24;
     $68 = ($65|0)==($67|0);
     if ($68) {
      $69 = $65 | 128;
      $70 = $69&255;
      HEAP8[$__exp>>0] = $70;
      $71 = HEAP8[$__in_units>>0]|0;
      $72 = ($71<<24>>24)==(0);
      if (!($72)) {
       HEAP8[$__in_units>>0] = 0;
       $73 = HEAP8[$__grouping>>0]|0;
       $74 = $73 & 1;
       $75 = ($74<<24>>24)==(0);
       if ($75) {
        $78 = $73&255;
        $79 = $78 >>> 1;
        $80 = $79;
       } else {
        $76 = (($__grouping) + 4|0);
        $77 = HEAP32[$76>>2]|0;
        $80 = $77;
       }
       $81 = ($80|0)==(0);
       if (!($81)) {
        $82 = HEAP32[$__g_end>>2]|0;
        $83 = $82;
        $84 = $__g;
        $85 = (($83) - ($84))|0;
        $86 = ($85|0)<(160);
        if ($86) {
         $87 = HEAP32[$__dc>>2]|0;
         $88 = (($82) + 4|0);
         HEAP32[$__g_end>>2] = $88;
         HEAP32[$82>>2] = $87;
        }
       }
      }
     }
     $89 = HEAP32[$__a_end>>2]|0;
     $90 = (($89) + 1|0);
     HEAP32[$__a_end>>2] = $90;
     HEAP8[$89>>0] = $50;
     $91 = ($47|0)>(21);
     if ($91) {
      $$0 = 0;
      break;
     }
     $92 = HEAP32[$__dc>>2]|0;
     $93 = (($92) + 1)|0;
     HEAP32[$__dc>>2] = $93;
     $$0 = 0;
     break;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $0 = (invoke_iii(454,($__loc|0),(7024|0))|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  $3 = HEAP32[$0>>2]|0;
  $4 = (($3) + 48|0);
  $5 = HEAP32[$4>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($5|0,($0|0),(5544|0),(((5544 + 26|0))|0),($__atoms|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if (!($7)) {
   __THREW__ = 0;
   $8 = (invoke_iii(454,($__loc|0),(7184|0))|0);
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if (!($10)) {
    $11 = HEAP32[$8>>2]|0;
    $12 = (($11) + 16|0);
    $13 = HEAP32[$12>>2]|0;
    __THREW__ = 0;
    $14 = (invoke_ii($13|0,($8|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     HEAP32[$__thousands_sep>>2] = $14;
     $17 = HEAP32[$8>>2]|0;
     $18 = (($17) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     __THREW__ = 0;
     invoke_vii($19|0,($agg$result|0),($8|0));
     $20 = __THREW__; __THREW__ = 0;
     $21 = $20&1;
     if (!($21)) {
      $22 = HEAP32[$__loc>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($22)|0);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch()|0;
 $24 = tempRet0;
 $25 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($25)|0);
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $0 = (invoke_iii(454,($__loc|0),(7024|0))|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  $3 = HEAP32[$0>>2]|0;
  $4 = (($3) + 48|0);
  $5 = HEAP32[$4>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($5|0,($0|0),(5544|0),(((5544 + 32|0))|0),($__atoms|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if (!($7)) {
   __THREW__ = 0;
   $8 = (invoke_iii(454,($__loc|0),(7184|0))|0);
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if (!($10)) {
    $11 = HEAP32[$8>>2]|0;
    $12 = (($11) + 12|0);
    $13 = HEAP32[$12>>2]|0;
    __THREW__ = 0;
    $14 = (invoke_ii($13|0,($8|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     HEAP32[$__decimal_point>>2] = $14;
     $17 = HEAP32[$8>>2]|0;
     $18 = (($17) + 16|0);
     $19 = HEAP32[$18>>2]|0;
     __THREW__ = 0;
     $20 = (invoke_ii($19|0,($8|0))|0);
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if (!($22)) {
      HEAP32[$__thousands_sep>>2] = $20;
      $23 = HEAP32[$8>>2]|0;
      $24 = (($23) + 20|0);
      $25 = HEAP32[$24>>2]|0;
      __THREW__ = 0;
      invoke_vii($25|0,($agg$result|0),($8|0));
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       $28 = HEAP32[$__loc>>2]|0;
       (__ZNSt3__114__shared_count16__release_sharedEv($28)|0);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch()|0;
 $30 = tempRet0;
 $31 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($31)|0);
 ___resumeException($29|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct|0)==($__decimal_point|0);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = (($3) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    if ($7) {
     $10 = $5&255;
     $11 = $10 >>> 1;
     $12 = $11;
    } else {
     $8 = (($__grouping) + 4|0);
     $9 = HEAP32[$8>>2]|0;
     $12 = $9;
    }
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = (($14) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct|0)==($__thousands_sep|0);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    if ($24) {
     $27 = $22&255;
     $28 = $27 >>> 1;
     $29 = $28;
    } else {
     $25 = (($__grouping) + 4|0);
     $26 = HEAP32[$25>>2]|0;
     $29 = $26;
    }
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = (($33) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = (($__atoms) + 128|0);
   $$0$i = $__atoms;
   while(1) {
    $41 = ($$0$i|0)==($40|0);
    if ($41) {
     $$0$lcssa$i = $40;
     break;
    }
    $42 = HEAP32[$$0$i>>2]|0;
    $43 = ($42|0)==($__ct|0);
    if ($43) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $44 = (($$0$i) + 4|0);
    $$0$i = $44;
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = $47 >> 2;
   $49 = ($47|0)>(124);
   if ($49) {
    $$0 = -1;
   } else {
    $50 = (5544 + ($48)|0);
    $51 = HEAP8[$50>>0]|0;
    if ((($48|0) == 23) | (($48|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
    } else if ((($48|0) == 24) | (($48|0) == 25)) {
     $52 = HEAP32[$__a_end>>2]|0;
     $53 = ($52|0)==($__a|0);
     if (!($53)) {
      $54 = (($52) + -1|0);
      $55 = HEAP8[$54>>0]|0;
      $56 = $55&255;
      $57 = $56 & 95;
      $58 = HEAP8[$__exp>>0]|0;
      $59 = $58&255;
      $60 = $59 & 127;
      $61 = ($57|0)==($60|0);
      if (!($61)) {
       $$0 = -1;
       break;
      }
     }
     $62 = (($52) + 1|0);
     HEAP32[$__a_end>>2] = $62;
     HEAP8[$52>>0] = $51;
     $$0 = 0;
     break;
    } else {
     $63 = $51&255;
     $64 = $63 & 95;
     $65 = HEAP8[$__exp>>0]|0;
     $66 = $65 << 24 >> 24;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = $64 | 128;
      $69 = $68&255;
      HEAP8[$__exp>>0] = $69;
      $70 = HEAP8[$__in_units>>0]|0;
      $71 = ($70<<24>>24)==(0);
      if (!($71)) {
       HEAP8[$__in_units>>0] = 0;
       $72 = HEAP8[$__grouping>>0]|0;
       $73 = $72 & 1;
       $74 = ($73<<24>>24)==(0);
       if ($74) {
        $77 = $72&255;
        $78 = $77 >>> 1;
        $79 = $78;
       } else {
        $75 = (($__grouping) + 4|0);
        $76 = HEAP32[$75>>2]|0;
        $79 = $76;
       }
       $80 = ($79|0)==(0);
       if (!($80)) {
        $81 = HEAP32[$__g_end>>2]|0;
        $82 = $81;
        $83 = $__g;
        $84 = (($82) - ($83))|0;
        $85 = ($84|0)<(160);
        if ($85) {
         $86 = HEAP32[$__dc>>2]|0;
         $87 = (($81) + 4|0);
         HEAP32[$__g_end>>2] = $87;
         HEAP32[$81>>2] = $86;
        }
       }
      }
     }
    }
    $88 = HEAP32[$__a_end>>2]|0;
    $89 = (($88) + 1|0);
    HEAP32[$__a_end>>2] = $89;
    HEAP8[$88>>0] = $51;
    $90 = ($47|0)>(84);
    if ($90) {
     $$0 = 0;
    } else {
     $91 = HEAP32[$__dc>>2]|0;
     $92 = (($91) + 1)|0;
     HEAP32[$__dc>>2] = $92;
     $$0 = 0;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0 = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi4Z2D = 0, $$pre$phi6Z2D = 0, $$pre3 = 0, $$pre5 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 L1: do {
  if ($5) {
   $6 = HEAP32[$this>>2]|0;
   $7 = (($6) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$__s>>2]|0;
   HEAP32[$0>>2] = $9;
   $10 = $__v&1;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
   FUNCTION_TABLE_viiiiii[$8 & 511]($agg$result,$this,$$byval_copy,$__iob,$__fl,$10);
  } else {
   __ZNKSt3__18ios_base6getlocEv($1,$__iob);
   __THREW__ = 0;
   $11 = (invoke_iii(454,($1|0),(7176|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   do {
    if ($13) {
     $57 = ___cxa_find_matching_catch()|0;
     $58 = tempRet0;
     $59 = HEAP32[$1>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($59)|0);
     $$0 = $57;$$01 = $58;
    } else {
     $14 = HEAP32[$1>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($14)|0);
     $15 = HEAP32[$11>>2]|0;
     if ($__v) {
      $16 = (($15) + 24|0);
      $17 = HEAP32[$16>>2]|0;
      FUNCTION_TABLE_vii[$17 & 1023]($__nm,$11);
     } else {
      $18 = (($15) + 28|0);
      $19 = HEAP32[$18>>2]|0;
      FUNCTION_TABLE_vii[$19 & 1023]($__nm,$11);
     }
     $20 = HEAP8[$__nm>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $25 = (($__nm) + 1|0);
      $$pre5 = (($__nm) + 8|0);
      $$ph = $25;$$pre$phi4Z2D = $25;$$pre$phi6Z2D = $$pre5;
     } else {
      $23 = (($__nm) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      $$pre3 = (($__nm) + 1|0);
      $$ph = $24;$$pre$phi4Z2D = $$pre3;$$pre$phi6Z2D = $23;
     }
     $26 = (($__nm) + 4|0);
     $28 = $20;$37 = $$ph;
     L15: while(1) {
      $27 = $28 & 1;
      $29 = ($27<<24>>24)==(0);
      if ($29) {
       $32 = $28&255;
       $33 = $32 >>> 1;
       $35 = $$pre$phi4Z2D;$36 = $33;
      } else {
       $30 = HEAP32[$$pre$phi6Z2D>>2]|0;
       $31 = HEAP32[$26>>2]|0;
       $35 = $30;$36 = $31;
      }
      $34 = (($35) + ($36)|0);
      $38 = ($37|0)==($34|0);
      if ($38) {
       label = 24;
       break;
      }
      $39 = HEAP8[$37>>0]|0;
      $40 = HEAP32[$__s>>2]|0;
      $41 = ($40|0)==(0|0);
      do {
       if (!($41)) {
        $42 = (($40) + 24|0);
        $43 = HEAP32[$42>>2]|0;
        $44 = (($40) + 28|0);
        $45 = HEAP32[$44>>2]|0;
        $46 = ($43|0)==($45|0);
        if (!($46)) {
         $47 = (($43) + 1|0);
         HEAP32[$42>>2] = $47;
         HEAP8[$43>>0] = $39;
         break;
        }
        $48 = HEAP32[$40>>2]|0;
        $49 = (($48) + 52|0);
        $50 = HEAP32[$49>>2]|0;
        $51 = $39&255;
        __THREW__ = 0;
        $52 = (invoke_iii($50|0,($40|0),($51|0))|0);
        $53 = __THREW__; __THREW__ = 0;
        $54 = $53&1;
        if ($54) {
         label = 23;
         break L15;
        }
        $55 = ($52|0)==(-1);
        if ($55) {
         HEAP32[$__s>>2] = 0;
        }
       }
      } while(0);
      $56 = (($37) + 1|0);
      $$pre = HEAP8[$__nm>>0]|0;
      $28 = $$pre;$37 = $56;
     }
     if ((label|0) == 23) {
      $60 = ___cxa_find_matching_catch()|0;
      $61 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
      $$0 = $60;$$01 = $61;
      break;
     }
     else if ((label|0) == 24) {
      $62 = HEAP32[$__s>>2]|0;
      HEAP32[$agg$result>>2] = $62;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
      break L1;
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $__fmt = sp + 60|0;
 $__nar = sp + 48|0;
 $__o = sp + 24|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5824+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5824+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5824+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5824+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5824+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5824+5>>0]|0;
 $2 = (($__fmt) + 1|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,5728,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(463,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 } else {
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$13,$14,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp,$__len,$__signd,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__signd = $__signd|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$1$lcssa = 0, $$1$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = (($__fmtp) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1$ph = $$0;
 } else {
  $5 = (($$0) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1$ph = $5;
 }
 $$01 = $__len;$$1 = $$1$ph;
 while(1) {
  $6 = HEAP8[$$01>>0]|0;
  $7 = ($6<<24>>24)==(0);
  if ($7) {
   $$1$lcssa = $$1;
   break;
  }
  $8 = (($$01) + 1|0);
  $9 = (($$1) + 1|0);
  HEAP8[$$1>>0] = $6;
  $$01 = $8;$$1 = $9;
 }
 $10 = $__flags & 74;
 do {
  if ((($10|0) == 8)) {
   $11 = $__flags & 16384;
   $12 = ($11|0)==(0);
   if ($12) {
    HEAP8[$$1$lcssa>>0] = 120;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 88;
    break;
   }
  } else if ((($10|0) == 64)) {
   HEAP8[$$1$lcssa>>0] = 111;
  } else {
   if ($__signd) {
    HEAP8[$$1$lcssa>>0] = 100;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 117;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb,$__ne,$__iob) {
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__iob = $__iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__iob) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 176;
 do {
  if ((($2|0) == 16)) {
   $3 = HEAP8[$__nb>>0]|0;
   if ((($3<<24>>24) == 43) | (($3<<24>>24) == 45)) {
    $4 = (($__nb) + 1|0);
    $$0 = $4;
    break;
   }
   $5 = $__ne;
   $6 = $__nb;
   $7 = (($5) - ($6))|0;
   $8 = ($7|0)>(1);
   $9 = ($3<<24>>24)==(48);
   $or$cond = $8 & $9;
   if ($or$cond) {
    $10 = (($__nb) + 1|0);
    $11 = HEAP8[$10>>0]|0;
    if ((($11<<24>>24) == 88) | (($11<<24>>24) == 120)) {
     $12 = (($__nb) + 2|0);
     $$0 = $12;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else if ((($2|0) == 32)) {
   $$0 = $__ne;
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0 = $__nb;
 }
 return ($$0|0);
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i5 = 0, $$01$i$i = 0, $$01$i$i4 = 0, $$9 = 0, $$__dg$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$0 = 0, $__dc$1 = 0;
 var $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7032)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7176)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = $5&255;
  $11 = $10 >>> 1;
  $12 = $11;
 } else {
  $8 = (($__grouping) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $12 = $9;
 }
 $13 = ($12|0)==(0);
 do {
  if ($13) {
   $14 = HEAP32[$0>>2]|0;
   $15 = (($14) + 32|0);
   $16 = HEAP32[$15>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($16|0,($0|0),($__nb|0),($__ne|0),($__ob|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 8;
   } else {
    $19 = $__ne;
    $20 = $__nb;
    $21 = (($19) - ($20))|0;
    $22 = (($__ob) + ($21)|0);
    HEAP32[$__oe>>2] = $22;
    label = 40;
   }
  } else {
   HEAP32[$__oe>>2] = $__ob;
   $27 = HEAP8[$__nb>>0]|0;
   if ((($27<<24>>24) == 43) | (($27<<24>>24) == 45)) {
    $28 = HEAP32[$0>>2]|0;
    $29 = (($28) + 28|0);
    $30 = HEAP32[$29>>2]|0;
    __THREW__ = 0;
    $31 = (invoke_iii($30|0,($0|0),($27|0))|0);
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 8;
     break;
    }
    $34 = (($__nb) + 1|0);
    $35 = HEAP32[$__oe>>2]|0;
    $36 = (($35) + 1|0);
    HEAP32[$__oe>>2] = $36;
    HEAP8[$35>>0] = $31;
    $__nf$0 = $34;
   } else {
    $__nf$0 = $__nb;
   }
   $37 = $__ne;
   $38 = $__nf$0;
   $39 = (($37) - ($38))|0;
   $40 = ($39|0)>(1);
   if ($40) {
    $41 = HEAP8[$__nf$0>>0]|0;
    $42 = ($41<<24>>24)==(48);
    if ($42) {
     $43 = (($__nf$0) + 1|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($44<<24>>24) == 88) | (($44<<24>>24) == 120)) {
      $45 = HEAP32[$0>>2]|0;
      $46 = (($45) + 28|0);
      $47 = HEAP32[$46>>2]|0;
      __THREW__ = 0;
      $48 = (invoke_iii($47|0,($0|0),48)|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       label = 8;
       break;
      }
      $51 = HEAP32[$__oe>>2]|0;
      $52 = (($51) + 1|0);
      HEAP32[$__oe>>2] = $52;
      HEAP8[$51>>0] = $48;
      $53 = HEAP8[$43>>0]|0;
      $54 = HEAP32[$0>>2]|0;
      $55 = (($54) + 28|0);
      $56 = HEAP32[$55>>2]|0;
      __THREW__ = 0;
      $57 = (invoke_iii($56|0,($0|0),($53|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       label = 8;
       break;
      }
      $60 = (($__nf$0) + 2|0);
      $61 = HEAP32[$__oe>>2]|0;
      $62 = (($61) + 1|0);
      HEAP32[$__oe>>2] = $62;
      HEAP8[$61>>0] = $57;
      $__nf$1 = $60;
     } else {
      $__nf$1 = $__nf$0;
     }
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
   $63 = ($__nf$1|0)==($__ne|0);
   if (!($63)) {
    $$0$i$i5 = $__ne;$$01$i$i4 = $__nf$1;
    while(1) {
     $64 = (($$0$i$i5) + -1|0);
     $65 = ($$01$i$i4>>>0)<($64>>>0);
     if (!($65)) {
      break;
     }
     $66 = HEAP8[$$01$i$i4>>0]|0;
     $67 = HEAP8[$64>>0]|0;
     HEAP8[$$01$i$i4>>0] = $67;
     HEAP8[$64>>0] = $66;
     $68 = (($$01$i$i4) + 1|0);
     $$0$i$i5 = $64;$$01$i$i4 = $68;
    }
   }
   $69 = HEAP32[$1>>2]|0;
   $70 = (($69) + 16|0);
   $71 = HEAP32[$70>>2]|0;
   __THREW__ = 0;
   $72 = (invoke_ii($71|0,($1|0))|0);
   $73 = __THREW__; __THREW__ = 0;
   $74 = $73&1;
   if ($74) {
    label = 8;
   } else {
    $75 = (($__grouping) + 1|0);
    $76 = (($__grouping) + 4|0);
    $77 = (($__grouping) + 8|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $78 = ($__p$0>>>0)<($__ne>>>0);
     if (!($78)) {
      break;
     }
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$77>>2]|0;
     $$ = $81 ? $75 : $82;
     $83 = (($$) + ($__dg$0)|0);
     $84 = HEAP8[$83>>0]|0;
     $85 = ($84<<24>>24)==(0);
     if ($85) {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     } else {
      $86 = HEAP32[$77>>2]|0;
      $$9 = $81 ? $75 : $86;
      $87 = (($$9) + ($__dg$0)|0);
      $88 = HEAP8[$87>>0]|0;
      $89 = $88 << 24 >> 24;
      $90 = ($__dc$0|0)==($89|0);
      if ($90) {
       $91 = HEAP32[$__oe>>2]|0;
       $92 = (($91) + 1|0);
       HEAP32[$__oe>>2] = $92;
       HEAP8[$91>>0] = $72;
       $93 = HEAP8[$__grouping>>0]|0;
       $94 = $93 & 1;
       $95 = ($94<<24>>24)==(0);
       if ($95) {
        $97 = $93&255;
        $98 = $97 >>> 1;
        $100 = $98;
       } else {
        $96 = HEAP32[$76>>2]|0;
        $100 = $96;
       }
       $99 = (($100) + -1)|0;
       $101 = ($__dg$0>>>0)<($99>>>0);
       $102 = $101&1;
       $$__dg$0 = (($102) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
     }
     $103 = HEAP8[$__p$0>>0]|0;
     $104 = HEAP32[$0>>2]|0;
     $105 = (($104) + 28|0);
     $106 = HEAP32[$105>>2]|0;
     __THREW__ = 0;
     $107 = (invoke_iii($106|0,($0|0),($103|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 7;
      break;
     }
     $110 = HEAP32[$__oe>>2]|0;
     $111 = (($110) + 1|0);
     HEAP32[$__oe>>2] = $111;
     HEAP8[$110>>0] = $107;
     $112 = (($__dc$1) + 1)|0;
     $113 = (($__p$0) + 1|0);
     $__dc$0 = $112;$__dg$0 = $__dg$1;$__p$0 = $113;
    }
    if ((label|0) == 7) {
     $23 = ___cxa_find_matching_catch()|0;
     $24 = tempRet0;
     $lpad$phi$index = $23;$lpad$phi$index2 = $24;
     break;
    }
    $114 = $__nf$1;
    $115 = $__nb;
    $116 = (($114) - ($115))|0;
    $117 = (($__ob) + ($116)|0);
    $118 = HEAP32[$__oe>>2]|0;
    $119 = ($117|0)==($118|0);
    if ($119) {
     label = 40;
    } else {
     $$0$i$i = $118;$$01$i$i = $117;
     while(1) {
      $120 = (($$0$i$i) + -1|0);
      $121 = ($$01$i$i>>>0)<($120>>>0);
      if (!($121)) {
       break;
      }
      $122 = HEAP8[$$01$i$i>>0]|0;
      $123 = HEAP8[$120>>0]|0;
      HEAP8[$$01$i$i>>0] = $123;
      HEAP8[$120>>0] = $122;
      $124 = (($$01$i$i) + 1|0);
      $$0$i$i = $120;$$01$i$i = $124;
     }
     label = 40;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $lpad$phi$index = $25;$lpad$phi$index2 = $26;
 }
 else if ((label|0) == 40) {
  $125 = ($__np|0)==($__ne|0);
  if ($125) {
   $126 = HEAP32[$__oe>>2]|0;
   $storemerge = $126;
  } else {
   $127 = $__np;
   $128 = $__nb;
   $129 = (($127) - ($128))|0;
   $130 = (($__ob) + ($129)|0);
   $storemerge = $130;
  }
  HEAP32[$__op>>2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 78|0;
 $__o = sp + 36|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($__fmt) + 1|0);
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,5736,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($2,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(463,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $27 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($27)|0);
  ___resumeException($25|0);
  // unreachable;
 } else {
  $21 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($21)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$3+0>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$23,$24,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $__fmt = sp + 60|0;
 $__nar = sp + 48|0;
 $__o = sp + 24|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5824+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5824+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5824+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5824+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5824+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5824+5>>0]|0;
 $2 = (($__fmt) + 1|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,5728,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(463,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 } else {
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$13,$14,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 79|0;
 $__o = sp + 36|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($__fmt) + 1|0);
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,5736,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($2,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(463,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $27 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($27)|0);
  ___resumeException($25|0);
  // unreachable;
 } else {
  $21 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($21)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$3+0>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$23,$24,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$127 = 0, $$18 = 0, $$byval_copy = 0, $$pre = 0, $$pre10 = 0, $$pre9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0;
 var $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 88|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 150|0;
 $__nb = sp + 84|0;
 $__o = sp + 92|0;
 $__op = sp + 80|0;
 $__oe = sp + 76|0;
 $0 = sp + 72|0;
 $1 = sp + 68|0;
 $2 = sp + 64|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($7,5744,$9)|0);
 HEAP32[$__nb>>2] = $__nar;
 $11 = (__ZNSt3__16__clocEv()|0);
 if ($10) {
  $12 = (($__iob) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = (($vararg_buffer) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $14;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $15;
 }
 $16 = ($__nc$0|0)>(29);
 do {
  if ($16) {
   if ($10) {
    __THREW__ = 0;
    $17 = (invoke_i(459)|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     $20 = (($__iob) + 8|0);
     $21 = HEAP32[$20>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $21;
     $vararg_ptr8 = (($vararg_buffer5) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $22 = (invoke_iiiii(464,($__nb|0),($17|0),($__fmt|0),($vararg_buffer5|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      $__nc$1 = $22;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $27 = (invoke_i(459)|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     $30 = (($__iob) + 8|0);
     $31 = HEAP32[$30>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer9>>2] = $31;
     $vararg_ptr12 = (($vararg_buffer9) + 8|0);
     HEAPF64[$vararg_ptr12>>3] = $__v;
     $32 = (invoke_iiiii(464,($__nb|0),($27|0),($__fmt|0),($vararg_buffer9|0))|0);
     $33 = __THREW__; __THREW__ = 0;
     $34 = $33&1;
     if (!($34)) {
      $__nc$1 = $32;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $35 = HEAP32[$__nb>>2]|0;
    $36 = ($35|0)==(0|0);
    if (!($36)) {
     $40 = $35;$64 = $35;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
    __THREW__ = 0;
    invoke_v(465);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if (!($38)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $40 = $$pre;$64 = $$pre;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   $$127 = $26;$$18 = $25;
  } else {
   $$pre9 = HEAP32[$__nb>>2]|0;
   $40 = $$pre9;$64 = 0;$__nc$2 = $__nc$0;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $39 = (($40) + ($__nc$2)|0);
  $41 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($40,$39,$__iob)|0);
  $42 = ($40|0)==($__nar|0);
  if ($42) {
   $52 = $__nar;$62 = 0;$__ob$0 = $__o;
   label = 20;
  } else {
   $43 = $__nc$2 << 1;
   $44 = (_malloc($43)|0);
   $45 = ($44|0)==(0|0);
   if ($45) {
    __THREW__ = 0;
    invoke_v(465);
    $46 = __THREW__; __THREW__ = 0;
    $47 = $46&1;
    if ($47) {
     $72 = 0;
     label = 19;
    } else {
     $$pre10 = HEAP32[$__nb>>2]|0;
     $52 = $$pre10;$62 = 0;$__ob$0 = 0;
     label = 20;
    }
   } else {
    $52 = $40;$62 = $44;$__ob$0 = $44;
    label = 20;
   }
  }
  do {
   if ((label|0) == 20) {
    __THREW__ = 0;
    invoke_vii(457,($0|0),($__iob|0));
    $50 = __THREW__; __THREW__ = 0;
    $51 = $50&1;
    if ($51) {
     $72 = $62;
     label = 19;
    } else {
     __THREW__ = 0;
     invoke_viiiiiii(466,($52|0),($41|0),($39|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      $66 = ___cxa_find_matching_catch()|0;
      $67 = tempRet0;
      $68 = HEAP32[$0>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($68)|0);
      $$0 = $66;$$01 = $67;$69 = $62;
      break;
     }
     $55 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($55)|0);
     $56 = HEAP32[$__s>>2]|0;
     HEAP32[$2>>2] = $56;
     $57 = HEAP32[$__op>>2]|0;
     $58 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
     invoke_viiiiiii(416,($1|0),($$byval_copy|0),($__ob$0|0),($57|0),($58|0),($__iob|0),($__fl|0));
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      $72 = $62;
      label = 19;
     } else {
      $61 = HEAP32[$1>>2]|0;
      HEAP32[$__s>>2] = $61;
      HEAP32[$agg$result>>2] = $61;
      $63 = ($62|0)==(0|0);
      _free($62);
      if (!($63)) {
      }
      $65 = ($64|0)==(0|0);
      _free($64);
      if (!($65)) {
      }
      STACKTOP = sp;return;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   $48 = ___cxa_find_matching_catch()|0;
   $49 = tempRet0;
   $$0 = $48;$$01 = $49;$69 = $72;
  }
  $70 = ($69|0)==(0|0);
  _free($69);
  if (!($70)) {
  }
  $71 = ($64|0)==(0|0);
  _free($64);
  if ($71) {
   $$127 = $$01;$$18 = $$0;
  } else {
   $$127 = $$01;$$18 = $$0;
  }
 }
 ___resumeException($$18|0);
 // unreachable;
}
function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp,$__len,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$2 = 0, $$2$lcssa = 0, $$2$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $specify_precision$0$off0$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = (($__fmtp) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 1024;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1 = $$0;
 } else {
  $5 = (($$0) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1 = $5;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6|0)==(260);
 if ($8) {
  $$2$ph = $$1;$specify_precision$0$off0$ph = 0;
 } else {
  $9 = (($$1) + 1|0);
  HEAP8[$$1>>0] = 46;
  $10 = (($$1) + 2|0);
  HEAP8[$9>>0] = 42;
  $$2$ph = $10;$specify_precision$0$off0$ph = 1;
 }
 $$01 = $__len;$$2 = $$2$ph;
 while(1) {
  $11 = HEAP8[$$01>>0]|0;
  $12 = ($11<<24>>24)==(0);
  if ($12) {
   $$2$lcssa = $$2;
   break;
  }
  $13 = (($$01) + 1|0);
  $14 = (($$2) + 1|0);
  HEAP8[$$2>>0] = $11;
  $$01 = $13;$$2 = $14;
 }
 do {
  if ((($6|0) == 4)) {
   $15 = $7 & 1;
   $16 = ($15|0)==(0);
   if ($16) {
    HEAP8[$$2$lcssa>>0] = 102;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 70;
    break;
   }
  } else if ((($6|0) == 256)) {
   $17 = $7 & 1;
   $18 = ($17|0)==(0);
   if ($18) {
    HEAP8[$$2$lcssa>>0] = 101;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 69;
    break;
   }
  } else {
   $19 = $7 & 1;
   $20 = ($19|0)!=(0);
   if ($8) {
    if ($20) {
     HEAP8[$$2$lcssa>>0] = 65;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 97;
     break;
    }
   } else {
    if ($20) {
     HEAP8[$$2$lcssa>>0] = 71;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 103;
     break;
    }
   }
  }
 } while(0);
 return ($specify_precision$0$off0$ph|0);
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i7 = 0, $$01$i$i = 0, $$01$i$i6 = 0, $$30 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$0 = 0;
 var $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$2 = 0, $__nf$2$lcssa = 0, $__nf$2$lcssa37 = 0, $__nf$3 = 0, $__ns$0 = 0, $__ns$0$lcssa = 0, $__ns$1 = 0, $__ns$1$lcssa = 0, $__ns$2 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $storemerge = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7032)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7176)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (($6) + 28|0);
  $8 = HEAP32[$7>>2]|0;
  __THREW__ = 0;
  $9 = (invoke_iii($8|0,($0|0),($5|0))|0);
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if ($11) {
   label = 8;
  } else {
   $12 = (($__nb) + 1|0);
   $13 = HEAP32[$__oe>>2]|0;
   $14 = (($13) + 1|0);
   HEAP32[$__oe>>2] = $14;
   HEAP8[$13>>0] = $9;
   $__nf$0 = $12;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4: do {
  if ((label|0) == 10) {
   $25 = $__ne;
   $26 = $__nf$0;
   $27 = (($25) - ($26))|0;
   $28 = ($27|0)>(1);
   do {
    if ($28) {
     $29 = HEAP8[$__nf$0>>0]|0;
     $30 = ($29<<24>>24)==(48);
     if ($30) {
      $31 = (($__nf$0) + 1|0);
      $32 = HEAP8[$31>>0]|0;
      if ((($32<<24>>24) == 88) | (($32<<24>>24) == 120)) {
       $33 = HEAP32[$0>>2]|0;
       $34 = (($33) + 28|0);
       $35 = HEAP32[$34>>2]|0;
       __THREW__ = 0;
       $36 = (invoke_iii($35|0,($0|0),48)|0);
       $37 = __THREW__; __THREW__ = 0;
       $38 = $37&1;
       if ($38) {
        label = 8;
        break L4;
       }
       $39 = HEAP32[$__oe>>2]|0;
       $40 = (($39) + 1|0);
       HEAP32[$__oe>>2] = $40;
       HEAP8[$39>>0] = $36;
       $41 = (($__nf$0) + 2|0);
       $42 = HEAP8[$31>>0]|0;
       $43 = HEAP32[$0>>2]|0;
       $44 = (($43) + 28|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_iii($45|0,($0|0),($42|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 8;
        break L4;
       }
       $49 = HEAP32[$__oe>>2]|0;
       $50 = (($49) + 1|0);
       HEAP32[$__oe>>2] = $50;
       HEAP8[$49>>0] = $46;
       $__ns$0 = $41;
       while(1) {
        $51 = ($__ns$0>>>0)<($__ne>>>0);
        if (!($51)) {
         $__ns$0$lcssa = $__ns$0;
         label = 28;
         break;
        }
        $52 = HEAP8[$__ns$0>>0]|0;
        __THREW__ = 0;
        $53 = (invoke_i(459)|0);
        $54 = __THREW__; __THREW__ = 0;
        $55 = $54&1;
        if ($55) {
         label = 7;
         break;
        }
        $56 = $52 << 24 >> 24;
        __THREW__ = 0;
        $57 = (invoke_iii(467,($56|0),($53|0))|0);
        $58 = __THREW__; __THREW__ = 0;
        $59 = $58&1;
        if ($59) {
         label = 7;
         break;
        }
        $60 = ($57|0)==(0);
        if ($60) {
         $__ns$0$lcssa = $__ns$0;
         label = 28;
         break;
        }
        $61 = (($__ns$0) + 1|0);
        $__ns$0 = $61;
       }
       if ((label|0) == 7) {
        $21 = ___cxa_find_matching_catch()|0;
        $22 = tempRet0;
        $lpad$phi$index = $21;$lpad$phi$index5 = $22;
        break L4;
       }
       else if ((label|0) == 28) {
        $__nf$1 = $41;$__ns$2 = $__ns$0$lcssa;
        break;
       }
      } else {
       label = 11;
      }
     } else {
      label = 11;
     }
    } else {
     label = 11;
    }
   } while(0);
   do {
    if ((label|0) == 11) {
     $__ns$1 = $__nf$0;
     while(1) {
      $62 = ($__ns$1>>>0)<($__ne>>>0);
      if (!($62)) {
       $__ns$1$lcssa = $__ns$1;
       label = 27;
       break;
      }
      $63 = HEAP8[$__ns$1>>0]|0;
      __THREW__ = 0;
      $64 = (invoke_i(459)|0);
      $65 = __THREW__; __THREW__ = 0;
      $66 = $65&1;
      if ($66) {
       label = 6;
       break;
      }
      $67 = $63 << 24 >> 24;
      __THREW__ = 0;
      $68 = (invoke_iii(468,($67|0),($64|0))|0);
      $69 = __THREW__; __THREW__ = 0;
      $70 = $69&1;
      if ($70) {
       label = 6;
       break;
      }
      $71 = ($68|0)==(0);
      if ($71) {
       $__ns$1$lcssa = $__ns$1;
       label = 27;
       break;
      }
      $72 = (($__ns$1) + 1|0);
      $__ns$1 = $72;
     }
     if ((label|0) == 6) {
      $19 = ___cxa_find_matching_catch()|0;
      $20 = tempRet0;
      $lpad$phi$index = $19;$lpad$phi$index5 = $20;
      break L4;
     }
     else if ((label|0) == 27) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$1$lcssa;
      break;
     }
    }
   } while(0);
   $73 = HEAP8[$__grouping>>0]|0;
   $74 = $73 & 1;
   $75 = ($74<<24>>24)==(0);
   if ($75) {
    $78 = $73&255;
    $79 = $78 >>> 1;
    $80 = $79;
   } else {
    $76 = (($__grouping) + 4|0);
    $77 = HEAP32[$76>>2]|0;
    $80 = $77;
   }
   $81 = ($80|0)==(0);
   if ($81) {
    $82 = HEAP32[$__oe>>2]|0;
    $83 = HEAP32[$0>>2]|0;
    $84 = (($83) + 32|0);
    $85 = HEAP32[$84>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($85|0,($0|0),($__nf$1|0),($__ns$2|0),($82|0))|0);
    $86 = __THREW__; __THREW__ = 0;
    $87 = $86&1;
    if ($87) {
     label = 8;
     break;
    }
    $88 = $__ns$2;
    $89 = $__nf$1;
    $90 = (($88) - ($89))|0;
    $91 = HEAP32[$__oe>>2]|0;
    $92 = (($91) + ($90)|0);
    HEAP32[$__oe>>2] = $92;
    $$pre$phiZ2D = $0;
   } else {
    $93 = ($__nf$1|0)==($__ns$2|0);
    if (!($93)) {
     $$0$i$i = $__ns$2;$$01$i$i = $__nf$1;
     while(1) {
      $94 = (($$0$i$i) + -1|0);
      $95 = ($$01$i$i>>>0)<($94>>>0);
      if (!($95)) {
       break;
      }
      $96 = HEAP8[$$01$i$i>>0]|0;
      $97 = HEAP8[$94>>0]|0;
      HEAP8[$$01$i$i>>0] = $97;
      HEAP8[$94>>0] = $96;
      $98 = (($$01$i$i) + 1|0);
      $$0$i$i = $94;$$01$i$i = $98;
     }
    }
    $99 = HEAP32[$1>>2]|0;
    $100 = (($99) + 16|0);
    $101 = HEAP32[$100>>2]|0;
    __THREW__ = 0;
    $102 = (invoke_ii($101|0,($1|0))|0);
    $103 = __THREW__; __THREW__ = 0;
    $104 = $103&1;
    if ($104) {
     label = 8;
     break;
    }
    $105 = (($__grouping) + 1|0);
    $106 = (($__grouping) + 4|0);
    $107 = (($__grouping) + 8|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $108 = ($__p$0>>>0)<($__ns$2>>>0);
     if (!($108)) {
      break;
     }
     $109 = HEAP8[$__grouping>>0]|0;
     $110 = $109 & 1;
     $111 = ($110<<24>>24)==(0);
     $112 = HEAP32[$107>>2]|0;
     $$ = $111 ? $105 : $112;
     $113 = (($$) + ($__dg$0)|0);
     $114 = HEAP8[$113>>0]|0;
     $115 = ($114<<24>>24)>(0);
     if ($115) {
      $116 = HEAP32[$107>>2]|0;
      $$30 = $111 ? $105 : $116;
      $117 = (($$30) + ($__dg$0)|0);
      $118 = HEAP8[$117>>0]|0;
      $119 = $118 << 24 >> 24;
      $120 = ($__dc$0|0)==($119|0);
      if ($120) {
       $121 = HEAP32[$__oe>>2]|0;
       $122 = (($121) + 1|0);
       HEAP32[$__oe>>2] = $122;
       HEAP8[$121>>0] = $102;
       $123 = HEAP8[$__grouping>>0]|0;
       $124 = $123 & 1;
       $125 = ($124<<24>>24)==(0);
       if ($125) {
        $127 = $123&255;
        $128 = $127 >>> 1;
        $130 = $128;
       } else {
        $126 = HEAP32[$106>>2]|0;
        $130 = $126;
       }
       $129 = (($130) + -1)|0;
       $131 = ($__dg$0>>>0)<($129>>>0);
       $132 = $131&1;
       $$__dg$0 = (($132) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
     } else {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     }
     $133 = HEAP8[$__p$0>>0]|0;
     $134 = HEAP32[$0>>2]|0;
     $135 = (($134) + 28|0);
     $136 = HEAP32[$135>>2]|0;
     __THREW__ = 0;
     $137 = (invoke_iii($136|0,($0|0),($133|0))|0);
     $138 = __THREW__; __THREW__ = 0;
     $139 = $138&1;
     if ($139) {
      label = 5;
      break;
     }
     $140 = HEAP32[$__oe>>2]|0;
     $141 = (($140) + 1|0);
     HEAP32[$__oe>>2] = $141;
     HEAP8[$140>>0] = $137;
     $142 = (($__dc$1) + 1)|0;
     $143 = (($__p$0) + 1|0);
     $__dc$0 = $142;$__dg$0 = $__dg$1;$__p$0 = $143;
    }
    if ((label|0) == 5) {
     $17 = ___cxa_find_matching_catch()|0;
     $18 = tempRet0;
     $lpad$phi$index = $17;$lpad$phi$index5 = $18;
     break;
    }
    $144 = $__nf$1;
    $145 = $__nb;
    $146 = (($144) - ($145))|0;
    $147 = (($__ob) + ($146)|0);
    $148 = HEAP32[$__oe>>2]|0;
    $149 = ($147|0)==($148|0);
    if ($149) {
     $$pre$phiZ2D = $0;
    } else {
     $$0$i$i7 = $148;$$01$i$i6 = $147;
     while(1) {
      $150 = (($$0$i$i7) + -1|0);
      $151 = ($$01$i$i6>>>0)<($150>>>0);
      if (!($151)) {
       break;
      }
      $152 = HEAP8[$$01$i$i6>>0]|0;
      $153 = HEAP8[$150>>0]|0;
      HEAP8[$$01$i$i6>>0] = $153;
      HEAP8[$150>>0] = $152;
      $154 = (($$01$i$i6) + 1|0);
      $$0$i$i7 = $150;$$01$i$i6 = $154;
     }
     $$pre$phiZ2D = $0;
    }
   }
   $__nf$2 = $__ns$2;
   while(1) {
    $155 = ($__nf$2>>>0)<($__ne>>>0);
    if (!($155)) {
     $__nf$2$lcssa = $__nf$2;
     label = 63;
     break;
    }
    $156 = HEAP8[$__nf$2>>0]|0;
    $157 = ($156<<24>>24)==(46);
    if ($157) {
     $__nf$2$lcssa37 = $__nf$2;
     label = 59;
     break;
    }
    $167 = HEAP32[$$pre$phiZ2D>>2]|0;
    $168 = (($167) + 28|0);
    $169 = HEAP32[$168>>2]|0;
    __THREW__ = 0;
    $170 = (invoke_iii($169|0,($0|0),($156|0))|0);
    $171 = __THREW__; __THREW__ = 0;
    $172 = $171&1;
    if ($172) {
     label = 4;
     break;
    }
    $173 = HEAP32[$__oe>>2]|0;
    $174 = (($173) + 1|0);
    HEAP32[$__oe>>2] = $174;
    HEAP8[$173>>0] = $170;
    $175 = (($__nf$2) + 1|0);
    $__nf$2 = $175;
   }
   if ((label|0) == 4) {
    $15 = ___cxa_find_matching_catch()|0;
    $16 = tempRet0;
    $lpad$phi$index = $15;$lpad$phi$index5 = $16;
    break;
   }
   else if ((label|0) == 59) {
    $158 = HEAP32[$1>>2]|0;
    $159 = (($158) + 12|0);
    $160 = HEAP32[$159>>2]|0;
    __THREW__ = 0;
    $161 = (invoke_ii($160|0,($1|0))|0);
    $162 = __THREW__; __THREW__ = 0;
    $163 = $162&1;
    if ($163) {
     label = 8;
     break;
    }
    $164 = HEAP32[$__oe>>2]|0;
    $165 = (($164) + 1|0);
    HEAP32[$__oe>>2] = $165;
    HEAP8[$164>>0] = $161;
    $166 = (($__nf$2$lcssa37) + 1|0);
    $__nf$3 = $166;
   }
   else if ((label|0) == 63) {
    $__nf$3 = $__nf$2$lcssa;
   }
   $176 = HEAP32[$__oe>>2]|0;
   $177 = HEAP32[$0>>2]|0;
   $178 = (($177) + 32|0);
   $179 = HEAP32[$178>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($179|0,($0|0),($__nf$3|0),($__ne|0),($176|0))|0);
   $180 = __THREW__; __THREW__ = 0;
   $181 = $180&1;
   if ($181) {
    label = 8;
   } else {
    $182 = $__nf$3;
    $183 = (($25) - ($182))|0;
    $184 = HEAP32[$__oe>>2]|0;
    $185 = (($184) + ($183)|0);
    HEAP32[$__oe>>2] = $185;
    $186 = ($__np|0)==($__ne|0);
    if ($186) {
     $storemerge = $185;
    } else {
     $187 = $__np;
     $188 = $__nb;
     $189 = (($187) - ($188))|0;
     $190 = (($__ob) + ($189)|0);
     $storemerge = $190;
    }
    HEAP32[$__op>>2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $23 = ___cxa_find_matching_catch()|0;
  $24 = tempRet0;
  $lpad$phi$index = $23;$lpad$phi$index5 = $24;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$127 = 0, $$18 = 0, $$byval_copy = 0, $$pre = 0, $$pre10 = 0, $$pre9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0;
 var $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 80|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 142|0;
 $__nb = sp + 76|0;
 $__o = sp + 84|0;
 $__op = sp + 72|0;
 $__oe = sp + 68|0;
 $0 = sp + 64|0;
 $1 = sp + 60|0;
 $2 = sp + 56|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($7,5752,$9)|0);
 HEAP32[$__nb>>2] = $__nar;
 $11 = (__ZNSt3__16__clocEv()|0);
 if ($10) {
  $12 = (($__iob) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = (($vararg_buffer) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $14;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $15;
 }
 $16 = ($__nc$0|0)>(29);
 do {
  if ($16) {
   if ($10) {
    __THREW__ = 0;
    $17 = (invoke_i(459)|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     $20 = (($__iob) + 8|0);
     $21 = HEAP32[$20>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $21;
     $vararg_ptr8 = (($vararg_buffer5) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $22 = (invoke_iiiii(464,($__nb|0),($17|0),($__fmt|0),($vararg_buffer5|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      $__nc$1 = $22;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $27 = (invoke_i(459)|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     __THREW__ = 0;
     HEAPF64[$vararg_buffer9>>3] = $__v;
     $30 = (invoke_iiiii(464,($__nb|0),($27|0),($__fmt|0),($vararg_buffer9|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if (!($32)) {
      $__nc$1 = $30;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $33 = HEAP32[$__nb>>2]|0;
    $34 = ($33|0)==(0|0);
    if (!($34)) {
     $38 = $33;$61 = $33;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
    __THREW__ = 0;
    invoke_v(465);
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if (!($36)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $38 = $$pre;$61 = $$pre;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   $$127 = $26;$$18 = $25;
  } else {
   $$pre9 = HEAP32[$__nb>>2]|0;
   $38 = $$pre9;$61 = 0;$__nc$2 = $__nc$0;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $37 = (($38) + ($__nc$2)|0);
  $39 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38,$37,$__iob)|0);
  $40 = ($38|0)==($__nar|0);
  if ($40) {
   $50 = $__nar;$60 = 0;$__ob$0 = $__o;
   label = 20;
  } else {
   $41 = $__nc$2 << 1;
   $42 = (_malloc($41)|0);
   $43 = ($42|0)==(0|0);
   if ($43) {
    __THREW__ = 0;
    invoke_v(465);
    $44 = __THREW__; __THREW__ = 0;
    $45 = $44&1;
    if ($45) {
     $66 = 0;
     label = 19;
    } else {
     $$pre10 = HEAP32[$__nb>>2]|0;
     $50 = $$pre10;$60 = 0;$__ob$0 = 0;
     label = 20;
    }
   } else {
    $50 = $38;$60 = $42;$__ob$0 = $42;
    label = 20;
   }
  }
  do {
   if ((label|0) == 20) {
    __THREW__ = 0;
    invoke_vii(457,($0|0),($__iob|0));
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $66 = $60;
     label = 19;
    } else {
     __THREW__ = 0;
     invoke_viiiiiii(466,($50|0),($39|0),($37|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      $62 = ___cxa_find_matching_catch()|0;
      $63 = tempRet0;
      $64 = HEAP32[$0>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($64)|0);
      $$0 = $62;$$01 = $63;$65 = $60;
      break;
     }
     $53 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($53)|0);
     $54 = HEAP32[$__s>>2]|0;
     HEAP32[$2>>2] = $54;
     $55 = HEAP32[$__op>>2]|0;
     $56 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
     invoke_viiiiiii(416,($1|0),($$byval_copy|0),($__ob$0|0),($55|0),($56|0),($__iob|0),($__fl|0));
     $57 = __THREW__; __THREW__ = 0;
     $58 = $57&1;
     if ($58) {
      $66 = $60;
      label = 19;
     } else {
      $59 = HEAP32[$1>>2]|0;
      HEAP32[$agg$result>>2] = $59;
      _free($60);
      _free($61);
      STACKTOP = sp;return;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   $46 = ___cxa_find_matching_catch()|0;
   $47 = tempRet0;
   $$0 = $46;$$01 = $47;$65 = $66;
  }
  _free($65);
  _free($61);
  $$127 = $$01;$$18 = $$0;
 }
 ___resumeException($$18|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 12|0;
 $vararg_buffer = sp;
 $__fmt = sp + 76|0;
 $__nar = sp + 56|0;
 $__o = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5832+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5832+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5832+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5832+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5832+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5832+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$vararg_buffer)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $6 = (invoke_iii(454,($0|0),(7032|0))|0);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 }
 $9 = HEAP32[$0>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$6>>2]|0;
 $11 = (($10) + 32|0);
 $12 = HEAP32[$11>>2]|0;
 (FUNCTION_TABLE_iiiii[$12 & 1023]($6,$__nar,$4,$__o)|0);
 $13 = (($__o) + ($3)|0);
 $14 = ($5|0)==($4|0);
 if ($14) {
  $__op$0 = $13;
 } else {
  $18 = $__nar;
  $19 = $5;
  $20 = (($19) - ($18))|0;
  $21 = (($__o) + ($20)|0);
  $__op$0 = $21;
 }
 $22 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $22;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$__op$0,$13,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi4Z2D = 0, $$pre$phiZ2D = 0, $$pre2 = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 L1: do {
  if ($5) {
   $6 = HEAP32[$this>>2]|0;
   $7 = (($6) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$__s>>2]|0;
   HEAP32[$0>>2] = $9;
   $10 = $__v&1;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
   FUNCTION_TABLE_viiiiii[$8 & 511]($agg$result,$this,$$byval_copy,$__iob,$__fl,$10);
  } else {
   __ZNKSt3__18ios_base6getlocEv($1,$__iob);
   __THREW__ = 0;
   $11 = (invoke_iii(454,($1|0),(7184|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   do {
    if ($13) {
     $55 = ___cxa_find_matching_catch()|0;
     $56 = tempRet0;
     $57 = HEAP32[$1>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($57)|0);
     $$0 = $55;$$01 = $56;
    } else {
     $14 = HEAP32[$1>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($14)|0);
     $15 = HEAP32[$11>>2]|0;
     if ($__v) {
      $16 = (($15) + 24|0);
      $17 = HEAP32[$16>>2]|0;
      FUNCTION_TABLE_vii[$17 & 1023]($__nm,$11);
     } else {
      $18 = (($15) + 28|0);
      $19 = HEAP32[$18>>2]|0;
      FUNCTION_TABLE_vii[$19 & 1023]($__nm,$11);
     }
     $20 = HEAP8[$__nm>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $25 = (($__nm) + 4|0);
      $$pre3 = (($__nm) + 8|0);
      $$ph = $25;$$pre$phi4Z2D = $$pre3;$$pre$phiZ2D = $25;
     } else {
      $23 = (($__nm) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      $$pre2 = (($__nm) + 4|0);
      $$ph = $24;$$pre$phi4Z2D = $23;$$pre$phiZ2D = $$pre2;
     }
     $27 = $20;$36 = $$ph;
     while(1) {
      $26 = $27 & 1;
      $28 = ($26<<24>>24)==(0);
      if ($28) {
       $31 = $27&255;
       $32 = $31 >>> 1;
       $34 = $$pre$phiZ2D;$35 = $32;
      } else {
       $29 = HEAP32[$$pre$phi4Z2D>>2]|0;
       $30 = HEAP32[$$pre$phiZ2D>>2]|0;
       $34 = $29;$35 = $30;
      }
      $33 = (($34) + ($35<<2)|0);
      $37 = ($36|0)==($33|0);
      if ($37) {
       label = 24;
       break;
      }
      $38 = HEAP32[$36>>2]|0;
      $39 = HEAP32[$__s>>2]|0;
      $40 = ($39|0)==(0|0);
      if (!($40)) {
       $41 = (($39) + 24|0);
       $42 = HEAP32[$41>>2]|0;
       $43 = (($39) + 28|0);
       $44 = HEAP32[$43>>2]|0;
       $45 = ($42|0)==($44|0);
       if ($45) {
        $46 = HEAP32[$39>>2]|0;
        $47 = (($46) + 52|0);
        $48 = HEAP32[$47>>2]|0;
        __THREW__ = 0;
        $49 = (invoke_iii($48|0,($39|0),($38|0))|0);
        $50 = __THREW__; __THREW__ = 0;
        $51 = $50&1;
        if ($51) {
         label = 23;
         break;
        } else {
         $$0$i$i = $49;
        }
       } else {
        $52 = (($42) + 4|0);
        HEAP32[$41>>2] = $52;
        HEAP32[$42>>2] = $38;
        $$0$i$i = $38;
       }
       $53 = ($$0$i$i|0)==(-1);
       if ($53) {
        HEAP32[$__s>>2] = 0;
       }
      }
      $54 = (($36) + 4|0);
      $$pre = HEAP8[$__nm>>0]|0;
      $27 = $$pre;$36 = $54;
     }
     if ((label|0) == 23) {
      $58 = ___cxa_find_matching_catch()|0;
      $59 = tempRet0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
      $$0 = $58;$$01 = $59;
      break;
     }
     else if ((label|0) == 24) {
      $60 = HEAP32[$__s>>2]|0;
      HEAP32[$agg$result>>2] = $60;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
      break L1;
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 104|0;
 $vararg_buffer = sp;
 $__fmt = sp + 120|0;
 $__nar = sp + 108|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5824+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5824+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5824+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5824+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5824+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5824+5>>0]|0;
 $2 = (($__fmt) + 1|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,5728,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(469,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 } else {
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$13,$14,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i5 = 0, $$01$i$i = 0, $$01$i$i4 = 0, $$8 = 0, $$__dg$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$0 = 0, $__dc$1 = 0;
 var $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7024)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7184)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = $5&255;
  $11 = $10 >>> 1;
  $12 = $11;
 } else {
  $8 = (($__grouping) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $12 = $9;
 }
 $13 = ($12|0)==(0);
 do {
  if ($13) {
   $14 = HEAP32[$0>>2]|0;
   $15 = (($14) + 48|0);
   $16 = HEAP32[$15>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($16|0,($0|0),($__nb|0),($__ne|0),($__ob|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 8;
   } else {
    $19 = $__ne;
    $20 = $__nb;
    $21 = (($19) - ($20))|0;
    $22 = (($__ob) + ($21<<2)|0);
    HEAP32[$__oe>>2] = $22;
    $130 = $22;
    label = 40;
   }
  } else {
   HEAP32[$__oe>>2] = $__ob;
   $27 = HEAP8[$__nb>>0]|0;
   if ((($27<<24>>24) == 43) | (($27<<24>>24) == 45)) {
    $28 = HEAP32[$0>>2]|0;
    $29 = (($28) + 44|0);
    $30 = HEAP32[$29>>2]|0;
    __THREW__ = 0;
    $31 = (invoke_iii($30|0,($0|0),($27|0))|0);
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 8;
     break;
    }
    $34 = (($__nb) + 1|0);
    $35 = HEAP32[$__oe>>2]|0;
    $36 = (($35) + 4|0);
    HEAP32[$__oe>>2] = $36;
    HEAP32[$35>>2] = $31;
    $__nf$0 = $34;
   } else {
    $__nf$0 = $__nb;
   }
   $37 = $__ne;
   $38 = $__nf$0;
   $39 = (($37) - ($38))|0;
   $40 = ($39|0)>(1);
   if ($40) {
    $41 = HEAP8[$__nf$0>>0]|0;
    $42 = ($41<<24>>24)==(48);
    if ($42) {
     $43 = (($__nf$0) + 1|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($44<<24>>24) == 88) | (($44<<24>>24) == 120)) {
      $45 = HEAP32[$0>>2]|0;
      $46 = (($45) + 44|0);
      $47 = HEAP32[$46>>2]|0;
      __THREW__ = 0;
      $48 = (invoke_iii($47|0,($0|0),48)|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       label = 8;
       break;
      }
      $51 = HEAP32[$__oe>>2]|0;
      $52 = (($51) + 4|0);
      HEAP32[$__oe>>2] = $52;
      HEAP32[$51>>2] = $48;
      $53 = HEAP8[$43>>0]|0;
      $54 = HEAP32[$0>>2]|0;
      $55 = (($54) + 44|0);
      $56 = HEAP32[$55>>2]|0;
      __THREW__ = 0;
      $57 = (invoke_iii($56|0,($0|0),($53|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       label = 8;
       break;
      }
      $60 = (($__nf$0) + 2|0);
      $61 = HEAP32[$__oe>>2]|0;
      $62 = (($61) + 4|0);
      HEAP32[$__oe>>2] = $62;
      HEAP32[$61>>2] = $57;
      $__nf$1 = $60;
     } else {
      $__nf$1 = $__nf$0;
     }
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
   $63 = ($__nf$1|0)==($__ne|0);
   if (!($63)) {
    $$0$i$i5 = $__ne;$$01$i$i4 = $__nf$1;
    while(1) {
     $64 = (($$0$i$i5) + -1|0);
     $65 = ($$01$i$i4>>>0)<($64>>>0);
     if (!($65)) {
      break;
     }
     $66 = HEAP8[$$01$i$i4>>0]|0;
     $67 = HEAP8[$64>>0]|0;
     HEAP8[$$01$i$i4>>0] = $67;
     HEAP8[$64>>0] = $66;
     $68 = (($$01$i$i4) + 1|0);
     $$0$i$i5 = $64;$$01$i$i4 = $68;
    }
   }
   $69 = HEAP32[$1>>2]|0;
   $70 = (($69) + 16|0);
   $71 = HEAP32[$70>>2]|0;
   __THREW__ = 0;
   $72 = (invoke_ii($71|0,($1|0))|0);
   $73 = __THREW__; __THREW__ = 0;
   $74 = $73&1;
   if ($74) {
    label = 8;
   } else {
    $75 = (($__grouping) + 1|0);
    $76 = (($__grouping) + 4|0);
    $77 = (($__grouping) + 8|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $78 = ($__p$0>>>0)<($__ne>>>0);
     if (!($78)) {
      break;
     }
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$77>>2]|0;
     $$ = $81 ? $75 : $82;
     $83 = (($$) + ($__dg$0)|0);
     $84 = HEAP8[$83>>0]|0;
     $85 = ($84<<24>>24)==(0);
     if ($85) {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     } else {
      $86 = HEAP32[$77>>2]|0;
      $$8 = $81 ? $75 : $86;
      $87 = (($$8) + ($__dg$0)|0);
      $88 = HEAP8[$87>>0]|0;
      $89 = $88 << 24 >> 24;
      $90 = ($__dc$0|0)==($89|0);
      if ($90) {
       $91 = HEAP32[$__oe>>2]|0;
       $92 = (($91) + 4|0);
       HEAP32[$__oe>>2] = $92;
       HEAP32[$91>>2] = $72;
       $93 = HEAP8[$__grouping>>0]|0;
       $94 = $93 & 1;
       $95 = ($94<<24>>24)==(0);
       if ($95) {
        $97 = $93&255;
        $98 = $97 >>> 1;
        $100 = $98;
       } else {
        $96 = HEAP32[$76>>2]|0;
        $100 = $96;
       }
       $99 = (($100) + -1)|0;
       $101 = ($__dg$0>>>0)<($99>>>0);
       $102 = $101&1;
       $$__dg$0 = (($102) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
     }
     $103 = HEAP8[$__p$0>>0]|0;
     $104 = HEAP32[$0>>2]|0;
     $105 = (($104) + 44|0);
     $106 = HEAP32[$105>>2]|0;
     __THREW__ = 0;
     $107 = (invoke_iii($106|0,($0|0),($103|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 7;
      break;
     }
     $110 = HEAP32[$__oe>>2]|0;
     $111 = (($110) + 4|0);
     HEAP32[$__oe>>2] = $111;
     HEAP32[$110>>2] = $107;
     $112 = (($__dc$1) + 1)|0;
     $113 = (($__p$0) + 1|0);
     $__dc$0 = $112;$__dg$0 = $__dg$1;$__p$0 = $113;
    }
    if ((label|0) == 7) {
     $23 = ___cxa_find_matching_catch()|0;
     $24 = tempRet0;
     $lpad$phi$index = $23;$lpad$phi$index2 = $24;
     break;
    }
    $114 = $__nf$1;
    $115 = $__nb;
    $116 = (($114) - ($115))|0;
    $117 = (($__ob) + ($116<<2)|0);
    $118 = HEAP32[$__oe>>2]|0;
    $119 = ($117|0)==($118|0);
    if ($119) {
     $130 = $117;
     label = 40;
    } else {
     $$0$i$i = $118;$$01$i$i = $117;
     while(1) {
      $120 = (($$0$i$i) + -4|0);
      $121 = ($$01$i$i>>>0)<($120>>>0);
      if (!($121)) {
       break;
      }
      $122 = HEAP32[$$01$i$i>>2]|0;
      $123 = HEAP32[$120>>2]|0;
      HEAP32[$$01$i$i>>2] = $123;
      HEAP32[$120>>2] = $122;
      $124 = (($$01$i$i) + 4|0);
      $$0$i$i = $120;$$01$i$i = $124;
     }
     $130 = $118;
     label = 40;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $lpad$phi$index = $25;$lpad$phi$index2 = $26;
 }
 else if ((label|0) == 40) {
  $125 = ($__np|0)==($__ne|0);
  if ($125) {
   $storemerge = $130;
  } else {
   $126 = $__np;
   $127 = $__nb;
   $128 = (($126) - ($127))|0;
   $129 = (($__ob) + ($128<<2)|0);
   $storemerge = $129;
  }
  HEAP32[$__op>>2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 196|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 200|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($__fmt) + 1|0);
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,5736,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($2,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(469,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $27 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($27)|0);
  ___resumeException($25|0);
  // unreachable;
 } else {
  $21 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($21)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$3+0>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$23,$24,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 104|0;
 $vararg_buffer = sp;
 $__fmt = sp + 120|0;
 $__nar = sp + 108|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5824+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5824+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5824+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5824+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5824+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5824+5>>0]|0;
 $2 = (($__fmt) + 1|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,5728,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(469,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 } else {
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$13,$14,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 204|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 208|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($__fmt) + 1|0);
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,5736,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($2,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(469,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $27 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($27)|0);
  ___resumeException($25|0);
  // unreachable;
 } else {
  $21 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($21)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$3+0>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$23,$24,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$125 = 0, $$16 = 0, $$byval_copy = 0, $$pre = 0, $$pre7 = 0, $$pre8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 316|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 320|0;
 $__nb = sp + 312|0;
 $__o = sp + 84|0;
 $__op = sp + 80|0;
 $__oe = sp + 76|0;
 $0 = sp + 72|0;
 $1 = sp + 68|0;
 $2 = sp + 64|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($7,5744,$9)|0);
 HEAP32[$__nb>>2] = $__nar;
 $11 = (__ZNSt3__16__clocEv()|0);
 if ($10) {
  $12 = (($__iob) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = (($vararg_buffer) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $14;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $15;
 }
 $16 = ($__nc$0|0)>(29);
 do {
  if ($16) {
   if ($10) {
    __THREW__ = 0;
    $17 = (invoke_i(459)|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     $20 = (($__iob) + 8|0);
     $21 = HEAP32[$20>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $21;
     $vararg_ptr8 = (($vararg_buffer5) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $22 = (invoke_iiiii(464,($__nb|0),($17|0),($__fmt|0),($vararg_buffer5|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      $__nc$1 = $22;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $27 = (invoke_i(459)|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     $30 = (($__iob) + 8|0);
     $31 = HEAP32[$30>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer9>>2] = $31;
     $vararg_ptr12 = (($vararg_buffer9) + 8|0);
     HEAPF64[$vararg_ptr12>>3] = $__v;
     $32 = (invoke_iiiii(464,($__nb|0),($27|0),($__fmt|0),($vararg_buffer9|0))|0);
     $33 = __THREW__; __THREW__ = 0;
     $34 = $33&1;
     if (!($34)) {
      $__nc$1 = $32;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $35 = HEAP32[$__nb>>2]|0;
    $36 = ($35|0)==(0|0);
    if (!($36)) {
     $40 = $35;$64 = $35;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
    __THREW__ = 0;
    invoke_v(465);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if (!($38)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $40 = $$pre;$64 = $$pre;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   $$125 = $26;$$16 = $25;
  } else {
   $$pre7 = HEAP32[$__nb>>2]|0;
   $40 = $$pre7;$64 = 0;$__nc$2 = $__nc$0;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $39 = (($40) + ($__nc$2)|0);
  $41 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($40,$39,$__iob)|0);
  $42 = ($40|0)==($__nar|0);
  if ($42) {
   $52 = $__nar;$62 = 0;$__ob$0 = $__o;
   label = 20;
  } else {
   $43 = $__nc$2 << 3;
   $44 = (_malloc($43)|0);
   $45 = ($44|0)==(0|0);
   if ($45) {
    __THREW__ = 0;
    invoke_v(465);
    $46 = __THREW__; __THREW__ = 0;
    $47 = $46&1;
    if ($47) {
     $70 = 0;
     label = 19;
    } else {
     $$pre8 = HEAP32[$__nb>>2]|0;
     $52 = $$pre8;$62 = $44;$__ob$0 = $44;
     label = 20;
    }
   } else {
    $52 = $40;$62 = $44;$__ob$0 = $44;
    label = 20;
   }
  }
  do {
   if ((label|0) == 20) {
    __THREW__ = 0;
    invoke_vii(457,($0|0),($__iob|0));
    $50 = __THREW__; __THREW__ = 0;
    $51 = $50&1;
    if ($51) {
     $70 = $62;
     label = 19;
    } else {
     __THREW__ = 0;
     invoke_viiiiiii(470,($52|0),($41|0),($39|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      $65 = ___cxa_find_matching_catch()|0;
      $66 = tempRet0;
      $67 = HEAP32[$0>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($67)|0);
      $$0 = $65;$$01 = $66;$68 = $62;
      break;
     }
     $55 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($55)|0);
     $56 = HEAP32[$__s>>2]|0;
     HEAP32[$2>>2] = $56;
     $57 = HEAP32[$__op>>2]|0;
     $58 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
     invoke_viiiiiii(471,($1|0),($$byval_copy|0),($__ob$0|0),($57|0),($58|0),($__iob|0),($__fl|0));
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      $70 = $62;
      label = 19;
     } else {
      $61 = HEAP32[$1>>2]|0;
      HEAP32[$__s>>2] = $61;
      HEAP32[$agg$result>>2] = $61;
      $63 = ($62|0)==(0|0);
      if (!($63)) {
       _free($62);
      }
      _free($64);
      STACKTOP = sp;return;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   $48 = ___cxa_find_matching_catch()|0;
   $49 = tempRet0;
   $$0 = $48;$$01 = $49;$68 = $70;
  }
  $69 = ($68|0)==(0|0);
  if (!($69)) {
   _free($68);
  }
  _free($64);
  $$125 = $$01;$$16 = $$0;
 }
 ___resumeException($$16|0);
 // unreachable;
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i7 = 0, $$01$i$i = 0, $$01$i$i6 = 0, $$29 = 0, $$__dg$0 = 0, $$lcssa = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$2 = 0, $__nf$2$lcssa = 0, $__nf$2$lcssa40 = 0, $__nf$3 = 0, $__ns$0 = 0, $__ns$0$lcssa = 0, $__ns$1 = 0, $__ns$1$lcssa = 0, $__ns$2 = 0, $__p$0 = 0, $lpad$phi$index = 0;
 var $lpad$phi$index5 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7024)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7184)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (($6) + 44|0);
  $8 = HEAP32[$7>>2]|0;
  __THREW__ = 0;
  $9 = (invoke_iii($8|0,($0|0),($5|0))|0);
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if ($11) {
   label = 8;
  } else {
   $12 = (($__nb) + 1|0);
   $13 = HEAP32[$__oe>>2]|0;
   $14 = (($13) + 4|0);
   HEAP32[$__oe>>2] = $14;
   HEAP32[$13>>2] = $9;
   $__nf$0 = $12;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4: do {
  if ((label|0) == 10) {
   $25 = $__ne;
   $26 = $__nf$0;
   $27 = (($25) - ($26))|0;
   $28 = ($27|0)>(1);
   do {
    if ($28) {
     $29 = HEAP8[$__nf$0>>0]|0;
     $30 = ($29<<24>>24)==(48);
     if ($30) {
      $31 = (($__nf$0) + 1|0);
      $32 = HEAP8[$31>>0]|0;
      if ((($32<<24>>24) == 88) | (($32<<24>>24) == 120)) {
       $33 = HEAP32[$0>>2]|0;
       $34 = (($33) + 44|0);
       $35 = HEAP32[$34>>2]|0;
       __THREW__ = 0;
       $36 = (invoke_iii($35|0,($0|0),48)|0);
       $37 = __THREW__; __THREW__ = 0;
       $38 = $37&1;
       if ($38) {
        label = 8;
        break L4;
       }
       $39 = HEAP32[$__oe>>2]|0;
       $40 = (($39) + 4|0);
       HEAP32[$__oe>>2] = $40;
       HEAP32[$39>>2] = $36;
       $41 = (($__nf$0) + 2|0);
       $42 = HEAP8[$31>>0]|0;
       $43 = HEAP32[$0>>2]|0;
       $44 = (($43) + 44|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_iii($45|0,($0|0),($42|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 8;
        break L4;
       }
       $49 = HEAP32[$__oe>>2]|0;
       $50 = (($49) + 4|0);
       HEAP32[$__oe>>2] = $50;
       HEAP32[$49>>2] = $46;
       $__ns$0 = $41;
       while(1) {
        $51 = ($__ns$0>>>0)<($__ne>>>0);
        if (!($51)) {
         $__ns$0$lcssa = $__ns$0;
         label = 28;
         break;
        }
        $52 = HEAP8[$__ns$0>>0]|0;
        __THREW__ = 0;
        $53 = (invoke_i(459)|0);
        $54 = __THREW__; __THREW__ = 0;
        $55 = $54&1;
        if ($55) {
         label = 7;
         break;
        }
        $56 = $52 << 24 >> 24;
        __THREW__ = 0;
        $57 = (invoke_iii(467,($56|0),($53|0))|0);
        $58 = __THREW__; __THREW__ = 0;
        $59 = $58&1;
        if ($59) {
         label = 7;
         break;
        }
        $60 = ($57|0)==(0);
        if ($60) {
         $__ns$0$lcssa = $__ns$0;
         label = 28;
         break;
        }
        $61 = (($__ns$0) + 1|0);
        $__ns$0 = $61;
       }
       if ((label|0) == 7) {
        $21 = ___cxa_find_matching_catch()|0;
        $22 = tempRet0;
        $lpad$phi$index = $21;$lpad$phi$index5 = $22;
        break L4;
       }
       else if ((label|0) == 28) {
        $__nf$1 = $41;$__ns$2 = $__ns$0$lcssa;
        break;
       }
      } else {
       label = 11;
      }
     } else {
      label = 11;
     }
    } else {
     label = 11;
    }
   } while(0);
   do {
    if ((label|0) == 11) {
     $__ns$1 = $__nf$0;
     while(1) {
      $62 = ($__ns$1>>>0)<($__ne>>>0);
      if (!($62)) {
       $__ns$1$lcssa = $__ns$1;
       label = 27;
       break;
      }
      $63 = HEAP8[$__ns$1>>0]|0;
      __THREW__ = 0;
      $64 = (invoke_i(459)|0);
      $65 = __THREW__; __THREW__ = 0;
      $66 = $65&1;
      if ($66) {
       label = 6;
       break;
      }
      $67 = $63 << 24 >> 24;
      __THREW__ = 0;
      $68 = (invoke_iii(468,($67|0),($64|0))|0);
      $69 = __THREW__; __THREW__ = 0;
      $70 = $69&1;
      if ($70) {
       label = 6;
       break;
      }
      $71 = ($68|0)==(0);
      if ($71) {
       $__ns$1$lcssa = $__ns$1;
       label = 27;
       break;
      }
      $72 = (($__ns$1) + 1|0);
      $__ns$1 = $72;
     }
     if ((label|0) == 6) {
      $19 = ___cxa_find_matching_catch()|0;
      $20 = tempRet0;
      $lpad$phi$index = $19;$lpad$phi$index5 = $20;
      break L4;
     }
     else if ((label|0) == 27) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$1$lcssa;
      break;
     }
    }
   } while(0);
   $73 = HEAP8[$__grouping>>0]|0;
   $74 = $73 & 1;
   $75 = ($74<<24>>24)==(0);
   if ($75) {
    $78 = $73&255;
    $79 = $78 >>> 1;
    $80 = $79;
   } else {
    $76 = (($__grouping) + 4|0);
    $77 = HEAP32[$76>>2]|0;
    $80 = $77;
   }
   $81 = ($80|0)==(0);
   if ($81) {
    $82 = HEAP32[$__oe>>2]|0;
    $83 = HEAP32[$0>>2]|0;
    $84 = (($83) + 48|0);
    $85 = HEAP32[$84>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($85|0,($0|0),($__nf$1|0),($__ns$2|0),($82|0))|0);
    $86 = __THREW__; __THREW__ = 0;
    $87 = $86&1;
    if ($87) {
     label = 8;
     break;
    }
    $88 = $__ns$2;
    $89 = $__nf$1;
    $90 = (($88) - ($89))|0;
    $91 = HEAP32[$__oe>>2]|0;
    $92 = (($91) + ($90<<2)|0);
    HEAP32[$__oe>>2] = $92;
    $$pre$phiZ2D = $0;$191 = $92;
   } else {
    $93 = ($__nf$1|0)==($__ns$2|0);
    if (!($93)) {
     $$0$i$i = $__ns$2;$$01$i$i = $__nf$1;
     while(1) {
      $94 = (($$0$i$i) + -1|0);
      $95 = ($$01$i$i>>>0)<($94>>>0);
      if (!($95)) {
       break;
      }
      $96 = HEAP8[$$01$i$i>>0]|0;
      $97 = HEAP8[$94>>0]|0;
      HEAP8[$$01$i$i>>0] = $97;
      HEAP8[$94>>0] = $96;
      $98 = (($$01$i$i) + 1|0);
      $$0$i$i = $94;$$01$i$i = $98;
     }
    }
    $99 = HEAP32[$1>>2]|0;
    $100 = (($99) + 16|0);
    $101 = HEAP32[$100>>2]|0;
    __THREW__ = 0;
    $102 = (invoke_ii($101|0,($1|0))|0);
    $103 = __THREW__; __THREW__ = 0;
    $104 = $103&1;
    if ($104) {
     label = 8;
     break;
    }
    $105 = (($__grouping) + 1|0);
    $106 = (($__grouping) + 4|0);
    $107 = (($__grouping) + 8|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $108 = ($__p$0>>>0)<($__ns$2>>>0);
     if (!($108)) {
      break;
     }
     $109 = HEAP8[$__grouping>>0]|0;
     $110 = $109 & 1;
     $111 = ($110<<24>>24)==(0);
     $112 = HEAP32[$107>>2]|0;
     $$ = $111 ? $105 : $112;
     $113 = (($$) + ($__dg$0)|0);
     $114 = HEAP8[$113>>0]|0;
     $115 = ($114<<24>>24)>(0);
     if ($115) {
      $116 = HEAP32[$107>>2]|0;
      $$29 = $111 ? $105 : $116;
      $117 = (($$29) + ($__dg$0)|0);
      $118 = HEAP8[$117>>0]|0;
      $119 = $118 << 24 >> 24;
      $120 = ($__dc$0|0)==($119|0);
      if ($120) {
       $121 = HEAP32[$__oe>>2]|0;
       $122 = (($121) + 4|0);
       HEAP32[$__oe>>2] = $122;
       HEAP32[$121>>2] = $102;
       $123 = HEAP8[$__grouping>>0]|0;
       $124 = $123 & 1;
       $125 = ($124<<24>>24)==(0);
       if ($125) {
        $127 = $123&255;
        $128 = $127 >>> 1;
        $130 = $128;
       } else {
        $126 = HEAP32[$106>>2]|0;
        $130 = $126;
       }
       $129 = (($130) + -1)|0;
       $131 = ($__dg$0>>>0)<($129>>>0);
       $132 = $131&1;
       $$__dg$0 = (($132) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
     } else {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     }
     $133 = HEAP8[$__p$0>>0]|0;
     $134 = HEAP32[$0>>2]|0;
     $135 = (($134) + 44|0);
     $136 = HEAP32[$135>>2]|0;
     __THREW__ = 0;
     $137 = (invoke_iii($136|0,($0|0),($133|0))|0);
     $138 = __THREW__; __THREW__ = 0;
     $139 = $138&1;
     if ($139) {
      label = 5;
      break;
     }
     $140 = HEAP32[$__oe>>2]|0;
     $141 = (($140) + 4|0);
     HEAP32[$__oe>>2] = $141;
     HEAP32[$140>>2] = $137;
     $142 = (($__dc$1) + 1)|0;
     $143 = (($__p$0) + 1|0);
     $__dc$0 = $142;$__dg$0 = $__dg$1;$__p$0 = $143;
    }
    if ((label|0) == 5) {
     $17 = ___cxa_find_matching_catch()|0;
     $18 = tempRet0;
     $lpad$phi$index = $17;$lpad$phi$index5 = $18;
     break;
    }
    $144 = $__nf$1;
    $145 = $__nb;
    $146 = (($144) - ($145))|0;
    $147 = (($__ob) + ($146<<2)|0);
    $148 = HEAP32[$__oe>>2]|0;
    $149 = ($147|0)==($148|0);
    if ($149) {
     $$pre$phiZ2D = $0;$191 = $147;
    } else {
     $$0$i$i7 = $148;$$01$i$i6 = $147;
     while(1) {
      $150 = (($$0$i$i7) + -4|0);
      $151 = ($$01$i$i6>>>0)<($150>>>0);
      if (!($151)) {
       break;
      }
      $152 = HEAP32[$$01$i$i6>>2]|0;
      $153 = HEAP32[$150>>2]|0;
      HEAP32[$$01$i$i6>>2] = $153;
      HEAP32[$150>>2] = $152;
      $154 = (($$01$i$i6) + 4|0);
      $$0$i$i7 = $150;$$01$i$i6 = $154;
     }
     $$pre$phiZ2D = $0;$191 = $148;
    }
   }
   $192 = $191;$__nf$2 = $__ns$2;
   while(1) {
    $155 = ($__nf$2>>>0)<($__ne>>>0);
    if (!($155)) {
     $$lcssa = $192;$__nf$2$lcssa = $__nf$2;
     label = 63;
     break;
    }
    $156 = HEAP8[$__nf$2>>0]|0;
    $157 = ($156<<24>>24)==(46);
    if ($157) {
     $__nf$2$lcssa40 = $__nf$2;
     label = 59;
     break;
    }
    $167 = HEAP32[$$pre$phiZ2D>>2]|0;
    $168 = (($167) + 44|0);
    $169 = HEAP32[$168>>2]|0;
    __THREW__ = 0;
    $170 = (invoke_iii($169|0,($0|0),($156|0))|0);
    $171 = __THREW__; __THREW__ = 0;
    $172 = $171&1;
    if ($172) {
     label = 4;
     break;
    }
    $173 = HEAP32[$__oe>>2]|0;
    $174 = (($173) + 4|0);
    HEAP32[$__oe>>2] = $174;
    HEAP32[$173>>2] = $170;
    $175 = (($__nf$2) + 1|0);
    $192 = $174;$__nf$2 = $175;
   }
   if ((label|0) == 4) {
    $15 = ___cxa_find_matching_catch()|0;
    $16 = tempRet0;
    $lpad$phi$index = $15;$lpad$phi$index5 = $16;
    break;
   }
   else if ((label|0) == 59) {
    $158 = HEAP32[$1>>2]|0;
    $159 = (($158) + 12|0);
    $160 = HEAP32[$159>>2]|0;
    __THREW__ = 0;
    $161 = (invoke_ii($160|0,($1|0))|0);
    $162 = __THREW__; __THREW__ = 0;
    $163 = $162&1;
    if ($163) {
     label = 8;
     break;
    }
    $164 = HEAP32[$__oe>>2]|0;
    $165 = (($164) + 4|0);
    HEAP32[$__oe>>2] = $165;
    HEAP32[$164>>2] = $161;
    $166 = (($__nf$2$lcssa40) + 1|0);
    $179 = $165;$__nf$3 = $166;
   }
   else if ((label|0) == 63) {
    $179 = $$lcssa;$__nf$3 = $__nf$2$lcssa;
   }
   $176 = HEAP32[$0>>2]|0;
   $177 = (($176) + 48|0);
   $178 = HEAP32[$177>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($178|0,($0|0),($__nf$3|0),($__ne|0),($179|0))|0);
   $180 = __THREW__; __THREW__ = 0;
   $181 = $180&1;
   if ($181) {
    label = 8;
   } else {
    $182 = $__nf$3;
    $183 = (($25) - ($182))|0;
    $184 = HEAP32[$__oe>>2]|0;
    $185 = (($184) + ($183<<2)|0);
    HEAP32[$__oe>>2] = $185;
    $186 = ($__np|0)==($__ne|0);
    if ($186) {
     $storemerge = $185;
    } else {
     $187 = $__np;
     $188 = $__nb;
     $189 = (($187) - ($188))|0;
     $190 = (($__ob) + ($189<<2)|0);
     $storemerge = $190;
    }
    HEAP32[$__op>>2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $23 = ___cxa_find_matching_catch()|0;
  $24 = tempRet0;
  $lpad$phi$index = $23;$lpad$phi$index5 = $24;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$125 = 0, $$16 = 0, $$byval_copy = 0, $$pre = 0, $$pre7 = 0, $$pre8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0;
 var $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 308|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 312|0;
 $__nb = sp + 304|0;
 $__o = sp + 76|0;
 $__op = sp + 72|0;
 $__oe = sp + 68|0;
 $0 = sp + 64|0;
 $1 = sp + 60|0;
 $2 = sp + 56|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($7,5752,$9)|0);
 HEAP32[$__nb>>2] = $__nar;
 $11 = (__ZNSt3__16__clocEv()|0);
 if ($10) {
  $12 = (($__iob) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = (($vararg_buffer) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $14;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $15;
 }
 $16 = ($__nc$0|0)>(29);
 do {
  if ($16) {
   if ($10) {
    __THREW__ = 0;
    $17 = (invoke_i(459)|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     $20 = (($__iob) + 8|0);
     $21 = HEAP32[$20>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $21;
     $vararg_ptr8 = (($vararg_buffer5) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $22 = (invoke_iiiii(464,($__nb|0),($17|0),($__fmt|0),($vararg_buffer5|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      $__nc$1 = $22;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $27 = (invoke_i(459)|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     __THREW__ = 0;
     HEAPF64[$vararg_buffer9>>3] = $__v;
     $30 = (invoke_iiiii(464,($__nb|0),($27|0),($__fmt|0),($vararg_buffer9|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if (!($32)) {
      $__nc$1 = $30;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $33 = HEAP32[$__nb>>2]|0;
    $34 = ($33|0)==(0|0);
    if (!($34)) {
     $38 = $33;$62 = $33;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
    __THREW__ = 0;
    invoke_v(465);
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if (!($36)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $38 = $$pre;$62 = $$pre;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   $$125 = $26;$$16 = $25;
  } else {
   $$pre7 = HEAP32[$__nb>>2]|0;
   $38 = $$pre7;$62 = 0;$__nc$2 = $__nc$0;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $37 = (($38) + ($__nc$2)|0);
  $39 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38,$37,$__iob)|0);
  $40 = ($38|0)==($__nar|0);
  if ($40) {
   $50 = $__nar;$60 = 0;$__ob$0 = $__o;
   label = 20;
  } else {
   $41 = $__nc$2 << 3;
   $42 = (_malloc($41)|0);
   $43 = ($42|0)==(0|0);
   if ($43) {
    __THREW__ = 0;
    invoke_v(465);
    $44 = __THREW__; __THREW__ = 0;
    $45 = $44&1;
    if ($45) {
     $68 = 0;
     label = 19;
    } else {
     $$pre8 = HEAP32[$__nb>>2]|0;
     $50 = $$pre8;$60 = $42;$__ob$0 = $42;
     label = 20;
    }
   } else {
    $50 = $38;$60 = $42;$__ob$0 = $42;
    label = 20;
   }
  }
  do {
   if ((label|0) == 20) {
    __THREW__ = 0;
    invoke_vii(457,($0|0),($__iob|0));
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $68 = $60;
     label = 19;
    } else {
     __THREW__ = 0;
     invoke_viiiiiii(470,($50|0),($39|0),($37|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      $63 = ___cxa_find_matching_catch()|0;
      $64 = tempRet0;
      $65 = HEAP32[$0>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($65)|0);
      $$0 = $63;$$01 = $64;$66 = $60;
      break;
     }
     $53 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($53)|0);
     $54 = HEAP32[$__s>>2]|0;
     HEAP32[$2>>2] = $54;
     $55 = HEAP32[$__op>>2]|0;
     $56 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
     invoke_viiiiiii(471,($1|0),($$byval_copy|0),($__ob$0|0),($55|0),($56|0),($__iob|0),($__fl|0));
     $57 = __THREW__; __THREW__ = 0;
     $58 = $57&1;
     if ($58) {
      $68 = $60;
      label = 19;
     } else {
      $59 = HEAP32[$1>>2]|0;
      HEAP32[$__s>>2] = $59;
      HEAP32[$agg$result>>2] = $59;
      $61 = ($60|0)==(0|0);
      if (!($61)) {
       _free($60);
      }
      _free($62);
      STACKTOP = sp;return;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   $46 = ___cxa_find_matching_catch()|0;
   $47 = tempRet0;
   $$0 = $46;$$01 = $47;$66 = $68;
  }
  $67 = ($66|0)==(0|0);
  if (!($67)) {
   _free($66);
  }
  _free($62);
  $$125 = $$01;$$16 = $$0;
 }
 ___resumeException($$16|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 160|0;
 $vararg_buffer = sp;
 $__fmt = sp + 184|0;
 $__nar = sp + 164|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5832+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5832+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5832+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5832+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5832+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5832+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$vararg_buffer)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $6 = (invoke_iii(454,($0|0),(7024|0))|0);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 }
 $9 = HEAP32[$0>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$6>>2]|0;
 $11 = (($10) + 48|0);
 $12 = HEAP32[$11>>2]|0;
 (FUNCTION_TABLE_iiiii[$12 & 1023]($6,$__nar,$4,$__o)|0);
 $13 = (($__o) + ($3<<2)|0);
 $14 = ($5|0)==($4|0);
 if ($14) {
  $__op$0 = $13;
 } else {
  $18 = $__nar;
  $19 = $5;
  $20 = (($19) - ($18))|0;
  $21 = (($__o) + ($20<<2)|0);
  $__op$0 = $21;
 }
 $22 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $22;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$__op$0,$13,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i25 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa65$lcssa = 0, $$lcssa65$lcssa74 = 0, $$lcssa66 = 0, $$lcssa67 = 0, $$lcssa68 = 0, $$lcssa69 = 0, $$lcssa71 = 0, $$lcssa72 = 0;
 var $$lcssa73 = 0, $$pre = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i7 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i2038 = 0, $$pre$i2$i$i2039 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__cmd$0 = 0, $__opt$0 = 0, $isascii1$i = 0, $isascii1$i23 = 0, $isascii1$i4 = 0, $or$cond = 0, $sext = 0, $tmp$i$i22 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 20|0;
 $$byval_copy = sp + 16|0;
 $0 = sp + 12|0;
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $4 = (invoke_iii(454,($0|0),(7032|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $38 = ___cxa_find_matching_catch()|0;
  $39 = tempRet0;
  $40 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($40)|0);
  ___resumeException($38|0);
  // unreachable;
 }
 $7 = HEAP32[$0>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($7)|0);
 HEAP32[$__err>>2] = 0;
 $8 = (($4) + 8|0);
 $$0$ph = $__fmtb;$$pre = 0;
 L4: while(1) {
  $9 = ($$0$ph|0)!=($__fmte|0);
  $10 = $$pre;
  while(1) {
   $11 = ($10|0)==(0);
   $or$cond = $9 & $11;
   $12 = HEAP32[$__b>>2]|0;
   if (!($or$cond)) {
    $$lcssa = $12;
    label = 63;
    break L4;
   }
   $13 = ($12|0)==(0|0);
   if ($13) {
    $24 = 0;
   } else {
    $14 = (($12) + 12|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = (($12) + 16|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($15|0)==($17|0);
    if ($18) {
     $19 = HEAP32[$12>>2]|0;
     $20 = (($19) + 36|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = (FUNCTION_TABLE_ii[$21 & 1023]($12)|0);
     $23 = ($22|0)==(-1);
     if ($23) {
      HEAP32[$__b>>2] = 0;
      $24 = 0;
     } else {
      $24 = $12;
     }
    } else {
     $24 = $12;
    }
   }
   $25 = ($24|0)==(0|0);
   $26 = HEAP32[$__e>>2]|0;
   $27 = ($26|0)==(0|0);
   do {
    if ($27) {
     label = 14;
    } else {
     $28 = (($26) + 12|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = (($26) + 16|0);
     $31 = HEAP32[$30>>2]|0;
     $32 = ($29|0)==($31|0);
     if ($32) {
      $33 = HEAP32[$26>>2]|0;
      $34 = (($33) + 36|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = (FUNCTION_TABLE_ii[$35 & 1023]($26)|0);
      $37 = ($36|0)==(-1);
      if ($37) {
       HEAP32[$__e>>2] = 0;
       label = 14;
       break;
      }
     }
     if ($25) {
      $190 = $26;
     } else {
      $$lcssa64 = $24;
      label = 15;
      break L4;
     }
    }
   } while(0);
   if ((label|0) == 14) {
    label = 0;
    if ($25) {
     $$lcssa64 = $24;
     label = 15;
     break L4;
    } else {
     $190 = 0;
    }
   }
   $41 = HEAP8[$$0$ph>>0]|0;
   $42 = HEAP32[$4>>2]|0;
   $43 = (($42) + 36|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (FUNCTION_TABLE_iiii[$44 & 1023]($4,$41,0)|0);
   $46 = ($45<<24>>24)==(37);
   if ($46) {
    $$lcssa65 = $24;$$lcssa68 = $190;
    label = 18;
    break;
   }
   $68 = HEAP8[$$0$ph>>0]|0;
   $isascii1$i = ($68<<24>>24)>(-1);
   if ($isascii1$i) {
    $69 = $68 << 24 >> 24;
    $70 = HEAP32[$8>>2]|0;
    $71 = (($70) + ($69<<1)|0);
    $72 = HEAP16[$71>>1]|0;
    $73 = $72 & 8192;
    $74 = ($73<<16>>16)==(0);
    if (!($74)) {
     $$lcssa66 = $24;$$lcssa69 = $190;$$lcssa71 = $70;
     label = 29;
     break;
    }
   }
   $133 = (($24) + 12|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = (($24) + 16|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = ($134|0)==($136|0);
   if ($137) {
    $138 = HEAP32[$24>>2]|0;
    $139 = (($138) + 36|0);
    $140 = HEAP32[$139>>2]|0;
    $141 = (FUNCTION_TABLE_ii[$140 & 1023]($24)|0);
    $$0$i$i25 = $141;
   } else {
    $142 = HEAP8[$134>>0]|0;
    $143 = $142&255;
    $$0$i$i25 = $143;
   }
   $144 = $$0$i$i25&255;
   $145 = HEAP32[$4>>2]|0;
   $146 = (($145) + 12|0);
   $147 = HEAP32[$146>>2]|0;
   $148 = (FUNCTION_TABLE_iii[$147 & 1023]($4,$144)|0);
   $149 = HEAP8[$$0$ph>>0]|0;
   $150 = HEAP32[$4>>2]|0;
   $151 = (($150) + 12|0);
   $152 = HEAP32[$151>>2]|0;
   $153 = (FUNCTION_TABLE_iii[$152 & 1023]($4,$149)|0);
   $154 = ($148<<24>>24)==($153<<24>>24);
   if ($154) {
    $$lcssa67 = $24;$$lcssa72 = $133;$$lcssa73 = $135;
    label = 58;
    break;
   }
   HEAP32[$__err>>2] = 4;
   $10 = 4;
  }
  if ((label|0) == 18) {
   label = 0;
   $47 = (($$0$ph) + 1|0);
   $48 = ($47|0)==($__fmte|0);
   if ($48) {
    $$lcssa65$lcssa = $$lcssa65;
    label = 19;
    break;
   }
   $49 = HEAP8[$47>>0]|0;
   $50 = HEAP32[$4>>2]|0;
   $51 = (($50) + 36|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = (FUNCTION_TABLE_iiii[$52 & 1023]($4,$49,0)|0);
   if ((($53<<24>>24) == 48) | (($53<<24>>24) == 69)) {
    $54 = (($$0$ph) + 2|0);
    $55 = ($54|0)==($__fmte|0);
    if ($55) {
     $$lcssa65$lcssa74 = $$lcssa65;
     label = 22;
     break;
    }
    $56 = HEAP8[$54>>0]|0;
    $57 = HEAP32[$4>>2]|0;
    $58 = (($57) + 36|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (FUNCTION_TABLE_iiii[$59 & 1023]($4,$56,0)|0);
    $64 = $$lcssa65;$67 = $47;$__cmd$0 = $60;$__opt$0 = $53;
   } else {
    $64 = $$lcssa65;$67 = $$0$ph;$__cmd$0 = $53;$__opt$0 = 0;
   }
   $61 = HEAP32[$this>>2]|0;
   $62 = (($61) + 36|0);
   $63 = HEAP32[$62>>2]|0;
   HEAP32[$2>>2] = $64;
   HEAP32[$3>>2] = $$lcssa68;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$3+0>>2]|0;
   FUNCTION_TABLE_viiiiiiiii[$63 & 255]($1,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0);
   $65 = HEAP32[$1>>2]|0;
   HEAP32[$__b>>2] = $65;
   $66 = (($67) + 2|0);
   $$0$ph$be = $66;
  }
  else if ((label|0) == 29) {
   label = 0;
   $$0$pn = $$0$ph;
   while(1) {
    $$2 = (($$0$pn) + 1|0);
    $75 = ($$2|0)==($__fmte|0);
    if ($75) {
     $$2$lcssa = $__fmte;
     break;
    }
    $76 = HEAP8[$$2>>0]|0;
    $isascii1$i4 = ($76<<24>>24)>(-1);
    if (!($isascii1$i4)) {
     $$2$lcssa = $$2;
     break;
    }
    $77 = $76 << 24 >> 24;
    $78 = (($$lcssa71) + ($77<<1)|0);
    $79 = HEAP16[$78>>1]|0;
    $80 = $79 & 8192;
    $81 = ($80<<16>>16)==(0);
    if ($81) {
     $$2$lcssa = $$2;
     break;
    } else {
     $$0$pn = $$2;
    }
   }
   $$pre$i$i$i16 = $$lcssa66;$$pre$i2$i$i20 = $$lcssa69;$95 = $$lcssa69;
   L50: while(1) {
    $82 = ($$pre$i$i$i16|0)==(0|0);
    if ($82) {
     $93 = 0;
    } else {
     $83 = (($$pre$i$i$i16) + 12|0);
     $84 = HEAP32[$83>>2]|0;
     $85 = (($$pre$i$i$i16) + 16|0);
     $86 = HEAP32[$85>>2]|0;
     $87 = ($84|0)==($86|0);
     if ($87) {
      $88 = HEAP32[$$pre$i$i$i16>>2]|0;
      $89 = (($88) + 36|0);
      $90 = HEAP32[$89>>2]|0;
      $91 = (FUNCTION_TABLE_ii[$90 & 1023]($$pre$i$i$i16)|0);
      $92 = ($91|0)==(-1);
      if ($92) {
       HEAP32[$__b>>2] = 0;
       $93 = 0;
      } else {
       $93 = $$pre$i$i$i16;
      }
     } else {
      $93 = $$pre$i$i$i16;
     }
    }
    $94 = ($93|0)==(0|0);
    $96 = ($95|0)==(0|0);
    do {
     if ($96) {
      $$pre$i2$i$i2039 = $$pre$i2$i$i20;
      label = 43;
     } else {
      $97 = (($95) + 12|0);
      $98 = HEAP32[$97>>2]|0;
      $99 = (($95) + 16|0);
      $100 = HEAP32[$99>>2]|0;
      $101 = ($98|0)==($100|0);
      if (!($101)) {
       if ($94) {
        $$pre$i2$i$i2038 = $$pre$i2$i$i20;$191 = $95;
        break;
       } else {
        break L50;
       }
      }
      $102 = HEAP32[$95>>2]|0;
      $103 = (($102) + 36|0);
      $104 = HEAP32[$103>>2]|0;
      $105 = (FUNCTION_TABLE_ii[$104 & 1023]($95)|0);
      $106 = ($105|0)==(-1);
      if ($106) {
       HEAP32[$__e>>2] = 0;
       $$pre$i2$i$i2039 = 0;
       label = 43;
       break;
      } else {
       $107 = ($$pre$i2$i$i20|0)==(0|0);
       $tmp$i$i22 = $94 ^ $107;
       if ($tmp$i$i22) {
        $$pre$i2$i$i2038 = $$pre$i2$i$i20;$191 = $$pre$i2$i$i20;
        break;
       } else {
        break L50;
       }
      }
     }
    } while(0);
    if ((label|0) == 43) {
     label = 0;
     if ($94) {
      break;
     } else {
      $$pre$i2$i$i2038 = $$pre$i2$i$i2039;$191 = 0;
     }
    }
    $108 = (($93) + 12|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = (($93) + 16|0);
    $111 = HEAP32[$110>>2]|0;
    $112 = ($109|0)==($111|0);
    if ($112) {
     $113 = HEAP32[$93>>2]|0;
     $114 = (($113) + 36|0);
     $115 = HEAP32[$114>>2]|0;
     $116 = (FUNCTION_TABLE_ii[$115 & 1023]($93)|0);
     $$0$i$i = $116;
    } else {
     $117 = HEAP8[$109>>0]|0;
     $118 = $117&255;
     $$0$i$i = $118;
    }
    $119 = $$0$i$i&255;
    $isascii1$i23 = ($119<<24>>24)>(-1);
    if (!($isascii1$i23)) {
     break;
    }
    $sext = $$0$i$i << 24;
    $120 = $sext >> 24;
    $121 = HEAP32[$8>>2]|0;
    $122 = (($121) + ($120<<1)|0);
    $123 = HEAP16[$122>>1]|0;
    $124 = $123 & 8192;
    $125 = ($124<<16>>16)==(0);
    if ($125) {
     break;
    }
    $126 = HEAP32[$108>>2]|0;
    $127 = HEAP32[$110>>2]|0;
    $128 = ($126|0)==($127|0);
    if ($128) {
     $129 = HEAP32[$93>>2]|0;
     $130 = (($129) + 40|0);
     $131 = HEAP32[$130>>2]|0;
     (FUNCTION_TABLE_ii[$131 & 1023]($93)|0);
    } else {
     $132 = (($126) + 1|0);
     HEAP32[$108>>2] = $132;
    }
    $$pre$i$i$i16 = $93;$$pre$i2$i$i20 = $$pre$i2$i$i2038;$95 = $191;
   }
   $$0$ph$be = $$2$lcssa;
  }
  else if ((label|0) == 58) {
   label = 0;
   $155 = HEAP32[$$lcssa72>>2]|0;
   $156 = HEAP32[$$lcssa73>>2]|0;
   $157 = ($155|0)==($156|0);
   if ($157) {
    $158 = HEAP32[$$lcssa67>>2]|0;
    $159 = (($158) + 40|0);
    $160 = HEAP32[$159>>2]|0;
    (FUNCTION_TABLE_ii[$160 & 1023]($$lcssa67)|0);
   } else {
    $161 = (($155) + 1|0);
    HEAP32[$$lcssa72>>2] = $161;
   }
   $162 = (($$0$ph) + 1|0);
   $$0$ph$be = $162;
  }
  $$pre$pre = HEAP32[$__err>>2]|0;
  $$0$ph = $$0$ph$be;$$pre = $$pre$pre;
 }
 if ((label|0) == 15) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i7 = $$lcssa64;
 }
 else if ((label|0) == 19) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i7 = $$lcssa65$lcssa;
 }
 else if ((label|0) == 22) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i7 = $$lcssa65$lcssa74;
 }
 else if ((label|0) == 63) {
  $$pre$i$i$i7 = $$lcssa;
 }
 $163 = ($$pre$i$i$i7|0)==(0|0);
 if ($163) {
  $174 = 0;
 } else {
  $164 = (($$pre$i$i$i7) + 12|0);
  $165 = HEAP32[$164>>2]|0;
  $166 = (($$pre$i$i$i7) + 16|0);
  $167 = HEAP32[$166>>2]|0;
  $168 = ($165|0)==($167|0);
  if ($168) {
   $169 = HEAP32[$$pre$i$i$i7>>2]|0;
   $170 = (($169) + 36|0);
   $171 = HEAP32[$170>>2]|0;
   $172 = (FUNCTION_TABLE_ii[$171 & 1023]($$pre$i$i$i7)|0);
   $173 = ($172|0)==(-1);
   if ($173) {
    HEAP32[$__b>>2] = 0;
    $174 = 0;
   } else {
    $174 = $$pre$i$i$i7;
   }
  } else {
   $174 = $$pre$i$i$i7;
  }
 }
 $175 = ($174|0)==(0|0);
 $176 = HEAP32[$__e>>2]|0;
 $177 = ($176|0)==(0|0);
 do {
  if ($177) {
   label = 73;
  } else {
   $178 = (($176) + 12|0);
   $179 = HEAP32[$178>>2]|0;
   $180 = (($176) + 16|0);
   $181 = HEAP32[$180>>2]|0;
   $182 = ($179|0)==($181|0);
   if ($182) {
    $183 = HEAP32[$176>>2]|0;
    $184 = (($183) + 36|0);
    $185 = HEAP32[$184>>2]|0;
    $186 = (FUNCTION_TABLE_ii[$185 & 1023]($176)|0);
    $187 = ($186|0)==(-1);
    if ($187) {
     HEAP32[$__e>>2] = 0;
     label = 73;
     break;
    }
   }
   if (!($175)) {
    label = 74;
   }
  }
 } while(0);
 if ((label|0) == 73) {
  if ($175) {
   label = 74;
  }
 }
 if ((label|0) == 74) {
  $188 = HEAP32[$__err>>2]|0;
  $189 = $188 | 2;
  HEAP32[$__err>>2] = $189;
 }
 HEAP32[$agg$result>>2] = $174;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,5936,((5936 + 8|0)));
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (($this) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 1023]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if ($11) {
  $16 = (($6) + 1|0);
  $17 = (($6) + 1|0);
  $18 = $9&255;
  $19 = $18 >>> 1;
  $21 = $17;$22 = $19;$23 = $16;
 } else {
  $12 = (($6) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($6) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  $21 = $13;$22 = $15;$23 = $13;
 }
 $20 = (($21) + ($22)|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$23,$20);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7032|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 24|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = (($4) + 168|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7032|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 16|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = (($5) + 288|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7032|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 20|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy30 = sp + 276|0;
 $$byval_copy29 = sp + 272|0;
 $$byval_copy28 = sp + 268|0;
 $$byval_copy27 = sp + 264|0;
 $$byval_copy26 = sp + 260|0;
 $$byval_copy25 = sp + 256|0;
 $$byval_copy24 = sp + 252|0;
 $$byval_copy23 = sp + 248|0;
 $$byval_copy22 = sp + 244|0;
 $$byval_copy21 = sp + 240|0;
 $$byval_copy20 = sp + 236|0;
 $$byval_copy19 = sp + 232|0;
 $$byval_copy18 = sp + 228|0;
 $$byval_copy17 = sp + 224|0;
 $$byval_copy16 = sp + 220|0;
 $$byval_copy15 = sp + 216|0;
 $$byval_copy14 = sp + 212|0;
 $$byval_copy13 = sp + 208|0;
 $$byval_copy12 = sp + 204|0;
 $$byval_copy11 = sp + 200|0;
 $$byval_copy10 = sp + 196|0;
 $$byval_copy9 = sp + 192|0;
 $$byval_copy8 = sp + 188|0;
 $$byval_copy7 = sp + 184|0;
 $$byval_copy6 = sp + 180|0;
 $$byval_copy5 = sp + 176|0;
 $$byval_copy4 = sp + 172|0;
 $$byval_copy3 = sp + 168|0;
 $$byval_copy2 = sp + 164|0;
 $$byval_copy1 = sp + 160|0;
 $$byval_copy = sp + 156|0;
 $1 = sp + 152|0;
 $2 = sp + 148|0;
 $3 = sp + 144|0;
 $4 = sp + 140|0;
 $5 = sp + 136|0;
 $6 = sp + 132|0;
 $7 = sp + 128|0;
 $8 = sp + 124|0;
 $9 = sp + 120|0;
 $10 = sp + 116|0;
 $11 = sp + 112|0;
 $12 = sp + 108|0;
 $13 = sp + 104|0;
 $14 = sp + 100|0;
 $15 = sp + 96|0;
 $16 = sp + 92|0;
 $17 = sp + 88|0;
 $18 = sp + 84|0;
 $19 = sp + 80|0;
 $20 = sp + 76|0;
 $21 = sp + 72|0;
 $22 = sp + 68|0;
 $23 = sp + 64|0;
 $24 = sp + 60|0;
 $25 = sp + 56|0;
 $26 = sp + 52|0;
 $27 = sp + 48|0;
 $28 = sp + 44|0;
 $29 = sp + 40|0;
 $30 = sp + 36|0;
 $31 = sp + 32|0;
 $32 = sp + 28|0;
 $33 = sp + 24|0;
 $34 = sp + 20|0;
 $35 = sp + 16|0;
 $36 = sp + 12|0;
 $37 = sp + 8|0;
 $38 = sp + 4|0;
 $39 = sp;
 HEAP32[$__err>>2] = 0;
 __ZNKSt3__18ios_base6getlocEv($1,$__iob);
 __THREW__ = 0;
 $40 = (invoke_iii(454,($1|0),(7032|0))|0);
 $41 = __THREW__; __THREW__ = 0;
 $42 = $41&1;
 if ($42) {
  $45 = ___cxa_find_matching_catch()|0;
  $46 = tempRet0;
  $47 = HEAP32[$1>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
  ___resumeException($45|0);
  // unreachable;
 }
 $43 = HEAP32[$1>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($43)|0);
 $44 = $__fmt << 24 >> 24;
 do {
  switch ($44|0) {
  case 68:  {
   $77 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $77;
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $78;
   ;HEAP32[$$byval_copy5+0>>2]=HEAP32[$9+0>>2]|0;
   ;HEAP32[$$byval_copy6+0>>2]=HEAP32[$10+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($8,$this,$$byval_copy5,$$byval_copy6,$__iob,$__err,$__tm,5944,((5944 + 8|0)));
   $79 = HEAP32[$8>>2]|0;
   HEAP32[$__b>>2] = $79;
   label = 34;
   break;
  }
  case 83:  {
   $102 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $102;
   ;HEAP32[$$byval_copy20+0>>2]=HEAP32[$27+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__tm,$__b,$$byval_copy20,$__err,$40);
   label = 34;
   break;
  }
  case 106:  {
   $87 = (($__tm) + 28|0);
   $88 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $88;
   ;HEAP32[$$byval_copy11+0>>2]=HEAP32[$16+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$87,$__b,$$byval_copy11,$__err,$40);
   label = 34;
   break;
  }
  case 99:  {
   $52 = (($this) + 8|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (($53) + 12|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = (FUNCTION_TABLE_ii[$55 & 1023]($52)|0);
   $57 = HEAP32[$__b>>2]|0;
   HEAP32[$5>>2] = $57;
   $58 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $58;
   $59 = HEAP8[$56>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $66 = (($56) + 1|0);
    $67 = (($56) + 1|0);
    $68 = $59&255;
    $69 = $68 >>> 1;
    $71 = $67;$72 = $69;$73 = $66;
   } else {
    $62 = (($56) + 8|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = (($56) + 4|0);
    $65 = HEAP32[$64>>2]|0;
    $71 = $63;$72 = $65;$73 = $63;
   }
   $70 = (($71) + ($72)|0);
   ;HEAP32[$$byval_copy2+0>>2]=HEAP32[$5+0>>2]|0;
   ;HEAP32[$$byval_copy3+0>>2]=HEAP32[$6+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($4,$this,$$byval_copy2,$$byval_copy3,$__iob,$__err,$__tm,$73,$70);
   $74 = HEAP32[$4>>2]|0;
   HEAP32[$__b>>2] = $74;
   label = 34;
   break;
  }
  case 72:  {
   $83 = (($__tm) + 8|0);
   $84 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $84;
   ;HEAP32[$$byval_copy9+0>>2]=HEAP32[$14+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$83,$__b,$$byval_copy9,$__err,$40);
   label = 34;
   break;
  }
  case 104: case 66: case 98:  {
   $50 = (($__tm) + 16|0);
   $51 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $51;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$3+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$50,$__b,$$byval_copy1,$__err,$40);
   label = 34;
   break;
  }
  case 82:  {
   $99 = HEAP32[$__b>>2]|0;
   HEAP32[$25>>2] = $99;
   $100 = HEAP32[$__e>>2]|0;
   HEAP32[$26>>2] = $100;
   ;HEAP32[$$byval_copy18+0>>2]=HEAP32[$25+0>>2]|0;
   ;HEAP32[$$byval_copy19+0>>2]=HEAP32[$26+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($24,$this,$$byval_copy18,$$byval_copy19,$__iob,$__err,$__tm,5976,((5976 + 5|0)));
   $101 = HEAP32[$24>>2]|0;
   HEAP32[$__b>>2] = $101;
   label = 34;
   break;
  }
  case 70:  {
   $80 = HEAP32[$__b>>2]|0;
   HEAP32[$12>>2] = $80;
   $81 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $81;
   ;HEAP32[$$byval_copy7+0>>2]=HEAP32[$12+0>>2]|0;
   ;HEAP32[$$byval_copy8+0>>2]=HEAP32[$13+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($11,$this,$$byval_copy7,$$byval_copy8,$__iob,$__err,$__tm,5952,((5952 + 8|0)));
   $82 = HEAP32[$11>>2]|0;
   HEAP32[$__b>>2] = $82;
   label = 34;
   break;
  }
  case 65: case 97:  {
   $48 = (($__tm) + 24|0);
   $49 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $49;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$48,$__b,$$byval_copy,$__err,$40);
   label = 34;
   break;
  }
  case 88:  {
   $113 = (($this) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (($114) + 24|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 1023]($113)|0);
   $118 = HEAP32[$__b>>2]|0;
   HEAP32[$35>>2] = $118;
   $119 = HEAP32[$__e>>2]|0;
   HEAP32[$36>>2] = $119;
   $120 = HEAP8[$117>>0]|0;
   $121 = $120 & 1;
   $122 = ($121<<24>>24)==(0);
   if ($122) {
    $127 = (($117) + 1|0);
    $128 = (($117) + 1|0);
    $129 = $120&255;
    $130 = $129 >>> 1;
    $132 = $128;$133 = $130;$134 = $127;
   } else {
    $123 = (($117) + 8|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (($117) + 4|0);
    $126 = HEAP32[$125>>2]|0;
    $132 = $124;$133 = $126;$134 = $124;
   }
   $131 = (($132) + ($133)|0);
   ;HEAP32[$$byval_copy26+0>>2]=HEAP32[$35+0>>2]|0;
   ;HEAP32[$$byval_copy27+0>>2]=HEAP32[$36+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($34,$this,$$byval_copy26,$$byval_copy27,$__iob,$__err,$__tm,$134,$131);
   $135 = HEAP32[$34>>2]|0;
   HEAP32[$__b>>2] = $135;
   label = 34;
   break;
  }
  case 109:  {
   $89 = (($__tm) + 16|0);
   $90 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $90;
   ;HEAP32[$$byval_copy12+0>>2]=HEAP32[$17+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$89,$__b,$$byval_copy12,$__err,$40);
   label = 34;
   break;
  }
  case 116: case 110:  {
   $93 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $93;
   ;HEAP32[$$byval_copy14+0>>2]=HEAP32[$19+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy14,$__err,$40);
   label = 34;
   break;
  }
  case 101: case 100:  {
   $75 = (($__tm) + 12|0);
   $76 = HEAP32[$__e>>2]|0;
   HEAP32[$7>>2] = $76;
   ;HEAP32[$$byval_copy4+0>>2]=HEAP32[$7+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$75,$__b,$$byval_copy4,$__err,$40);
   label = 34;
   break;
  }
  case 84:  {
   $103 = HEAP32[$__b>>2]|0;
   HEAP32[$29>>2] = $103;
   $104 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $104;
   ;HEAP32[$$byval_copy21+0>>2]=HEAP32[$29+0>>2]|0;
   ;HEAP32[$$byval_copy22+0>>2]=HEAP32[$30+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($28,$this,$$byval_copy21,$$byval_copy22,$__iob,$__err,$__tm,5984,((5984 + 8|0)));
   $105 = HEAP32[$28>>2]|0;
   HEAP32[$__b>>2] = $105;
   label = 34;
   break;
  }
  case 121:  {
   $136 = (($__tm) + 20|0);
   $137 = HEAP32[$__e>>2]|0;
   HEAP32[$37>>2] = $137;
   ;HEAP32[$$byval_copy28+0>>2]=HEAP32[$37+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$136,$__b,$$byval_copy28,$__err,$40);
   label = 34;
   break;
  }
  case 89:  {
   $138 = (($__tm) + 20|0);
   $139 = HEAP32[$__e>>2]|0;
   HEAP32[$38>>2] = $139;
   ;HEAP32[$$byval_copy29+0>>2]=HEAP32[$38+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$138,$__b,$$byval_copy29,$__err,$40);
   label = 34;
   break;
  }
  case 37:  {
   $140 = HEAP32[$__e>>2]|0;
   HEAP32[$39>>2] = $140;
   ;HEAP32[$$byval_copy30+0>>2]=HEAP32[$39+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$40);
   label = 34;
   break;
  }
  case 114:  {
   $96 = HEAP32[$__b>>2]|0;
   HEAP32[$22>>2] = $96;
   $97 = HEAP32[$__e>>2]|0;
   HEAP32[$23>>2] = $97;
   ;HEAP32[$$byval_copy16+0>>2]=HEAP32[$22+0>>2]|0;
   ;HEAP32[$$byval_copy17+0>>2]=HEAP32[$23+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($21,$this,$$byval_copy16,$$byval_copy17,$__iob,$__err,$__tm,5960,((5960 + 11|0)));
   $98 = HEAP32[$21>>2]|0;
   HEAP32[$__b>>2] = $98;
   label = 34;
   break;
  }
  case 120:  {
   $108 = HEAP32[$this>>2]|0;
   $109 = (($108) + 20|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = HEAP32[$__b>>2]|0;
   HEAP32[$32>>2] = $111;
   $112 = HEAP32[$__e>>2]|0;
   HEAP32[$33>>2] = $112;
   ;HEAP32[$$byval_copy24+0>>2]=HEAP32[$32+0>>2]|0;
   ;HEAP32[$$byval_copy25+0>>2]=HEAP32[$33+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$110 & 511]($agg$result,$this,$$byval_copy24,$$byval_copy25,$__iob,$__err,$__tm);
   break;
  }
  case 73:  {
   $85 = (($__tm) + 8|0);
   $86 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $86;
   ;HEAP32[$$byval_copy10+0>>2]=HEAP32[$15+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$85,$__b,$$byval_copy10,$__err,$40);
   label = 34;
   break;
  }
  case 77:  {
   $91 = (($__tm) + 4|0);
   $92 = HEAP32[$__e>>2]|0;
   HEAP32[$18>>2] = $92;
   ;HEAP32[$$byval_copy13+0>>2]=HEAP32[$18+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$91,$__b,$$byval_copy13,$__err,$40);
   label = 34;
   break;
  }
  case 119:  {
   $106 = (($__tm) + 24|0);
   $107 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $107;
   ;HEAP32[$$byval_copy23+0>>2]=HEAP32[$31+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$106,$__b,$$byval_copy23,$__err,$40);
   label = 34;
   break;
  }
  case 112:  {
   $94 = (($__tm) + 8|0);
   $95 = HEAP32[$__e>>2]|0;
   HEAP32[$20>>2] = $95;
   ;HEAP32[$$byval_copy15+0>>2]=HEAP32[$20+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$94,$__b,$$byval_copy15,$__err,$40);
   label = 34;
   break;
  }
  default: {
   $141 = HEAP32[$__err>>2]|0;
   $142 = $141 | 4;
   HEAP32[$__err>>2] = $142;
   label = 34;
  }
  }
 } while(0);
 if ((label|0) == 34) {
  $143 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $143;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $isascii1$i = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__ct) + 8|0);
 L1: while(1) {
  $1 = HEAP32[$__b>>2]|0;
  $2 = ($1|0)==(0|0);
  do {
   if ($2) {
    $13 = 0;
   } else {
    $3 = (($1) + 12|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = (($1) + 16|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($4|0)==($6|0);
    if ($7) {
     $8 = HEAP32[$1>>2]|0;
     $9 = (($8) + 36|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 1023]($1)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      HEAP32[$__b>>2] = 0;
      $13 = 0;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $13 = $$pre$i$i$i;
      break;
     }
    } else {
     $13 = $1;
    }
   }
  } while(0);
  $14 = ($13|0)==(0|0);
  $15 = HEAP32[$__e>>2]|0;
  $16 = ($15|0)==(0|0);
  do {
   if ($16) {
    label = 12;
   } else {
    $17 = (($15) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = (($15) + 16|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($18|0)==($20|0);
    if (!($21)) {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
    $22 = HEAP32[$15>>2]|0;
    $23 = (($22) + 36|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (FUNCTION_TABLE_ii[$24 & 1023]($15)|0);
    $26 = ($25|0)==(-1);
    if ($26) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($14) {
    $$pre$i2$i$i6 = 0;
    break;
   } else {
    $83 = 0;
   }
  }
  $27 = HEAP32[$__b>>2]|0;
  $28 = (($27) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = (($27) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ($29|0)==($31|0);
  if ($32) {
   $33 = HEAP32[$27>>2]|0;
   $34 = (($33) + 36|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = (FUNCTION_TABLE_ii[$35 & 1023]($27)|0);
   $$0$i$i = $36;
  } else {
   $37 = HEAP8[$29>>0]|0;
   $38 = $37&255;
   $$0$i$i = $38;
  }
  $39 = $$0$i$i&255;
  $isascii1$i = ($39<<24>>24)>(-1);
  if (!($isascii1$i)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $sext = $$0$i$i << 24;
  $40 = $sext >> 24;
  $41 = HEAP32[$0>>2]|0;
  $42 = (($41) + ($40<<1)|0);
  $43 = HEAP16[$42>>1]|0;
  $44 = $43 & 8192;
  $45 = ($44<<16>>16)==(0);
  if ($45) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b>>2]|0;
  $47 = (($46) + 12|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = (($46) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($48|0)==($50|0);
  if ($51) {
   $52 = HEAP32[$46>>2]|0;
   $53 = (($52) + 40|0);
   $54 = HEAP32[$53>>2]|0;
   (FUNCTION_TABLE_ii[$54 & 1023]($46)|0);
  } else {
   $55 = (($48) + 1|0);
   HEAP32[$47>>2] = $55;
  }
 }
 $56 = HEAP32[$__b>>2]|0;
 $57 = ($56|0)==(0|0);
 do {
  if ($57) {
   $68 = 0;
  } else {
   $58 = (($56) + 12|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = (($56) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ($59|0)==($61|0);
   if ($62) {
    $63 = HEAP32[$56>>2]|0;
    $64 = (($63) + 36|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (FUNCTION_TABLE_ii[$65 & 1023]($56)|0);
    $67 = ($66|0)==(-1);
    if ($67) {
     HEAP32[$__b>>2] = 0;
     $68 = 0;
     break;
    } else {
     $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
     $68 = $$pre$i$i$i2;
     break;
    }
   } else {
    $68 = $56;
   }
  }
 } while(0);
 $69 = ($68|0)==(0|0);
 $70 = ($$pre$i2$i$i6|0)==(0|0);
 do {
  if ($70) {
   label = 33;
  } else {
   $71 = (($$pre$i2$i$i6) + 12|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (($$pre$i2$i$i6) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ($72|0)==($74|0);
   if ($75) {
    $76 = HEAP32[$$pre$i2$i$i6>>2]|0;
    $77 = (($76) + 36|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = (FUNCTION_TABLE_ii[$78 & 1023]($$pre$i2$i$i6)|0);
    $80 = ($79|0)==(-1);
    if ($80) {
     HEAP32[$__e>>2] = 0;
     label = 33;
     break;
    }
   }
   if (!($69)) {
    label = 34;
   }
  }
 } while(0);
 if ((label|0) == 33) {
  if ($69) {
   label = 34;
  }
 }
 if ((label|0) == 34) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = (($5) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = (($5) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = (($5) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = (($5) + 24|0);
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i611 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = (($14) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (($14) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = (($21) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 1023]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $$pre$i2$i$i611 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $$pre$i2$i$i611 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($28) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = (($34) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $41 = HEAP32[$__ct>>2]|0;
   $42 = (($41) + 36|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 1023]($__ct,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if (!($45)) {
    $46 = HEAP32[$__err>>2]|0;
    $47 = $46 | 4;
    HEAP32[$__err>>2] = $47;
    break;
   }
   $48 = HEAP32[$__b>>2]|0;
   $49 = (($48) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = (($48) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $55 = HEAP32[$48>>2]|0;
    $56 = (($55) + 40|0);
    $57 = HEAP32[$56>>2]|0;
    (FUNCTION_TABLE_ii[$57 & 1023]($48)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $58 = ($$pre|0)==(0|0);
    if ($58) {
     $70 = 0;
    } else {
     $60 = $$pre;
     label = 21;
    }
   } else {
    $54 = (($50) + 1|0);
    HEAP32[$49>>2] = $54;
    $60 = $48;
    label = 21;
   }
   do {
    if ((label|0) == 21) {
     $59 = (($60) + 12|0);
     $61 = HEAP32[$59>>2]|0;
     $62 = (($60) + 16|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = ($61|0)==($63|0);
     if ($64) {
      $65 = HEAP32[$60>>2]|0;
      $66 = (($65) + 36|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = (FUNCTION_TABLE_ii[$67 & 1023]($60)|0);
      $69 = ($68|0)==(-1);
      if ($69) {
       HEAP32[$__b>>2] = 0;
       $70 = 0;
       break;
      } else {
       $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
       $70 = $$pre$i$i$i2;
       break;
      }
     } else {
      $70 = $60;
     }
    }
   } while(0);
   $71 = ($70|0)==(0|0);
   $72 = ($$pre$i2$i$i611|0)==(0|0);
   do {
    if ($72) {
     label = 30;
    } else {
     $73 = (($$pre$i2$i$i611) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = (($$pre$i2$i$i611) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$$pre$i2$i$i611>>2]|0;
      $79 = (($78) + 36|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 1023]($$pre$i2$i$i611)|0);
      $82 = ($81|0)==(-1);
      if ($82) {
       HEAP32[$__e>>2] = 0;
       label = 30;
       break;
      }
     }
     if ($71) {
      break L16;
     }
    }
   } while(0);
   if ((label|0) == 30) {
    if (!($71)) {
     break;
    }
   }
   $83 = HEAP32[$__err>>2]|0;
   $84 = $83 | 2;
   HEAP32[$__err>>2] = $84;
  }
 } while(0);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$0$i$i1$i$i25 = 0, $$0$i$i16 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa68 = 0, $$lcssa69 = 0, $$lcssa69$lcssa = 0, $$lcssa69$lcssa77 = 0;
 var $$lcssa70 = 0, $$lcssa71 = 0, $$lcssa72 = 0, $$lcssa73 = 0, $$lcssa75 = 0, $$lcssa76 = 0, $$pre = 0, $$pre$i$i$i21 = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i12 = 0, $$pre$i3$i$i1243 = 0, $$pre$i3$i$i1244 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__cmd$0 = 0, $__opt$0 = 0, $or$cond = 0, $phitmp$i4$i$i13 = 0, $tmp$i$i15 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 20|0;
 $$byval_copy = sp + 16|0;
 $0 = sp + 12|0;
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $4 = (invoke_iii(454,($0|0),(7024|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $37 = ___cxa_find_matching_catch()|0;
  $38 = tempRet0;
  $39 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($39)|0);
  ___resumeException($37|0);
  // unreachable;
 }
 $7 = HEAP32[$0>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($7)|0);
 HEAP32[$__err>>2] = 0;
 $$0$ph = $__fmtb;$$pre = 0;
 L4: while(1) {
  $8 = ($$0$ph|0)!=($__fmte|0);
  $9 = $$pre;
  while(1) {
   $10 = ($9|0)==(0);
   $or$cond = $8 & $10;
   $11 = HEAP32[$__b>>2]|0;
   if (!($or$cond)) {
    $$lcssa = $11;
    label = 67;
    break L4;
   }
   $12 = ($11|0)==(0|0);
   if ($12) {
    $127 = 0;$183 = 1;
   } else {
    $13 = (($11) + 12|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = (($11) + 16|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($14|0)==($16|0);
    if ($17) {
     $18 = HEAP32[$11>>2]|0;
     $19 = (($18) + 36|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = (FUNCTION_TABLE_ii[$20 & 1023]($11)|0);
     $$0$i$i$i$i = $21;
    } else {
     $22 = HEAP32[$14>>2]|0;
     $$0$i$i$i$i = $22;
    }
    $23 = ($$0$i$i$i$i|0)==(-1);
    if ($23) {
     HEAP32[$__b>>2] = 0;
     $127 = 0;$183 = 1;
    } else {
     $127 = $11;$183 = 0;
    }
   }
   $24 = HEAP32[$__e>>2]|0;
   $25 = ($24|0)==(0|0);
   do {
    if ($25) {
     label = 17;
    } else {
     $26 = (($24) + 12|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (($24) + 16|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = ($27|0)==($29|0);
     if ($30) {
      $31 = HEAP32[$24>>2]|0;
      $32 = (($31) + 36|0);
      $33 = HEAP32[$32>>2]|0;
      $34 = (FUNCTION_TABLE_ii[$33 & 1023]($24)|0);
      $$0$i$i1$i$i = $34;
     } else {
      $35 = HEAP32[$27>>2]|0;
      $$0$i$i1$i$i = $35;
     }
     $36 = ($$0$i$i1$i$i|0)==(-1);
     if ($36) {
      HEAP32[$__e>>2] = 0;
      label = 17;
      break;
     } else {
      if ($183) {
       $184 = $24;
       break;
      } else {
       $$lcssa68 = $127;
       label = 19;
       break L4;
      }
     }
    }
   } while(0);
   if ((label|0) == 17) {
    label = 0;
    if ($183) {
     $$lcssa68 = $127;
     label = 19;
     break L4;
    } else {
     $184 = 0;
    }
   }
   $40 = HEAP32[$$0$ph>>2]|0;
   $41 = HEAP32[$4>>2]|0;
   $42 = (($41) + 52|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 1023]($4,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if ($45) {
    $$lcssa69 = $127;$$lcssa72 = $184;
    label = 22;
    break;
   }
   $67 = HEAP32[$$0$ph>>2]|0;
   $68 = HEAP32[$4>>2]|0;
   $69 = (($68) + 12|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = (FUNCTION_TABLE_iiii[$70 & 1023]($4,8192,$67)|0);
   if ($71) {
    $$lcssa70 = $127;$$lcssa73 = $184;
    label = 32;
    break;
   }
   $126 = (($127) + 12|0);
   $128 = HEAP32[$126>>2]|0;
   $129 = (($127) + 16|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = ($128|0)==($130|0);
   if ($131) {
    $132 = HEAP32[$127>>2]|0;
    $133 = (($132) + 36|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = (FUNCTION_TABLE_ii[$134 & 1023]($127)|0);
    $$0$i$i16 = $135;
   } else {
    $136 = HEAP32[$128>>2]|0;
    $$0$i$i16 = $136;
   }
   $137 = HEAP32[$4>>2]|0;
   $138 = (($137) + 28|0);
   $139 = HEAP32[$138>>2]|0;
   $140 = (FUNCTION_TABLE_iii[$139 & 1023]($4,$$0$i$i16)|0);
   $141 = HEAP32[$$0$ph>>2]|0;
   $142 = HEAP32[$4>>2]|0;
   $143 = (($142) + 28|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = (FUNCTION_TABLE_iii[$144 & 1023]($4,$141)|0);
   $146 = ($140|0)==($145|0);
   if ($146) {
    $$lcssa71 = $127;$$lcssa75 = $126;$$lcssa76 = $129;
    label = 62;
    break;
   }
   HEAP32[$__err>>2] = 4;
   $9 = 4;
  }
  if ((label|0) == 22) {
   label = 0;
   $46 = (($$0$ph) + 4|0);
   $47 = ($46|0)==($__fmte|0);
   if ($47) {
    $$lcssa69$lcssa = $$lcssa69;
    label = 23;
    break;
   }
   $48 = HEAP32[$46>>2]|0;
   $49 = HEAP32[$4>>2]|0;
   $50 = (($49) + 52|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = (FUNCTION_TABLE_iiii[$51 & 1023]($4,$48,0)|0);
   if ((($52<<24>>24) == 48) | (($52<<24>>24) == 69)) {
    $53 = (($$0$ph) + 8|0);
    $54 = ($53|0)==($__fmte|0);
    if ($54) {
     $$lcssa69$lcssa77 = $$lcssa69;
     label = 26;
     break;
    }
    $55 = HEAP32[$53>>2]|0;
    $56 = HEAP32[$4>>2]|0;
    $57 = (($56) + 52|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = (FUNCTION_TABLE_iiii[$58 & 1023]($4,$55,0)|0);
    $63 = $$lcssa69;$66 = $46;$__cmd$0 = $59;$__opt$0 = $52;
   } else {
    $63 = $$lcssa69;$66 = $$0$ph;$__cmd$0 = $52;$__opt$0 = 0;
   }
   $60 = HEAP32[$this>>2]|0;
   $61 = (($60) + 36|0);
   $62 = HEAP32[$61>>2]|0;
   HEAP32[$2>>2] = $63;
   HEAP32[$3>>2] = $$lcssa72;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$3+0>>2]|0;
   FUNCTION_TABLE_viiiiiiiii[$62 & 255]($1,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0);
   $64 = HEAP32[$1>>2]|0;
   HEAP32[$__b>>2] = $64;
   $65 = (($66) + 8|0);
   $$0$ph$be = $65;
  }
  else if ((label|0) == 32) {
   label = 0;
   $$0$pn = $$0$ph;
   while(1) {
    $$2 = (($$0$pn) + 4|0);
    $72 = ($$2|0)==($__fmte|0);
    if ($72) {
     $$2$lcssa = $__fmte;
     break;
    }
    $73 = HEAP32[$$2>>2]|0;
    $74 = HEAP32[$4>>2]|0;
    $75 = (($74) + 12|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = (FUNCTION_TABLE_iiii[$76 & 1023]($4,8192,$73)|0);
    if ($77) {
     $$0$pn = $$2;
    } else {
     $$2$lcssa = $$2;
     break;
    }
   }
   $$pre$i$i$i6 = $$lcssa70;$$pre$i3$i$i12 = $$lcssa73;$90 = $$lcssa73;
   L42: while(1) {
    $78 = ($$pre$i$i$i6|0)==(0|0);
    if ($78) {
     $103 = 1;$105 = 0;
    } else {
     $79 = (($$pre$i$i$i6) + 12|0);
     $80 = HEAP32[$79>>2]|0;
     $81 = (($$pre$i$i$i6) + 16|0);
     $82 = HEAP32[$81>>2]|0;
     $83 = ($80|0)==($82|0);
     if ($83) {
      $84 = HEAP32[$$pre$i$i$i6>>2]|0;
      $85 = (($84) + 36|0);
      $86 = HEAP32[$85>>2]|0;
      $87 = (FUNCTION_TABLE_ii[$86 & 1023]($$pre$i$i$i6)|0);
      $$0$i$i$i$i4 = $87;
     } else {
      $88 = HEAP32[$80>>2]|0;
      $$0$i$i$i$i4 = $88;
     }
     $89 = ($$0$i$i$i$i4|0)==(-1);
     if ($89) {
      HEAP32[$__b>>2] = 0;
      $103 = 1;$105 = 0;
     } else {
      $103 = 0;$105 = $$pre$i$i$i6;
     }
    }
    $91 = ($90|0)==(0|0);
    do {
     if ($91) {
      $$pre$i3$i$i1244 = $$pre$i3$i$i12;
      label = 48;
     } else {
      $92 = (($90) + 12|0);
      $93 = HEAP32[$92>>2]|0;
      $94 = (($90) + 16|0);
      $95 = HEAP32[$94>>2]|0;
      $96 = ($93|0)==($95|0);
      if ($96) {
       $97 = HEAP32[$90>>2]|0;
       $98 = (($97) + 36|0);
       $99 = HEAP32[$98>>2]|0;
       $100 = (FUNCTION_TABLE_ii[$99 & 1023]($90)|0);
       $$0$i$i1$i$i10 = $100;
      } else {
       $101 = HEAP32[$93>>2]|0;
       $$0$i$i1$i$i10 = $101;
      }
      $102 = ($$0$i$i1$i$i10|0)==(-1);
      if ($102) {
       HEAP32[$__e>>2] = 0;
       $$pre$i3$i$i1244 = 0;
       label = 48;
       break;
      } else {
       $phitmp$i4$i$i13 = ($$pre$i3$i$i12|0)==(0|0);
       $tmp$i$i15 = $103 ^ $phitmp$i4$i$i13;
       if ($tmp$i$i15) {
        $$pre$i3$i$i1243 = $$pre$i3$i$i12;$185 = $$pre$i3$i$i12;
        break;
       } else {
        break L42;
       }
      }
     }
    } while(0);
    if ((label|0) == 48) {
     label = 0;
     if ($103) {
      break;
     } else {
      $$pre$i3$i$i1243 = $$pre$i3$i$i1244;$185 = 0;
     }
    }
    $104 = (($105) + 12|0);
    $106 = HEAP32[$104>>2]|0;
    $107 = (($105) + 16|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = ($106|0)==($108|0);
    if ($109) {
     $110 = HEAP32[$105>>2]|0;
     $111 = (($110) + 36|0);
     $112 = HEAP32[$111>>2]|0;
     $113 = (FUNCTION_TABLE_ii[$112 & 1023]($105)|0);
     $$0$i$i = $113;
    } else {
     $114 = HEAP32[$106>>2]|0;
     $$0$i$i = $114;
    }
    $115 = HEAP32[$4>>2]|0;
    $116 = (($115) + 12|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = (FUNCTION_TABLE_iiii[$117 & 1023]($4,8192,$$0$i$i)|0);
    if (!($118)) {
     break;
    }
    $119 = HEAP32[$104>>2]|0;
    $120 = HEAP32[$107>>2]|0;
    $121 = ($119|0)==($120|0);
    if ($121) {
     $122 = HEAP32[$105>>2]|0;
     $123 = (($122) + 40|0);
     $124 = HEAP32[$123>>2]|0;
     (FUNCTION_TABLE_ii[$124 & 1023]($105)|0);
    } else {
     $125 = (($119) + 4|0);
     HEAP32[$104>>2] = $125;
    }
    $$pre$i$i$i6 = $105;$$pre$i3$i$i12 = $$pre$i3$i$i1243;$90 = $185;
   }
   $$0$ph$be = $$2$lcssa;
  }
  else if ((label|0) == 62) {
   label = 0;
   $147 = HEAP32[$$lcssa75>>2]|0;
   $148 = HEAP32[$$lcssa76>>2]|0;
   $149 = ($147|0)==($148|0);
   if ($149) {
    $150 = HEAP32[$$lcssa71>>2]|0;
    $151 = (($150) + 40|0);
    $152 = HEAP32[$151>>2]|0;
    (FUNCTION_TABLE_ii[$152 & 1023]($$lcssa71)|0);
   } else {
    $153 = (($147) + 4|0);
    HEAP32[$$lcssa75>>2] = $153;
   }
   $154 = (($$0$ph) + 4|0);
   $$0$ph$be = $154;
  }
  $$pre$pre = HEAP32[$__err>>2]|0;
  $$0$ph = $$0$ph$be;$$pre = $$pre$pre;
 }
 if ((label|0) == 19) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i21 = $$lcssa68;
 }
 else if ((label|0) == 23) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i21 = $$lcssa69$lcssa;
 }
 else if ((label|0) == 26) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i21 = $$lcssa69$lcssa77;
 }
 else if ((label|0) == 67) {
  $$pre$i$i$i21 = $$lcssa;
 }
 $155 = ($$pre$i$i$i21|0)==(0|0);
 if ($155) {
  $182 = 0;$186 = 1;
 } else {
  $156 = (($$pre$i$i$i21) + 12|0);
  $157 = HEAP32[$156>>2]|0;
  $158 = (($$pre$i$i$i21) + 16|0);
  $159 = HEAP32[$158>>2]|0;
  $160 = ($157|0)==($159|0);
  if ($160) {
   $161 = HEAP32[$$pre$i$i$i21>>2]|0;
   $162 = (($161) + 36|0);
   $163 = HEAP32[$162>>2]|0;
   $164 = (FUNCTION_TABLE_ii[$163 & 1023]($$pre$i$i$i21)|0);
   $$0$i$i$i$i19 = $164;
  } else {
   $165 = HEAP32[$157>>2]|0;
   $$0$i$i$i$i19 = $165;
  }
  $166 = ($$0$i$i$i$i19|0)==(-1);
  if ($166) {
   HEAP32[$__b>>2] = 0;
   $182 = 0;$186 = 1;
  } else {
   $182 = $$pre$i$i$i21;$186 = 0;
  }
 }
 $167 = HEAP32[$__e>>2]|0;
 $168 = ($167|0)==(0|0);
 do {
  if ($168) {
   label = 80;
  } else {
   $169 = (($167) + 12|0);
   $170 = HEAP32[$169>>2]|0;
   $171 = (($167) + 16|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = ($170|0)==($172|0);
   if ($173) {
    $174 = HEAP32[$167>>2]|0;
    $175 = (($174) + 36|0);
    $176 = HEAP32[$175>>2]|0;
    $177 = (FUNCTION_TABLE_ii[$176 & 1023]($167)|0);
    $$0$i$i1$i$i25 = $177;
   } else {
    $178 = HEAP32[$170>>2]|0;
    $$0$i$i1$i$i25 = $178;
   }
   $179 = ($$0$i$i1$i$i25|0)==(-1);
   if ($179) {
    HEAP32[$__e>>2] = 0;
    label = 80;
    break;
   } else {
    if ($186) {
     break;
    } else {
     label = 82;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 80) {
  if ($186) {
   label = 82;
  }
 }
 if ((label|0) == 82) {
  $180 = HEAP32[$__err>>2]|0;
  $181 = $180 | 2;
  HEAP32[$__err>>2] = $181;
 }
 HEAP32[$agg$result>>2] = $182;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,6088,((6088 + 32|0)));
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (($this) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 1023]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if ($11) {
  $16 = (($6) + 4|0);
  $17 = (($6) + 4|0);
  $18 = $9&255;
  $19 = $18 >>> 1;
  $21 = $17;$22 = $19;$23 = $16;
 } else {
  $12 = (($6) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($6) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  $21 = $13;$22 = $15;$23 = $13;
 }
 $20 = (($21) + ($22<<2)|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$23,$20);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7024|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 24|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = (($4) + 168|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7024|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 16|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = (($5) + 288|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7024|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 20|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy30 = sp + 276|0;
 $$byval_copy29 = sp + 272|0;
 $$byval_copy28 = sp + 268|0;
 $$byval_copy27 = sp + 264|0;
 $$byval_copy26 = sp + 260|0;
 $$byval_copy25 = sp + 256|0;
 $$byval_copy24 = sp + 252|0;
 $$byval_copy23 = sp + 248|0;
 $$byval_copy22 = sp + 244|0;
 $$byval_copy21 = sp + 240|0;
 $$byval_copy20 = sp + 236|0;
 $$byval_copy19 = sp + 232|0;
 $$byval_copy18 = sp + 228|0;
 $$byval_copy17 = sp + 224|0;
 $$byval_copy16 = sp + 220|0;
 $$byval_copy15 = sp + 216|0;
 $$byval_copy14 = sp + 212|0;
 $$byval_copy13 = sp + 208|0;
 $$byval_copy12 = sp + 204|0;
 $$byval_copy11 = sp + 200|0;
 $$byval_copy10 = sp + 196|0;
 $$byval_copy9 = sp + 192|0;
 $$byval_copy8 = sp + 188|0;
 $$byval_copy7 = sp + 184|0;
 $$byval_copy6 = sp + 180|0;
 $$byval_copy5 = sp + 176|0;
 $$byval_copy4 = sp + 172|0;
 $$byval_copy3 = sp + 168|0;
 $$byval_copy2 = sp + 164|0;
 $$byval_copy1 = sp + 160|0;
 $$byval_copy = sp + 156|0;
 $1 = sp + 152|0;
 $2 = sp + 148|0;
 $3 = sp + 144|0;
 $4 = sp + 140|0;
 $5 = sp + 136|0;
 $6 = sp + 132|0;
 $7 = sp + 128|0;
 $8 = sp + 124|0;
 $9 = sp + 120|0;
 $10 = sp + 116|0;
 $11 = sp + 112|0;
 $12 = sp + 108|0;
 $13 = sp + 104|0;
 $14 = sp + 100|0;
 $15 = sp + 96|0;
 $16 = sp + 92|0;
 $17 = sp + 88|0;
 $18 = sp + 84|0;
 $19 = sp + 80|0;
 $20 = sp + 76|0;
 $21 = sp + 72|0;
 $22 = sp + 68|0;
 $23 = sp + 64|0;
 $24 = sp + 60|0;
 $25 = sp + 56|0;
 $26 = sp + 52|0;
 $27 = sp + 48|0;
 $28 = sp + 44|0;
 $29 = sp + 40|0;
 $30 = sp + 36|0;
 $31 = sp + 32|0;
 $32 = sp + 28|0;
 $33 = sp + 24|0;
 $34 = sp + 20|0;
 $35 = sp + 16|0;
 $36 = sp + 12|0;
 $37 = sp + 8|0;
 $38 = sp + 4|0;
 $39 = sp;
 HEAP32[$__err>>2] = 0;
 __ZNKSt3__18ios_base6getlocEv($1,$__iob);
 __THREW__ = 0;
 $40 = (invoke_iii(454,($1|0),(7024|0))|0);
 $41 = __THREW__; __THREW__ = 0;
 $42 = $41&1;
 if ($42) {
  $45 = ___cxa_find_matching_catch()|0;
  $46 = tempRet0;
  $47 = HEAP32[$1>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
  ___resumeException($45|0);
  // unreachable;
 }
 $43 = HEAP32[$1>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($43)|0);
 $44 = $__fmt << 24 >> 24;
 do {
  switch ($44|0) {
  case 68:  {
   $77 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $77;
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $78;
   ;HEAP32[$$byval_copy5+0>>2]=HEAP32[$9+0>>2]|0;
   ;HEAP32[$$byval_copy6+0>>2]=HEAP32[$10+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($8,$this,$$byval_copy5,$$byval_copy6,$__iob,$__err,$__tm,6120,((6120 + 32|0)));
   $79 = HEAP32[$8>>2]|0;
   HEAP32[$__b>>2] = $79;
   label = 34;
   break;
  }
  case 83:  {
   $102 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $102;
   ;HEAP32[$$byval_copy20+0>>2]=HEAP32[$27+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__tm,$__b,$$byval_copy20,$__err,$40);
   label = 34;
   break;
  }
  case 109:  {
   $89 = (($__tm) + 16|0);
   $90 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $90;
   ;HEAP32[$$byval_copy12+0>>2]=HEAP32[$17+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$89,$__b,$$byval_copy12,$__err,$40);
   label = 34;
   break;
  }
  case 116: case 110:  {
   $93 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $93;
   ;HEAP32[$$byval_copy14+0>>2]=HEAP32[$19+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy14,$__err,$40);
   label = 34;
   break;
  }
  case 99:  {
   $52 = (($this) + 8|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (($53) + 12|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = (FUNCTION_TABLE_ii[$55 & 1023]($52)|0);
   $57 = HEAP32[$__b>>2]|0;
   HEAP32[$5>>2] = $57;
   $58 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $58;
   $59 = HEAP8[$56>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $66 = (($56) + 4|0);
    $67 = (($56) + 4|0);
    $68 = $59&255;
    $69 = $68 >>> 1;
    $71 = $67;$72 = $69;$73 = $66;
   } else {
    $62 = (($56) + 8|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = (($56) + 4|0);
    $65 = HEAP32[$64>>2]|0;
    $71 = $63;$72 = $65;$73 = $63;
   }
   $70 = (($71) + ($72<<2)|0);
   ;HEAP32[$$byval_copy2+0>>2]=HEAP32[$5+0>>2]|0;
   ;HEAP32[$$byval_copy3+0>>2]=HEAP32[$6+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($4,$this,$$byval_copy2,$$byval_copy3,$__iob,$__err,$__tm,$73,$70);
   $74 = HEAP32[$4>>2]|0;
   HEAP32[$__b>>2] = $74;
   label = 34;
   break;
  }
  case 82:  {
   $99 = HEAP32[$__b>>2]|0;
   HEAP32[$25>>2] = $99;
   $100 = HEAP32[$__e>>2]|0;
   HEAP32[$26>>2] = $100;
   ;HEAP32[$$byval_copy18+0>>2]=HEAP32[$25+0>>2]|0;
   ;HEAP32[$$byval_copy19+0>>2]=HEAP32[$26+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($24,$this,$$byval_copy18,$$byval_copy19,$__iob,$__err,$__tm,6232,((6232 + 20|0)));
   $101 = HEAP32[$24>>2]|0;
   HEAP32[$__b>>2] = $101;
   label = 34;
   break;
  }
  case 70:  {
   $80 = HEAP32[$__b>>2]|0;
   HEAP32[$12>>2] = $80;
   $81 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $81;
   ;HEAP32[$$byval_copy7+0>>2]=HEAP32[$12+0>>2]|0;
   ;HEAP32[$$byval_copy8+0>>2]=HEAP32[$13+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($11,$this,$$byval_copy7,$$byval_copy8,$__iob,$__err,$__tm,6152,((6152 + 32|0)));
   $82 = HEAP32[$11>>2]|0;
   HEAP32[$__b>>2] = $82;
   label = 34;
   break;
  }
  case 65: case 97:  {
   $48 = (($__tm) + 24|0);
   $49 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $49;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$48,$__b,$$byval_copy,$__err,$40);
   label = 34;
   break;
  }
  case 88:  {
   $113 = (($this) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (($114) + 24|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 1023]($113)|0);
   $118 = HEAP32[$__b>>2]|0;
   HEAP32[$35>>2] = $118;
   $119 = HEAP32[$__e>>2]|0;
   HEAP32[$36>>2] = $119;
   $120 = HEAP8[$117>>0]|0;
   $121 = $120 & 1;
   $122 = ($121<<24>>24)==(0);
   if ($122) {
    $127 = (($117) + 4|0);
    $128 = (($117) + 4|0);
    $129 = $120&255;
    $130 = $129 >>> 1;
    $132 = $128;$133 = $130;$134 = $127;
   } else {
    $123 = (($117) + 8|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (($117) + 4|0);
    $126 = HEAP32[$125>>2]|0;
    $132 = $124;$133 = $126;$134 = $124;
   }
   $131 = (($132) + ($133<<2)|0);
   ;HEAP32[$$byval_copy26+0>>2]=HEAP32[$35+0>>2]|0;
   ;HEAP32[$$byval_copy27+0>>2]=HEAP32[$36+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($34,$this,$$byval_copy26,$$byval_copy27,$__iob,$__err,$__tm,$134,$131);
   $135 = HEAP32[$34>>2]|0;
   HEAP32[$__b>>2] = $135;
   label = 34;
   break;
  }
  case 106:  {
   $87 = (($__tm) + 28|0);
   $88 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $88;
   ;HEAP32[$$byval_copy11+0>>2]=HEAP32[$16+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$87,$__b,$$byval_copy11,$__err,$40);
   label = 34;
   break;
  }
  case 101: case 100:  {
   $75 = (($__tm) + 12|0);
   $76 = HEAP32[$__e>>2]|0;
   HEAP32[$7>>2] = $76;
   ;HEAP32[$$byval_copy4+0>>2]=HEAP32[$7+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$75,$__b,$$byval_copy4,$__err,$40);
   label = 34;
   break;
  }
  case 119:  {
   $106 = (($__tm) + 24|0);
   $107 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $107;
   ;HEAP32[$$byval_copy23+0>>2]=HEAP32[$31+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$106,$__b,$$byval_copy23,$__err,$40);
   label = 34;
   break;
  }
  case 121:  {
   $136 = (($__tm) + 20|0);
   $137 = HEAP32[$__e>>2]|0;
   HEAP32[$37>>2] = $137;
   ;HEAP32[$$byval_copy28+0>>2]=HEAP32[$37+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$136,$__b,$$byval_copy28,$__err,$40);
   label = 34;
   break;
  }
  case 89:  {
   $138 = (($__tm) + 20|0);
   $139 = HEAP32[$__e>>2]|0;
   HEAP32[$38>>2] = $139;
   ;HEAP32[$$byval_copy29+0>>2]=HEAP32[$38+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$138,$__b,$$byval_copy29,$__err,$40);
   label = 34;
   break;
  }
  case 37:  {
   $140 = HEAP32[$__e>>2]|0;
   HEAP32[$39>>2] = $140;
   ;HEAP32[$$byval_copy30+0>>2]=HEAP32[$39+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$40);
   label = 34;
   break;
  }
  case 104: case 66: case 98:  {
   $50 = (($__tm) + 16|0);
   $51 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $51;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$3+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$50,$__b,$$byval_copy1,$__err,$40);
   label = 34;
   break;
  }
  case 114:  {
   $96 = HEAP32[$__b>>2]|0;
   HEAP32[$22>>2] = $96;
   $97 = HEAP32[$__e>>2]|0;
   HEAP32[$23>>2] = $97;
   ;HEAP32[$$byval_copy16+0>>2]=HEAP32[$22+0>>2]|0;
   ;HEAP32[$$byval_copy17+0>>2]=HEAP32[$23+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($21,$this,$$byval_copy16,$$byval_copy17,$__iob,$__err,$__tm,6184,((6184 + 44|0)));
   $98 = HEAP32[$21>>2]|0;
   HEAP32[$__b>>2] = $98;
   label = 34;
   break;
  }
  case 120:  {
   $108 = HEAP32[$this>>2]|0;
   $109 = (($108) + 20|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = HEAP32[$__b>>2]|0;
   HEAP32[$32>>2] = $111;
   $112 = HEAP32[$__e>>2]|0;
   HEAP32[$33>>2] = $112;
   ;HEAP32[$$byval_copy24+0>>2]=HEAP32[$32+0>>2]|0;
   ;HEAP32[$$byval_copy25+0>>2]=HEAP32[$33+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$110 & 511]($agg$result,$this,$$byval_copy24,$$byval_copy25,$__iob,$__err,$__tm);
   break;
  }
  case 73:  {
   $85 = (($__tm) + 8|0);
   $86 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $86;
   ;HEAP32[$$byval_copy10+0>>2]=HEAP32[$15+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$85,$__b,$$byval_copy10,$__err,$40);
   label = 34;
   break;
  }
  case 77:  {
   $91 = (($__tm) + 4|0);
   $92 = HEAP32[$__e>>2]|0;
   HEAP32[$18>>2] = $92;
   ;HEAP32[$$byval_copy13+0>>2]=HEAP32[$18+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$91,$__b,$$byval_copy13,$__err,$40);
   label = 34;
   break;
  }
  case 84:  {
   $103 = HEAP32[$__b>>2]|0;
   HEAP32[$29>>2] = $103;
   $104 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $104;
   ;HEAP32[$$byval_copy21+0>>2]=HEAP32[$29+0>>2]|0;
   ;HEAP32[$$byval_copy22+0>>2]=HEAP32[$30+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($28,$this,$$byval_copy21,$$byval_copy22,$__iob,$__err,$__tm,6256,((6256 + 32|0)));
   $105 = HEAP32[$28>>2]|0;
   HEAP32[$__b>>2] = $105;
   label = 34;
   break;
  }
  case 112:  {
   $94 = (($__tm) + 8|0);
   $95 = HEAP32[$__e>>2]|0;
   HEAP32[$20>>2] = $95;
   ;HEAP32[$$byval_copy15+0>>2]=HEAP32[$20+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$94,$__b,$$byval_copy15,$__err,$40);
   label = 34;
   break;
  }
  case 72:  {
   $83 = (($__tm) + 8|0);
   $84 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $84;
   ;HEAP32[$$byval_copy9+0>>2]=HEAP32[$14+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$83,$__b,$$byval_copy9,$__err,$40);
   label = 34;
   break;
  }
  default: {
   $141 = HEAP32[$__err>>2]|0;
   $142 = $141 | 4;
   HEAP32[$__err>>2] = $142;
   label = 34;
  }
  }
 } while(0);
 if ((label|0) == 34) {
  $143 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $143;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1: while(1) {
  $0 = HEAP32[$__b>>2]|0;
  $1 = ($0|0)==(0|0);
  do {
   if ($1) {
    $78 = 1;
   } else {
    $2 = (($0) + 12|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = (($0) + 16|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($3|0)==($5|0);
    if ($6) {
     $7 = HEAP32[$0>>2]|0;
     $8 = (($7) + 36|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
     $$0$i$i$i$i = $10;
    } else {
     $11 = HEAP32[$3>>2]|0;
     $$0$i$i$i$i = $11;
    }
    $12 = ($$0$i$i$i$i|0)==(-1);
    if ($12) {
     HEAP32[$__b>>2] = 0;
     $78 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $78 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $13 = HEAP32[$__e>>2]|0;
  $14 = ($13|0)==(0|0);
  do {
   if ($14) {
    label = 15;
   } else {
    $15 = (($13) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (($13) + 16|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($16|0)==($18|0);
    if ($19) {
     $20 = HEAP32[$13>>2]|0;
     $21 = (($20) + 36|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
     $$0$i$i1$i$i = $23;
    } else {
     $24 = HEAP32[$16>>2]|0;
     $$0$i$i1$i$i = $24;
    }
    $25 = ($$0$i$i1$i$i|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($78) {
      $79 = $13;
      break;
     } else {
      $$pre$i3$i$i9 = $13;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else {
    $79 = 0;
   }
  }
  $26 = HEAP32[$__b>>2]|0;
  $27 = (($26) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = (($26) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($28|0)==($30|0);
  if ($31) {
   $32 = HEAP32[$26>>2]|0;
   $33 = (($32) + 36|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (FUNCTION_TABLE_ii[$34 & 1023]($26)|0);
   $$0$i$i = $35;
  } else {
   $36 = HEAP32[$28>>2]|0;
   $$0$i$i = $36;
  }
  $37 = HEAP32[$__ct>>2]|0;
  $38 = (($37) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_iiii[$39 & 1023]($__ct,8192,$$0$i$i)|0);
  if (!($40)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b>>2]|0;
  $42 = (($41) + 12|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = (($41) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ($43|0)==($45|0);
  if ($46) {
   $47 = HEAP32[$41>>2]|0;
   $48 = (($47) + 40|0);
   $49 = HEAP32[$48>>2]|0;
   (FUNCTION_TABLE_ii[$49 & 1023]($41)|0);
  } else {
   $50 = (($43) + 4|0);
   HEAP32[$42>>2] = $50;
  }
 }
 $51 = HEAP32[$__b>>2]|0;
 $52 = ($51|0)==(0|0);
 do {
  if ($52) {
   $80 = 1;
  } else {
   $53 = (($51) + 12|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = (($51) + 16|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($54|0)==($56|0);
   if ($57) {
    $58 = HEAP32[$51>>2]|0;
    $59 = (($58) + 36|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (FUNCTION_TABLE_ii[$60 & 1023]($51)|0);
    $$0$i$i$i$i1 = $61;
   } else {
    $62 = HEAP32[$54>>2]|0;
    $$0$i$i$i$i1 = $62;
   }
   $63 = ($$0$i$i$i$i1|0)==(-1);
   if ($63) {
    HEAP32[$__b>>2] = 0;
    $80 = 1;
    break;
   } else {
    $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
    $80 = $phitmp$i$i$i4;
    break;
   }
  }
 } while(0);
 $64 = ($$pre$i3$i$i9|0)==(0|0);
 do {
  if ($64) {
   label = 38;
  } else {
   $65 = (($$pre$i3$i$i9) + 12|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = (($$pre$i3$i$i9) + 16|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ($66|0)==($68|0);
   if ($69) {
    $70 = HEAP32[$$pre$i3$i$i9>>2]|0;
    $71 = (($70) + 36|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (FUNCTION_TABLE_ii[$72 & 1023]($$pre$i3$i$i9)|0);
    $$0$i$i1$i$i7 = $73;
   } else {
    $74 = HEAP32[$66>>2]|0;
    $$0$i$i1$i$i7 = $74;
   }
   $75 = ($$0$i$i1$i$i7|0)==(-1);
   if ($75) {
    HEAP32[$__e>>2] = 0;
    label = 38;
    break;
   } else {
    if ($80) {
     break;
    } else {
     label = 40;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($80) {
   label = 40;
  }
 }
 if ((label|0) == 40) {
  $76 = HEAP32[$__err>>2]|0;
  $77 = $76 | 2;
  HEAP32[$__err>>2] = $77;
 }
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = (($5) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = (($5) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = (($5) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = (($5) + 24|0);
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i915 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $83 = 1;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $83 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $83 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = (($13) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($13) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($83) {
     $$pre$i3$i$i915 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($83) {
   label = 16;
  } else {
   $$pre$i3$i$i915 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($28) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = (($34) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = (($39) + 52|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($__ct,$$0$i$i,0)|0);
   $43 = ($42<<24>>24)==(37);
   if (!($43)) {
    $44 = HEAP32[$__err>>2]|0;
    $45 = $44 | 4;
    HEAP32[$__err>>2] = $45;
    break;
   }
   $46 = HEAP32[$__b>>2]|0;
   $47 = (($46) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = (($46) + 16|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($48|0)==($50|0);
   if ($51) {
    $53 = HEAP32[$46>>2]|0;
    $54 = (($53) + 40|0);
    $55 = HEAP32[$54>>2]|0;
    (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $56 = ($$pre|0)==(0|0);
    if ($56) {
     $84 = 1;
    } else {
     $58 = $$pre;
     label = 25;
    }
   } else {
    $52 = (($48) + 4|0);
    HEAP32[$47>>2] = $52;
    $58 = $46;
    label = 25;
   }
   do {
    if ((label|0) == 25) {
     $57 = (($58) + 12|0);
     $59 = HEAP32[$57>>2]|0;
     $60 = (($58) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$58>>2]|0;
      $64 = (($63) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 1023]($58)|0);
      $$0$i$i$i$i1 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i$i$i1 = $67;
     }
     $68 = ($$0$i$i$i$i1|0)==(-1);
     if ($68) {
      HEAP32[$__b>>2] = 0;
      $84 = 1;
      break;
     } else {
      $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
      $84 = $phitmp$i$i$i4;
      break;
     }
    }
   } while(0);
   $69 = ($$pre$i3$i$i915|0)==(0|0);
   do {
    if ($69) {
     label = 37;
    } else {
     $70 = (($$pre$i3$i$i915) + 12|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = (($$pre$i3$i$i915) + 16|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($71|0)==($73|0);
     if ($74) {
      $75 = HEAP32[$$pre$i3$i$i915>>2]|0;
      $76 = (($75) + 36|0);
      $77 = HEAP32[$76>>2]|0;
      $78 = (FUNCTION_TABLE_ii[$77 & 1023]($$pre$i3$i$i915)|0);
      $$0$i$i1$i$i7 = $78;
     } else {
      $79 = HEAP32[$71>>2]|0;
      $$0$i$i1$i$i7 = $79;
     }
     $80 = ($$0$i$i1$i$i7|0)==(-1);
     if ($80) {
      HEAP32[$__e>>2] = 0;
      label = 37;
      break;
     } else {
      if ($84) {
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 37) {
    if (!($84)) {
     break;
    }
   }
   $81 = HEAP32[$__err>>2]|0;
   $82 = $81 | 2;
   HEAP32[$__err>>2] = $82;
  }
 } while(0);
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 __THREW__ = 0;
 $1 = (invoke_i(459)|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if (!($3)) {
   $4 = ($0|0)==($1|0);
   if (!($4)) {
    $5 = HEAP32[$this>>2]|0;
    __THREW__ = 0;
    invoke_vi(472,($5|0));
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if ($7) {
     break;
    }
   }
   return;
  }
 } while(0);
 $8 = ___cxa_find_matching_catch(0|0)|0;
 $9 = tempRet0;
 ___clang_call_terminate($8);
 // unreachable;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($agg$result,$this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 4|0;
 $__ne = sp;
 $2 = (($__nar) + 100|0);
 HEAP32[$__ne>>2] = $2;
 $3 = (($this) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $$0$i$i = $__nar;$8 = $5;
 while(1) {
  $6 = ($$0$i$i|0)==($4|0);
  if ($6) {
   $$lcssa = $8;
   break;
  }
  $7 = HEAP8[$$0$i$i>>0]|0;
  $9 = ($8|0)==(0|0);
  do {
   if ($9) {
    $23 = 0;
   } else {
    $10 = (($8) + 24|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($8) + 28|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ($11|0)==($13|0);
    if ($14) {
     $16 = HEAP32[$8>>2]|0;
     $17 = (($16) + 52|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = $7&255;
     $20 = (FUNCTION_TABLE_iii[$18 & 1023]($8,$19)|0);
     $21 = ($20|0)==(-1);
     $$$i = $21 ? 0 : $8;
     $23 = $$$i;
     break;
    } else {
     $15 = (($11) + 1|0);
     HEAP32[$10>>2] = $15;
     HEAP8[$11>>0] = $7;
     $23 = $8;
     break;
    }
   }
  } while(0);
  $22 = (($$0$i$i) + 1|0);
  $$0$i$i = $22;$8 = $23;
 }
 HEAP32[$agg$result>>2] = $$lcssa;
 STACKTOP = sp;return;
}
function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nb,$__ne,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fmt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $fmt = sp;
 HEAP8[$fmt>>0] = 37;
 $0 = (($fmt) + 1|0);
 HEAP8[$0>>0] = $__fmt;
 $1 = (($fmt) + 2|0);
 HEAP8[$1>>0] = $__mod;
 $2 = (($fmt) + 3|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__mod<<24>>24)==(0);
 if (!($3)) {
  HEAP8[$0>>0] = $__mod;
  HEAP8[$1>>0] = $__fmt;
 }
 $4 = HEAP32[$__ne>>2]|0;
 $5 = $4;
 $6 = $__nb;
 $7 = (($5) - ($6))|0;
 $8 = HEAP32[$this>>2]|0;
 $9 = (_strftime_l(($__nb|0),($7|0),($fmt|0),($__tm|0),($8|0))|0);
 $10 = (($__nb) + ($9)|0);
 HEAP32[$__ne>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($agg$result,$this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 8|0;
 $__ne = sp;
 $2 = (($__nar) + 400|0);
 HEAP32[$__ne>>2] = $2;
 $3 = (($this) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $$0$i$i = $__nar;$8 = $5;
 while(1) {
  $6 = ($$0$i$i|0)==($4|0);
  if ($6) {
   $$lcssa = $8;
   break;
  }
  $7 = HEAP32[$$0$i$i>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $22 = 0;
  } else {
   $10 = (($8) + 24|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = (($8) + 28|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ($11|0)==($13|0);
   if ($14) {
    $15 = HEAP32[$8>>2]|0;
    $16 = (($15) + 52|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = (FUNCTION_TABLE_iii[$17 & 1023]($8,$7)|0);
    $$0$i$i$i$i = $18;
   } else {
    $19 = (($11) + 4|0);
    HEAP32[$10>>2] = $19;
    HEAP32[$11>>2] = $7;
    $$0$i$i$i$i = $7;
   }
   $20 = ($$0$i$i$i$i|0)==(-1);
   $$$i = $20 ? 0 : $8;
   $22 = $$$i;
  }
  $21 = (($$0$i$i) + 4|0);
  $$0$i$i = $21;$8 = $22;
 }
 HEAP32[$agg$result>>2] = $$lcssa;
 STACKTOP = sp;return;
}
function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this,$__wb,$__we,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__wb = $__wb|0;
 $__we = $__we|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 16|0;
 $__ne = sp + 12|0;
 $mb = sp;
 $__nb = sp + 8|0;
 $0 = (($__nar) + 100|0);
 HEAP32[$__ne>>2] = $0;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $1 = $mb;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 HEAP32[$__nb>>2] = $__nar;
 $5 = HEAP32[$__we>>2]|0;
 $6 = $5;
 $7 = $__wb;
 $8 = (($6) - ($7))|0;
 $9 = $8 >> 2;
 $10 = HEAP32[$this>>2]|0;
 $11 = (_uselocale(($10|0))|0);
 __THREW__ = 0;
 $12 = (invoke_iiiii(473,($__wb|0),($__nb|0),($9|0),($mb|0))|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $20 = ___cxa_find_matching_catch()|0;
  $21 = tempRet0;
  $22 = ($11|0)==(0|0);
  if (!($22)) {
   __THREW__ = 0;
   (invoke_ii(474,($11|0))|0);
   $23 = __THREW__; __THREW__ = 0;
   $24 = $23&1;
   if ($24) {
    $25 = ___cxa_find_matching_catch(0|0)|0;
    $26 = tempRet0;
    ___clang_call_terminate($25);
    // unreachable;
   }
  }
  ___resumeException($20|0);
  // unreachable;
 }
 $15 = ($11|0)==(0|0);
 if (!($15)) {
  __THREW__ = 0;
  (invoke_ii(474,($11|0))|0);
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if ($17) {
   $18 = ___cxa_find_matching_catch(0|0)|0;
   $19 = tempRet0;
   ___clang_call_terminate($18);
   // unreachable;
  }
 }
 $27 = ($12|0)==(-1);
 if ($27) {
  __ZNSt3__121__throw_runtime_errorEPKc(7912);
  // unreachable;
 } else {
  $28 = (($__wb) + ($12<<2)|0);
  HEAP32[$__we>>2] = $28;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$112 = 0, $$113 = 0, $$1210 = 0, $$1211 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre14 = 0, $$pre7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__nc$2$lcssa = 0, $__neg = 0, $__w$0 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 140|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 138|0;
 $0 = sp + 4|0;
 $__atoms = sp + 128|0;
 $__nbuf = sp + 28|0;
 HEAP32[$__wb>>2] = $__wbuf;
 $1 = (($__wb) + 4|0);
 HEAP32[$1>>2] = 475;
 $2 = (($__wbuf) + 100|0);
 __THREW__ = 0;
 invoke_vii(457,($__loc|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $32 = ___cxa_find_matching_catch()|0;
  $33 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$112 = $32;$$1210 = $33;$104 = 475;$105 = $__wbuf;
  label = 45;
 } else {
  __THREW__ = 0;
  $5 = (invoke_iii(454,($__loc|0),(7032|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  L3: do {
   if ($7) {
    label = 11;
   } else {
    HEAP8[$__neg>>0] = 0;
    $8 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $8;
    $9 = (($__iob) + 4|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
    $11 = (invoke_iiiiiiiiiiii(476,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($10|0),($__err|0),($__neg|0),($5|0),($__wb|0),($__wn|0),($2|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if ($13) {
     label = 11;
    } else {
     if ($11) {
      $14 = HEAP32[$5>>2]|0;
      $15 = (($14) + 32|0);
      $16 = HEAP32[$15>>2]|0;
      __THREW__ = 0;
      (invoke_iiiii($16|0,($5|0),(6648|0),(((6648 + 10|0))|0),($__atoms|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if ($18) {
       label = 11;
       break;
      }
      $19 = HEAP32[$__wn>>2]|0;
      $20 = HEAP32[$__wb>>2]|0;
      $21 = $19;
      $22 = $20;
      $23 = (($21) - ($22))|0;
      $24 = ($23|0)>(98);
      if ($24) {
       $25 = (($23) + 2)|0;
       $26 = (_malloc($25)|0);
       $27 = ($26|0)==(0|0);
       if ($27) {
        __THREW__ = 0;
        invoke_v(465);
        $28 = __THREW__; __THREW__ = 0;
        $29 = $28&1;
        if ($29) {
         $30 = ___cxa_find_matching_catch()|0;
         $31 = tempRet0;
         $$0 = $30;$$01 = $31;
         break;
        } else {
         $38 = 0;$__nc$0 = 0;
        }
       } else {
        $38 = $26;$__nc$0 = $26;
       }
      } else {
       $38 = 0;$__nc$0 = $__nbuf;
      }
      $39 = HEAP8[$__neg>>0]|0;
      $40 = ($39<<24>>24)==(0);
      if ($40) {
       $__nc$1 = $__nc$0;
      } else {
       $41 = (($__nc$0) + 1|0);
       HEAP8[$__nc$0>>0] = 45;
       $__nc$1 = $41;
      }
      $42 = (($__atoms) + 10|0);
      $43 = $__atoms;
      $45 = $19;$__nc$2 = $__nc$1;$__w$0 = $20;
      while(1) {
       $44 = ($__w$0>>>0)<($45>>>0);
       if (!($44)) {
        $__nc$2$lcssa = $__nc$2;
        break;
       }
       $46 = HEAP8[$__w$0>>0]|0;
       $$0$i = $__atoms;
       while(1) {
        $47 = ($$0$i|0)==($42|0);
        if ($47) {
         $$0$lcssa$i = $42;
         break;
        }
        $48 = HEAP8[$$0$i>>0]|0;
        $49 = ($48<<24>>24)==($46<<24>>24);
        if ($49) {
         $$0$lcssa$i = $$0$i;
         break;
        }
        $50 = (($$0$i) + 1|0);
        $$0$i = $50;
       }
       $51 = $$0$lcssa$i;
       $52 = (($51) - ($43))|0;
       $53 = (6648 + ($52)|0);
       $54 = HEAP8[$53>>0]|0;
       HEAP8[$__nc$2>>0] = $54;
       $55 = (($__w$0) + 1|0);
       $56 = (($__nc$2) + 1|0);
       $$pre = HEAP32[$__wn>>2]|0;
       $45 = $$pre;$__nc$2 = $56;$__w$0 = $55;
      }
      HEAP8[$__nc$2$lcssa>>0] = 0;
      HEAP32[$vararg_buffer>>2] = $__v;
      $57 = (_sscanf($__nbuf,6664,$vararg_buffer)|0);
      $58 = ($57|0)==(1);
      if (!($58)) {
       __THREW__ = 0;
       invoke_vi(477,(6672|0));
       $59 = __THREW__; __THREW__ = 0;
       $60 = $59&1;
       if ($60) {
        $36 = ___cxa_find_matching_catch()|0;
        $37 = tempRet0;
        _free($38);
        $$0 = $36;$$01 = $37;
        break;
       }
      }
      _free($38);
     }
     $61 = HEAP32[$__b>>2]|0;
     $62 = ($61|0)==(0|0);
     do {
      if ($62) {
       $75 = 0;
      } else {
       $63 = (($61) + 12|0);
       $64 = HEAP32[$63>>2]|0;
       $65 = (($61) + 16|0);
       $66 = HEAP32[$65>>2]|0;
       $67 = ($64|0)==($66|0);
       if ($67) {
        $68 = HEAP32[$61>>2]|0;
        $69 = (($68) + 36|0);
        $70 = HEAP32[$69>>2]|0;
        __THREW__ = 0;
        $71 = (invoke_ii($70|0,($61|0))|0);
        $72 = __THREW__; __THREW__ = 0;
        $73 = $72&1;
        if ($73) {
         label = 11;
         break L3;
        }
        $74 = ($71|0)==(-1);
        if ($74) {
         HEAP32[$__b>>2] = 0;
         $75 = 0;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $75 = $$pre$i$i$i;
         break;
        }
       } else {
        $75 = $61;
       }
      }
     } while(0);
     $76 = ($75|0)==(0|0);
     $77 = HEAP32[$__e>>2]|0;
     $78 = ($77|0)==(0|0);
     do {
      if ($78) {
       label = 37;
      } else {
       $79 = (($77) + 12|0);
       $80 = HEAP32[$79>>2]|0;
       $81 = (($77) + 16|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = ($80|0)==($82|0);
       if ($83) {
        $84 = HEAP32[$77>>2]|0;
        $85 = (($84) + 36|0);
        $86 = HEAP32[$85>>2]|0;
        __THREW__ = 0;
        $87 = (invoke_ii($86|0,($77|0))|0);
        $88 = __THREW__; __THREW__ = 0;
        $89 = $88&1;
        if ($89) {
         label = 11;
         break L3;
        }
        $90 = ($87|0)==(-1);
        if ($90) {
         HEAP32[$__e>>2] = 0;
         label = 37;
         break;
        }
       }
       if (!($76)) {
        label = 38;
       }
      }
     } while(0);
     if ((label|0) == 37) {
      if ($76) {
       label = 38;
      }
     }
     if ((label|0) == 38) {
      $91 = HEAP32[$__err>>2]|0;
      $92 = $91 | 2;
      HEAP32[$__err>>2] = $92;
     }
     $93 = HEAP32[$__b>>2]|0;
     HEAP32[$agg$result>>2] = $93;
     $94 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($94)|0);
     $95 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $96 = ($95|0)==(0|0);
     if (!($96)) {
      $97 = HEAP32[$1>>2]|0;
      __THREW__ = 0;
      invoke_vi($97|0,($95|0));
      $98 = __THREW__; __THREW__ = 0;
      $99 = $98&1;
      if ($99) {
       $100 = ___cxa_find_matching_catch(0|0)|0;
       $101 = tempRet0;
       ___clang_call_terminate($100);
       // unreachable;
      }
     }
     STACKTOP = sp;return;
    }
   }
  } while(0);
  if ((label|0) == 11) {
   $34 = ___cxa_find_matching_catch()|0;
   $35 = tempRet0;
   $$0 = $34;$$01 = $35;
  }
  $102 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($102)|0);
  $$pre7 = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $103 = ($$pre7|0)==(0|0);
  if ($103) {
   $$113 = $$0;$$1211 = $$01;
  } else {
   $$pre14 = HEAP32[$1>>2]|0;
   $$112 = $$0;$$1210 = $$01;$104 = $$pre14;$105 = $$pre7;
   label = 45;
  }
 }
 if ((label|0) == 45) {
  __THREW__ = 0;
  invoke_vi($104|0,($105|0));
  $106 = __THREW__; __THREW__ = 0;
  $107 = $106&1;
  if ($107) {
   $108 = ___cxa_find_matching_catch(0|0)|0;
   $109 = tempRet0;
   ___clang_call_terminate($108);
   // unreachable;
  } else {
   $$113 = $$112;$$1211 = $$1210;
  }
 }
 ___resumeException($$113|0);
 // unreachable;
}
function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i113 = 0, $$0$i$i120 = 0, $$0$i$i129 = 0, $$0$i$i139 = 0, $$0$i$i156 = 0, $$0$i$i42 = 0, $$0$i$i45 = 0, $$0$i$i58 = 0, $$0$i$i64 = 0, $$0$i$i67 = 0, $$0$i$i74 = 0, $$0$i$i93 = 0, $$0$i$i96 = 0, $$290 = 0, $$291 = 0, $$292 = 0, $$293 = 0;
 var $$294 = 0, $$lcssa = 0, $$lcssa322 = 0, $$lcssa324 = 0, $$lcssa326 = 0, $$mask = 0, $$mask280 = 0, $$mask281 = 0, $$mask282 = 0, $$mask283 = 0, $$ph = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i103 = 0, $$pre$i$i$i143 = 0, $$pre$i$i$i160 = 0, $$pre$i$i$i32 = 0, $$pre$i$i$i48 = 0, $$pre$i$i$i79 = 0, $$pre$i2$i$i107 = 0;
 var $$pre$i2$i$i147 = 0, $$pre$i2$i$i164 = 0, $$pre$i2$i$i164269 = 0, $$pre$i2$i$i164270 = 0, $$pre$i2$i$i52 = 0, $$pre$i2$i$i52256 = 0, $$pre$i2$i$i52258 = 0, $$pre$i2$i$i83 = 0, $$pre$i2$i$i83274$ph = 0, $$pre$i2$i$i83274287 = 0, $$pre260 = 0, $$pre262 = 0, $$pre263 = 0, $$pre265 = 0, $$pre266 = 0, $$pre267 = 0, $$pre268 = 0, $$pre273 = 0, $$pre277 = 0, $$pre279 = 0;
 var $$sum = 0, $$sum284 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0;
 var $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0;
 var $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0;
 var $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0;
 var $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0;
 var $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0;
 var $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0;
 var $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0;
 var $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0;
 var $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0;
 var $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0;
 var $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0;
 var $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0;
 var $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0;
 var $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0;
 var $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0;
 var $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0;
 var $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0;
 var $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0;
 var $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0;
 var $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0;
 var $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0;
 var $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0;
 var $__gn = 0, $__grp = 0, $__i$0 = 0, $__i$0$i$i = 0, $__i$0$i$i14 = 0, $__i$0$i$i17 = 0, $__i$0$i$i21 = 0, $__i$0$i$i26 = 0, $__ng$0 = 0, $__ng$0$lcssa323 = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0;
 var $__sym = 0, $__trailing_sign$0 = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0, $cond = 0, $exitcond$i$i = 0, $exitcond$i$i15 = 0, $exitcond$i$i18 = 0, $exitcond$i$i22 = 0, $exitcond$i$i27 = 0, $isascii1$i = 0, $isascii1$i137 = 0, $isascii1$i170 = 0, $isascii1$i61 = 0, $isascii1$i72 = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, $or$cond = 0;
 var $or$cond13 = 0, $or$cond7 = 0, $or$cond9 = 0, $sext = 0, $sext209 = 0, $sext210 = 0, $sext211 = 0, $switch = 0, $tmp$i$i149 = 0, $tmp$i$i166 = 0, $tmp$i$i54 = 0, $tmp$i$i85 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 488|0;
 $__gbuf = sp + 88|0;
 $__gb = sp + 80|0;
 $__gn = sp + 72|0;
 $__ge = sp + 68|0;
 $__pat = sp + 496|0;
 $__dp = sp + 493|0;
 $__ts = sp + 492|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 HEAP32[$__gb>>2] = $__gbuf;
 $1 = (($__gb) + 4|0);
 HEAP32[$1>>2] = 475;
 HEAP32[$__gn>>2] = $__gbuf;
 $2 = (($__gbuf) + 400|0);
 HEAP32[$__ge>>2] = $2;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__grp) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $__i$0$i$i14 = 0;
 while(1) {
  $exitcond$i$i15 = ($__i$0$i$i14|0)==(3);
  if ($exitcond$i$i15) {
   break;
  }
  $5 = (($__sym) + ($__i$0$i$i14<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i14) + 1)|0;
  $__i$0$i$i14 = $6;
 }
 $__i$0$i$i17 = 0;
 while(1) {
  $exitcond$i$i18 = ($__i$0$i$i17|0)==(3);
  if ($exitcond$i$i18) {
   break;
  }
  $7 = (($__psn) + ($__i$0$i$i17<<2)|0);
  HEAP32[$7>>2] = 0;
  $8 = (($__i$0$i$i17) + 1)|0;
  $__i$0$i$i17 = $8;
 }
 $__i$0$i$i21 = 0;
 while(1) {
  $exitcond$i$i22 = ($__i$0$i$i21|0)==(3);
  if ($exitcond$i$i22) {
   break;
  }
  $9 = (($__nsn) + ($__i$0$i$i21<<2)|0);
  HEAP32[$9>>2] = 0;
  $10 = (($__i$0$i$i21) + 1)|0;
  $__i$0$i$i21 = $10;
 }
 $__i$0$i$i26 = 0;
 while(1) {
  $exitcond$i$i27 = ($__i$0$i$i26|0)==(3);
  if ($exitcond$i$i27) {
   break;
  }
  $11 = (($__spaces) + ($__i$0$i$i26<<2)|0);
  HEAP32[$11>>2] = 0;
  $12 = (($__i$0$i$i26) + 1)|0;
  $__i$0$i$i26 = $12;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(478,($__intl|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__psn|0),($__nsn|0),($__fd|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 L21: do {
  if ($14) {
   $78 = ___cxa_find_matching_catch()|0;
   $79 = tempRet0;
   $lpad$phi$index = $78;$lpad$phi$index7 = $79;
  } else {
   $15 = HEAP32[$__wb>>2]|0;
   HEAP32[$__wn>>2] = $15;
   $16 = (($__ct) + 8|0);
   $17 = (($__nsn) + 4|0);
   $18 = (($__nsn) + 8|0);
   $19 = (($__psn) + 4|0);
   $20 = (($__psn) + 8|0);
   $21 = $__flags & 512;
   $22 = ($21|0)!=(0);
   $23 = (($__sym) + 1|0);
   $24 = (($__sym) + 8|0);
   $25 = (($__sym) + 4|0);
   $26 = (($__spaces) + 1|0);
   $27 = (($__spaces) + 8|0);
   $28 = (($__spaces) + 4|0);
   $29 = (($__pat) + 3|0);
   $30 = (($__grp) + 4|0);
   $896 = $__gbuf;$__p$0 = 0;$__trailing_sign$0 = 0;
   L23: while(1) {
    $31 = ($__p$0>>>0)<(4);
    if (!($31)) {
     $$lcssa326 = $896;$__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 315;
     break;
    }
    $32 = HEAP32[$__b>>2]|0;
    $33 = ($32|0)==(0|0);
    do {
     if ($33) {
      $46 = 0;
     } else {
      $34 = (($32) + 12|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = (($32) + 16|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ($35|0)==($37|0);
      if ($38) {
       $39 = HEAP32[$32>>2]|0;
       $40 = (($39) + 36|0);
       $41 = HEAP32[$40>>2]|0;
       __THREW__ = 0;
       $42 = (invoke_ii($41|0,($32|0))|0);
       $43 = __THREW__; __THREW__ = 0;
       $44 = $43&1;
       if ($44) {
        label = 40;
        break L23;
       }
       $45 = ($42|0)==(-1);
       if ($45) {
        HEAP32[$__b>>2] = 0;
        $46 = 0;
        break;
       } else {
        $$pre$i$i$i32 = HEAP32[$__b>>2]|0;
        $46 = $$pre$i$i$i32;
        break;
       }
      } else {
       $46 = $32;
      }
     }
    } while(0);
    $47 = ($46|0)==(0|0);
    $48 = HEAP32[$__e>>2]|0;
    $49 = ($48|0)==(0|0);
    do {
     if ($49) {
      label = 31;
     } else {
      $50 = (($48) + 12|0);
      $51 = HEAP32[$50>>2]|0;
      $52 = (($48) + 16|0);
      $53 = HEAP32[$52>>2]|0;
      $54 = ($51|0)==($53|0);
      if (!($54)) {
       if ($47) {
        $897 = $48;
        break;
       } else {
        $$lcssa326 = $896;$__trailing_sign$0$lcssa = $__trailing_sign$0;
        label = 315;
        break L23;
       }
      }
      $55 = HEAP32[$48>>2]|0;
      $56 = (($55) + 36|0);
      $57 = HEAP32[$56>>2]|0;
      __THREW__ = 0;
      $58 = (invoke_ii($57|0,($48|0))|0);
      $59 = __THREW__; __THREW__ = 0;
      $60 = $59&1;
      if ($60) {
       label = 40;
       break L23;
      }
      $61 = ($58|0)==(-1);
      if ($61) {
       HEAP32[$__e>>2] = 0;
       label = 31;
       break;
      } else {
       if ($47) {
        $897 = $48;
        break;
       } else {
        $$lcssa326 = $896;$__trailing_sign$0$lcssa = $__trailing_sign$0;
        label = 315;
        break L23;
       }
      }
     }
    } while(0);
    if ((label|0) == 31) {
     label = 0;
     if ($47) {
      $$lcssa326 = $896;$__trailing_sign$0$lcssa = $__trailing_sign$0;
      label = 315;
      break;
     } else {
      $897 = 0;
     }
    }
    $62 = (($__pat) + ($__p$0)|0);
    $63 = HEAP8[$62>>0]|0;
    $64 = $63 << 24 >> 24;
    L46: do {
     switch ($64|0) {
     case 1:  {
      $cond = ($__p$0|0)==(3);
      if ($cond) {
       $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       $87 = HEAP32[$__b>>2]|0;
       $88 = (($87) + 12|0);
       $89 = HEAP32[$88>>2]|0;
       $90 = (($87) + 16|0);
       $91 = HEAP32[$90>>2]|0;
       $92 = ($89|0)==($91|0);
       if ($92) {
        $93 = HEAP32[$87>>2]|0;
        $94 = (($93) + 36|0);
        $95 = HEAP32[$94>>2]|0;
        __THREW__ = 0;
        $96 = (invoke_ii($95|0,($87|0))|0);
        $97 = __THREW__; __THREW__ = 0;
        $98 = $97&1;
        if ($98) {
         label = 40;
         break L23;
        } else {
         $$0$i$i42 = $96;
        }
       } else {
        $99 = HEAP8[$89>>0]|0;
        $100 = $99&255;
        $$0$i$i42 = $100;
       }
       $101 = $$0$i$i42&255;
       $isascii1$i = ($101<<24>>24)>(-1);
       if (!($isascii1$i)) {
        label = 56;
        break L23;
       }
       $sext211 = $$0$i$i42 << 24;
       $102 = $sext211 >> 24;
       $103 = HEAP32[$16>>2]|0;
       $104 = (($103) + ($102<<1)|0);
       $105 = HEAP16[$104>>1]|0;
       $106 = $105 & 8192;
       $107 = ($106<<16>>16)==(0);
       if ($107) {
        label = 56;
        break L23;
       }
       $108 = HEAP32[$__b>>2]|0;
       $109 = (($108) + 12|0);
       $110 = HEAP32[$109>>2]|0;
       $111 = (($108) + 16|0);
       $112 = HEAP32[$111>>2]|0;
       $113 = ($110|0)==($112|0);
       if ($113) {
        $114 = HEAP32[$108>>2]|0;
        $115 = (($114) + 40|0);
        $116 = HEAP32[$115>>2]|0;
        __THREW__ = 0;
        $117 = (invoke_ii($116|0,($108|0))|0);
        $118 = __THREW__; __THREW__ = 0;
        $119 = $118&1;
        if ($119) {
         label = 40;
         break L23;
        } else {
         $$0$i$i45 = $117;
        }
       } else {
        $120 = (($110) + 1|0);
        HEAP32[$109>>2] = $120;
        $121 = HEAP8[$110>>0]|0;
        $122 = $121&255;
        $$0$i$i45 = $122;
       }
       $123 = $$0$i$i45&255;
       __THREW__ = 0;
       invoke_vii(372,($__spaces|0),($123|0));
       $124 = __THREW__; __THREW__ = 0;
       $125 = $124&1;
       if ($125) {
        label = 40;
        break L23;
       } else {
        label = 58;
       }
      }
      break;
     }
     case 3:  {
      $199 = HEAP16[$__psn>>1]|0;
      $200 = $199&255;
      $201 = $200 & 1;
      $202 = ($201<<24>>24)==(0);
      $203 = ($199&65535) >>> 8;
      $204 = $203&255;
      if ($202) {
       $$mask283 = $199 & 254;
       $206 = $$mask283&65535;
       $207 = $206 >>> 1;
       $219 = $207;
      } else {
       $205 = HEAP32[$19>>2]|0;
       $219 = $205;
      }
      $208 = HEAP16[$__nsn>>1]|0;
      $209 = $208&255;
      $210 = $209 & 1;
      $211 = ($210<<24>>24)==(0);
      $212 = ($208&65535) >>> 8;
      $213 = $212&255;
      if ($211) {
       $$mask282 = $208 & 254;
       $215 = $$mask282&65535;
       $216 = $215 >>> 1;
       $218 = $216;
      } else {
       $214 = HEAP32[$17>>2]|0;
       $218 = $214;
      }
      $217 = (0 - ($218))|0;
      $220 = ($219|0)==($217|0);
      if ($220) {
       $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       if ($202) {
        $$mask281 = $199 & 254;
        $222 = $$mask281&65535;
        $223 = $222 >>> 1;
        $224 = $223;
       } else {
        $221 = HEAP32[$19>>2]|0;
        $224 = $221;
       }
       $225 = ($224|0)==(0);
       if (!($225)) {
        if ($211) {
         $$mask280 = $208 & 254;
         $227 = $$mask280&65535;
         $228 = $227 >>> 1;
         $229 = $228;
        } else {
         $226 = HEAP32[$17>>2]|0;
         $229 = $226;
        }
        $230 = ($229|0)==(0);
        if (!($230)) {
         $318 = HEAP32[$__b>>2]|0;
         $319 = (($318) + 12|0);
         $320 = HEAP32[$319>>2]|0;
         $321 = (($318) + 16|0);
         $322 = HEAP32[$321>>2]|0;
         $323 = ($320|0)==($322|0);
         if ($323) {
          $324 = HEAP32[$318>>2]|0;
          $325 = (($324) + 36|0);
          $326 = HEAP32[$325>>2]|0;
          __THREW__ = 0;
          $327 = (invoke_ii($326|0,($318|0))|0);
          $328 = __THREW__; __THREW__ = 0;
          $329 = $328&1;
          if ($329) {
           label = 40;
           break L23;
          }
          $$pre265 = HEAP16[$__psn>>1]|0;
          $330 = $$pre265&255;
          $331 = ($$pre265&65535) >>> 8;
          $332 = $331&255;
          $$0$i$i120 = $327;$337 = $330;$902 = $332;
         } else {
          $333 = HEAP8[$320>>0]|0;
          $334 = $333&255;
          $$0$i$i120 = $334;$337 = $200;$902 = $204;
         }
         $335 = $$0$i$i120&255;
         $336 = $337 & 1;
         $338 = ($336<<24>>24)==(0);
         if ($338) {
          $341 = $902;
         } else {
          $339 = HEAP32[$20>>2]|0;
          $$pre266 = HEAP8[$339>>0]|0;
          $341 = $$pre266;
         }
         $340 = ($335<<24>>24)==($341<<24>>24);
         $342 = HEAP32[$__b>>2]|0;
         $343 = (($342) + 12|0);
         $344 = HEAP32[$343>>2]|0;
         $345 = (($342) + 16|0);
         $346 = HEAP32[$345>>2]|0;
         $347 = ($344|0)==($346|0);
         if ($340) {
          if ($347) {
           $348 = HEAP32[$342>>2]|0;
           $349 = (($348) + 40|0);
           $350 = HEAP32[$349>>2]|0;
           __THREW__ = 0;
           (invoke_ii($350|0,($342|0))|0);
           $351 = __THREW__; __THREW__ = 0;
           $352 = $351&1;
           if ($352) {
            label = 40;
            break L23;
           }
          } else {
           $353 = (($344) + 1|0);
           HEAP32[$343>>2] = $353;
          }
          $354 = HEAP8[$__psn>>0]|0;
          $355 = $354 & 1;
          $356 = ($355<<24>>24)==(0);
          if ($356) {
           $358 = $354&255;
           $359 = $358 >>> 1;
           $360 = $359;
          } else {
           $357 = HEAP32[$19>>2]|0;
           $360 = $357;
          }
          $361 = ($360>>>0)>(1);
          $__psn$__trailing_sign$010 = $361 ? $__psn : $__trailing_sign$0;
          $898 = $896;$__trailing_sign$1 = $__psn$__trailing_sign$010;
          break L46;
         }
         if ($347) {
          $362 = HEAP32[$342>>2]|0;
          $363 = (($362) + 36|0);
          $364 = HEAP32[$363>>2]|0;
          __THREW__ = 0;
          $365 = (invoke_ii($364|0,($342|0))|0);
          $366 = __THREW__; __THREW__ = 0;
          $367 = $366&1;
          if ($367) {
           label = 40;
           break L23;
          } else {
           $$0$i$i129 = $365;
          }
         } else {
          $368 = HEAP8[$344>>0]|0;
          $369 = $368&255;
          $$0$i$i129 = $369;
         }
         $370 = $$0$i$i129&255;
         $371 = HEAP16[$__nsn>>1]|0;
         $372 = $371 & 1;
         $373 = ($372<<16>>16)==(0);
         if ($373) {
          $375 = ($371&65535) >>> 8;
          $376 = $375&255;
          $378 = $376;
         } else {
          $374 = HEAP32[$18>>2]|0;
          $$pre267 = HEAP8[$374>>0]|0;
          $378 = $$pre267;
         }
         $377 = ($370<<24>>24)==($378<<24>>24);
         if (!($377)) {
          label = 158;
          break L23;
         }
         $379 = HEAP32[$__b>>2]|0;
         $380 = (($379) + 12|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = (($379) + 16|0);
         $383 = HEAP32[$382>>2]|0;
         $384 = ($381|0)==($383|0);
         if ($384) {
          $385 = HEAP32[$379>>2]|0;
          $386 = (($385) + 40|0);
          $387 = HEAP32[$386>>2]|0;
          __THREW__ = 0;
          (invoke_ii($387|0,($379|0))|0);
          $388 = __THREW__; __THREW__ = 0;
          $389 = $388&1;
          if ($389) {
           label = 40;
           break L23;
          }
         } else {
          $390 = (($381) + 1|0);
          HEAP32[$380>>2] = $390;
         }
         HEAP8[$__neg>>0] = 1;
         $391 = HEAP8[$__nsn>>0]|0;
         $392 = $391 & 1;
         $393 = ($392<<24>>24)==(0);
         if ($393) {
          $395 = $391&255;
          $396 = $395 >>> 1;
          $397 = $396;
         } else {
          $394 = HEAP32[$17>>2]|0;
          $397 = $394;
         }
         $398 = ($397>>>0)>(1);
         $__nsn$__trailing_sign$011 = $398 ? $__nsn : $__trailing_sign$0;
         $898 = $896;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
         break L46;
        }
       }
       if ($202) {
        $$mask = $199 & 254;
        $232 = $$mask&65535;
        $233 = $232 >>> 1;
        $234 = $233;
       } else {
        $231 = HEAP32[$19>>2]|0;
        $234 = $231;
       }
       $235 = ($234|0)==(0);
       $236 = HEAP32[$__b>>2]|0;
       $237 = (($236) + 12|0);
       $238 = HEAP32[$237>>2]|0;
       $239 = (($236) + 16|0);
       $240 = HEAP32[$239>>2]|0;
       $241 = ($238|0)==($240|0);
       if ($235) {
        if ($241) {
         $280 = HEAP32[$236>>2]|0;
         $281 = (($280) + 36|0);
         $282 = HEAP32[$281>>2]|0;
         __THREW__ = 0;
         $283 = (invoke_ii($282|0,($236|0))|0);
         $284 = __THREW__; __THREW__ = 0;
         $285 = $284&1;
         if ($285) {
          label = 40;
          break L23;
         }
         $$pre = HEAP16[$__nsn>>1]|0;
         $286 = $$pre&255;
         $287 = ($$pre&65535) >>> 8;
         $288 = $287&255;
         $$0$i$i113 = $283;$293 = $286;$901 = $288;
        } else {
         $289 = HEAP8[$238>>0]|0;
         $290 = $289&255;
         $$0$i$i113 = $290;$293 = $209;$901 = $213;
        }
        $291 = $$0$i$i113&255;
        $292 = $293 & 1;
        $294 = ($292<<24>>24)==(0);
        if ($294) {
         $297 = $901;
        } else {
         $295 = HEAP32[$18>>2]|0;
         $$pre260 = HEAP8[$295>>0]|0;
         $297 = $$pre260;
        }
        $296 = ($291<<24>>24)==($297<<24>>24);
        if (!($296)) {
         $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
         break L46;
        }
        $298 = HEAP32[$__b>>2]|0;
        $299 = (($298) + 12|0);
        $300 = HEAP32[$299>>2]|0;
        $301 = (($298) + 16|0);
        $302 = HEAP32[$301>>2]|0;
        $303 = ($300|0)==($302|0);
        if ($303) {
         $304 = HEAP32[$298>>2]|0;
         $305 = (($304) + 40|0);
         $306 = HEAP32[$305>>2]|0;
         __THREW__ = 0;
         (invoke_ii($306|0,($298|0))|0);
         $307 = __THREW__; __THREW__ = 0;
         $308 = $307&1;
         if ($308) {
          label = 40;
          break L23;
         }
        } else {
         $309 = (($300) + 1|0);
         HEAP32[$299>>2] = $309;
        }
        HEAP8[$__neg>>0] = 1;
        $310 = HEAP8[$__nsn>>0]|0;
        $311 = $310 & 1;
        $312 = ($311<<24>>24)==(0);
        if ($312) {
         $314 = $310&255;
         $315 = $314 >>> 1;
         $316 = $315;
        } else {
         $313 = HEAP32[$17>>2]|0;
         $316 = $313;
        }
        $317 = ($316>>>0)>(1);
        $__nsn$__trailing_sign$0 = $317 ? $__nsn : $__trailing_sign$0;
        $898 = $896;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
        break L46;
       }
       if ($241) {
        $242 = HEAP32[$236>>2]|0;
        $243 = (($242) + 36|0);
        $244 = HEAP32[$243>>2]|0;
        __THREW__ = 0;
        $245 = (invoke_ii($244|0,($236|0))|0);
        $246 = __THREW__; __THREW__ = 0;
        $247 = $246&1;
        if ($247) {
         label = 40;
         break L23;
        }
        $$pre262 = HEAP16[$__psn>>1]|0;
        $248 = $$pre262&255;
        $249 = ($$pre262&65535) >>> 8;
        $250 = $249&255;
        $$0$i$i93 = $245;$255 = $248;$900 = $250;
       } else {
        $251 = HEAP8[$238>>0]|0;
        $252 = $251&255;
        $$0$i$i93 = $252;$255 = $200;$900 = $204;
       }
       $253 = $$0$i$i93&255;
       $254 = $255 & 1;
       $256 = ($254<<24>>24)==(0);
       if ($256) {
        $259 = $900;
       } else {
        $257 = HEAP32[$20>>2]|0;
        $$pre263 = HEAP8[$257>>0]|0;
        $259 = $$pre263;
       }
       $258 = ($253<<24>>24)==($259<<24>>24);
       if (!($258)) {
        HEAP8[$__neg>>0] = 1;
        $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
        break L46;
       }
       $260 = HEAP32[$__b>>2]|0;
       $261 = (($260) + 12|0);
       $262 = HEAP32[$261>>2]|0;
       $263 = (($260) + 16|0);
       $264 = HEAP32[$263>>2]|0;
       $265 = ($262|0)==($264|0);
       if ($265) {
        $266 = HEAP32[$260>>2]|0;
        $267 = (($266) + 40|0);
        $268 = HEAP32[$267>>2]|0;
        __THREW__ = 0;
        (invoke_ii($268|0,($260|0))|0);
        $269 = __THREW__; __THREW__ = 0;
        $270 = $269&1;
        if ($270) {
         label = 40;
         break L23;
        }
       } else {
        $271 = (($262) + 1|0);
        HEAP32[$261>>2] = $271;
       }
       $272 = HEAP8[$__psn>>0]|0;
       $273 = $272 & 1;
       $274 = ($273<<24>>24)==(0);
       if ($274) {
        $276 = $272&255;
        $277 = $276 >>> 1;
        $278 = $277;
       } else {
        $275 = HEAP32[$19>>2]|0;
        $278 = $275;
       }
       $279 = ($278>>>0)>(1);
       $__psn$__trailing_sign$0 = $279 ? $__psn : $__trailing_sign$0;
       $898 = $896;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      }
      break;
     }
     case 0:  {
      $128 = ($__p$0|0)==(3);
      if ($128) {
       $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       label = 58;
      }
      break;
     }
     case 4:  {
      $65 = HEAP8[$__ts>>0]|0;
      $$pre$i2$i$i147 = $897;$562 = $897;$617 = $896;$__ng$0 = 0;
      L162: while(1) {
       $546 = HEAP32[$__b>>2]|0;
       $547 = ($546|0)==(0|0);
       do {
        if ($547) {
         $560 = 0;
        } else {
         $548 = (($546) + 12|0);
         $549 = HEAP32[$548>>2]|0;
         $550 = (($546) + 16|0);
         $551 = HEAP32[$550>>2]|0;
         $552 = ($549|0)==($551|0);
         if ($552) {
          $553 = HEAP32[$546>>2]|0;
          $554 = (($553) + 36|0);
          $555 = HEAP32[$554>>2]|0;
          __THREW__ = 0;
          $556 = (invoke_ii($555|0,($546|0))|0);
          $557 = __THREW__; __THREW__ = 0;
          $558 = $557&1;
          if ($558) {
           label = 39;
           break L23;
          }
          $559 = ($556|0)==(-1);
          if ($559) {
           HEAP32[$__b>>2] = 0;
           $560 = 0;
           break;
          } else {
           $$pre$i$i$i143 = HEAP32[$__b>>2]|0;
           $560 = $$pre$i$i$i143;
           break;
          }
         } else {
          $560 = $546;
         }
        }
       } while(0);
       $561 = ($560|0)==(0|0);
       $563 = ($562|0)==(0|0);
       do {
        if ($563) {
         $905 = $$pre$i2$i$i147;
         label = 229;
        } else {
         $564 = (($562) + 12|0);
         $565 = HEAP32[$564>>2]|0;
         $566 = (($562) + 16|0);
         $567 = HEAP32[$566>>2]|0;
         $568 = ($565|0)==($567|0);
         if (!($568)) {
          if ($561) {
           $906 = $$pre$i2$i$i147;$907 = $562;
           break;
          } else {
           $$lcssa322 = $617;$$pre$i2$i$i107 = $$pre$i2$i$i147;$__ng$0$lcssa323 = $__ng$0;
           break L162;
          }
         }
         $569 = HEAP32[$562>>2]|0;
         $570 = (($569) + 36|0);
         $571 = HEAP32[$570>>2]|0;
         __THREW__ = 0;
         $572 = (invoke_ii($571|0,($562|0))|0);
         $573 = __THREW__; __THREW__ = 0;
         $574 = $573&1;
         if ($574) {
          label = 39;
          break L23;
         }
         $575 = ($572|0)==(-1);
         if ($575) {
          HEAP32[$__e>>2] = 0;
          $905 = 0;
          label = 229;
          break;
         } else {
          $576 = ($$pre$i2$i$i147|0)==(0|0);
          $tmp$i$i149 = $561 ^ $576;
          if ($tmp$i$i149) {
           $906 = $$pre$i2$i$i147;$907 = $$pre$i2$i$i147;
           break;
          } else {
           $$lcssa322 = $617;$$pre$i2$i$i107 = $$pre$i2$i$i147;$__ng$0$lcssa323 = $__ng$0;
           break L162;
          }
         }
        }
       } while(0);
       if ((label|0) == 229) {
        label = 0;
        if ($561) {
         $$lcssa322 = $617;$$pre$i2$i$i107 = $905;$__ng$0$lcssa323 = $__ng$0;
         break;
        } else {
         $906 = $905;$907 = 0;
        }
       }
       $577 = HEAP32[$__b>>2]|0;
       $578 = (($577) + 12|0);
       $579 = HEAP32[$578>>2]|0;
       $580 = (($577) + 16|0);
       $581 = HEAP32[$580>>2]|0;
       $582 = ($579|0)==($581|0);
       if ($582) {
        $583 = HEAP32[$577>>2]|0;
        $584 = (($583) + 36|0);
        $585 = HEAP32[$584>>2]|0;
        __THREW__ = 0;
        $586 = (invoke_ii($585|0,($577|0))|0);
        $587 = __THREW__; __THREW__ = 0;
        $588 = $587&1;
        if ($588) {
         label = 39;
         break L23;
        } else {
         $$0$i$i139 = $586;
        }
       } else {
        $589 = HEAP8[$579>>0]|0;
        $590 = $589&255;
        $$0$i$i139 = $590;
       }
       $591 = $$0$i$i139&255;
       $isascii1$i137 = ($591<<24>>24)>(-1);
       if ($isascii1$i137) {
        $sext209 = $$0$i$i139 << 24;
        $592 = $sext209 >> 24;
        $593 = HEAP32[$16>>2]|0;
        $594 = (($593) + ($592<<1)|0);
        $595 = HEAP16[$594>>1]|0;
        $596 = $595 & 2048;
        $597 = ($596<<16>>16)==(0);
        if ($597) {
         label = 240;
        } else {
         $598 = HEAP32[$__wn>>2]|0;
         $599 = HEAP32[$0>>2]|0;
         $600 = ($598|0)==($599|0);
         if ($600) {
          __THREW__ = 0;
          invoke_viii(479,($__wb|0),($__wn|0),($0|0));
          $601 = __THREW__; __THREW__ = 0;
          $602 = $601&1;
          if ($602) {
           label = 39;
           break L23;
          }
          $$pre277 = HEAP32[$__wn>>2]|0;
          $604 = $$pre277;
         } else {
          $604 = $598;
         }
         $603 = (($604) + 1|0);
         HEAP32[$__wn>>2] = $603;
         HEAP8[$604>>0] = $591;
         $605 = (($__ng$0) + 1)|0;
         $908 = $617;$__ng$1 = $605;
        }
       } else {
        label = 240;
       }
       if ((label|0) == 240) {
        label = 0;
        $606 = HEAP8[$__grp>>0]|0;
        $607 = $606 & 1;
        $608 = ($607<<24>>24)==(0);
        if ($608) {
         $610 = $606&255;
         $611 = $610 >>> 1;
         $612 = $611;
        } else {
         $609 = HEAP32[$30>>2]|0;
         $612 = $609;
        }
        $613 = ($612|0)!=(0);
        $614 = ($__ng$0|0)!=(0);
        $or$cond7 = $614 & $613;
        $615 = ($591<<24>>24)==($65<<24>>24);
        $or$cond13 = $or$cond7 & $615;
        if (!($or$cond13)) {
         $$lcssa322 = $617;$$pre$i2$i$i107 = $906;$__ng$0$lcssa323 = $__ng$0;
         break;
        }
        $616 = HEAP32[$__ge>>2]|0;
        $618 = ($617|0)==($616|0);
        if ($618) {
         __THREW__ = 0;
         invoke_viii(480,($__gb|0),($__gn|0),($__ge|0));
         $619 = __THREW__; __THREW__ = 0;
         $620 = $619&1;
         if ($620) {
          label = 39;
          break L23;
         }
         $$pre279 = HEAP32[$__gn>>2]|0;
         $622 = $$pre279;
        } else {
         $622 = $617;
        }
        $621 = (($622) + 4|0);
        HEAP32[$__gn>>2] = $621;
        HEAP32[$622>>2] = $__ng$0;
        $908 = $621;$__ng$1 = 0;
       }
       $623 = HEAP32[$__b>>2]|0;
       $624 = (($623) + 12|0);
       $625 = HEAP32[$624>>2]|0;
       $626 = (($623) + 16|0);
       $627 = HEAP32[$626>>2]|0;
       $628 = ($625|0)==($627|0);
       if ($628) {
        $629 = HEAP32[$623>>2]|0;
        $630 = (($629) + 40|0);
        $631 = HEAP32[$630>>2]|0;
        __THREW__ = 0;
        (invoke_ii($631|0,($623|0))|0);
        $632 = __THREW__; __THREW__ = 0;
        $633 = $632&1;
        if ($633) {
         label = 39;
         break L23;
        }
       } else {
        $634 = (($625) + 1|0);
        HEAP32[$624>>2] = $634;
       }
       $$pre$i2$i$i147 = $906;$562 = $907;$617 = $908;$__ng$0 = $__ng$1;
      }
      $635 = HEAP32[$__gb>>2]|0;
      $636 = ($635|0)!=($$lcssa322|0);
      $637 = ($__ng$0$lcssa323|0)!=(0);
      $or$cond9 = $637 & $636;
      if ($or$cond9) {
       $638 = HEAP32[$__ge>>2]|0;
       $639 = ($$lcssa322|0)==($638|0);
       if ($639) {
        __THREW__ = 0;
        invoke_viii(480,($__gb|0),($__gn|0),($__ge|0));
        $640 = __THREW__; __THREW__ = 0;
        $641 = $640&1;
        if ($641) {
         label = 40;
         break L23;
        }
        $$pre273 = HEAP32[$__gn>>2]|0;
        $643 = $$pre273;
       } else {
        $643 = $$lcssa322;
       }
       $642 = (($643) + 4|0);
       HEAP32[$__gn>>2] = $642;
       HEAP32[$643>>2] = $__ng$0$lcssa323;
       $909 = $642;
      } else {
       $909 = $$lcssa322;
      }
      $644 = HEAP32[$__fd>>2]|0;
      $645 = ($644|0)>(0);
      if ($645) {
       $646 = HEAP32[$__b>>2]|0;
       $647 = ($646|0)==(0|0);
       do {
        if ($647) {
         $660 = 0;
        } else {
         $648 = (($646) + 12|0);
         $649 = HEAP32[$648>>2]|0;
         $650 = (($646) + 16|0);
         $651 = HEAP32[$650>>2]|0;
         $652 = ($649|0)==($651|0);
         if ($652) {
          $653 = HEAP32[$646>>2]|0;
          $654 = (($653) + 36|0);
          $655 = HEAP32[$654>>2]|0;
          __THREW__ = 0;
          $656 = (invoke_ii($655|0,($646|0))|0);
          $657 = __THREW__; __THREW__ = 0;
          $658 = $657&1;
          if ($658) {
           label = 40;
           break L23;
          }
          $659 = ($656|0)==(-1);
          if ($659) {
           HEAP32[$__b>>2] = 0;
           $660 = 0;
           break;
          } else {
           $$pre$i$i$i103 = HEAP32[$__b>>2]|0;
           $660 = $$pre$i$i$i103;
           break;
          }
         } else {
          $660 = $646;
         }
        }
       } while(0);
       $661 = ($660|0)==(0|0);
       $662 = ($$pre$i2$i$i107|0)==(0|0);
       do {
        if ($662) {
         label = 270;
        } else {
         $663 = (($$pre$i2$i$i107) + 12|0);
         $664 = HEAP32[$663>>2]|0;
         $665 = (($$pre$i2$i$i107) + 16|0);
         $666 = HEAP32[$665>>2]|0;
         $667 = ($664|0)==($666|0);
         if ($667) {
          $668 = HEAP32[$$pre$i2$i$i107>>2]|0;
          $669 = (($668) + 36|0);
          $670 = HEAP32[$669>>2]|0;
          __THREW__ = 0;
          $671 = (invoke_ii($670|0,($$pre$i2$i$i107|0))|0);
          $672 = __THREW__; __THREW__ = 0;
          $673 = $672&1;
          if ($673) {
           label = 40;
           break L23;
          }
          $674 = ($671|0)==(-1);
          if ($674) {
           HEAP32[$__e>>2] = 0;
           label = 270;
           break;
          }
         }
         if ($661) {
          $910 = $$pre$i2$i$i107;
         } else {
          label = 275;
          break L23;
         }
        }
       } while(0);
       if ((label|0) == 270) {
        label = 0;
        if ($661) {
         label = 275;
         break L23;
        } else {
         $910 = 0;
        }
       }
       $675 = HEAP32[$__b>>2]|0;
       $676 = (($675) + 12|0);
       $677 = HEAP32[$676>>2]|0;
       $678 = (($675) + 16|0);
       $679 = HEAP32[$678>>2]|0;
       $680 = ($677|0)==($679|0);
       if ($680) {
        $681 = HEAP32[$675>>2]|0;
        $682 = (($681) + 36|0);
        $683 = HEAP32[$682>>2]|0;
        __THREW__ = 0;
        $684 = (invoke_ii($683|0,($675|0))|0);
        $685 = __THREW__; __THREW__ = 0;
        $686 = $685&1;
        if ($686) {
         label = 40;
         break L23;
        } else {
         $$0$i$i96 = $684;
        }
       } else {
        $687 = HEAP8[$677>>0]|0;
        $688 = $687&255;
        $$0$i$i96 = $688;
       }
       $689 = $$0$i$i96&255;
       $690 = HEAP8[$__dp>>0]|0;
       $691 = ($689<<24>>24)==($690<<24>>24);
       if (!($691)) {
        label = 275;
        break L23;
       }
       $694 = HEAP32[$__b>>2]|0;
       $695 = (($694) + 12|0);
       $696 = HEAP32[$695>>2]|0;
       $697 = (($694) + 16|0);
       $698 = HEAP32[$697>>2]|0;
       $699 = ($696|0)==($698|0);
       if ($699) {
        $700 = HEAP32[$694>>2]|0;
        $701 = (($700) + 40|0);
        $702 = HEAP32[$701>>2]|0;
        __THREW__ = 0;
        (invoke_ii($702|0,($694|0))|0);
        $703 = __THREW__; __THREW__ = 0;
        $704 = $703&1;
        if ($704) {
         label = 40;
         break L23;
        }
       } else {
        $705 = (($696) + 1|0);
        HEAP32[$695>>2] = $705;
       }
       $$pre$i2$i$i83 = $910;$706 = $644;$724 = $910;
       while(1) {
        $707 = ($706|0)>(0);
        if (!($707)) {
         break;
        }
        $708 = HEAP32[$__b>>2]|0;
        $709 = ($708|0)==(0|0);
        do {
         if ($709) {
          $722 = 0;
         } else {
          $710 = (($708) + 12|0);
          $711 = HEAP32[$710>>2]|0;
          $712 = (($708) + 16|0);
          $713 = HEAP32[$712>>2]|0;
          $714 = ($711|0)==($713|0);
          if ($714) {
           $715 = HEAP32[$708>>2]|0;
           $716 = (($715) + 36|0);
           $717 = HEAP32[$716>>2]|0;
           __THREW__ = 0;
           $718 = (invoke_ii($717|0,($708|0))|0);
           $719 = __THREW__; __THREW__ = 0;
           $720 = $719&1;
           if ($720) {
            label = 38;
            break L23;
           }
           $721 = ($718|0)==(-1);
           if ($721) {
            HEAP32[$__b>>2] = 0;
            $722 = 0;
            break;
           } else {
            $$pre$i$i$i79 = HEAP32[$__b>>2]|0;
            $722 = $$pre$i$i$i79;
            break;
           }
          } else {
           $722 = $708;
          }
         }
        } while(0);
        $723 = ($722|0)==(0|0);
        $725 = ($724|0)==(0|0);
        do {
         if ($725) {
          $$pre$i2$i$i83274$ph = $$pre$i2$i$i83;
          label = 293;
         } else {
          $726 = (($724) + 12|0);
          $727 = HEAP32[$726>>2]|0;
          $728 = (($724) + 16|0);
          $729 = HEAP32[$728>>2]|0;
          $730 = ($727|0)==($729|0);
          if (!($730)) {
           if ($723) {
            $$pre$i2$i$i83274287 = $$pre$i2$i$i83;$911 = $724;
            break;
           } else {
            label = 300;
            break L23;
           }
          }
          $731 = HEAP32[$724>>2]|0;
          $732 = (($731) + 36|0);
          $733 = HEAP32[$732>>2]|0;
          __THREW__ = 0;
          $734 = (invoke_ii($733|0,($724|0))|0);
          $735 = __THREW__; __THREW__ = 0;
          $736 = $735&1;
          if ($736) {
           label = 38;
           break L23;
          }
          $737 = ($734|0)==(-1);
          if ($737) {
           HEAP32[$__e>>2] = 0;
           $$pre$i2$i$i83274$ph = 0;
           label = 293;
           break;
          } else {
           $738 = ($$pre$i2$i$i83|0)==(0|0);
           $tmp$i$i85 = $723 ^ $738;
           if ($tmp$i$i85) {
            $$pre$i2$i$i83274287 = $$pre$i2$i$i83;$911 = $$pre$i2$i$i83;
            break;
           } else {
            label = 300;
            break L23;
           }
          }
         }
        } while(0);
        if ((label|0) == 293) {
         label = 0;
         if ($723) {
          label = 300;
          break L23;
         } else {
          $$pre$i2$i$i83274287 = $$pre$i2$i$i83274$ph;$911 = 0;
         }
        }
        $739 = HEAP32[$__b>>2]|0;
        $740 = (($739) + 12|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = (($739) + 16|0);
        $743 = HEAP32[$742>>2]|0;
        $744 = ($741|0)==($743|0);
        if ($744) {
         $745 = HEAP32[$739>>2]|0;
         $746 = (($745) + 36|0);
         $747 = HEAP32[$746>>2]|0;
         __THREW__ = 0;
         $748 = (invoke_ii($747|0,($739|0))|0);
         $749 = __THREW__; __THREW__ = 0;
         $750 = $749&1;
         if ($750) {
          label = 38;
          break L23;
         } else {
          $$0$i$i74 = $748;
         }
        } else {
         $751 = HEAP8[$741>>0]|0;
         $752 = $751&255;
         $$0$i$i74 = $752;
        }
        $753 = $$0$i$i74&255;
        $isascii1$i72 = ($753<<24>>24)>(-1);
        if (!($isascii1$i72)) {
         label = 300;
         break L23;
        }
        $sext = $$0$i$i74 << 24;
        $754 = $sext >> 24;
        $755 = HEAP32[$16>>2]|0;
        $756 = (($755) + ($754<<1)|0);
        $757 = HEAP16[$756>>1]|0;
        $758 = $757 & 2048;
        $759 = ($758<<16>>16)==(0);
        if ($759) {
         label = 300;
         break L23;
        }
        $762 = HEAP32[$__wn>>2]|0;
        $763 = HEAP32[$0>>2]|0;
        $764 = ($762|0)==($763|0);
        if ($764) {
         __THREW__ = 0;
         invoke_viii(479,($__wb|0),($__wn|0),($0|0));
         $765 = __THREW__; __THREW__ = 0;
         $766 = $765&1;
         if ($766) {
          label = 38;
          break L23;
         }
        }
        $767 = HEAP32[$__b>>2]|0;
        $768 = (($767) + 12|0);
        $769 = HEAP32[$768>>2]|0;
        $770 = (($767) + 16|0);
        $771 = HEAP32[$770>>2]|0;
        $772 = ($769|0)==($771|0);
        if ($772) {
         $773 = HEAP32[$767>>2]|0;
         $774 = (($773) + 36|0);
         $775 = HEAP32[$774>>2]|0;
         __THREW__ = 0;
         $776 = (invoke_ii($775|0,($767|0))|0);
         $777 = __THREW__; __THREW__ = 0;
         $778 = $777&1;
         if ($778) {
          label = 38;
          break L23;
         } else {
          $$0$i$i67 = $776;
         }
        } else {
         $779 = HEAP8[$769>>0]|0;
         $780 = $779&255;
         $$0$i$i67 = $780;
        }
        $781 = $$0$i$i67&255;
        $782 = HEAP32[$__wn>>2]|0;
        $783 = (($782) + 1|0);
        HEAP32[$__wn>>2] = $783;
        HEAP8[$782>>0] = $781;
        $784 = (($706) + -1)|0;
        HEAP32[$__fd>>2] = $784;
        $785 = HEAP32[$__b>>2]|0;
        $786 = (($785) + 12|0);
        $787 = HEAP32[$786>>2]|0;
        $788 = (($785) + 16|0);
        $789 = HEAP32[$788>>2]|0;
        $790 = ($787|0)==($789|0);
        if ($790) {
         $791 = HEAP32[$785>>2]|0;
         $792 = (($791) + 40|0);
         $793 = HEAP32[$792>>2]|0;
         __THREW__ = 0;
         (invoke_ii($793|0,($785|0))|0);
         $794 = __THREW__; __THREW__ = 0;
         $795 = $794&1;
         if ($795) {
          label = 38;
          break L23;
         }
        } else {
         $796 = (($787) + 1|0);
         HEAP32[$786>>2] = $796;
        }
        $$pre$i2$i$i83 = $$pre$i2$i$i83274287;$706 = $784;$724 = $911;
       }
      }
      $797 = HEAP32[$__wn>>2]|0;
      $798 = HEAP32[$__wb>>2]|0;
      $799 = ($797|0)==($798|0);
      if ($799) {
       label = 312;
       break L23;
      } else {
       $898 = $909;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     case 2:  {
      $401 = ($__trailing_sign$0|0)!=(0|0);
      $402 = ($__p$0>>>0)<(2);
      $or$cond = $402 | $401;
      if (!($or$cond)) {
       $403 = ($__p$0|0)==(2);
       if ($403) {
        $404 = HEAP8[$29>>0]|0;
        $405 = ($404<<24>>24)!=(0);
        $406 = $405;
       } else {
        $406 = 0;
       }
       $brmerge = $22 | $406;
       if (!($brmerge)) {
        $898 = $896;$__trailing_sign$1 = 0;
        break L46;
       }
      }
      $407 = HEAP8[$__sym>>0]|0;
      $408 = $407 & 1;
      $409 = ($408<<24>>24)==(0);
      $410 = HEAP32[$24>>2]|0;
      $$ = $409 ? $23 : $410;
      $411 = ($__p$0|0)==(0);
      L297: do {
       if ($411) {
        $$ph = $$;
       } else {
        $412 = (($__p$0) + -1)|0;
        $413 = (($__pat) + ($412)|0);
        $414 = HEAP8[$413>>0]|0;
        $switch = ($414&255)<(2);
        if ($switch) {
         $415 = $407&255;
         $416 = $415 >>> 1;
         $417 = HEAP32[$16>>2]|0;
         $418 = HEAP32[$24>>2]|0;
         $419 = HEAP32[$25>>2]|0;
         $421 = $$;
         while(1) {
          $$290 = $409 ? $23 : $418;
          $$291 = $409 ? $416 : $419;
          $420 = (($$290) + ($$291)|0);
          $422 = ($421|0)==($420|0);
          if ($422) {
           $$lcssa = $421;
           break;
          }
          $423 = HEAP8[$421>>0]|0;
          $isascii1$i170 = ($423<<24>>24)>(-1);
          if (!($isascii1$i170)) {
           $$lcssa = $421;
           break;
          }
          $424 = $423 << 24 >> 24;
          $425 = (($417) + ($424<<1)|0);
          $426 = HEAP16[$425>>1]|0;
          $427 = $426 & 8192;
          $428 = ($427<<16>>16)==(0);
          if ($428) {
           $$lcssa = $421;
           break;
          }
          $429 = (($421) + 1|0);
          $421 = $429;
         }
         $$292 = $409 ? $23 : $418;
         $430 = $$lcssa;
         $431 = $$292;
         $432 = (($430) - ($431))|0;
         $433 = HEAP8[$__spaces>>0]|0;
         $434 = $433 & 1;
         $435 = ($434<<24>>24)==(0);
         if ($435) {
          $437 = $433&255;
          $438 = $437 >>> 1;
          $440 = $438;
         } else {
          $436 = HEAP32[$28>>2]|0;
          $440 = $436;
         }
         $439 = ($432>>>0)>($440>>>0);
         do {
          if (!($439)) {
           if ($435) {
            $444 = $433&255;
            $445 = $444 >>> 1;
            $$sum284 = (($445) - ($432))|0;
            $446 = ((($__spaces) + ($$sum284)|0) + 1|0);
            $447 = $433&255;
            $448 = $447 >>> 1;
            $450 = $26;$451 = $448;$903 = $446;
           } else {
            $441 = HEAP32[$27>>2]|0;
            $442 = HEAP32[$28>>2]|0;
            $$sum = (($442) - ($432))|0;
            $443 = (($441) + ($$sum)|0);
            $450 = $441;$451 = $442;$903 = $443;
           }
           $449 = (($450) + ($451)|0);
           $$293 = $409 ? $23 : $418;
           $452 = $903;$456 = $$293;
           while(1) {
            $453 = ($452|0)==($449|0);
            if ($453) {
             label = 183;
             break;
            }
            $454 = HEAP8[$452>>0]|0;
            $455 = HEAP8[$456>>0]|0;
            $457 = ($454<<24>>24)==($455<<24>>24);
            if (!($457)) {
             label = 181;
             break;
            }
            $458 = (($452) + 1|0);
            $459 = (($456) + 1|0);
            $452 = $458;$456 = $459;
           }
           if ((label|0) == 181) {
            label = 0;
            break;
           }
           else if ((label|0) == 183) {
            label = 0;
            $$ph = $$lcssa;
            break L297;
           }
          }
         } while(0);
         $$294 = $409 ? $23 : $418;
         $$ph = $$294;
        } else {
         $$ph = $$;
        }
       }
      } while(0);
      $$pre$i2$i$i164 = $897;$461 = $407;$470 = $$ph;$488 = $897;
      L325: while(1) {
       $460 = $461 & 1;
       $462 = ($460<<24>>24)==(0);
       if ($462) {
        $465 = $461&255;
        $466 = $465 >>> 1;
        $468 = $23;$469 = $466;
       } else {
        $463 = HEAP32[$24>>2]|0;
        $464 = HEAP32[$25>>2]|0;
        $468 = $463;$469 = $464;
       }
       $467 = (($468) + ($469)|0);
       $471 = ($470|0)==($467|0);
       if ($471) {
        $$lcssa324 = $470;
        break;
       }
       $472 = HEAP32[$__b>>2]|0;
       $473 = ($472|0)==(0|0);
       do {
        if ($473) {
         $486 = 0;
        } else {
         $474 = (($472) + 12|0);
         $475 = HEAP32[$474>>2]|0;
         $476 = (($472) + 16|0);
         $477 = HEAP32[$476>>2]|0;
         $478 = ($475|0)==($477|0);
         if ($478) {
          $479 = HEAP32[$472>>2]|0;
          $480 = (($479) + 36|0);
          $481 = HEAP32[$480>>2]|0;
          __THREW__ = 0;
          $482 = (invoke_ii($481|0,($472|0))|0);
          $483 = __THREW__; __THREW__ = 0;
          $484 = $483&1;
          if ($484) {
           label = 37;
           break L23;
          }
          $485 = ($482|0)==(-1);
          if ($485) {
           HEAP32[$__b>>2] = 0;
           $486 = 0;
           break;
          } else {
           $$pre$i$i$i160 = HEAP32[$__b>>2]|0;
           $486 = $$pre$i$i$i160;
           break;
          }
         } else {
          $486 = $472;
         }
        }
       } while(0);
       $487 = ($486|0)==(0|0);
       $489 = ($488|0)==(0|0);
       do {
        if ($489) {
         $$pre$i2$i$i164270 = $$pre$i2$i$i164;
         label = 201;
        } else {
         $490 = (($488) + 12|0);
         $491 = HEAP32[$490>>2]|0;
         $492 = (($488) + 16|0);
         $493 = HEAP32[$492>>2]|0;
         $494 = ($491|0)==($493|0);
         if (!($494)) {
          if ($487) {
           $$pre$i2$i$i164269 = $$pre$i2$i$i164;$904 = $488;
           break;
          } else {
           $$lcssa324 = $470;
           break L325;
          }
         }
         $495 = HEAP32[$488>>2]|0;
         $496 = (($495) + 36|0);
         $497 = HEAP32[$496>>2]|0;
         __THREW__ = 0;
         $498 = (invoke_ii($497|0,($488|0))|0);
         $499 = __THREW__; __THREW__ = 0;
         $500 = $499&1;
         if ($500) {
          label = 37;
          break L23;
         }
         $501 = ($498|0)==(-1);
         if ($501) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i164270 = 0;
          label = 201;
          break;
         } else {
          $502 = ($$pre$i2$i$i164|0)==(0|0);
          $tmp$i$i166 = $487 ^ $502;
          if ($tmp$i$i166) {
           $$pre$i2$i$i164269 = $$pre$i2$i$i164;$904 = $$pre$i2$i$i164;
           break;
          } else {
           $$lcssa324 = $470;
           break L325;
          }
         }
        }
       } while(0);
       if ((label|0) == 201) {
        label = 0;
        if ($487) {
         $$lcssa324 = $470;
         break;
        } else {
         $$pre$i2$i$i164269 = $$pre$i2$i$i164270;$904 = 0;
        }
       }
       $503 = HEAP32[$__b>>2]|0;
       $504 = (($503) + 12|0);
       $505 = HEAP32[$504>>2]|0;
       $506 = (($503) + 16|0);
       $507 = HEAP32[$506>>2]|0;
       $508 = ($505|0)==($507|0);
       if ($508) {
        $509 = HEAP32[$503>>2]|0;
        $510 = (($509) + 36|0);
        $511 = HEAP32[$510>>2]|0;
        __THREW__ = 0;
        $512 = (invoke_ii($511|0,($503|0))|0);
        $513 = __THREW__; __THREW__ = 0;
        $514 = $513&1;
        if ($514) {
         label = 37;
         break L23;
        } else {
         $$0$i$i156 = $512;
        }
       } else {
        $515 = HEAP8[$505>>0]|0;
        $516 = $515&255;
        $$0$i$i156 = $516;
       }
       $517 = $$0$i$i156&255;
       $518 = HEAP8[$470>>0]|0;
       $519 = ($517<<24>>24)==($518<<24>>24);
       if (!($519)) {
        $$lcssa324 = $470;
        break;
       }
       $520 = HEAP32[$__b>>2]|0;
       $521 = (($520) + 12|0);
       $522 = HEAP32[$521>>2]|0;
       $523 = (($520) + 16|0);
       $524 = HEAP32[$523>>2]|0;
       $525 = ($522|0)==($524|0);
       if ($525) {
        $526 = HEAP32[$520>>2]|0;
        $527 = (($526) + 40|0);
        $528 = HEAP32[$527>>2]|0;
        __THREW__ = 0;
        (invoke_ii($528|0,($520|0))|0);
        $529 = __THREW__; __THREW__ = 0;
        $530 = $529&1;
        if ($530) {
         label = 37;
         break L23;
        }
       } else {
        $531 = (($522) + 1|0);
        HEAP32[$521>>2] = $531;
       }
       $532 = (($470) + 1|0);
       $$pre268 = HEAP8[$__sym>>0]|0;
       $$pre$i2$i$i164 = $$pre$i2$i$i164269;$461 = $$pre268;$470 = $532;$488 = $904;
      }
      if ($22) {
       $533 = HEAP8[$__sym>>0]|0;
       $534 = $533 & 1;
       $535 = ($534<<24>>24)==(0);
       if ($535) {
        $538 = $533&255;
        $539 = $538 >>> 1;
        $541 = $23;$542 = $539;
       } else {
        $536 = HEAP32[$24>>2]|0;
        $537 = HEAP32[$25>>2]|0;
        $541 = $536;$542 = $537;
       }
       $540 = (($541) + ($542)|0);
       $543 = ($$lcssa324|0)==($540|0);
       if ($543) {
        $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
       } else {
        label = 216;
        break L23;
       }
      } else {
       $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     default: {
      $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
     }
     }
    } while(0);
    if ((label|0) == 58) {
     label = 0;
     $$pre$i2$i$i52 = $897;$145 = $897;
     L369: while(1) {
      $129 = HEAP32[$__b>>2]|0;
      $130 = ($129|0)==(0|0);
      do {
       if ($130) {
        $143 = 0;
       } else {
        $131 = (($129) + 12|0);
        $132 = HEAP32[$131>>2]|0;
        $133 = (($129) + 16|0);
        $134 = HEAP32[$133>>2]|0;
        $135 = ($132|0)==($134|0);
        if ($135) {
         $136 = HEAP32[$129>>2]|0;
         $137 = (($136) + 36|0);
         $138 = HEAP32[$137>>2]|0;
         __THREW__ = 0;
         $139 = (invoke_ii($138|0,($129|0))|0);
         $140 = __THREW__; __THREW__ = 0;
         $141 = $140&1;
         if ($141) {
          label = 36;
          break L23;
         }
         $142 = ($139|0)==(-1);
         if ($142) {
          HEAP32[$__b>>2] = 0;
          $143 = 0;
          break;
         } else {
          $$pre$i$i$i48 = HEAP32[$__b>>2]|0;
          $143 = $$pre$i$i$i48;
          break;
         }
        } else {
         $143 = $129;
        }
       }
      } while(0);
      $144 = ($143|0)==(0|0);
      $146 = ($145|0)==(0|0);
      do {
       if ($146) {
        $$pre$i2$i$i52256 = $$pre$i2$i$i52;
        label = 71;
       } else {
        $147 = (($145) + 12|0);
        $148 = HEAP32[$147>>2]|0;
        $149 = (($145) + 16|0);
        $150 = HEAP32[$149>>2]|0;
        $151 = ($148|0)==($150|0);
        if (!($151)) {
         if ($144) {
          $$pre$i2$i$i52258 = $$pre$i2$i$i52;$899 = $145;
          break;
         } else {
          break L369;
         }
        }
        $152 = HEAP32[$145>>2]|0;
        $153 = (($152) + 36|0);
        $154 = HEAP32[$153>>2]|0;
        __THREW__ = 0;
        $155 = (invoke_ii($154|0,($145|0))|0);
        $156 = __THREW__; __THREW__ = 0;
        $157 = $156&1;
        if ($157) {
         label = 36;
         break L23;
        }
        $158 = ($155|0)==(-1);
        if ($158) {
         HEAP32[$__e>>2] = 0;
         $$pre$i2$i$i52256 = 0;
         label = 71;
         break;
        } else {
         $159 = ($$pre$i2$i$i52|0)==(0|0);
         $tmp$i$i54 = $144 ^ $159;
         if ($tmp$i$i54) {
          $$pre$i2$i$i52258 = $$pre$i2$i$i52;$899 = $$pre$i2$i$i52;
          break;
         } else {
          break L369;
         }
        }
       }
      } while(0);
      if ((label|0) == 71) {
       label = 0;
       if ($144) {
        break;
       } else {
        $$pre$i2$i$i52258 = $$pre$i2$i$i52256;$899 = 0;
       }
      }
      $160 = HEAP32[$__b>>2]|0;
      $161 = (($160) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = (($160) + 16|0);
      $164 = HEAP32[$163>>2]|0;
      $165 = ($162|0)==($164|0);
      if ($165) {
       $166 = HEAP32[$160>>2]|0;
       $167 = (($166) + 36|0);
       $168 = HEAP32[$167>>2]|0;
       __THREW__ = 0;
       $169 = (invoke_ii($168|0,($160|0))|0);
       $170 = __THREW__; __THREW__ = 0;
       $171 = $170&1;
       if ($171) {
        label = 36;
        break L23;
       } else {
        $$0$i$i58 = $169;
       }
      } else {
       $172 = HEAP8[$162>>0]|0;
       $173 = $172&255;
       $$0$i$i58 = $173;
      }
      $174 = $$0$i$i58&255;
      $isascii1$i61 = ($174<<24>>24)>(-1);
      if (!($isascii1$i61)) {
       break;
      }
      $sext210 = $$0$i$i58 << 24;
      $175 = $sext210 >> 24;
      $176 = HEAP32[$16>>2]|0;
      $177 = (($176) + ($175<<1)|0);
      $178 = HEAP16[$177>>1]|0;
      $179 = $178 & 8192;
      $180 = ($179<<16>>16)==(0);
      if ($180) {
       break;
      }
      $181 = HEAP32[$__b>>2]|0;
      $182 = (($181) + 12|0);
      $183 = HEAP32[$182>>2]|0;
      $184 = (($181) + 16|0);
      $185 = HEAP32[$184>>2]|0;
      $186 = ($183|0)==($185|0);
      if ($186) {
       $187 = HEAP32[$181>>2]|0;
       $188 = (($187) + 40|0);
       $189 = HEAP32[$188>>2]|0;
       __THREW__ = 0;
       $190 = (invoke_ii($189|0,($181|0))|0);
       $191 = __THREW__; __THREW__ = 0;
       $192 = $191&1;
       if ($192) {
        label = 36;
        break L23;
       } else {
        $$0$i$i64 = $190;
       }
      } else {
       $193 = (($183) + 1|0);
       HEAP32[$182>>2] = $193;
       $194 = HEAP8[$183>>0]|0;
       $195 = $194&255;
       $$0$i$i64 = $195;
      }
      $196 = $$0$i$i64&255;
      __THREW__ = 0;
      invoke_vii(372,($__spaces|0),($196|0));
      $197 = __THREW__; __THREW__ = 0;
      $198 = $197&1;
      if ($198) {
       label = 36;
       break L23;
      } else {
       $$pre$i2$i$i52 = $$pre$i2$i$i52258;$145 = $899;
      }
     }
     $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
    }
    $802 = (($__p$0) + 1)|0;
    $896 = $898;$__p$0 = $802;$__trailing_sign$0 = $__trailing_sign$1;
   }
   L403:    switch (label|0) {
    case 36: {
     $68 = ___cxa_find_matching_catch()|0;
     $69 = tempRet0;
     $lpad$phi$index = $68;$lpad$phi$index7 = $69;
     break L21;
     break;
    }
    case 37: {
     $70 = ___cxa_find_matching_catch()|0;
     $71 = tempRet0;
     $lpad$phi$index = $70;$lpad$phi$index7 = $71;
     break L21;
     break;
    }
    case 38: {
     $72 = ___cxa_find_matching_catch()|0;
     $73 = tempRet0;
     $lpad$phi$index = $72;$lpad$phi$index7 = $73;
     break L21;
     break;
    }
    case 39: {
     $74 = ___cxa_find_matching_catch()|0;
     $75 = tempRet0;
     $lpad$phi$index = $74;$lpad$phi$index7 = $75;
     break L21;
     break;
    }
    case 40: {
     $76 = ___cxa_find_matching_catch()|0;
     $77 = tempRet0;
     $lpad$phi$index = $76;$lpad$phi$index7 = $77;
     break L21;
     break;
    }
    case 56: {
     $126 = HEAP32[$__err>>2]|0;
     $127 = $126 | 4;
     HEAP32[$__err>>2] = $127;
     $$0 = 0;
     break;
    }
    case 158: {
     $399 = HEAP32[$__err>>2]|0;
     $400 = $399 | 4;
     HEAP32[$__err>>2] = $400;
     $$0 = 0;
     break;
    }
    case 216: {
     $544 = HEAP32[$__err>>2]|0;
     $545 = $544 | 4;
     HEAP32[$__err>>2] = $545;
     $$0 = 0;
     break;
    }
    case 275: {
     $692 = HEAP32[$__err>>2]|0;
     $693 = $692 | 4;
     HEAP32[$__err>>2] = $693;
     $$0 = 0;
     break;
    }
    case 300: {
     $760 = HEAP32[$__err>>2]|0;
     $761 = $760 | 4;
     HEAP32[$__err>>2] = $761;
     $$0 = 0;
     break;
    }
    case 312: {
     $800 = HEAP32[$__err>>2]|0;
     $801 = $800 | 4;
     HEAP32[$__err>>2] = $801;
     $$0 = 0;
     break;
    }
    case 315: {
     $803 = ($__trailing_sign$0$lcssa|0)==(0|0);
     do {
      if (!($803)) {
       $804 = (($__trailing_sign$0$lcssa) + 1|0);
       $805 = (($__trailing_sign$0$lcssa) + 8|0);
       $806 = (($__trailing_sign$0$lcssa) + 4|0);
       $__i$0 = 1;
       L410: while(1) {
        $807 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $808 = $807 & 1;
        $809 = ($808<<24>>24)==(0);
        if ($809) {
         $811 = $807&255;
         $812 = $811 >>> 1;
         $814 = $812;
        } else {
         $810 = HEAP32[$806>>2]|0;
         $814 = $810;
        }
        $813 = ($__i$0>>>0)<($814>>>0);
        if (!($813)) {
         label = 345;
         break;
        }
        $815 = HEAP32[$__b>>2]|0;
        $816 = ($815|0)==(0|0);
        do {
         if ($816) {
          $829 = 0;
         } else {
          $817 = (($815) + 12|0);
          $818 = HEAP32[$817>>2]|0;
          $819 = (($815) + 16|0);
          $820 = HEAP32[$819>>2]|0;
          $821 = ($818|0)==($820|0);
          if ($821) {
           $822 = HEAP32[$815>>2]|0;
           $823 = (($822) + 36|0);
           $824 = HEAP32[$823>>2]|0;
           __THREW__ = 0;
           $825 = (invoke_ii($824|0,($815|0))|0);
           $826 = __THREW__; __THREW__ = 0;
           $827 = $826&1;
           if ($827) {
            label = 35;
            break L410;
           }
           $828 = ($825|0)==(-1);
           if ($828) {
            HEAP32[$__b>>2] = 0;
            $829 = 0;
            break;
           } else {
            $$pre$i$i$i = HEAP32[$__b>>2]|0;
            $829 = $$pre$i$i$i;
            break;
           }
          } else {
           $829 = $815;
          }
         }
        } while(0);
        $830 = ($829|0)==(0|0);
        $831 = HEAP32[$__e>>2]|0;
        $832 = ($831|0)==(0|0);
        do {
         if ($832) {
          label = 333;
         } else {
          $833 = (($831) + 12|0);
          $834 = HEAP32[$833>>2]|0;
          $835 = (($831) + 16|0);
          $836 = HEAP32[$835>>2]|0;
          $837 = ($834|0)==($836|0);
          if ($837) {
           $838 = HEAP32[$831>>2]|0;
           $839 = (($838) + 36|0);
           $840 = HEAP32[$839>>2]|0;
           __THREW__ = 0;
           $841 = (invoke_ii($840|0,($831|0))|0);
           $842 = __THREW__; __THREW__ = 0;
           $843 = $842&1;
           if ($843) {
            label = 35;
            break L410;
           }
           $844 = ($841|0)==(-1);
           if ($844) {
            HEAP32[$__e>>2] = 0;
            label = 333;
            break;
           }
          }
          if (!($830)) {
           label = 340;
           break L410;
          }
         }
        } while(0);
        if ((label|0) == 333) {
         label = 0;
         if ($830) {
          label = 340;
          break;
         }
        }
        $845 = HEAP32[$__b>>2]|0;
        $846 = (($845) + 12|0);
        $847 = HEAP32[$846>>2]|0;
        $848 = (($845) + 16|0);
        $849 = HEAP32[$848>>2]|0;
        $850 = ($847|0)==($849|0);
        if ($850) {
         $851 = HEAP32[$845>>2]|0;
         $852 = (($851) + 36|0);
         $853 = HEAP32[$852>>2]|0;
         __THREW__ = 0;
         $854 = (invoke_ii($853|0,($845|0))|0);
         $855 = __THREW__; __THREW__ = 0;
         $856 = $855&1;
         if ($856) {
          label = 35;
          break;
         } else {
          $$0$i$i = $854;
         }
        } else {
         $857 = HEAP8[$847>>0]|0;
         $858 = $857&255;
         $$0$i$i = $858;
        }
        $859 = $$0$i$i&255;
        $860 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $861 = $860 & 1;
        $862 = ($861<<24>>24)==(0);
        if ($862) {
         $865 = $804;
        } else {
         $863 = HEAP32[$805>>2]|0;
         $865 = $863;
        }
        $864 = (($865) + ($__i$0)|0);
        $866 = HEAP8[$864>>0]|0;
        $867 = ($859<<24>>24)==($866<<24>>24);
        if (!($867)) {
         label = 340;
         break;
        }
        $870 = (($__i$0) + 1)|0;
        $871 = HEAP32[$__b>>2]|0;
        $872 = (($871) + 12|0);
        $873 = HEAP32[$872>>2]|0;
        $874 = (($871) + 16|0);
        $875 = HEAP32[$874>>2]|0;
        $876 = ($873|0)==($875|0);
        if ($876) {
         $877 = HEAP32[$871>>2]|0;
         $878 = (($877) + 40|0);
         $879 = HEAP32[$878>>2]|0;
         __THREW__ = 0;
         (invoke_ii($879|0,($871|0))|0);
         $880 = __THREW__; __THREW__ = 0;
         $881 = $880&1;
         if ($881) {
          label = 35;
          break;
         }
        } else {
         $882 = (($873) + 1|0);
         HEAP32[$872>>2] = $882;
        }
        $__i$0 = $870;
       }
       if ((label|0) == 35) {
        $66 = ___cxa_find_matching_catch()|0;
        $67 = tempRet0;
        $lpad$phi$index = $66;$lpad$phi$index7 = $67;
        break L21;
       }
       else if ((label|0) == 340) {
        $868 = HEAP32[$__err>>2]|0;
        $869 = $868 | 4;
        HEAP32[$__err>>2] = $869;
        $$0 = 0;
        break L403;
       }
       else if ((label|0) == 345) {
        break;
       }
      }
     } while(0);
     $883 = HEAP32[$__gb>>2]|0;
     $884 = ($883|0)==($$lcssa326|0);
     if ($884) {
      $$0 = 1;
     } else {
      HEAP32[$__et>>2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$883,$$lcssa326,$__et);
      $885 = HEAP32[$__et>>2]|0;
      $886 = ($885|0)==(0);
      if ($886) {
       $$0 = 1;
      } else {
       $887 = HEAP32[$__err>>2]|0;
       $888 = $887 | 4;
       HEAP32[$__err>>2] = $888;
       $$0 = 0;
      }
     }
     break;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $889 = HEAP32[$__gb>>2]|0;
   HEAP32[$__gb>>2] = 0;
   $890 = ($889|0)==(0|0);
   if (!($890)) {
    $891 = HEAP32[$1>>2]|0;
    __THREW__ = 0;
    invoke_vi($891|0,($889|0));
    $892 = __THREW__; __THREW__ = 0;
    $893 = $892&1;
    if ($893) {
     $894 = ___cxa_find_matching_catch(0|0)|0;
     $895 = tempRet0;
     ___clang_call_terminate($894);
     // unreachable;
    }
   }
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $80 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $81 = ($80|0)==(0|0);
 if (!($81)) {
  $82 = HEAP32[$1>>2]|0;
  __THREW__ = 0;
  invoke_vi($82|0,($80|0));
  $83 = __THREW__; __THREW__ = 0;
  $84 = $83&1;
  if ($84) {
   $85 = ___cxa_find_matching_catch(0|0)|0;
   $86 = tempRet0;
   ___clang_call_terminate($85);
   // unreachable;
  }
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(363,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  ___cxa_throw(($0|0),(2576|0),(62|0));
  // unreachable;
 }
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$010 = 0, $$017 = 0, $$018 = 0, $$09 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $__loc = 0, $__neg = 0, $__w$0 = 0, $__w$0$lcssa = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $__wbuf = sp + 32|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 28|0;
 $0 = sp;
 HEAP32[$__wb>>2] = $__wbuf;
 $1 = (($__wb) + 4|0);
 HEAP32[$1>>2] = 475;
 $2 = (($__wbuf) + 100|0);
 __THREW__ = 0;
 invoke_vii(457,($__loc|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $31 = ___cxa_find_matching_catch()|0;
  $32 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$017 = $32;$$09 = $31;$93 = $__wbuf;
  label = 37;
 } else {
  __THREW__ = 0;
  $5 = (invoke_iii(454,($__loc|0),(7032|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  L4: do {
   if (!($7)) {
    HEAP8[$__neg>>0] = 0;
    $8 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $8;
    $9 = (($__iob) + 4|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
    $11 = (invoke_iiiiiiiiiiii(476,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($10|0),($__err|0),($__neg|0),($5|0),($__wb|0),($__wn|0),($2|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     if ($11) {
      $14 = HEAP8[$__v>>0]|0;
      $15 = $14 & 1;
      $16 = ($15<<24>>24)==(0);
      if ($16) {
       $20 = (($__v) + 1|0);
       HEAP8[$20>>0] = 0;
       HEAP8[$__v>>0] = 0;
      } else {
       $17 = (($__v) + 8|0);
       $18 = HEAP32[$17>>2]|0;
       HEAP8[$18>>0] = 0;
       $19 = (($__v) + 4|0);
       HEAP32[$19>>2] = 0;
      }
      $21 = HEAP8[$__neg>>0]|0;
      $22 = ($21<<24>>24)==(0);
      if (!($22)) {
       $23 = HEAP32[$5>>2]|0;
       $24 = (($23) + 28|0);
       $25 = HEAP32[$24>>2]|0;
       __THREW__ = 0;
       $26 = (invoke_iii($25|0,($5|0),45)|0);
       $27 = __THREW__; __THREW__ = 0;
       $28 = $27&1;
       if ($28) {
        break;
       }
       __THREW__ = 0;
       invoke_vii(372,($__v|0),($26|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        break;
       }
      }
      $33 = HEAP32[$5>>2]|0;
      $34 = (($33) + 28|0);
      $35 = HEAP32[$34>>2]|0;
      __THREW__ = 0;
      $36 = (invoke_iii($35|0,($5|0),48)|0);
      $37 = __THREW__; __THREW__ = 0;
      $38 = $37&1;
      if ($38) {
       break;
      }
      $39 = HEAP32[$__wb>>2]|0;
      $40 = HEAP32[$__wn>>2]|0;
      $41 = (($40) + -1|0);
      $__w$0 = $39;
      while(1) {
       $42 = ($__w$0>>>0)<($41>>>0);
       if (!($42)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $43 = HEAP8[$__w$0>>0]|0;
       $44 = ($43<<24>>24)==($36<<24>>24);
       if (!($44)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $45 = (($__w$0) + 1|0);
       $__w$0 = $45;
      }
      __THREW__ = 0;
      (invoke_iiii(481,($__v|0),($__w$0$lcssa|0),($40|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       break;
      }
     }
     $48 = HEAP32[$__b>>2]|0;
     $49 = ($48|0)==(0|0);
     do {
      if ($49) {
       $62 = 0;
      } else {
       $50 = (($48) + 12|0);
       $51 = HEAP32[$50>>2]|0;
       $52 = (($48) + 16|0);
       $53 = HEAP32[$52>>2]|0;
       $54 = ($51|0)==($53|0);
       if ($54) {
        $55 = HEAP32[$48>>2]|0;
        $56 = (($55) + 36|0);
        $57 = HEAP32[$56>>2]|0;
        __THREW__ = 0;
        $58 = (invoke_ii($57|0,($48|0))|0);
        $59 = __THREW__; __THREW__ = 0;
        $60 = $59&1;
        if ($60) {
         break L4;
        }
        $61 = ($58|0)==(-1);
        if ($61) {
         HEAP32[$__b>>2] = 0;
         $62 = 0;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $62 = $$pre$i$i$i;
         break;
        }
       } else {
        $62 = $48;
       }
      }
     } while(0);
     $63 = ($62|0)==(0|0);
     $64 = ($8|0)==(0|0);
     do {
      if ($64) {
       label = 30;
      } else {
       $65 = (($8) + 12|0);
       $66 = HEAP32[$65>>2]|0;
       $67 = (($8) + 16|0);
       $68 = HEAP32[$67>>2]|0;
       $69 = ($66|0)==($68|0);
       if ($69) {
        $70 = HEAP32[$8>>2]|0;
        $71 = (($70) + 36|0);
        $72 = HEAP32[$71>>2]|0;
        __THREW__ = 0;
        $73 = (invoke_ii($72|0,($8|0))|0);
        $74 = __THREW__; __THREW__ = 0;
        $75 = $74&1;
        if ($75) {
         break L4;
        }
        $76 = ($73|0)==(-1);
        if ($76) {
         HEAP32[$__e>>2] = 0;
         label = 30;
         break;
        }
       }
       if (!($63)) {
        label = 31;
       }
      }
     } while(0);
     if ((label|0) == 30) {
      if ($63) {
       label = 31;
      }
     }
     if ((label|0) == 31) {
      $77 = HEAP32[$__err>>2]|0;
      $78 = $77 | 2;
      HEAP32[$__err>>2] = $78;
     }
     $79 = HEAP32[$__b>>2]|0;
     HEAP32[$agg$result>>2] = $79;
     $80 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($80)|0);
     $81 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $82 = ($81|0)==(0|0);
     if (!($82)) {
      $83 = HEAP32[$1>>2]|0;
      __THREW__ = 0;
      invoke_vi($83|0,($81|0));
      $84 = __THREW__; __THREW__ = 0;
      $85 = $84&1;
      if ($85) {
       $86 = ___cxa_find_matching_catch(0|0)|0;
       $87 = tempRet0;
       ___clang_call_terminate($86);
       // unreachable;
      }
     }
     STACKTOP = sp;return;
    }
   }
  } while(0);
  $88 = ___cxa_find_matching_catch()|0;
  $89 = tempRet0;
  $90 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($90)|0);
  $$pre = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $91 = ($$pre|0)==(0|0);
  if ($91) {
   $$010 = $88;$$018 = $89;
  } else {
   $$017 = $89;$$09 = $88;$93 = $$pre;
   label = 37;
  }
 }
 if ((label|0) == 37) {
  $92 = HEAP32[$1>>2]|0;
  __THREW__ = 0;
  invoke_vi($92|0,($93|0));
  $94 = __THREW__; __THREW__ = 0;
  $95 = $94&1;
  if ($95) {
   $96 = ___cxa_find_matching_catch(0|0)|0;
   $97 = tempRet0;
   ___clang_call_terminate($96);
   // unreachable;
  } else {
   $$010 = $$09;$$018 = $$017;
  }
 }
 ___resumeException($$010|0);
 // unreachable;
}
function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i14 = 0, $__i$0$i$i$i19 = 0, $__i$0$i$i$i24 = 0, $__i$0$i$i$i29 = 0, $__i$0$i$i$i34 = 0, $__i$0$i$i$i4 = 0, $__i$0$i$i$i9 = 0;
 var $exitcond$i$i$i = 0, $exitcond$i$i$i10 = 0, $exitcond$i$i$i15 = 0, $exitcond$i$i$i20 = 0, $exitcond$i$i$i25 = 0, $exitcond$i$i$i30 = 0, $exitcond$i$i$i35 = 0, $exitcond$i$i$i5 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6472)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 1023]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = (($15) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 1023]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   $24 = (($__nsn) + 1|0);
   HEAP8[$24>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = (($__nsn) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP8[$22>>0] = 0;
   $23 = (($__nsn) + 4|0);
   HEAP32[$23>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__nsn|0),0);
  $25 = __THREW__; __THREW__ = 0;
  $26 = $25&1;
  if ($26) {
   $27 = ___cxa_find_matching_catch(0|0)|0;
   $28 = tempRet0;
   ___clang_call_terminate($27);
   // unreachable;
  }
  ;HEAP32[$__nsn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  $__i$0$i$i$i = 0;
  while(1) {
   $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
   if ($exitcond$i$i$i) {
    break;
   }
   $29 = (($1) + ($__i$0$i$i$i<<2)|0);
   HEAP32[$29>>2] = 0;
   $30 = (($__i$0$i$i$i) + 1)|0;
   $__i$0$i$i$i = $30;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $31 = HEAP32[$10>>2]|0;
  $32 = (($31) + 28|0);
  $33 = HEAP32[$32>>2]|0;
  FUNCTION_TABLE_vii[$33 & 1023]($2,$10);
  $34 = HEAP8[$__psn>>0]|0;
  $35 = $34 & 1;
  $36 = ($35<<24>>24)==(0);
  if ($36) {
   $40 = (($__psn) + 1|0);
   HEAP8[$40>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $37 = (($__psn) + 8|0);
   $38 = HEAP32[$37>>2]|0;
   HEAP8[$38>>0] = 0;
   $39 = (($__psn) + 4|0);
   HEAP32[$39>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__psn|0),0);
  $41 = __THREW__; __THREW__ = 0;
  $42 = $41&1;
  if ($42) {
   $43 = ___cxa_find_matching_catch(0|0)|0;
   $44 = tempRet0;
   ___clang_call_terminate($43);
   // unreachable;
  }
  ;HEAP32[$__psn+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  $__i$0$i$i$i4 = 0;
  while(1) {
   $exitcond$i$i$i5 = ($__i$0$i$i$i4|0)==(3);
   if ($exitcond$i$i$i5) {
    break;
   }
   $45 = (($2) + ($__i$0$i$i$i4<<2)|0);
   HEAP32[$45>>2] = 0;
   $46 = (($__i$0$i$i$i4) + 1)|0;
   $__i$0$i$i$i4 = $46;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $47 = HEAP32[$10>>2]|0;
  $48 = (($47) + 12|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = (FUNCTION_TABLE_ii[$49 & 1023]($10)|0);
  HEAP8[$__dp>>0] = $50;
  $51 = HEAP32[$10>>2]|0;
  $52 = (($51) + 16|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = (FUNCTION_TABLE_ii[$53 & 1023]($10)|0);
  HEAP8[$__ts>>0] = $54;
  $55 = HEAP32[$10>>2]|0;
  $56 = (($55) + 20|0);
  $57 = HEAP32[$56>>2]|0;
  FUNCTION_TABLE_vii[$57 & 1023]($3,$10);
  $58 = HEAP8[$__grp>>0]|0;
  $59 = $58 & 1;
  $60 = ($59<<24>>24)==(0);
  if ($60) {
   $64 = (($__grp) + 1|0);
   HEAP8[$64>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $61 = (($__grp) + 8|0);
   $62 = HEAP32[$61>>2]|0;
   HEAP8[$62>>0] = 0;
   $63 = (($__grp) + 4|0);
   HEAP32[$63>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $65 = __THREW__; __THREW__ = 0;
  $66 = $65&1;
  if ($66) {
   $67 = ___cxa_find_matching_catch(0|0)|0;
   $68 = tempRet0;
   ___clang_call_terminate($67);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  $__i$0$i$i$i9 = 0;
  while(1) {
   $exitcond$i$i$i10 = ($__i$0$i$i$i9|0)==(3);
   if ($exitcond$i$i$i10) {
    break;
   }
   $69 = (($3) + ($__i$0$i$i$i9<<2)|0);
   HEAP32[$69>>2] = 0;
   $70 = (($__i$0$i$i$i9) + 1)|0;
   $__i$0$i$i$i9 = $70;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $71 = HEAP32[$10>>2]|0;
  $72 = (($71) + 24|0);
  $73 = HEAP32[$72>>2]|0;
  FUNCTION_TABLE_vii[$73 & 1023]($4,$10);
  $74 = HEAP8[$__sym>>0]|0;
  $75 = $74 & 1;
  $76 = ($75<<24>>24)==(0);
  if ($76) {
   $80 = (($__sym) + 1|0);
   HEAP8[$80>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $77 = (($__sym) + 8|0);
   $78 = HEAP32[$77>>2]|0;
   HEAP8[$78>>0] = 0;
   $79 = (($__sym) + 4|0);
   HEAP32[$79>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__sym|0),0);
  $81 = __THREW__; __THREW__ = 0;
  $82 = $81&1;
  if ($82) {
   $83 = ___cxa_find_matching_catch(0|0)|0;
   $84 = tempRet0;
   ___clang_call_terminate($83);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i14 = 0;
  while(1) {
   $exitcond$i$i$i15 = ($__i$0$i$i$i14|0)==(3);
   if ($exitcond$i$i$i15) {
    break;
   }
   $85 = (($4) + ($__i$0$i$i$i14<<2)|0);
   HEAP32[$85>>2] = 0;
   $86 = (($__i$0$i$i$i14) + 1)|0;
   $__i$0$i$i$i14 = $86;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $87 = HEAP32[$10>>2]|0;
  $88 = (($87) + 36|0);
  $89 = HEAP32[$88>>2]|0;
  $90 = (FUNCTION_TABLE_ii[$89 & 1023]($10)|0);
  $storemerge = $90;
 } else {
  $91 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6408)|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = (($92) + 44|0);
  $94 = HEAP32[$93>>2]|0;
  FUNCTION_TABLE_vii[$94 & 1023]($5,$91);
  $95 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$95&255;HEAP8[$__pat+1>>0]=($95>>8)&255;HEAP8[$__pat+2>>0]=($95>>16)&255;HEAP8[$__pat+3>>0]=$95>>24;
  $96 = HEAP32[$91>>2]|0;
  $97 = (($96) + 32|0);
  $98 = HEAP32[$97>>2]|0;
  FUNCTION_TABLE_vii[$98 & 1023]($6,$91);
  $99 = HEAP8[$__nsn>>0]|0;
  $100 = $99 & 1;
  $101 = ($100<<24>>24)==(0);
  if ($101) {
   $105 = (($__nsn) + 1|0);
   HEAP8[$105>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $102 = (($__nsn) + 8|0);
   $103 = HEAP32[$102>>2]|0;
   HEAP8[$103>>0] = 0;
   $104 = (($__nsn) + 4|0);
   HEAP32[$104>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__nsn|0),0);
  $106 = __THREW__; __THREW__ = 0;
  $107 = $106&1;
  if ($107) {
   $108 = ___cxa_find_matching_catch(0|0)|0;
   $109 = tempRet0;
   ___clang_call_terminate($108);
   // unreachable;
  }
  ;HEAP32[$__nsn+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  $__i$0$i$i$i19 = 0;
  while(1) {
   $exitcond$i$i$i20 = ($__i$0$i$i$i19|0)==(3);
   if ($exitcond$i$i$i20) {
    break;
   }
   $110 = (($6) + ($__i$0$i$i$i19<<2)|0);
   HEAP32[$110>>2] = 0;
   $111 = (($__i$0$i$i$i19) + 1)|0;
   $__i$0$i$i$i19 = $111;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $112 = HEAP32[$91>>2]|0;
  $113 = (($112) + 28|0);
  $114 = HEAP32[$113>>2]|0;
  FUNCTION_TABLE_vii[$114 & 1023]($7,$91);
  $115 = HEAP8[$__psn>>0]|0;
  $116 = $115 & 1;
  $117 = ($116<<24>>24)==(0);
  if ($117) {
   $121 = (($__psn) + 1|0);
   HEAP8[$121>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $118 = (($__psn) + 8|0);
   $119 = HEAP32[$118>>2]|0;
   HEAP8[$119>>0] = 0;
   $120 = (($__psn) + 4|0);
   HEAP32[$120>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__psn|0),0);
  $122 = __THREW__; __THREW__ = 0;
  $123 = $122&1;
  if ($123) {
   $124 = ___cxa_find_matching_catch(0|0)|0;
   $125 = tempRet0;
   ___clang_call_terminate($124);
   // unreachable;
  }
  ;HEAP32[$__psn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  $__i$0$i$i$i24 = 0;
  while(1) {
   $exitcond$i$i$i25 = ($__i$0$i$i$i24|0)==(3);
   if ($exitcond$i$i$i25) {
    break;
   }
   $126 = (($7) + ($__i$0$i$i$i24<<2)|0);
   HEAP32[$126>>2] = 0;
   $127 = (($__i$0$i$i$i24) + 1)|0;
   $__i$0$i$i$i24 = $127;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  $128 = HEAP32[$91>>2]|0;
  $129 = (($128) + 12|0);
  $130 = HEAP32[$129>>2]|0;
  $131 = (FUNCTION_TABLE_ii[$130 & 1023]($91)|0);
  HEAP8[$__dp>>0] = $131;
  $132 = HEAP32[$91>>2]|0;
  $133 = (($132) + 16|0);
  $134 = HEAP32[$133>>2]|0;
  $135 = (FUNCTION_TABLE_ii[$134 & 1023]($91)|0);
  HEAP8[$__ts>>0] = $135;
  $136 = HEAP32[$91>>2]|0;
  $137 = (($136) + 20|0);
  $138 = HEAP32[$137>>2]|0;
  FUNCTION_TABLE_vii[$138 & 1023]($8,$91);
  $139 = HEAP8[$__grp>>0]|0;
  $140 = $139 & 1;
  $141 = ($140<<24>>24)==(0);
  if ($141) {
   $145 = (($__grp) + 1|0);
   HEAP8[$145>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $142 = (($__grp) + 8|0);
   $143 = HEAP32[$142>>2]|0;
   HEAP8[$143>>0] = 0;
   $144 = (($__grp) + 4|0);
   HEAP32[$144>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $146 = __THREW__; __THREW__ = 0;
  $147 = $146&1;
  if ($147) {
   $148 = ___cxa_find_matching_catch(0|0)|0;
   $149 = tempRet0;
   ___clang_call_terminate($148);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$8+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  $__i$0$i$i$i29 = 0;
  while(1) {
   $exitcond$i$i$i30 = ($__i$0$i$i$i29|0)==(3);
   if ($exitcond$i$i$i30) {
    break;
   }
   $150 = (($8) + ($__i$0$i$i$i29<<2)|0);
   HEAP32[$150>>2] = 0;
   $151 = (($__i$0$i$i$i29) + 1)|0;
   $__i$0$i$i$i29 = $151;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $152 = HEAP32[$91>>2]|0;
  $153 = (($152) + 24|0);
  $154 = HEAP32[$153>>2]|0;
  FUNCTION_TABLE_vii[$154 & 1023]($9,$91);
  $155 = HEAP8[$__sym>>0]|0;
  $156 = $155 & 1;
  $157 = ($156<<24>>24)==(0);
  if ($157) {
   $161 = (($__sym) + 1|0);
   HEAP8[$161>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $158 = (($__sym) + 8|0);
   $159 = HEAP32[$158>>2]|0;
   HEAP8[$159>>0] = 0;
   $160 = (($__sym) + 4|0);
   HEAP32[$160>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__sym|0),0);
  $162 = __THREW__; __THREW__ = 0;
  $163 = $162&1;
  if ($163) {
   $164 = ___cxa_find_matching_catch(0|0)|0;
   $165 = tempRet0;
   ___clang_call_terminate($164);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  $__i$0$i$i$i34 = 0;
  while(1) {
   $exitcond$i$i$i35 = ($__i$0$i$i$i34|0)==(3);
   if ($exitcond$i$i$i35) {
    break;
   }
   $166 = (($9) + ($__i$0$i$i$i34<<2)|0);
   HEAP32[$166>>2] = 0;
   $167 = (($__i$0$i$i$i34) + 1)|0;
   $__i$0$i$i$i34 = $167;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  $168 = HEAP32[$91>>2]|0;
  $169 = (($168) + 36|0);
  $170 = HEAP32[$169>>2]|0;
  $171 = (FUNCTION_TABLE_ii[$170 & 1023]($91)|0);
  $storemerge = $171;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$__g_end,$__err) {
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__err = $__err|0;
 var $$0$i$i = 0, $$01$i$i = 0, $$__ig$0 = 0, $$lcssa = 0, $$not = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ig$0 = 0, $__r$0 = 0, $or$cond2 = 0, $or$cond2$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__grouping>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = (($__grouping) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7|0)==(0);
 do {
  if (!($8)) {
   $9 = ($__g|0)==($__g_end|0);
   if ($9) {
    $16 = $0;
   } else {
    $$0$i$i = $__g_end;$$01$i$i = $__g;
    while(1) {
     $10 = (($$0$i$i) + -4|0);
     $11 = ($$01$i$i>>>0)<($10>>>0);
     if (!($11)) {
      break;
     }
     $12 = HEAP32[$$01$i$i>>2]|0;
     $13 = HEAP32[$10>>2]|0;
     HEAP32[$$01$i$i>>2] = $13;
     HEAP32[$10>>2] = $12;
     $14 = (($$01$i$i) + 4|0);
     $$0$i$i = $10;$$01$i$i = $14;
    }
    $$pre = HEAP8[$__grouping>>0]|0;
    $16 = $$pre;
   }
   $15 = $16 & 1;
   $17 = ($15<<24>>24)==(0);
   if ($17) {
    $22 = (($__grouping) + 1|0);
    $23 = $16&255;
    $24 = $23 >>> 1;
    $26 = $22;$27 = $24;
   } else {
    $18 = (($__grouping) + 8|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = (($__grouping) + 4|0);
    $21 = HEAP32[$20>>2]|0;
    $26 = $19;$27 = $21;
   }
   $25 = (($26) + ($27)|0);
   $28 = (($__g_end) + -4|0);
   $29 = $25;
   $__ig$0 = $26;$__r$0 = $__g;
   while(1) {
    $30 = ($__r$0>>>0)<($28>>>0);
    $31 = HEAP8[$__ig$0>>0]|0;
    $$not = ($31<<24>>24)<(1);
    $32 = ($31<<24>>24)==(127);
    $or$cond2 = $$not | $32;
    if (!($30)) {
     $$lcssa = $31;$or$cond2$lcssa = $or$cond2;
     break;
    }
    if (!($or$cond2)) {
     $33 = $31 << 24 >> 24;
     $34 = HEAP32[$__r$0>>2]|0;
     $35 = ($33|0)==($34|0);
     if (!($35)) {
      label = 17;
      break;
     }
    }
    $36 = $__ig$0;
    $37 = (($29) - ($36))|0;
    $38 = ($37|0)>(1);
    $39 = (($__ig$0) + 1|0);
    $$__ig$0 = $38 ? $39 : $__ig$0;
    $40 = (($__r$0) + 4|0);
    $__ig$0 = $$__ig$0;$__r$0 = $40;
   }
   if ((label|0) == 17) {
    HEAP32[$__err>>2] = 4;
    break;
   }
   if (!($or$cond2$lcssa)) {
    $41 = $$lcssa << 24 >> 24;
    $42 = HEAP32[$28>>2]|0;
    $43 = (($42) + -1)|0;
    $44 = ($43>>>0)<($41>>>0);
    if (!($44)) {
     HEAP32[$__err>>2] = 4;
    }
   }
  }
 } while(0);
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$111 = 0, $$112 = 0, $$1210 = 0, $$129 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre13 = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__nc$2$lcssa = 0, $__neg = 0, $__w$0 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0;
 var $phitmp$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 472|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 72|0;
 $__wb = sp + 64|0;
 $__wn = sp + 56|0;
 $__loc = sp + 52|0;
 $__neg = sp + 576|0;
 $0 = sp + 48|0;
 $__atoms = sp + 8|0;
 $__nbuf = sp + 476|0;
 HEAP32[$__wb>>2] = $__wbuf;
 $1 = (($__wb) + 4|0);
 HEAP32[$1>>2] = 475;
 $2 = (($__wbuf) + 400|0);
 __THREW__ = 0;
 invoke_vii(457,($__loc|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $33 = ___cxa_find_matching_catch()|0;
  $34 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$111 = $33;$$129 = $34;$106 = 475;$107 = $__wbuf;
  label = 47;
 } else {
  __THREW__ = 0;
  $5 = (invoke_iii(454,($__loc|0),(7024|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  L3: do {
   if ($7) {
    label = 11;
   } else {
    HEAP8[$__neg>>0] = 0;
    $8 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $8;
    $9 = (($__iob) + 4|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
    $11 = (invoke_iiiiiiiiiiii(483,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($10|0),($__err|0),($__neg|0),($5|0),($__wb|0),($__wn|0),($2|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if ($13) {
     label = 11;
    } else {
     if ($11) {
      $14 = HEAP32[$5>>2]|0;
      $15 = (($14) + 48|0);
      $16 = HEAP32[$15>>2]|0;
      __THREW__ = 0;
      (invoke_iiiii($16|0,($5|0),(6728|0),(((6728 + 10|0))|0),($__atoms|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if ($18) {
       label = 11;
       break;
      }
      $19 = HEAP32[$__wn>>2]|0;
      $20 = HEAP32[$__wb>>2]|0;
      $21 = $19;
      $22 = $20;
      $23 = (($21) - ($22))|0;
      $24 = ($23|0)>(392);
      if ($24) {
       $25 = $23 >> 2;
       $26 = (($25) + 2)|0;
       $27 = (_malloc($26)|0);
       $28 = ($27|0)==(0|0);
       if ($28) {
        __THREW__ = 0;
        invoke_v(465);
        $29 = __THREW__; __THREW__ = 0;
        $30 = $29&1;
        if ($30) {
         $31 = ___cxa_find_matching_catch()|0;
         $32 = tempRet0;
         $$0 = $31;$$01 = $32;
         break;
        } else {
         $39 = 0;$__nc$0 = 0;
        }
       } else {
        $39 = $27;$__nc$0 = $27;
       }
      } else {
       $39 = 0;$__nc$0 = $__nbuf;
      }
      $40 = HEAP8[$__neg>>0]|0;
      $41 = ($40<<24>>24)==(0);
      if ($41) {
       $__nc$1 = $__nc$0;
      } else {
       $42 = (($__nc$0) + 1|0);
       HEAP8[$__nc$0>>0] = 45;
       $__nc$1 = $42;
      }
      $43 = (($__atoms) + 40|0);
      $44 = $__atoms;
      $46 = $19;$__nc$2 = $__nc$1;$__w$0 = $20;
      while(1) {
       $45 = ($__w$0>>>0)<($46>>>0);
       if (!($45)) {
        $__nc$2$lcssa = $__nc$2;
        break;
       }
       $47 = HEAP32[$__w$0>>2]|0;
       $$0$i = $__atoms;
       while(1) {
        $48 = ($$0$i|0)==($43|0);
        if ($48) {
         $$0$lcssa$i = $43;
         break;
        }
        $49 = HEAP32[$$0$i>>2]|0;
        $50 = ($49|0)==($47|0);
        if ($50) {
         $$0$lcssa$i = $$0$i;
         break;
        }
        $51 = (($$0$i) + 4|0);
        $$0$i = $51;
       }
       $52 = $$0$lcssa$i;
       $53 = (($52) - ($44))|0;
       $54 = $53 >> 2;
       $55 = (6728 + ($54)|0);
       $56 = HEAP8[$55>>0]|0;
       HEAP8[$__nc$2>>0] = $56;
       $57 = (($__w$0) + 4|0);
       $58 = (($__nc$2) + 1|0);
       $$pre = HEAP32[$__wn>>2]|0;
       $46 = $$pre;$__nc$2 = $58;$__w$0 = $57;
      }
      HEAP8[$__nc$2$lcssa>>0] = 0;
      HEAP32[$vararg_buffer>>2] = $__v;
      $59 = (_sscanf($__nbuf,6664,$vararg_buffer)|0);
      $60 = ($59|0)==(1);
      if (!($60)) {
       __THREW__ = 0;
       invoke_vi(477,(6672|0));
       $61 = __THREW__; __THREW__ = 0;
       $62 = $61&1;
       if ($62) {
        $37 = ___cxa_find_matching_catch()|0;
        $38 = tempRet0;
        _free($39);
        $$0 = $37;$$01 = $38;
        break;
       }
      }
      _free($39);
     }
     $63 = HEAP32[$__b>>2]|0;
     $64 = ($63|0)==(0|0);
     do {
      if ($64) {
       $112 = 1;
      } else {
       $65 = (($63) + 12|0);
       $66 = HEAP32[$65>>2]|0;
       $67 = (($63) + 16|0);
       $68 = HEAP32[$67>>2]|0;
       $69 = ($66|0)==($68|0);
       if ($69) {
        $70 = HEAP32[$63>>2]|0;
        $71 = (($70) + 36|0);
        $72 = HEAP32[$71>>2]|0;
        __THREW__ = 0;
        $73 = (invoke_ii($72|0,($63|0))|0);
        $74 = __THREW__; __THREW__ = 0;
        $75 = $74&1;
        if ($75) {
         label = 11;
         break L3;
        } else {
         $$0$i$i$i$i = $73;
        }
       } else {
        $76 = HEAP32[$66>>2]|0;
        $$0$i$i$i$i = $76;
       }
       $77 = ($$0$i$i$i$i|0)==(-1);
       if ($77) {
        HEAP32[$__b>>2] = 0;
        $112 = 1;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
        $112 = $phitmp$i$i$i;
        break;
       }
      }
     } while(0);
     $78 = HEAP32[$__e>>2]|0;
     $79 = ($78|0)==(0|0);
     do {
      if ($79) {
       label = 38;
      } else {
       $80 = (($78) + 12|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = (($78) + 16|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = ($81|0)==($83|0);
       if ($84) {
        $85 = HEAP32[$78>>2]|0;
        $86 = (($85) + 36|0);
        $87 = HEAP32[$86>>2]|0;
        __THREW__ = 0;
        $88 = (invoke_ii($87|0,($78|0))|0);
        $89 = __THREW__; __THREW__ = 0;
        $90 = $89&1;
        if ($90) {
         label = 11;
         break L3;
        } else {
         $$0$i$i1$i$i = $88;
        }
       } else {
        $91 = HEAP32[$81>>2]|0;
        $$0$i$i1$i$i = $91;
       }
       $92 = ($$0$i$i1$i$i|0)==(-1);
       if ($92) {
        HEAP32[$__e>>2] = 0;
        label = 38;
        break;
       } else {
        if ($112) {
         break;
        } else {
         label = 40;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 38) {
      if ($112) {
       label = 40;
      }
     }
     if ((label|0) == 40) {
      $93 = HEAP32[$__err>>2]|0;
      $94 = $93 | 2;
      HEAP32[$__err>>2] = $94;
     }
     $95 = HEAP32[$__b>>2]|0;
     HEAP32[$agg$result>>2] = $95;
     $96 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($96)|0);
     $97 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $98 = ($97|0)==(0|0);
     if (!($98)) {
      $99 = HEAP32[$1>>2]|0;
      __THREW__ = 0;
      invoke_vi($99|0,($97|0));
      $100 = __THREW__; __THREW__ = 0;
      $101 = $100&1;
      if ($101) {
       $102 = ___cxa_find_matching_catch(0|0)|0;
       $103 = tempRet0;
       ___clang_call_terminate($102);
       // unreachable;
      }
     }
     STACKTOP = sp;return;
    }
   }
  } while(0);
  if ((label|0) == 11) {
   $35 = ___cxa_find_matching_catch()|0;
   $36 = tempRet0;
   $$0 = $35;$$01 = $36;
  }
  $104 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($104)|0);
  $$pre6 = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $105 = ($$pre6|0)==(0|0);
  if ($105) {
   $$112 = $$0;$$1210 = $$01;
  } else {
   $$pre13 = HEAP32[$1>>2]|0;
   $$111 = $$0;$$129 = $$01;$106 = $$pre13;$107 = $$pre6;
   label = 47;
  }
 }
 if ((label|0) == 47) {
  __THREW__ = 0;
  invoke_vi($106|0,($107|0));
  $108 = __THREW__; __THREW__ = 0;
  $109 = $108&1;
  if ($109) {
   $110 = ___cxa_find_matching_catch(0|0)|0;
   $111 = tempRet0;
   ___clang_call_terminate($110);
   // unreachable;
  } else {
   $$112 = $$111;$$1210 = $$129;
  }
 }
 ___resumeException($$112|0);
 // unreachable;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i125 = 0, $$0$i$i$i$i157 = 0, $$0$i$i$i$i182 = 0, $$0$i$i$i$i30 = 0, $$0$i$i$i$i51 = 0, $$0$i$i$i$i91 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i131 = 0, $$0$i$i1$i$i163 = 0, $$0$i$i1$i$i188 = 0, $$0$i$i1$i$i36 = 0, $$0$i$i1$i$i57 = 0, $$0$i$i1$i$i97 = 0, $$0$i$i109 = 0, $$0$i$i118 = 0, $$0$i$i121 = 0;
 var $$0$i$i143 = 0, $$0$i$i154 = 0, $$0$i$i178 = 0, $$0$i$i45 = 0, $$0$i$i49 = 0, $$0$i$i66 = 0, $$0$i$i72 = 0, $$0$i$i77 = 0, $$0$i$i85 = 0, $$0$i$i88 = 0, $$299 = 0, $$300 = 0, $$301 = 0, $$302 = 0, $$303 = 0, $$304 = 0, $$305 = 0, $$lcssa = 0, $$lcssa342 = 0, $$lcssa346 = 0;
 var $$lcssa348 = 0, $$lcssa349 = 0, $$lcssa351 = 0, $$ph = 0, $$ph341 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i127 = 0, $$pre$i$i$i159 = 0, $$pre$i$i$i184 = 0, $$pre$i$i$i32 = 0, $$pre$i$i$i53 = 0, $$pre$i$i$i93 = 0, $$pre$i3$i$i133 = 0, $$pre$i3$i$i165 = 0, $$pre$i3$i$i190 = 0, $$pre$i3$i$i190281 = 0, $$pre$i3$i$i190282 = 0, $$pre$i3$i$i59 = 0, $$pre$i3$i$i59275 = 0;
 var $$pre$i3$i$i59277 = 0, $$pre$i3$i$i99 = 0, $$pre$i3$i$i99287$ph = 0, $$pre$i3$i$i99287297 = 0, $$pre278 = 0, $$pre279 = 0, $$pre280 = 0, $$pre284 = 0, $$pre285 = 0, $$pre286 = 0, $$pre290 = 0, $$pre292 = 0, $$sum = 0, $$sum293 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;
 var $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0;
 var $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0;
 var $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0;
 var $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0;
 var $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0;
 var $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0;
 var $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0;
 var $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0;
 var $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0;
 var $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0;
 var $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0;
 var $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0;
 var $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0;
 var $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0;
 var $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0;
 var $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0;
 var $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0;
 var $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0;
 var $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0;
 var $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0;
 var $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0;
 var $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0;
 var $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0;
 var $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0;
 var $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0;
 var $__i$0 = 0, $__i$0$i$i = 0, $__i$0$i$i14 = 0, $__i$0$i$i16 = 0, $__i$0$i$i20 = 0, $__i$0$i$i25 = 0, $__ng$0 = 0, $__ng$0$lcssa343 = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0 = 0;
 var $__trailing_sign$0$lcssa = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0, $cond = 0, $exitcond$i$i = 0, $exitcond$i$i15 = 0, $exitcond$i$i17 = 0, $exitcond$i$i21 = 0, $exitcond$i$i26 = 0, $lpad$phi$index = 0, $lpad$phi$index8 = 0, $or$cond = 0, $or$cond13 = 0, $or$cond7 = 0, $or$cond9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i128 = 0, $phitmp$i$i$i160 = 0, $phitmp$i$i$i185 = 0;
 var $phitmp$i$i$i33 = 0, $phitmp$i$i$i54 = 0, $phitmp$i$i$i94 = 0, $phitmp$i4$i$i100 = 0, $phitmp$i4$i$i166 = 0, $phitmp$i4$i$i191 = 0, $phitmp$i4$i$i60 = 0, $switch = 0, $tmp$i$i102 = 0, $tmp$i$i168 = 0, $tmp$i$i193 = 0, $tmp$i$i62 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 496|0;
 $__gbuf = sp + 96|0;
 $__gb = sp + 88|0;
 $__gn = sp + 80|0;
 $__ge = sp + 76|0;
 $__pat = sp + 500|0;
 $__dp = sp + 72|0;
 $__ts = sp + 68|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 HEAP32[$__gb>>2] = $__gbuf;
 $1 = (($__gb) + 4|0);
 HEAP32[$1>>2] = 475;
 HEAP32[$__gn>>2] = $__gbuf;
 $2 = (($__gbuf) + 400|0);
 HEAP32[$__ge>>2] = $2;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__grp) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $__i$0$i$i14 = 0;
 while(1) {
  $exitcond$i$i15 = ($__i$0$i$i14|0)==(3);
  if ($exitcond$i$i15) {
   break;
  }
  $5 = (($__sym) + ($__i$0$i$i14<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i14) + 1)|0;
  $__i$0$i$i14 = $6;
 }
 $__i$0$i$i16 = 0;
 while(1) {
  $exitcond$i$i17 = ($__i$0$i$i16|0)==(3);
  if ($exitcond$i$i17) {
   break;
  }
  $7 = (($__psn) + ($__i$0$i$i16<<2)|0);
  HEAP32[$7>>2] = 0;
  $8 = (($__i$0$i$i16) + 1)|0;
  $__i$0$i$i16 = $8;
 }
 $__i$0$i$i20 = 0;
 while(1) {
  $exitcond$i$i21 = ($__i$0$i$i20|0)==(3);
  if ($exitcond$i$i21) {
   break;
  }
  $9 = (($__nsn) + ($__i$0$i$i20<<2)|0);
  HEAP32[$9>>2] = 0;
  $10 = (($__i$0$i$i20) + 1)|0;
  $__i$0$i$i20 = $10;
 }
 $__i$0$i$i25 = 0;
 while(1) {
  $exitcond$i$i26 = ($__i$0$i$i25|0)==(3);
  if ($exitcond$i$i26) {
   break;
  }
  $11 = (($__spaces) + ($__i$0$i$i25<<2)|0);
  HEAP32[$11>>2] = 0;
  $12 = (($__i$0$i$i25) + 1)|0;
  $__i$0$i$i25 = $12;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(484,($__intl|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__psn|0),($__nsn|0),($__fd|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 L21: do {
  if ($14) {
   $77 = ___cxa_find_matching_catch()|0;
   $78 = tempRet0;
   $lpad$phi$index = $77;$lpad$phi$index8 = $78;
  } else {
   $15 = HEAP32[$__wb>>2]|0;
   HEAP32[$__wn>>2] = $15;
   $16 = (($__nsn) + 4|0);
   $17 = (($__nsn) + 8|0);
   $18 = (($__psn) + 4|0);
   $19 = (($__psn) + 8|0);
   $20 = $__flags & 512;
   $21 = ($20|0)!=(0);
   $22 = (($__sym) + 4|0);
   $23 = (($__sym) + 8|0);
   $24 = (($__spaces) + 4|0);
   $25 = (($__spaces) + 8|0);
   $26 = (($__pat) + 3|0);
   $27 = (($__grp) + 4|0);
   $862 = $__gbuf;$__p$0 = 0;$__trailing_sign$0 = 0;
   L23: while(1) {
    $28 = ($__p$0>>>0)<(4);
    if (!($28)) {
     $$lcssa351 = $862;$__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 319;
     break;
    }
    $29 = HEAP32[$__b>>2]|0;
    $30 = ($29|0)==(0|0);
    do {
     if ($30) {
      $863 = 1;
     } else {
      $31 = (($29) + 12|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = (($29) + 16|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = ($32|0)==($34|0);
      if ($35) {
       $36 = HEAP32[$29>>2]|0;
       $37 = (($36) + 36|0);
       $38 = HEAP32[$37>>2]|0;
       __THREW__ = 0;
       $39 = (invoke_ii($38|0,($29|0))|0);
       $40 = __THREW__; __THREW__ = 0;
       $41 = $40&1;
       if ($41) {
        label = 42;
        break L23;
       } else {
        $$0$i$i$i$i30 = $39;
       }
      } else {
       $42 = HEAP32[$32>>2]|0;
       $$0$i$i$i$i30 = $42;
      }
      $43 = ($$0$i$i$i$i30|0)==(-1);
      if ($43) {
       HEAP32[$__b>>2] = 0;
       $863 = 1;
       break;
      } else {
       $$pre$i$i$i32 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i33 = ($$pre$i$i$i32|0)==(0|0);
       $863 = $phitmp$i$i$i33;
       break;
      }
     }
    } while(0);
    $44 = HEAP32[$__e>>2]|0;
    $45 = ($44|0)==(0|0);
    do {
     if ($45) {
      label = 32;
     } else {
      $46 = (($44) + 12|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = (($44) + 16|0);
      $49 = HEAP32[$48>>2]|0;
      $50 = ($47|0)==($49|0);
      if ($50) {
       $51 = HEAP32[$44>>2]|0;
       $52 = (($51) + 36|0);
       $53 = HEAP32[$52>>2]|0;
       __THREW__ = 0;
       $54 = (invoke_ii($53|0,($44|0))|0);
       $55 = __THREW__; __THREW__ = 0;
       $56 = $55&1;
       if ($56) {
        label = 42;
        break L23;
       } else {
        $$0$i$i1$i$i36 = $54;
       }
      } else {
       $57 = HEAP32[$47>>2]|0;
       $$0$i$i1$i$i36 = $57;
      }
      $58 = ($$0$i$i1$i$i36|0)==(-1);
      if ($58) {
       HEAP32[$__e>>2] = 0;
       label = 32;
       break;
      } else {
       if ($863) {
        $864 = $44;
        break;
       } else {
        $$lcssa351 = $862;$__trailing_sign$0$lcssa = $__trailing_sign$0;
        label = 319;
        break L23;
       }
      }
     }
    } while(0);
    if ((label|0) == 32) {
     label = 0;
     if ($863) {
      $$lcssa351 = $862;$__trailing_sign$0$lcssa = $__trailing_sign$0;
      label = 319;
      break;
     } else {
      $864 = 0;
     }
    }
    $59 = (($__pat) + ($__p$0)|0);
    $60 = HEAP8[$59>>0]|0;
    $61 = $60 << 24 >> 24;
    L48: do {
     switch ($61|0) {
     case 2:  {
      $367 = ($__trailing_sign$0|0)!=(0|0);
      $368 = ($__p$0>>>0)<(2);
      $or$cond = $368 | $367;
      if (!($or$cond)) {
       $369 = ($__p$0|0)==(2);
       if ($369) {
        $370 = HEAP8[$26>>0]|0;
        $371 = ($370<<24>>24)!=(0);
        $372 = $371;
       } else {
        $372 = 0;
       }
       $brmerge = $21 | $372;
       if (!($brmerge)) {
        $865 = $862;$__trailing_sign$1 = 0;
        break L48;
       }
      }
      $373 = HEAP8[$__sym>>0]|0;
      $374 = $373 & 1;
      $375 = ($374<<24>>24)==(0);
      $376 = HEAP32[$23>>2]|0;
      $$302 = $375 ? $22 : $376;
      $377 = ($__p$0|0)==(0);
      L56: do {
       if ($377) {
        $$ph = $373;$$ph341 = $$302;
       } else {
        $378 = (($__p$0) + -1)|0;
        $379 = (($__pat) + ($378)|0);
        $380 = HEAP8[$379>>0]|0;
        $switch = ($380&255)<(2);
        if ($switch) {
         $382 = $373;$391 = $$302;
         while(1) {
          $381 = $382 & 1;
          $383 = ($381<<24>>24)==(0);
          if ($383) {
           $386 = $382&255;
           $387 = $386 >>> 1;
           $389 = $22;$390 = $387;
          } else {
           $384 = HEAP32[$23>>2]|0;
           $385 = HEAP32[$22>>2]|0;
           $389 = $384;$390 = $385;
          }
          $388 = (($389) + ($390<<2)|0);
          $392 = ($391|0)==($388|0);
          if ($392) {
           $$lcssa = $382;$$lcssa346 = $391;
           label = 168;
           break;
          }
          $393 = HEAP32[$391>>2]|0;
          $394 = HEAP32[$__ct>>2]|0;
          $395 = (($394) + 12|0);
          $396 = HEAP32[$395>>2]|0;
          __THREW__ = 0;
          $397 = (invoke_iiii($396|0,($__ct|0),8192,($393|0))|0);
          $398 = __THREW__; __THREW__ = 0;
          $399 = $398&1;
          if ($399) {
           label = 39;
           break L23;
          }
          if (!($397)) {
           $$lcssa348 = $391;
           label = 166;
           break;
          }
          $400 = (($391) + 4|0);
          $$pre284 = HEAP8[$__sym>>0]|0;
          $382 = $$pre284;$391 = $400;
         }
         if ((label|0) == 166) {
          label = 0;
          $$pre285 = HEAP8[$__sym>>0]|0;
          $402 = $$pre285;$405 = $$lcssa348;
         }
         else if ((label|0) == 168) {
          label = 0;
          $402 = $$lcssa;$405 = $$lcssa346;
         }
         $401 = $402 & 1;
         $403 = ($401<<24>>24)==(0);
         $404 = HEAP32[$23>>2]|0;
         $$303 = $403 ? $22 : $404;
         $406 = $405;
         $407 = $$303;
         $408 = (($406) - ($407))|0;
         $409 = $408 >> 2;
         $410 = HEAP8[$__spaces>>0]|0;
         $411 = $410 & 1;
         $412 = ($411<<24>>24)==(0);
         if ($412) {
          $414 = $410&255;
          $415 = $414 >>> 1;
          $417 = $415;
         } else {
          $413 = HEAP32[$24>>2]|0;
          $417 = $413;
         }
         $416 = ($409>>>0)>($417>>>0);
         do {
          if (!($416)) {
           if ($412) {
            $421 = $410&255;
            $422 = $421 >>> 1;
            $$sum293 = (($422) - ($409))|0;
            $423 = (($24) + ($$sum293<<2)|0);
            $424 = $410&255;
            $425 = $424 >>> 1;
            $427 = $24;$428 = $425;$867 = $423;
           } else {
            $418 = HEAP32[$25>>2]|0;
            $419 = HEAP32[$24>>2]|0;
            $$sum = (($419) - ($409))|0;
            $420 = (($418) + ($$sum<<2)|0);
            $427 = $418;$428 = $419;$867 = $420;
           }
           $426 = (($427) + ($428<<2)|0);
           $429 = HEAP32[$23>>2]|0;
           $$304 = $403 ? $22 : $429;
           $430 = $867;$434 = $$304;
           while(1) {
            $431 = ($430|0)==($426|0);
            if ($431) {
             label = 182;
             break;
            }
            $432 = HEAP32[$430>>2]|0;
            $433 = HEAP32[$434>>2]|0;
            $435 = ($432|0)==($433|0);
            if (!($435)) {
             label = 180;
             break;
            }
            $436 = (($430) + 4|0);
            $437 = (($434) + 4|0);
            $430 = $436;$434 = $437;
           }
           if ((label|0) == 180) {
            label = 0;
            break;
           }
           else if ((label|0) == 182) {
            label = 0;
            $$ph = $402;$$ph341 = $405;
            break L56;
           }
          }
         } while(0);
         $438 = HEAP32[$23>>2]|0;
         $$305 = $403 ? $22 : $438;
         $$ph = $402;$$ph341 = $$305;
        } else {
         $$ph = $373;$$ph341 = $$302;
        }
       }
      } while(0);
      $$pre$i3$i$i190 = $864;$440 = $$ph;$449 = $$ph341;$466 = $864;
      L91: while(1) {
       $439 = $440 & 1;
       $441 = ($439<<24>>24)==(0);
       if ($441) {
        $444 = $440&255;
        $445 = $444 >>> 1;
        $447 = $22;$448 = $445;
       } else {
        $442 = HEAP32[$23>>2]|0;
        $443 = HEAP32[$22>>2]|0;
        $447 = $442;$448 = $443;
       }
       $446 = (($447) + ($448<<2)|0);
       $450 = ($449|0)==($446|0);
       if ($450) {
        $$lcssa349 = $449;
        break;
       }
       $451 = HEAP32[$__b>>2]|0;
       $452 = ($451|0)==(0|0);
       do {
        if ($452) {
         $481 = 1;
        } else {
         $453 = (($451) + 12|0);
         $454 = HEAP32[$453>>2]|0;
         $455 = (($451) + 16|0);
         $456 = HEAP32[$455>>2]|0;
         $457 = ($454|0)==($456|0);
         if ($457) {
          $458 = HEAP32[$451>>2]|0;
          $459 = (($458) + 36|0);
          $460 = HEAP32[$459>>2]|0;
          __THREW__ = 0;
          $461 = (invoke_ii($460|0,($451|0))|0);
          $462 = __THREW__; __THREW__ = 0;
          $463 = $462&1;
          if ($463) {
           label = 38;
           break L23;
          } else {
           $$0$i$i$i$i182 = $461;
          }
         } else {
          $464 = HEAP32[$454>>2]|0;
          $$0$i$i$i$i182 = $464;
         }
         $465 = ($$0$i$i$i$i182|0)==(-1);
         if ($465) {
          HEAP32[$__b>>2] = 0;
          $481 = 1;
          break;
         } else {
          $$pre$i$i$i184 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i185 = ($$pre$i$i$i184|0)==(0|0);
          $481 = $phitmp$i$i$i185;
          break;
         }
        }
       } while(0);
       $467 = ($466|0)==(0|0);
       do {
        if ($467) {
         $$pre$i3$i$i190282 = $$pre$i3$i$i190;
         label = 201;
        } else {
         $468 = (($466) + 12|0);
         $469 = HEAP32[$468>>2]|0;
         $470 = (($466) + 16|0);
         $471 = HEAP32[$470>>2]|0;
         $472 = ($469|0)==($471|0);
         if ($472) {
          $473 = HEAP32[$466>>2]|0;
          $474 = (($473) + 36|0);
          $475 = HEAP32[$474>>2]|0;
          __THREW__ = 0;
          $476 = (invoke_ii($475|0,($466|0))|0);
          $477 = __THREW__; __THREW__ = 0;
          $478 = $477&1;
          if ($478) {
           label = 38;
           break L23;
          } else {
           $$0$i$i1$i$i188 = $476;
          }
         } else {
          $479 = HEAP32[$469>>2]|0;
          $$0$i$i1$i$i188 = $479;
         }
         $480 = ($$0$i$i1$i$i188|0)==(-1);
         if ($480) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i190282 = 0;
          label = 201;
          break;
         } else {
          $phitmp$i4$i$i191 = ($$pre$i3$i$i190|0)==(0|0);
          $tmp$i$i193 = $481 ^ $phitmp$i4$i$i191;
          if ($tmp$i$i193) {
           $$pre$i3$i$i190281 = $$pre$i3$i$i190;$868 = $$pre$i3$i$i190;
           break;
          } else {
           $$lcssa349 = $449;
           break L91;
          }
         }
        }
       } while(0);
       if ((label|0) == 201) {
        label = 0;
        if ($481) {
         $$lcssa349 = $449;
         break;
        } else {
         $$pre$i3$i$i190281 = $$pre$i3$i$i190282;$868 = 0;
        }
       }
       $482 = HEAP32[$__b>>2]|0;
       $483 = (($482) + 12|0);
       $484 = HEAP32[$483>>2]|0;
       $485 = (($482) + 16|0);
       $486 = HEAP32[$485>>2]|0;
       $487 = ($484|0)==($486|0);
       if ($487) {
        $488 = HEAP32[$482>>2]|0;
        $489 = (($488) + 36|0);
        $490 = HEAP32[$489>>2]|0;
        __THREW__ = 0;
        $491 = (invoke_ii($490|0,($482|0))|0);
        $492 = __THREW__; __THREW__ = 0;
        $493 = $492&1;
        if ($493) {
         label = 38;
         break L23;
        } else {
         $$0$i$i178 = $491;
        }
       } else {
        $494 = HEAP32[$484>>2]|0;
        $$0$i$i178 = $494;
       }
       $495 = HEAP32[$449>>2]|0;
       $496 = ($$0$i$i178|0)==($495|0);
       if (!($496)) {
        $$lcssa349 = $449;
        break;
       }
       $497 = HEAP32[$__b>>2]|0;
       $498 = (($497) + 12|0);
       $499 = HEAP32[$498>>2]|0;
       $500 = (($497) + 16|0);
       $501 = HEAP32[$500>>2]|0;
       $502 = ($499|0)==($501|0);
       if ($502) {
        $503 = HEAP32[$497>>2]|0;
        $504 = (($503) + 40|0);
        $505 = HEAP32[$504>>2]|0;
        __THREW__ = 0;
        (invoke_ii($505|0,($497|0))|0);
        $506 = __THREW__; __THREW__ = 0;
        $507 = $506&1;
        if ($507) {
         label = 38;
         break L23;
        }
       } else {
        $508 = (($499) + 4|0);
        HEAP32[$498>>2] = $508;
       }
       $509 = (($449) + 4|0);
       $$pre280 = HEAP8[$__sym>>0]|0;
       $$pre$i3$i$i190 = $$pre$i3$i$i190281;$440 = $$pre280;$449 = $509;$466 = $868;
      }
      if ($21) {
       $510 = HEAP8[$__sym>>0]|0;
       $511 = $510 & 1;
       $512 = ($511<<24>>24)==(0);
       if ($512) {
        $515 = $510&255;
        $516 = $515 >>> 1;
        $518 = $22;$519 = $516;
       } else {
        $513 = HEAP32[$23>>2]|0;
        $514 = HEAP32[$22>>2]|0;
        $518 = $513;$519 = $514;
       }
       $517 = (($518) + ($519<<2)|0);
       $520 = ($$lcssa349|0)==($517|0);
       if ($520) {
        $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
       } else {
        label = 216;
        break L23;
       }
      } else {
       $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     case 1:  {
      $cond = ($__p$0|0)==(3);
      if ($cond) {
       $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       $86 = HEAP32[$__b>>2]|0;
       $87 = (($86) + 12|0);
       $88 = HEAP32[$87>>2]|0;
       $89 = (($86) + 16|0);
       $90 = HEAP32[$89>>2]|0;
       $91 = ($88|0)==($90|0);
       if ($91) {
        $92 = HEAP32[$86>>2]|0;
        $93 = (($92) + 36|0);
        $94 = HEAP32[$93>>2]|0;
        __THREW__ = 0;
        $95 = (invoke_ii($94|0,($86|0))|0);
        $96 = __THREW__; __THREW__ = 0;
        $97 = $96&1;
        if ($97) {
         label = 42;
         break L23;
        } else {
         $$0$i$i45 = $95;
        }
       } else {
        $98 = HEAP32[$88>>2]|0;
        $$0$i$i45 = $98;
       }
       $99 = HEAP32[$__ct>>2]|0;
       $100 = (($99) + 12|0);
       $101 = HEAP32[$100>>2]|0;
       __THREW__ = 0;
       $102 = (invoke_iiii($101|0,($__ct|0),8192,($$0$i$i45|0))|0);
       $103 = __THREW__; __THREW__ = 0;
       $104 = $103&1;
       if ($104) {
        label = 42;
        break L23;
       }
       if (!($102)) {
        label = 58;
        break L23;
       }
       $105 = HEAP32[$__b>>2]|0;
       $106 = (($105) + 12|0);
       $107 = HEAP32[$106>>2]|0;
       $108 = (($105) + 16|0);
       $109 = HEAP32[$108>>2]|0;
       $110 = ($107|0)==($109|0);
       if ($110) {
        $111 = HEAP32[$105>>2]|0;
        $112 = (($111) + 40|0);
        $113 = HEAP32[$112>>2]|0;
        __THREW__ = 0;
        $114 = (invoke_ii($113|0,($105|0))|0);
        $115 = __THREW__; __THREW__ = 0;
        $116 = $115&1;
        if ($116) {
         label = 42;
         break L23;
        } else {
         $$0$i$i49 = $114;
        }
       } else {
        $117 = (($107) + 4|0);
        HEAP32[$106>>2] = $117;
        $118 = HEAP32[$107>>2]|0;
        $$0$i$i49 = $118;
       }
       __THREW__ = 0;
       invoke_vii(485,($__spaces|0),($$0$i$i49|0));
       $119 = __THREW__; __THREW__ = 0;
       $120 = $119&1;
       if ($120) {
        label = 42;
        break L23;
       } else {
        label = 60;
       }
      }
      break;
     }
     case 4:  {
      $62 = HEAP32[$__ts>>2]|0;
      $$pre$i3$i$i165 = $864;$538 = $864;$592 = $862;$__ng$0 = 0;
      L148: while(1) {
       $523 = HEAP32[$__b>>2]|0;
       $524 = ($523|0)==(0|0);
       do {
        if ($524) {
         $553 = 1;
        } else {
         $525 = (($523) + 12|0);
         $526 = HEAP32[$525>>2]|0;
         $527 = (($523) + 16|0);
         $528 = HEAP32[$527>>2]|0;
         $529 = ($526|0)==($528|0);
         if ($529) {
          $530 = HEAP32[$523>>2]|0;
          $531 = (($530) + 36|0);
          $532 = HEAP32[$531>>2]|0;
          __THREW__ = 0;
          $533 = (invoke_ii($532|0,($523|0))|0);
          $534 = __THREW__; __THREW__ = 0;
          $535 = $534&1;
          if ($535) {
           label = 41;
           break L23;
          } else {
           $$0$i$i$i$i157 = $533;
          }
         } else {
          $536 = HEAP32[$526>>2]|0;
          $$0$i$i$i$i157 = $536;
         }
         $537 = ($$0$i$i$i$i157|0)==(-1);
         if ($537) {
          HEAP32[$__b>>2] = 0;
          $553 = 1;
          break;
         } else {
          $$pre$i$i$i159 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i160 = ($$pre$i$i$i159|0)==(0|0);
          $553 = $phitmp$i$i$i160;
          break;
         }
        }
       } while(0);
       $539 = ($538|0)==(0|0);
       do {
        if ($539) {
         $869 = $$pre$i3$i$i165;
         label = 230;
        } else {
         $540 = (($538) + 12|0);
         $541 = HEAP32[$540>>2]|0;
         $542 = (($538) + 16|0);
         $543 = HEAP32[$542>>2]|0;
         $544 = ($541|0)==($543|0);
         if ($544) {
          $545 = HEAP32[$538>>2]|0;
          $546 = (($545) + 36|0);
          $547 = HEAP32[$546>>2]|0;
          __THREW__ = 0;
          $548 = (invoke_ii($547|0,($538|0))|0);
          $549 = __THREW__; __THREW__ = 0;
          $550 = $549&1;
          if ($550) {
           label = 41;
           break L23;
          } else {
           $$0$i$i1$i$i163 = $548;
          }
         } else {
          $551 = HEAP32[$541>>2]|0;
          $$0$i$i1$i$i163 = $551;
         }
         $552 = ($$0$i$i1$i$i163|0)==(-1);
         if ($552) {
          HEAP32[$__e>>2] = 0;
          $869 = 0;
          label = 230;
          break;
         } else {
          $phitmp$i4$i$i166 = ($$pre$i3$i$i165|0)==(0|0);
          $tmp$i$i168 = $553 ^ $phitmp$i4$i$i166;
          if ($tmp$i$i168) {
           $870 = $$pre$i3$i$i165;$871 = $$pre$i3$i$i165;
           break;
          } else {
           $$lcssa342 = $592;$$pre$i3$i$i133 = $$pre$i3$i$i165;$__ng$0$lcssa343 = $__ng$0;
           break L148;
          }
         }
        }
       } while(0);
       if ((label|0) == 230) {
        label = 0;
        if ($553) {
         $$lcssa342 = $592;$$pre$i3$i$i133 = $869;$__ng$0$lcssa343 = $__ng$0;
         break;
        } else {
         $870 = $869;$871 = 0;
        }
       }
       $554 = HEAP32[$__b>>2]|0;
       $555 = (($554) + 12|0);
       $556 = HEAP32[$555>>2]|0;
       $557 = (($554) + 16|0);
       $558 = HEAP32[$557>>2]|0;
       $559 = ($556|0)==($558|0);
       if ($559) {
        $560 = HEAP32[$554>>2]|0;
        $561 = (($560) + 36|0);
        $562 = HEAP32[$561>>2]|0;
        __THREW__ = 0;
        $563 = (invoke_ii($562|0,($554|0))|0);
        $564 = __THREW__; __THREW__ = 0;
        $565 = $564&1;
        if ($565) {
         label = 41;
         break L23;
        } else {
         $$0$i$i154 = $563;
        }
       } else {
        $566 = HEAP32[$556>>2]|0;
        $$0$i$i154 = $566;
       }
       $567 = HEAP32[$__ct>>2]|0;
       $568 = (($567) + 12|0);
       $569 = HEAP32[$568>>2]|0;
       __THREW__ = 0;
       $570 = (invoke_iiii($569|0,($__ct|0),2048,($$0$i$i154|0))|0);
       $571 = __THREW__; __THREW__ = 0;
       $572 = $571&1;
       if ($572) {
        label = 41;
        break L23;
       }
       if ($570) {
        $573 = HEAP32[$__wn>>2]|0;
        $574 = HEAP32[$0>>2]|0;
        $575 = ($573|0)==($574|0);
        if ($575) {
         __THREW__ = 0;
         invoke_viii(486,($__wb|0),($__wn|0),($0|0));
         $576 = __THREW__; __THREW__ = 0;
         $577 = $576&1;
         if ($577) {
          label = 41;
          break L23;
         }
         $$pre290 = HEAP32[$__wn>>2]|0;
         $579 = $$pre290;
        } else {
         $579 = $573;
        }
        $578 = (($579) + 4|0);
        HEAP32[$__wn>>2] = $578;
        HEAP32[$579>>2] = $$0$i$i154;
        $580 = (($__ng$0) + 1)|0;
        $872 = $592;$__ng$1 = $580;
       } else {
        $581 = HEAP8[$__grp>>0]|0;
        $582 = $581 & 1;
        $583 = ($582<<24>>24)==(0);
        if ($583) {
         $585 = $581&255;
         $586 = $585 >>> 1;
         $587 = $586;
        } else {
         $584 = HEAP32[$27>>2]|0;
         $587 = $584;
        }
        $588 = ($587|0)!=(0);
        $589 = ($__ng$0|0)!=(0);
        $or$cond7 = $589 & $588;
        $590 = ($$0$i$i154|0)==($62|0);
        $or$cond13 = $or$cond7 & $590;
        if (!($or$cond13)) {
         $$lcssa342 = $592;$$pre$i3$i$i133 = $870;$__ng$0$lcssa343 = $__ng$0;
         break;
        }
        $591 = HEAP32[$__ge>>2]|0;
        $593 = ($592|0)==($591|0);
        if ($593) {
         __THREW__ = 0;
         invoke_viii(480,($__gb|0),($__gn|0),($__ge|0));
         $594 = __THREW__; __THREW__ = 0;
         $595 = $594&1;
         if ($595) {
          label = 41;
          break L23;
         }
         $$pre292 = HEAP32[$__gn>>2]|0;
         $597 = $$pre292;
        } else {
         $597 = $592;
        }
        $596 = (($597) + 4|0);
        HEAP32[$__gn>>2] = $596;
        HEAP32[$597>>2] = $__ng$0;
        $872 = $596;$__ng$1 = 0;
       }
       $598 = HEAP32[$__b>>2]|0;
       $599 = (($598) + 12|0);
       $600 = HEAP32[$599>>2]|0;
       $601 = (($598) + 16|0);
       $602 = HEAP32[$601>>2]|0;
       $603 = ($600|0)==($602|0);
       if ($603) {
        $604 = HEAP32[$598>>2]|0;
        $605 = (($604) + 40|0);
        $606 = HEAP32[$605>>2]|0;
        __THREW__ = 0;
        (invoke_ii($606|0,($598|0))|0);
        $607 = __THREW__; __THREW__ = 0;
        $608 = $607&1;
        if ($608) {
         label = 41;
         break L23;
        }
       } else {
        $609 = (($600) + 4|0);
        HEAP32[$599>>2] = $609;
       }
       $$pre$i3$i$i165 = $870;$538 = $871;$592 = $872;$__ng$0 = $__ng$1;
      }
      $610 = HEAP32[$__gb>>2]|0;
      $611 = ($610|0)!=($$lcssa342|0);
      $612 = ($__ng$0$lcssa343|0)!=(0);
      $or$cond9 = $612 & $611;
      if ($or$cond9) {
       $613 = HEAP32[$__ge>>2]|0;
       $614 = ($$lcssa342|0)==($613|0);
       if ($614) {
        __THREW__ = 0;
        invoke_viii(480,($__gb|0),($__gn|0),($__ge|0));
        $615 = __THREW__; __THREW__ = 0;
        $616 = $615&1;
        if ($616) {
         label = 42;
         break L23;
        }
        $$pre286 = HEAP32[$__gn>>2]|0;
        $618 = $$pre286;
       } else {
        $618 = $$lcssa342;
       }
       $617 = (($618) + 4|0);
       HEAP32[$__gn>>2] = $617;
       HEAP32[$618>>2] = $__ng$0$lcssa343;
       $873 = $617;
      } else {
       $873 = $$lcssa342;
      }
      $619 = HEAP32[$__fd>>2]|0;
      $620 = ($619|0)>(0);
      if ($620) {
       $621 = HEAP32[$__b>>2]|0;
       $622 = ($621|0)==(0|0);
       do {
        if ($622) {
         $874 = 1;
        } else {
         $623 = (($621) + 12|0);
         $624 = HEAP32[$623>>2]|0;
         $625 = (($621) + 16|0);
         $626 = HEAP32[$625>>2]|0;
         $627 = ($624|0)==($626|0);
         if ($627) {
          $628 = HEAP32[$621>>2]|0;
          $629 = (($628) + 36|0);
          $630 = HEAP32[$629>>2]|0;
          __THREW__ = 0;
          $631 = (invoke_ii($630|0,($621|0))|0);
          $632 = __THREW__; __THREW__ = 0;
          $633 = $632&1;
          if ($633) {
           label = 42;
           break L23;
          } else {
           $$0$i$i$i$i125 = $631;
          }
         } else {
          $634 = HEAP32[$624>>2]|0;
          $$0$i$i$i$i125 = $634;
         }
         $635 = ($$0$i$i$i$i125|0)==(-1);
         if ($635) {
          HEAP32[$__b>>2] = 0;
          $874 = 1;
          break;
         } else {
          $$pre$i$i$i127 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i128 = ($$pre$i$i$i127|0)==(0|0);
          $874 = $phitmp$i$i$i128;
          break;
         }
        }
       } while(0);
       $636 = ($$pre$i3$i$i133|0)==(0|0);
       do {
        if ($636) {
         label = 272;
        } else {
         $637 = (($$pre$i3$i$i133) + 12|0);
         $638 = HEAP32[$637>>2]|0;
         $639 = (($$pre$i3$i$i133) + 16|0);
         $640 = HEAP32[$639>>2]|0;
         $641 = ($638|0)==($640|0);
         if ($641) {
          $642 = HEAP32[$$pre$i3$i$i133>>2]|0;
          $643 = (($642) + 36|0);
          $644 = HEAP32[$643>>2]|0;
          __THREW__ = 0;
          $645 = (invoke_ii($644|0,($$pre$i3$i$i133|0))|0);
          $646 = __THREW__; __THREW__ = 0;
          $647 = $646&1;
          if ($647) {
           label = 42;
           break L23;
          } else {
           $$0$i$i1$i$i131 = $645;
          }
         } else {
          $648 = HEAP32[$638>>2]|0;
          $$0$i$i1$i$i131 = $648;
         }
         $649 = ($$0$i$i1$i$i131|0)==(-1);
         if ($649) {
          HEAP32[$__e>>2] = 0;
          label = 272;
          break;
         } else {
          if ($874) {
           $875 = $$pre$i3$i$i133;
           break;
          } else {
           label = 278;
           break L23;
          }
         }
        }
       } while(0);
       if ((label|0) == 272) {
        label = 0;
        if ($874) {
         label = 278;
         break L23;
        } else {
         $875 = 0;
        }
       }
       $650 = HEAP32[$__b>>2]|0;
       $651 = (($650) + 12|0);
       $652 = HEAP32[$651>>2]|0;
       $653 = (($650) + 16|0);
       $654 = HEAP32[$653>>2]|0;
       $655 = ($652|0)==($654|0);
       if ($655) {
        $656 = HEAP32[$650>>2]|0;
        $657 = (($656) + 36|0);
        $658 = HEAP32[$657>>2]|0;
        __THREW__ = 0;
        $659 = (invoke_ii($658|0,($650|0))|0);
        $660 = __THREW__; __THREW__ = 0;
        $661 = $660&1;
        if ($661) {
         label = 42;
         break L23;
        } else {
         $$0$i$i118 = $659;
        }
       } else {
        $662 = HEAP32[$652>>2]|0;
        $$0$i$i118 = $662;
       }
       $663 = HEAP32[$__dp>>2]|0;
       $664 = ($$0$i$i118|0)==($663|0);
       if (!($664)) {
        label = 278;
        break L23;
       }
       $667 = HEAP32[$__b>>2]|0;
       $668 = (($667) + 12|0);
       $669 = HEAP32[$668>>2]|0;
       $670 = (($667) + 16|0);
       $671 = HEAP32[$670>>2]|0;
       $672 = ($669|0)==($671|0);
       if ($672) {
        $673 = HEAP32[$667>>2]|0;
        $674 = (($673) + 40|0);
        $675 = HEAP32[$674>>2]|0;
        __THREW__ = 0;
        (invoke_ii($675|0,($667|0))|0);
        $676 = __THREW__; __THREW__ = 0;
        $677 = $676&1;
        if ($677) {
         label = 42;
         break L23;
        }
       } else {
        $678 = (($669) + 4|0);
        HEAP32[$668>>2] = $678;
       }
       $$pre$i3$i$i99 = $875;$679 = $619;$696 = $875;
       while(1) {
        $680 = ($679|0)>(0);
        if (!($680)) {
         break;
        }
        $681 = HEAP32[$__b>>2]|0;
        $682 = ($681|0)==(0|0);
        do {
         if ($682) {
          $711 = 1;
         } else {
          $683 = (($681) + 12|0);
          $684 = HEAP32[$683>>2]|0;
          $685 = (($681) + 16|0);
          $686 = HEAP32[$685>>2]|0;
          $687 = ($684|0)==($686|0);
          if ($687) {
           $688 = HEAP32[$681>>2]|0;
           $689 = (($688) + 36|0);
           $690 = HEAP32[$689>>2]|0;
           __THREW__ = 0;
           $691 = (invoke_ii($690|0,($681|0))|0);
           $692 = __THREW__; __THREW__ = 0;
           $693 = $692&1;
           if ($693) {
            label = 40;
            break L23;
           } else {
            $$0$i$i$i$i91 = $691;
           }
          } else {
           $694 = HEAP32[$684>>2]|0;
           $$0$i$i$i$i91 = $694;
          }
          $695 = ($$0$i$i$i$i91|0)==(-1);
          if ($695) {
           HEAP32[$__b>>2] = 0;
           $711 = 1;
           break;
          } else {
           $$pre$i$i$i93 = HEAP32[$__b>>2]|0;
           $phitmp$i$i$i94 = ($$pre$i$i$i93|0)==(0|0);
           $711 = $phitmp$i$i$i94;
           break;
          }
         }
        } while(0);
        $697 = ($696|0)==(0|0);
        do {
         if ($697) {
          $$pre$i3$i$i99287$ph = $$pre$i3$i$i99;
          label = 297;
         } else {
          $698 = (($696) + 12|0);
          $699 = HEAP32[$698>>2]|0;
          $700 = (($696) + 16|0);
          $701 = HEAP32[$700>>2]|0;
          $702 = ($699|0)==($701|0);
          if ($702) {
           $703 = HEAP32[$696>>2]|0;
           $704 = (($703) + 36|0);
           $705 = HEAP32[$704>>2]|0;
           __THREW__ = 0;
           $706 = (invoke_ii($705|0,($696|0))|0);
           $707 = __THREW__; __THREW__ = 0;
           $708 = $707&1;
           if ($708) {
            label = 40;
            break L23;
           } else {
            $$0$i$i1$i$i97 = $706;
           }
          } else {
           $709 = HEAP32[$699>>2]|0;
           $$0$i$i1$i$i97 = $709;
          }
          $710 = ($$0$i$i1$i$i97|0)==(-1);
          if ($710) {
           HEAP32[$__e>>2] = 0;
           $$pre$i3$i$i99287$ph = 0;
           label = 297;
           break;
          } else {
           $phitmp$i4$i$i100 = ($$pre$i3$i$i99|0)==(0|0);
           $tmp$i$i102 = $711 ^ $phitmp$i4$i$i100;
           if ($tmp$i$i102) {
            $$pre$i3$i$i99287297 = $$pre$i3$i$i99;$876 = $$pre$i3$i$i99;
            break;
           } else {
            label = 304;
            break L23;
           }
          }
         }
        } while(0);
        if ((label|0) == 297) {
         label = 0;
         if ($711) {
          label = 304;
          break L23;
         } else {
          $$pre$i3$i$i99287297 = $$pre$i3$i$i99287$ph;$876 = 0;
         }
        }
        $712 = HEAP32[$__b>>2]|0;
        $713 = (($712) + 12|0);
        $714 = HEAP32[$713>>2]|0;
        $715 = (($712) + 16|0);
        $716 = HEAP32[$715>>2]|0;
        $717 = ($714|0)==($716|0);
        if ($717) {
         $718 = HEAP32[$712>>2]|0;
         $719 = (($718) + 36|0);
         $720 = HEAP32[$719>>2]|0;
         __THREW__ = 0;
         $721 = (invoke_ii($720|0,($712|0))|0);
         $722 = __THREW__; __THREW__ = 0;
         $723 = $722&1;
         if ($723) {
          label = 40;
          break L23;
         } else {
          $$0$i$i85 = $721;
         }
        } else {
         $724 = HEAP32[$714>>2]|0;
         $$0$i$i85 = $724;
        }
        $725 = HEAP32[$__ct>>2]|0;
        $726 = (($725) + 12|0);
        $727 = HEAP32[$726>>2]|0;
        __THREW__ = 0;
        $728 = (invoke_iiii($727|0,($__ct|0),2048,($$0$i$i85|0))|0);
        $729 = __THREW__; __THREW__ = 0;
        $730 = $729&1;
        if ($730) {
         label = 40;
         break L23;
        }
        if (!($728)) {
         label = 304;
         break L23;
        }
        $733 = HEAP32[$__wn>>2]|0;
        $734 = HEAP32[$0>>2]|0;
        $735 = ($733|0)==($734|0);
        if ($735) {
         __THREW__ = 0;
         invoke_viii(486,($__wb|0),($__wn|0),($0|0));
         $736 = __THREW__; __THREW__ = 0;
         $737 = $736&1;
         if ($737) {
          label = 40;
          break L23;
         }
        }
        $738 = HEAP32[$__b>>2]|0;
        $739 = (($738) + 12|0);
        $740 = HEAP32[$739>>2]|0;
        $741 = (($738) + 16|0);
        $742 = HEAP32[$741>>2]|0;
        $743 = ($740|0)==($742|0);
        if ($743) {
         $744 = HEAP32[$738>>2]|0;
         $745 = (($744) + 36|0);
         $746 = HEAP32[$745>>2]|0;
         __THREW__ = 0;
         $747 = (invoke_ii($746|0,($738|0))|0);
         $748 = __THREW__; __THREW__ = 0;
         $749 = $748&1;
         if ($749) {
          label = 40;
          break L23;
         } else {
          $$0$i$i77 = $747;
         }
        } else {
         $750 = HEAP32[$740>>2]|0;
         $$0$i$i77 = $750;
        }
        $751 = HEAP32[$__wn>>2]|0;
        $752 = (($751) + 4|0);
        HEAP32[$__wn>>2] = $752;
        HEAP32[$751>>2] = $$0$i$i77;
        $753 = (($679) + -1)|0;
        HEAP32[$__fd>>2] = $753;
        $754 = HEAP32[$__b>>2]|0;
        $755 = (($754) + 12|0);
        $756 = HEAP32[$755>>2]|0;
        $757 = (($754) + 16|0);
        $758 = HEAP32[$757>>2]|0;
        $759 = ($756|0)==($758|0);
        if ($759) {
         $760 = HEAP32[$754>>2]|0;
         $761 = (($760) + 40|0);
         $762 = HEAP32[$761>>2]|0;
         __THREW__ = 0;
         (invoke_ii($762|0,($754|0))|0);
         $763 = __THREW__; __THREW__ = 0;
         $764 = $763&1;
         if ($764) {
          label = 40;
          break L23;
         }
        } else {
         $765 = (($756) + 4|0);
         HEAP32[$755>>2] = $765;
        }
        $$pre$i3$i$i99 = $$pre$i3$i$i99287297;$679 = $753;$696 = $876;
       }
      }
      $766 = HEAP32[$__wn>>2]|0;
      $767 = HEAP32[$__wb>>2]|0;
      $768 = ($766|0)==($767|0);
      if ($768) {
       label = 316;
       break L23;
      } else {
       $865 = $873;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     case 0:  {
      $123 = ($__p$0|0)==(3);
      if ($123) {
       $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       label = 60;
      }
      break;
     }
     case 3:  {
      $190 = HEAP8[$__psn>>0]|0;
      $191 = $190 & 1;
      $192 = ($191<<24>>24)==(0);
      if ($192) {
       $194 = $190&255;
       $195 = $194 >>> 1;
       $204 = $195;
      } else {
       $193 = HEAP32[$18>>2]|0;
       $204 = $193;
      }
      $196 = HEAP8[$__nsn>>0]|0;
      $197 = $196 & 1;
      $198 = ($197<<24>>24)==(0);
      if ($198) {
       $200 = $196&255;
       $201 = $200 >>> 1;
       $203 = $201;
      } else {
       $199 = HEAP32[$16>>2]|0;
       $203 = $199;
      }
      $202 = (0 - ($203))|0;
      $205 = ($204|0)==($202|0);
      if ($205) {
       $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       if ($192) {
        $207 = $190&255;
        $208 = $207 >>> 1;
        $209 = $208;
       } else {
        $206 = HEAP32[$18>>2]|0;
        $209 = $206;
       }
       $210 = ($209|0)==(0);
       if (!($210)) {
        if ($198) {
         $212 = $196&255;
         $213 = $212 >>> 1;
         $214 = $213;
        } else {
         $211 = HEAP32[$16>>2]|0;
         $214 = $211;
        }
        $215 = ($214|0)==(0);
        if (!($215)) {
         $293 = HEAP32[$__b>>2]|0;
         $294 = (($293) + 12|0);
         $295 = HEAP32[$294>>2]|0;
         $296 = (($293) + 16|0);
         $297 = HEAP32[$296>>2]|0;
         $298 = ($295|0)==($297|0);
         if ($298) {
          $299 = HEAP32[$293>>2]|0;
          $300 = (($299) + 36|0);
          $301 = HEAP32[$300>>2]|0;
          __THREW__ = 0;
          $302 = (invoke_ii($301|0,($293|0))|0);
          $303 = __THREW__; __THREW__ = 0;
          $304 = $303&1;
          if ($304) {
           label = 42;
           break L23;
          }
          $$pre279 = HEAP8[$__psn>>0]|0;
          $$0$i$i121 = $302;$307 = $$pre279;
         } else {
          $305 = HEAP32[$295>>2]|0;
          $$0$i$i121 = $305;$307 = $190;
         }
         $306 = $307 & 1;
         $308 = ($306<<24>>24)==(0);
         $309 = HEAP32[$19>>2]|0;
         $$300 = $308 ? $18 : $309;
         $310 = HEAP32[$$300>>2]|0;
         $311 = ($$0$i$i121|0)==($310|0);
         $312 = HEAP32[$__b>>2]|0;
         $313 = (($312) + 12|0);
         $314 = HEAP32[$313>>2]|0;
         $315 = (($312) + 16|0);
         $316 = HEAP32[$315>>2]|0;
         $317 = ($314|0)==($316|0);
         if ($311) {
          if ($317) {
           $318 = HEAP32[$312>>2]|0;
           $319 = (($318) + 40|0);
           $320 = HEAP32[$319>>2]|0;
           __THREW__ = 0;
           (invoke_ii($320|0,($312|0))|0);
           $321 = __THREW__; __THREW__ = 0;
           $322 = $321&1;
           if ($322) {
            label = 42;
            break L23;
           }
          } else {
           $323 = (($314) + 4|0);
           HEAP32[$313>>2] = $323;
          }
          $324 = HEAP8[$__psn>>0]|0;
          $325 = $324 & 1;
          $326 = ($325<<24>>24)==(0);
          if ($326) {
           $328 = $324&255;
           $329 = $328 >>> 1;
           $330 = $329;
          } else {
           $327 = HEAP32[$18>>2]|0;
           $330 = $327;
          }
          $331 = ($330>>>0)>(1);
          $__psn$__trailing_sign$010 = $331 ? $__psn : $__trailing_sign$0;
          $865 = $862;$__trailing_sign$1 = $__psn$__trailing_sign$010;
          break L48;
         }
         if ($317) {
          $332 = HEAP32[$312>>2]|0;
          $333 = (($332) + 36|0);
          $334 = HEAP32[$333>>2]|0;
          __THREW__ = 0;
          $335 = (invoke_ii($334|0,($312|0))|0);
          $336 = __THREW__; __THREW__ = 0;
          $337 = $336&1;
          if ($337) {
           label = 42;
           break L23;
          } else {
           $$0$i$i143 = $335;
          }
         } else {
          $338 = HEAP32[$314>>2]|0;
          $$0$i$i143 = $338;
         }
         $339 = HEAP8[$__nsn>>0]|0;
         $340 = $339 & 1;
         $341 = ($340<<24>>24)==(0);
         $342 = HEAP32[$17>>2]|0;
         $$301 = $341 ? $16 : $342;
         $343 = HEAP32[$$301>>2]|0;
         $344 = ($$0$i$i143|0)==($343|0);
         if (!($344)) {
          label = 152;
          break L23;
         }
         $345 = HEAP32[$__b>>2]|0;
         $346 = (($345) + 12|0);
         $347 = HEAP32[$346>>2]|0;
         $348 = (($345) + 16|0);
         $349 = HEAP32[$348>>2]|0;
         $350 = ($347|0)==($349|0);
         if ($350) {
          $351 = HEAP32[$345>>2]|0;
          $352 = (($351) + 40|0);
          $353 = HEAP32[$352>>2]|0;
          __THREW__ = 0;
          (invoke_ii($353|0,($345|0))|0);
          $354 = __THREW__; __THREW__ = 0;
          $355 = $354&1;
          if ($355) {
           label = 42;
           break L23;
          }
         } else {
          $356 = (($347) + 4|0);
          HEAP32[$346>>2] = $356;
         }
         HEAP8[$__neg>>0] = 1;
         $357 = HEAP8[$__nsn>>0]|0;
         $358 = $357 & 1;
         $359 = ($358<<24>>24)==(0);
         if ($359) {
          $361 = $357&255;
          $362 = $361 >>> 1;
          $363 = $362;
         } else {
          $360 = HEAP32[$16>>2]|0;
          $363 = $360;
         }
         $364 = ($363>>>0)>(1);
         $__nsn$__trailing_sign$011 = $364 ? $__nsn : $__trailing_sign$0;
         $865 = $862;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
         break L48;
        }
       }
       if ($192) {
        $217 = $190&255;
        $218 = $217 >>> 1;
        $219 = $218;
       } else {
        $216 = HEAP32[$18>>2]|0;
        $219 = $216;
       }
       $220 = ($219|0)==(0);
       $221 = HEAP32[$__b>>2]|0;
       $222 = (($221) + 12|0);
       $223 = HEAP32[$222>>2]|0;
       $224 = (($221) + 16|0);
       $225 = HEAP32[$224>>2]|0;
       $226 = ($223|0)==($225|0);
       if ($220) {
        if ($226) {
         $260 = HEAP32[$221>>2]|0;
         $261 = (($260) + 36|0);
         $262 = HEAP32[$261>>2]|0;
         __THREW__ = 0;
         $263 = (invoke_ii($262|0,($221|0))|0);
         $264 = __THREW__; __THREW__ = 0;
         $265 = $264&1;
         if ($265) {
          label = 42;
          break L23;
         }
         $$pre = HEAP8[$__nsn>>0]|0;
         $$0$i$i109 = $263;$268 = $$pre;
        } else {
         $266 = HEAP32[$223>>2]|0;
         $$0$i$i109 = $266;$268 = $196;
        }
        $267 = $268 & 1;
        $269 = ($267<<24>>24)==(0);
        $270 = HEAP32[$17>>2]|0;
        $$299 = $269 ? $16 : $270;
        $271 = HEAP32[$$299>>2]|0;
        $272 = ($$0$i$i109|0)==($271|0);
        if (!($272)) {
         $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
         break L48;
        }
        $273 = HEAP32[$__b>>2]|0;
        $274 = (($273) + 12|0);
        $275 = HEAP32[$274>>2]|0;
        $276 = (($273) + 16|0);
        $277 = HEAP32[$276>>2]|0;
        $278 = ($275|0)==($277|0);
        if ($278) {
         $279 = HEAP32[$273>>2]|0;
         $280 = (($279) + 40|0);
         $281 = HEAP32[$280>>2]|0;
         __THREW__ = 0;
         (invoke_ii($281|0,($273|0))|0);
         $282 = __THREW__; __THREW__ = 0;
         $283 = $282&1;
         if ($283) {
          label = 42;
          break L23;
         }
        } else {
         $284 = (($275) + 4|0);
         HEAP32[$274>>2] = $284;
        }
        HEAP8[$__neg>>0] = 1;
        $285 = HEAP8[$__nsn>>0]|0;
        $286 = $285 & 1;
        $287 = ($286<<24>>24)==(0);
        if ($287) {
         $289 = $285&255;
         $290 = $289 >>> 1;
         $291 = $290;
        } else {
         $288 = HEAP32[$16>>2]|0;
         $291 = $288;
        }
        $292 = ($291>>>0)>(1);
        $__nsn$__trailing_sign$0 = $292 ? $__nsn : $__trailing_sign$0;
        $865 = $862;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
        break L48;
       }
       if ($226) {
        $227 = HEAP32[$221>>2]|0;
        $228 = (($227) + 36|0);
        $229 = HEAP32[$228>>2]|0;
        __THREW__ = 0;
        $230 = (invoke_ii($229|0,($221|0))|0);
        $231 = __THREW__; __THREW__ = 0;
        $232 = $231&1;
        if ($232) {
         label = 42;
         break L23;
        }
        $$pre278 = HEAP8[$__psn>>0]|0;
        $$0$i$i88 = $230;$235 = $$pre278;
       } else {
        $233 = HEAP32[$223>>2]|0;
        $$0$i$i88 = $233;$235 = $190;
       }
       $234 = $235 & 1;
       $236 = ($234<<24>>24)==(0);
       $237 = HEAP32[$19>>2]|0;
       $$ = $236 ? $18 : $237;
       $238 = HEAP32[$$>>2]|0;
       $239 = ($$0$i$i88|0)==($238|0);
       if (!($239)) {
        HEAP8[$__neg>>0] = 1;
        $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
        break L48;
       }
       $240 = HEAP32[$__b>>2]|0;
       $241 = (($240) + 12|0);
       $242 = HEAP32[$241>>2]|0;
       $243 = (($240) + 16|0);
       $244 = HEAP32[$243>>2]|0;
       $245 = ($242|0)==($244|0);
       if ($245) {
        $246 = HEAP32[$240>>2]|0;
        $247 = (($246) + 40|0);
        $248 = HEAP32[$247>>2]|0;
        __THREW__ = 0;
        (invoke_ii($248|0,($240|0))|0);
        $249 = __THREW__; __THREW__ = 0;
        $250 = $249&1;
        if ($250) {
         label = 42;
         break L23;
        }
       } else {
        $251 = (($242) + 4|0);
        HEAP32[$241>>2] = $251;
       }
       $252 = HEAP8[$__psn>>0]|0;
       $253 = $252 & 1;
       $254 = ($253<<24>>24)==(0);
       if ($254) {
        $256 = $252&255;
        $257 = $256 >>> 1;
        $258 = $257;
       } else {
        $255 = HEAP32[$18>>2]|0;
        $258 = $255;
       }
       $259 = ($258>>>0)>(1);
       $__psn$__trailing_sign$0 = $259 ? $__psn : $__trailing_sign$0;
       $865 = $862;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      }
      break;
     }
     default: {
      $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
     }
     }
    } while(0);
    if ((label|0) == 60) {
     label = 0;
     $$pre$i3$i$i59 = $864;$139 = $864;
     L374: while(1) {
      $124 = HEAP32[$__b>>2]|0;
      $125 = ($124|0)==(0|0);
      do {
       if ($125) {
        $154 = 1;
       } else {
        $126 = (($124) + 12|0);
        $127 = HEAP32[$126>>2]|0;
        $128 = (($124) + 16|0);
        $129 = HEAP32[$128>>2]|0;
        $130 = ($127|0)==($129|0);
        if ($130) {
         $131 = HEAP32[$124>>2]|0;
         $132 = (($131) + 36|0);
         $133 = HEAP32[$132>>2]|0;
         __THREW__ = 0;
         $134 = (invoke_ii($133|0,($124|0))|0);
         $135 = __THREW__; __THREW__ = 0;
         $136 = $135&1;
         if ($136) {
          label = 37;
          break L23;
         } else {
          $$0$i$i$i$i51 = $134;
         }
        } else {
         $137 = HEAP32[$127>>2]|0;
         $$0$i$i$i$i51 = $137;
        }
        $138 = ($$0$i$i$i$i51|0)==(-1);
        if ($138) {
         HEAP32[$__b>>2] = 0;
         $154 = 1;
         break;
        } else {
         $$pre$i$i$i53 = HEAP32[$__b>>2]|0;
         $phitmp$i$i$i54 = ($$pre$i$i$i53|0)==(0|0);
         $154 = $phitmp$i$i$i54;
         break;
        }
       }
      } while(0);
      $140 = ($139|0)==(0|0);
      do {
       if ($140) {
        $$pre$i3$i$i59275 = $$pre$i3$i$i59;
        label = 74;
       } else {
        $141 = (($139) + 12|0);
        $142 = HEAP32[$141>>2]|0;
        $143 = (($139) + 16|0);
        $144 = HEAP32[$143>>2]|0;
        $145 = ($142|0)==($144|0);
        if ($145) {
         $146 = HEAP32[$139>>2]|0;
         $147 = (($146) + 36|0);
         $148 = HEAP32[$147>>2]|0;
         __THREW__ = 0;
         $149 = (invoke_ii($148|0,($139|0))|0);
         $150 = __THREW__; __THREW__ = 0;
         $151 = $150&1;
         if ($151) {
          label = 37;
          break L23;
         } else {
          $$0$i$i1$i$i57 = $149;
         }
        } else {
         $152 = HEAP32[$142>>2]|0;
         $$0$i$i1$i$i57 = $152;
        }
        $153 = ($$0$i$i1$i$i57|0)==(-1);
        if ($153) {
         HEAP32[$__e>>2] = 0;
         $$pre$i3$i$i59275 = 0;
         label = 74;
         break;
        } else {
         $phitmp$i4$i$i60 = ($$pre$i3$i$i59|0)==(0|0);
         $tmp$i$i62 = $154 ^ $phitmp$i4$i$i60;
         if ($tmp$i$i62) {
          $$pre$i3$i$i59277 = $$pre$i3$i$i59;$866 = $$pre$i3$i$i59;
          break;
         } else {
          break L374;
         }
        }
       }
      } while(0);
      if ((label|0) == 74) {
       label = 0;
       if ($154) {
        break;
       } else {
        $$pre$i3$i$i59277 = $$pre$i3$i$i59275;$866 = 0;
       }
      }
      $155 = HEAP32[$__b>>2]|0;
      $156 = (($155) + 12|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = (($155) + 16|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($157|0)==($159|0);
      if ($160) {
       $161 = HEAP32[$155>>2]|0;
       $162 = (($161) + 36|0);
       $163 = HEAP32[$162>>2]|0;
       __THREW__ = 0;
       $164 = (invoke_ii($163|0,($155|0))|0);
       $165 = __THREW__; __THREW__ = 0;
       $166 = $165&1;
       if ($166) {
        label = 37;
        break L23;
       } else {
        $$0$i$i66 = $164;
       }
      } else {
       $167 = HEAP32[$157>>2]|0;
       $$0$i$i66 = $167;
      }
      $168 = HEAP32[$__ct>>2]|0;
      $169 = (($168) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      __THREW__ = 0;
      $171 = (invoke_iiii($170|0,($__ct|0),8192,($$0$i$i66|0))|0);
      $172 = __THREW__; __THREW__ = 0;
      $173 = $172&1;
      if ($173) {
       label = 37;
       break L23;
      }
      if (!($171)) {
       break;
      }
      $174 = HEAP32[$__b>>2]|0;
      $175 = (($174) + 12|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = (($174) + 16|0);
      $178 = HEAP32[$177>>2]|0;
      $179 = ($176|0)==($178|0);
      if ($179) {
       $180 = HEAP32[$174>>2]|0;
       $181 = (($180) + 40|0);
       $182 = HEAP32[$181>>2]|0;
       __THREW__ = 0;
       $183 = (invoke_ii($182|0,($174|0))|0);
       $184 = __THREW__; __THREW__ = 0;
       $185 = $184&1;
       if ($185) {
        label = 37;
        break L23;
       } else {
        $$0$i$i72 = $183;
       }
      } else {
       $186 = (($176) + 4|0);
       HEAP32[$175>>2] = $186;
       $187 = HEAP32[$176>>2]|0;
       $$0$i$i72 = $187;
      }
      __THREW__ = 0;
      invoke_vii(485,($__spaces|0),($$0$i$i72|0));
      $188 = __THREW__; __THREW__ = 0;
      $189 = $188&1;
      if ($189) {
       label = 37;
       break L23;
      } else {
       $$pre$i3$i$i59 = $$pre$i3$i$i59277;$139 = $866;
      }
     }
     $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
    }
    $771 = (($__p$0) + 1)|0;
    $862 = $865;$__p$0 = $771;$__trailing_sign$0 = $__trailing_sign$1;
   }
   L410:    switch (label|0) {
    case 37: {
     $65 = ___cxa_find_matching_catch()|0;
     $66 = tempRet0;
     $lpad$phi$index = $65;$lpad$phi$index8 = $66;
     break L21;
     break;
    }
    case 38: {
     $67 = ___cxa_find_matching_catch()|0;
     $68 = tempRet0;
     $lpad$phi$index = $67;$lpad$phi$index8 = $68;
     break L21;
     break;
    }
    case 39: {
     $69 = ___cxa_find_matching_catch()|0;
     $70 = tempRet0;
     $lpad$phi$index = $69;$lpad$phi$index8 = $70;
     break L21;
     break;
    }
    case 40: {
     $71 = ___cxa_find_matching_catch()|0;
     $72 = tempRet0;
     $lpad$phi$index = $71;$lpad$phi$index8 = $72;
     break L21;
     break;
    }
    case 41: {
     $73 = ___cxa_find_matching_catch()|0;
     $74 = tempRet0;
     $lpad$phi$index = $73;$lpad$phi$index8 = $74;
     break L21;
     break;
    }
    case 42: {
     $75 = ___cxa_find_matching_catch()|0;
     $76 = tempRet0;
     $lpad$phi$index = $75;$lpad$phi$index8 = $76;
     break L21;
     break;
    }
    case 58: {
     $121 = HEAP32[$__err>>2]|0;
     $122 = $121 | 4;
     HEAP32[$__err>>2] = $122;
     $$0 = 0;
     break;
    }
    case 152: {
     $365 = HEAP32[$__err>>2]|0;
     $366 = $365 | 4;
     HEAP32[$__err>>2] = $366;
     $$0 = 0;
     break;
    }
    case 216: {
     $521 = HEAP32[$__err>>2]|0;
     $522 = $521 | 4;
     HEAP32[$__err>>2] = $522;
     $$0 = 0;
     break;
    }
    case 278: {
     $665 = HEAP32[$__err>>2]|0;
     $666 = $665 | 4;
     HEAP32[$__err>>2] = $666;
     $$0 = 0;
     break;
    }
    case 304: {
     $731 = HEAP32[$__err>>2]|0;
     $732 = $731 | 4;
     HEAP32[$__err>>2] = $732;
     $$0 = 0;
     break;
    }
    case 316: {
     $769 = HEAP32[$__err>>2]|0;
     $770 = $769 | 4;
     HEAP32[$__err>>2] = $770;
     $$0 = 0;
     break;
    }
    case 319: {
     $772 = ($__trailing_sign$0$lcssa|0)==(0|0);
     do {
      if (!($772)) {
       $773 = (($__trailing_sign$0$lcssa) + 4|0);
       $774 = (($__trailing_sign$0$lcssa) + 8|0);
       $__i$0 = 1;
       L418: while(1) {
        $775 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $776 = $775 & 1;
        $777 = ($776<<24>>24)==(0);
        if ($777) {
         $779 = $775&255;
         $780 = $779 >>> 1;
         $782 = $780;
        } else {
         $778 = HEAP32[$773>>2]|0;
         $782 = $778;
        }
        $781 = ($__i$0>>>0)<($782>>>0);
        if (!($781)) {
         label = 351;
         break;
        }
        $783 = HEAP32[$__b>>2]|0;
        $784 = ($783|0)==(0|0);
        do {
         if ($784) {
          $877 = 1;
         } else {
          $785 = (($783) + 12|0);
          $786 = HEAP32[$785>>2]|0;
          $787 = (($783) + 16|0);
          $788 = HEAP32[$787>>2]|0;
          $789 = ($786|0)==($788|0);
          if ($789) {
           $790 = HEAP32[$783>>2]|0;
           $791 = (($790) + 36|0);
           $792 = HEAP32[$791>>2]|0;
           __THREW__ = 0;
           $793 = (invoke_ii($792|0,($783|0))|0);
           $794 = __THREW__; __THREW__ = 0;
           $795 = $794&1;
           if ($795) {
            label = 36;
            break L418;
           } else {
            $$0$i$i$i$i = $793;
           }
          } else {
           $796 = HEAP32[$786>>2]|0;
           $$0$i$i$i$i = $796;
          }
          $797 = ($$0$i$i$i$i|0)==(-1);
          if ($797) {
           HEAP32[$__b>>2] = 0;
           $877 = 1;
           break;
          } else {
           $$pre$i$i$i = HEAP32[$__b>>2]|0;
           $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
           $877 = $phitmp$i$i$i;
           break;
          }
         }
        } while(0);
        $798 = HEAP32[$__e>>2]|0;
        $799 = ($798|0)==(0|0);
        do {
         if ($799) {
          label = 338;
         } else {
          $800 = (($798) + 12|0);
          $801 = HEAP32[$800>>2]|0;
          $802 = (($798) + 16|0);
          $803 = HEAP32[$802>>2]|0;
          $804 = ($801|0)==($803|0);
          if ($804) {
           $805 = HEAP32[$798>>2]|0;
           $806 = (($805) + 36|0);
           $807 = HEAP32[$806>>2]|0;
           __THREW__ = 0;
           $808 = (invoke_ii($807|0,($798|0))|0);
           $809 = __THREW__; __THREW__ = 0;
           $810 = $809&1;
           if ($810) {
            label = 36;
            break L418;
           } else {
            $$0$i$i1$i$i = $808;
           }
          } else {
           $811 = HEAP32[$801>>2]|0;
           $$0$i$i1$i$i = $811;
          }
          $812 = ($$0$i$i1$i$i|0)==(-1);
          if ($812) {
           HEAP32[$__e>>2] = 0;
           label = 338;
           break;
          } else {
           if ($877) {
            break;
           } else {
            label = 346;
            break L418;
           }
          }
         }
        } while(0);
        if ((label|0) == 338) {
         label = 0;
         if ($877) {
          label = 346;
          break;
         }
        }
        $813 = HEAP32[$__b>>2]|0;
        $814 = (($813) + 12|0);
        $815 = HEAP32[$814>>2]|0;
        $816 = (($813) + 16|0);
        $817 = HEAP32[$816>>2]|0;
        $818 = ($815|0)==($817|0);
        if ($818) {
         $819 = HEAP32[$813>>2]|0;
         $820 = (($819) + 36|0);
         $821 = HEAP32[$820>>2]|0;
         __THREW__ = 0;
         $822 = (invoke_ii($821|0,($813|0))|0);
         $823 = __THREW__; __THREW__ = 0;
         $824 = $823&1;
         if ($824) {
          label = 36;
          break;
         } else {
          $$0$i$i = $822;
         }
        } else {
         $825 = HEAP32[$815>>2]|0;
         $$0$i$i = $825;
        }
        $826 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $827 = $826 & 1;
        $828 = ($827<<24>>24)==(0);
        if ($828) {
         $831 = $773;
        } else {
         $829 = HEAP32[$774>>2]|0;
         $831 = $829;
        }
        $830 = (($831) + ($__i$0<<2)|0);
        $832 = HEAP32[$830>>2]|0;
        $833 = ($$0$i$i|0)==($832|0);
        if (!($833)) {
         label = 346;
         break;
        }
        $836 = (($__i$0) + 1)|0;
        $837 = HEAP32[$__b>>2]|0;
        $838 = (($837) + 12|0);
        $839 = HEAP32[$838>>2]|0;
        $840 = (($837) + 16|0);
        $841 = HEAP32[$840>>2]|0;
        $842 = ($839|0)==($841|0);
        if ($842) {
         $843 = HEAP32[$837>>2]|0;
         $844 = (($843) + 40|0);
         $845 = HEAP32[$844>>2]|0;
         __THREW__ = 0;
         (invoke_ii($845|0,($837|0))|0);
         $846 = __THREW__; __THREW__ = 0;
         $847 = $846&1;
         if ($847) {
          label = 36;
          break;
         }
        } else {
         $848 = (($839) + 4|0);
         HEAP32[$838>>2] = $848;
        }
        $__i$0 = $836;
       }
       if ((label|0) == 36) {
        $63 = ___cxa_find_matching_catch()|0;
        $64 = tempRet0;
        $lpad$phi$index = $63;$lpad$phi$index8 = $64;
        break L21;
       }
       else if ((label|0) == 346) {
        $834 = HEAP32[$__err>>2]|0;
        $835 = $834 | 4;
        HEAP32[$__err>>2] = $835;
        $$0 = 0;
        break L410;
       }
       else if ((label|0) == 351) {
        break;
       }
      }
     } while(0);
     $849 = HEAP32[$__gb>>2]|0;
     $850 = ($849|0)==($$lcssa351|0);
     if ($850) {
      $$0 = 1;
     } else {
      HEAP32[$__et>>2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$849,$$lcssa351,$__et);
      $851 = HEAP32[$__et>>2]|0;
      $852 = ($851|0)==(0);
      if ($852) {
       $$0 = 1;
      } else {
       $853 = HEAP32[$__err>>2]|0;
       $854 = $853 | 4;
       HEAP32[$__err>>2] = $854;
       $$0 = 0;
      }
     }
     break;
    }
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $855 = HEAP32[$__gb>>2]|0;
   HEAP32[$__gb>>2] = 0;
   $856 = ($855|0)==(0|0);
   if (!($856)) {
    $857 = HEAP32[$1>>2]|0;
    __THREW__ = 0;
    invoke_vi($857|0,($855|0));
    $858 = __THREW__; __THREW__ = 0;
    $859 = $858&1;
    if ($859) {
     $860 = ___cxa_find_matching_catch(0|0)|0;
     $861 = tempRet0;
     ___clang_call_terminate($860);
     // unreachable;
    }
   }
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $79 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $80 = ($79|0)==(0|0);
 if (!($80)) {
  $81 = HEAP32[$1>>2]|0;
  __THREW__ = 0;
  invoke_vi($81|0,($79|0));
  $82 = __THREW__; __THREW__ = 0;
  $83 = $82&1;
  if ($83) {
   $84 = ___cxa_find_matching_catch(0|0)|0;
   $85 = tempRet0;
   ___clang_call_terminate($84);
   // unreachable;
  }
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$010 = 0, $$017 = 0, $$018 = 0, $$09 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $__loc = 0, $__neg = 0, $__w$0 = 0, $__w$0$lcssa = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 424|0;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 428|0;
 $0 = sp;
 HEAP32[$__wb>>2] = $__wbuf;
 $1 = (($__wb) + 4|0);
 HEAP32[$1>>2] = 475;
 $2 = (($__wbuf) + 400|0);
 __THREW__ = 0;
 invoke_vii(457,($__loc|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $30 = ___cxa_find_matching_catch()|0;
  $31 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$017 = $31;$$09 = $30;$92 = $__wbuf;
  label = 39;
 } else {
  __THREW__ = 0;
  $5 = (invoke_iii(454,($__loc|0),(7024|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  L3: do {
   if (!($7)) {
    HEAP8[$__neg>>0] = 0;
    $8 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $8;
    $9 = (($__iob) + 4|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
    $11 = (invoke_iiiiiiiiiiii(483,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($10|0),($__err|0),($__neg|0),($5|0),($__wb|0),($__wn|0),($2|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     if ($11) {
      $14 = HEAP8[$__v>>0]|0;
      $15 = $14 & 1;
      $16 = ($15<<24>>24)==(0);
      if ($16) {
       HEAP8[$__v>>0] = 0;
      } else {
       $17 = (($__v) + 8|0);
       $18 = HEAP32[$17>>2]|0;
       HEAP32[$18>>2] = 0;
      }
      $19 = (($__v) + 4|0);
      HEAP32[$19>>2] = 0;
      $20 = HEAP8[$__neg>>0]|0;
      $21 = ($20<<24>>24)==(0);
      if (!($21)) {
       $22 = HEAP32[$5>>2]|0;
       $23 = (($22) + 44|0);
       $24 = HEAP32[$23>>2]|0;
       __THREW__ = 0;
       $25 = (invoke_iii($24|0,($5|0),45)|0);
       $26 = __THREW__; __THREW__ = 0;
       $27 = $26&1;
       if ($27) {
        break;
       }
       __THREW__ = 0;
       invoke_vii(485,($__v|0),($25|0));
       $28 = __THREW__; __THREW__ = 0;
       $29 = $28&1;
       if ($29) {
        break;
       }
      }
      $32 = HEAP32[$5>>2]|0;
      $33 = (($32) + 44|0);
      $34 = HEAP32[$33>>2]|0;
      __THREW__ = 0;
      $35 = (invoke_iii($34|0,($5|0),48)|0);
      $36 = __THREW__; __THREW__ = 0;
      $37 = $36&1;
      if ($37) {
       break;
      }
      $38 = HEAP32[$__wb>>2]|0;
      $39 = HEAP32[$__wn>>2]|0;
      $40 = (($39) + -4|0);
      $__w$0 = $38;
      while(1) {
       $41 = ($__w$0>>>0)<($40>>>0);
       if (!($41)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $42 = HEAP32[$__w$0>>2]|0;
       $43 = ($42|0)==($35|0);
       if (!($43)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $44 = (($__w$0) + 4|0);
       $__w$0 = $44;
      }
      __THREW__ = 0;
      (invoke_iiii(487,($__v|0),($__w$0$lcssa|0),($39|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       break;
      }
     }
     $47 = HEAP32[$__b>>2]|0;
     $48 = ($47|0)==(0|0);
     do {
      if ($48) {
       $97 = 1;
      } else {
       $49 = (($47) + 12|0);
       $50 = HEAP32[$49>>2]|0;
       $51 = (($47) + 16|0);
       $52 = HEAP32[$51>>2]|0;
       $53 = ($50|0)==($52|0);
       if ($53) {
        $54 = HEAP32[$47>>2]|0;
        $55 = (($54) + 36|0);
        $56 = HEAP32[$55>>2]|0;
        __THREW__ = 0;
        $57 = (invoke_ii($56|0,($47|0))|0);
        $58 = __THREW__; __THREW__ = 0;
        $59 = $58&1;
        if ($59) {
         break L3;
        } else {
         $$0$i$i$i$i = $57;
        }
       } else {
        $60 = HEAP32[$50>>2]|0;
        $$0$i$i$i$i = $60;
       }
       $61 = ($$0$i$i$i$i|0)==(-1);
       if ($61) {
        HEAP32[$__b>>2] = 0;
        $97 = 1;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
        $97 = $phitmp$i$i$i;
        break;
       }
      }
     } while(0);
     $62 = ($8|0)==(0|0);
     do {
      if ($62) {
       label = 31;
      } else {
       $63 = (($8) + 12|0);
       $64 = HEAP32[$63>>2]|0;
       $65 = (($8) + 16|0);
       $66 = HEAP32[$65>>2]|0;
       $67 = ($64|0)==($66|0);
       if ($67) {
        $68 = HEAP32[$8>>2]|0;
        $69 = (($68) + 36|0);
        $70 = HEAP32[$69>>2]|0;
        __THREW__ = 0;
        $71 = (invoke_ii($70|0,($8|0))|0);
        $72 = __THREW__; __THREW__ = 0;
        $73 = $72&1;
        if ($73) {
         break L3;
        } else {
         $$0$i$i1$i$i = $71;
        }
       } else {
        $74 = HEAP32[$64>>2]|0;
        $$0$i$i1$i$i = $74;
       }
       $75 = ($$0$i$i1$i$i|0)==(-1);
       if ($75) {
        HEAP32[$__e>>2] = 0;
        label = 31;
        break;
       } else {
        if ($97) {
         break;
        } else {
         label = 33;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 31) {
      if ($97) {
       label = 33;
      }
     }
     if ((label|0) == 33) {
      $76 = HEAP32[$__err>>2]|0;
      $77 = $76 | 2;
      HEAP32[$__err>>2] = $77;
     }
     $78 = HEAP32[$__b>>2]|0;
     HEAP32[$agg$result>>2] = $78;
     $79 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($79)|0);
     $80 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $81 = ($80|0)==(0|0);
     if (!($81)) {
      $82 = HEAP32[$1>>2]|0;
      __THREW__ = 0;
      invoke_vi($82|0,($80|0));
      $83 = __THREW__; __THREW__ = 0;
      $84 = $83&1;
      if ($84) {
       $85 = ___cxa_find_matching_catch(0|0)|0;
       $86 = tempRet0;
       ___clang_call_terminate($85);
       // unreachable;
      }
     }
     STACKTOP = sp;return;
    }
   }
  } while(0);
  $87 = ___cxa_find_matching_catch()|0;
  $88 = tempRet0;
  $89 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($89)|0);
  $$pre = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $90 = ($$pre|0)==(0|0);
  if ($90) {
   $$010 = $87;$$018 = $88;
  } else {
   $$017 = $88;$$09 = $87;$92 = $$pre;
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $91 = HEAP32[$1>>2]|0;
  __THREW__ = 0;
  invoke_vi($91|0,($92|0));
  $93 = __THREW__; __THREW__ = 0;
  $94 = $93&1;
  if ($94) {
   $95 = ___cxa_find_matching_catch(0|0)|0;
   $96 = tempRet0;
   ___clang_call_terminate($95);
   // unreachable;
  } else {
   $$010 = $$09;$$018 = $$017;
  }
 }
 ___resumeException($$010|0);
 // unreachable;
}
function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i11 = 0, $__i$0$i$i$i16 = 0, $__i$0$i$i$i21 = 0, $__i$0$i$i$i26 = 0, $__i$0$i$i$i31 = 0, $__i$0$i$i$i4 = 0, $__i$0$i$i$i7 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i12 = 0, $exitcond$i$i$i17 = 0, $exitcond$i$i$i22 = 0, $exitcond$i$i$i27 = 0, $exitcond$i$i$i32 = 0;
 var $exitcond$i$i$i5 = 0, $exitcond$i$i$i8 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6600)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 1023]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = (($15) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 1023]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = (($__nsn) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP32[$22>>2] = 0;
  }
  $23 = (($__nsn) + 4|0);
  HEAP32[$23>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__nsn|0),0);
  $24 = __THREW__; __THREW__ = 0;
  $25 = $24&1;
  if ($25) {
   $26 = ___cxa_find_matching_catch(0|0)|0;
   $27 = tempRet0;
   ___clang_call_terminate($26);
   // unreachable;
  }
  ;HEAP32[$__nsn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  $__i$0$i$i$i = 0;
  while(1) {
   $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
   if ($exitcond$i$i$i) {
    break;
   }
   $28 = (($1) + ($__i$0$i$i$i<<2)|0);
   HEAP32[$28>>2] = 0;
   $29 = (($__i$0$i$i$i) + 1)|0;
   $__i$0$i$i$i = $29;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  $30 = HEAP32[$10>>2]|0;
  $31 = (($30) + 28|0);
  $32 = HEAP32[$31>>2]|0;
  FUNCTION_TABLE_vii[$32 & 1023]($2,$10);
  $33 = HEAP8[$__psn>>0]|0;
  $34 = $33 & 1;
  $35 = ($34<<24>>24)==(0);
  if ($35) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $36 = (($__psn) + 8|0);
   $37 = HEAP32[$36>>2]|0;
   HEAP32[$37>>2] = 0;
  }
  $38 = (($__psn) + 4|0);
  HEAP32[$38>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__psn|0),0);
  $39 = __THREW__; __THREW__ = 0;
  $40 = $39&1;
  if ($40) {
   $41 = ___cxa_find_matching_catch(0|0)|0;
   $42 = tempRet0;
   ___clang_call_terminate($41);
   // unreachable;
  }
  ;HEAP32[$__psn+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  $__i$0$i$i$i4 = 0;
  while(1) {
   $exitcond$i$i$i5 = ($__i$0$i$i$i4|0)==(3);
   if ($exitcond$i$i$i5) {
    break;
   }
   $43 = (($2) + ($__i$0$i$i$i4<<2)|0);
   HEAP32[$43>>2] = 0;
   $44 = (($__i$0$i$i$i4) + 1)|0;
   $__i$0$i$i$i4 = $44;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
  $45 = HEAP32[$10>>2]|0;
  $46 = (($45) + 12|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = (FUNCTION_TABLE_ii[$47 & 1023]($10)|0);
  HEAP32[$__dp>>2] = $48;
  $49 = HEAP32[$10>>2]|0;
  $50 = (($49) + 16|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = (FUNCTION_TABLE_ii[$51 & 1023]($10)|0);
  HEAP32[$__ts>>2] = $52;
  $53 = HEAP32[$10>>2]|0;
  $54 = (($53) + 20|0);
  $55 = HEAP32[$54>>2]|0;
  FUNCTION_TABLE_vii[$55 & 1023]($3,$10);
  $56 = HEAP8[$__grp>>0]|0;
  $57 = $56 & 1;
  $58 = ($57<<24>>24)==(0);
  if ($58) {
   $62 = (($__grp) + 1|0);
   HEAP8[$62>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $59 = (($__grp) + 8|0);
   $60 = HEAP32[$59>>2]|0;
   HEAP8[$60>>0] = 0;
   $61 = (($__grp) + 4|0);
   HEAP32[$61>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $63 = __THREW__; __THREW__ = 0;
  $64 = $63&1;
  if ($64) {
   $65 = ___cxa_find_matching_catch(0|0)|0;
   $66 = tempRet0;
   ___clang_call_terminate($65);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  $__i$0$i$i$i7 = 0;
  while(1) {
   $exitcond$i$i$i8 = ($__i$0$i$i$i7|0)==(3);
   if ($exitcond$i$i$i8) {
    break;
   }
   $67 = (($3) + ($__i$0$i$i$i7<<2)|0);
   HEAP32[$67>>2] = 0;
   $68 = (($__i$0$i$i$i7) + 1)|0;
   $__i$0$i$i$i7 = $68;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $69 = HEAP32[$10>>2]|0;
  $70 = (($69) + 24|0);
  $71 = HEAP32[$70>>2]|0;
  FUNCTION_TABLE_vii[$71 & 1023]($4,$10);
  $72 = HEAP8[$__sym>>0]|0;
  $73 = $72 & 1;
  $74 = ($73<<24>>24)==(0);
  if ($74) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $75 = (($__sym) + 8|0);
   $76 = HEAP32[$75>>2]|0;
   HEAP32[$76>>2] = 0;
  }
  $77 = (($__sym) + 4|0);
  HEAP32[$77>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__sym|0),0);
  $78 = __THREW__; __THREW__ = 0;
  $79 = $78&1;
  if ($79) {
   $80 = ___cxa_find_matching_catch(0|0)|0;
   $81 = tempRet0;
   ___clang_call_terminate($80);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i11 = 0;
  while(1) {
   $exitcond$i$i$i12 = ($__i$0$i$i$i11|0)==(3);
   if ($exitcond$i$i$i12) {
    break;
   }
   $82 = (($4) + ($__i$0$i$i$i11<<2)|0);
   HEAP32[$82>>2] = 0;
   $83 = (($__i$0$i$i$i11) + 1)|0;
   $__i$0$i$i$i11 = $83;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
  $84 = HEAP32[$10>>2]|0;
  $85 = (($84) + 36|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = (FUNCTION_TABLE_ii[$86 & 1023]($10)|0);
  $storemerge = $87;
 } else {
  $88 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6536)|0);
  $89 = HEAP32[$88>>2]|0;
  $90 = (($89) + 44|0);
  $91 = HEAP32[$90>>2]|0;
  FUNCTION_TABLE_vii[$91 & 1023]($5,$88);
  $92 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$92&255;HEAP8[$__pat+1>>0]=($92>>8)&255;HEAP8[$__pat+2>>0]=($92>>16)&255;HEAP8[$__pat+3>>0]=$92>>24;
  $93 = HEAP32[$88>>2]|0;
  $94 = (($93) + 32|0);
  $95 = HEAP32[$94>>2]|0;
  FUNCTION_TABLE_vii[$95 & 1023]($6,$88);
  $96 = HEAP8[$__nsn>>0]|0;
  $97 = $96 & 1;
  $98 = ($97<<24>>24)==(0);
  if ($98) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $99 = (($__nsn) + 8|0);
   $100 = HEAP32[$99>>2]|0;
   HEAP32[$100>>2] = 0;
  }
  $101 = (($__nsn) + 4|0);
  HEAP32[$101>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__nsn|0),0);
  $102 = __THREW__; __THREW__ = 0;
  $103 = $102&1;
  if ($103) {
   $104 = ___cxa_find_matching_catch(0|0)|0;
   $105 = tempRet0;
   ___clang_call_terminate($104);
   // unreachable;
  }
  ;HEAP32[$__nsn+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  $__i$0$i$i$i16 = 0;
  while(1) {
   $exitcond$i$i$i17 = ($__i$0$i$i$i16|0)==(3);
   if ($exitcond$i$i$i17) {
    break;
   }
   $106 = (($6) + ($__i$0$i$i$i16<<2)|0);
   HEAP32[$106>>2] = 0;
   $107 = (($__i$0$i$i$i16) + 1)|0;
   $__i$0$i$i$i16 = $107;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
  $108 = HEAP32[$88>>2]|0;
  $109 = (($108) + 28|0);
  $110 = HEAP32[$109>>2]|0;
  FUNCTION_TABLE_vii[$110 & 1023]($7,$88);
  $111 = HEAP8[$__psn>>0]|0;
  $112 = $111 & 1;
  $113 = ($112<<24>>24)==(0);
  if ($113) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $114 = (($__psn) + 8|0);
   $115 = HEAP32[$114>>2]|0;
   HEAP32[$115>>2] = 0;
  }
  $116 = (($__psn) + 4|0);
  HEAP32[$116>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__psn|0),0);
  $117 = __THREW__; __THREW__ = 0;
  $118 = $117&1;
  if ($118) {
   $119 = ___cxa_find_matching_catch(0|0)|0;
   $120 = tempRet0;
   ___clang_call_terminate($119);
   // unreachable;
  }
  ;HEAP32[$__psn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  $__i$0$i$i$i21 = 0;
  while(1) {
   $exitcond$i$i$i22 = ($__i$0$i$i$i21|0)==(3);
   if ($exitcond$i$i$i22) {
    break;
   }
   $121 = (($7) + ($__i$0$i$i$i21<<2)|0);
   HEAP32[$121>>2] = 0;
   $122 = (($__i$0$i$i$i21) + 1)|0;
   $__i$0$i$i$i21 = $122;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  $123 = HEAP32[$88>>2]|0;
  $124 = (($123) + 12|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = (FUNCTION_TABLE_ii[$125 & 1023]($88)|0);
  HEAP32[$__dp>>2] = $126;
  $127 = HEAP32[$88>>2]|0;
  $128 = (($127) + 16|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = (FUNCTION_TABLE_ii[$129 & 1023]($88)|0);
  HEAP32[$__ts>>2] = $130;
  $131 = HEAP32[$88>>2]|0;
  $132 = (($131) + 20|0);
  $133 = HEAP32[$132>>2]|0;
  FUNCTION_TABLE_vii[$133 & 1023]($8,$88);
  $134 = HEAP8[$__grp>>0]|0;
  $135 = $134 & 1;
  $136 = ($135<<24>>24)==(0);
  if ($136) {
   $140 = (($__grp) + 1|0);
   HEAP8[$140>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $137 = (($__grp) + 8|0);
   $138 = HEAP32[$137>>2]|0;
   HEAP8[$138>>0] = 0;
   $139 = (($__grp) + 4|0);
   HEAP32[$139>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $141 = __THREW__; __THREW__ = 0;
  $142 = $141&1;
  if ($142) {
   $143 = ___cxa_find_matching_catch(0|0)|0;
   $144 = tempRet0;
   ___clang_call_terminate($143);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$8+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  $__i$0$i$i$i26 = 0;
  while(1) {
   $exitcond$i$i$i27 = ($__i$0$i$i$i26|0)==(3);
   if ($exitcond$i$i$i27) {
    break;
   }
   $145 = (($8) + ($__i$0$i$i$i26<<2)|0);
   HEAP32[$145>>2] = 0;
   $146 = (($__i$0$i$i$i26) + 1)|0;
   $__i$0$i$i$i26 = $146;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $147 = HEAP32[$88>>2]|0;
  $148 = (($147) + 24|0);
  $149 = HEAP32[$148>>2]|0;
  FUNCTION_TABLE_vii[$149 & 1023]($9,$88);
  $150 = HEAP8[$__sym>>0]|0;
  $151 = $150 & 1;
  $152 = ($151<<24>>24)==(0);
  if ($152) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $153 = (($__sym) + 8|0);
   $154 = HEAP32[$153>>2]|0;
   HEAP32[$154>>2] = 0;
  }
  $155 = (($__sym) + 4|0);
  HEAP32[$155>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__sym|0),0);
  $156 = __THREW__; __THREW__ = 0;
  $157 = $156&1;
  if ($157) {
   $158 = ___cxa_find_matching_catch(0|0)|0;
   $159 = tempRet0;
   ___clang_call_terminate($158);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  $__i$0$i$i$i31 = 0;
  while(1) {
   $exitcond$i$i$i32 = ($__i$0$i$i$i31|0)==(3);
   if ($exitcond$i$i$i32) {
    break;
   }
   $160 = (($9) + ($__i$0$i$i$i31<<2)|0);
   HEAP32[$160>>2] = 0;
   $161 = (($__i$0$i$i$i31) + 1)|0;
   $__i$0$i$i$i31 = $161;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  $162 = HEAP32[$88>>2]|0;
  $163 = (($162) + 36|0);
  $164 = HEAP32[$163>>2]|0;
  $165 = (FUNCTION_TABLE_ii[$164 & 1023]($88)|0);
  $storemerge = $165;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__units) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i6 = 0, $__i$0$i$i9 = 0;
 var $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i10 = 0, $exitcond$i$i7 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 76|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $__buf = sp + 288|0;
 $__bb = sp + 72|0;
 $__digits = sp + 188|0;
 $__loc = sp + 68|0;
 $__pat = sp + 184|0;
 $__dp = sp + 181|0;
 $__ts = sp + 180|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__sn = sp + 32|0;
 $__fd = sp + 28|0;
 $__mbuf = sp + 80|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$vararg_buffer>>3] = $__units;
 $1 = (_snprintf($__buf,100,6784,$vararg_buffer)|0);
 $2 = ($1>>>0)>(99);
 do {
  if ($2) {
   __THREW__ = 0;
   $3 = (invoke_i(459)|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $118 = 0;$119 = 0;
    label = 7;
   } else {
    __THREW__ = 0;
    HEAPF64[$vararg_buffer1>>3] = $__units;
    $6 = (invoke_iiiii(464,($__bb|0),($3|0),(6784|0),($vararg_buffer1|0))|0);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $118 = 0;$119 = 0;
     label = 7;
    } else {
     $9 = HEAP32[$__bb>>2]|0;
     $10 = ($9|0)==(0|0);
     if ($10) {
      __THREW__ = 0;
      invoke_v(465);
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if ($12) {
       $118 = 0;$119 = 0;
       label = 7;
       break;
      }
      $$pre = HEAP32[$__bb>>2]|0;
      $120 = $$pre;
     } else {
      $120 = $9;
     }
     $15 = (_malloc($6)|0);
     $16 = ($15|0)==(0|0);
     if ($16) {
      __THREW__ = 0;
      invoke_v(465);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if ($18) {
       $118 = $120;$119 = 0;
       label = 7;
      } else {
       $113 = 0;$114 = $120;$__db$0 = 0;$__n$0 = $6;
       label = 10;
      }
     } else {
      $113 = $15;$114 = $120;$__db$0 = $15;$__n$0 = $6;
      label = 10;
     }
    }
   }
  } else {
   $113 = 0;$114 = 0;$__db$0 = $__digits;$__n$0 = $1;
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  __THREW__ = 0;
  invoke_vii(457,($__loc|0),($__iob|0));
  $19 = __THREW__; __THREW__ = 0;
  $20 = $19&1;
  if ($20) {
   $118 = $114;$119 = $113;
   label = 7;
  } else {
   __THREW__ = 0;
   $21 = (invoke_iii(454,($__loc|0),(7032|0))|0);
   $22 = __THREW__; __THREW__ = 0;
   $23 = $22&1;
   if ($23) {
    label = 44;
   } else {
    $24 = HEAP32[$__bb>>2]|0;
    $25 = (($24) + ($__n$0)|0);
    $26 = HEAP32[$21>>2]|0;
    $27 = (($26) + 32|0);
    $28 = HEAP32[$27>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($28|0,($21|0),($24|0),($25|0),($__db$0|0))|0);
    $29 = __THREW__; __THREW__ = 0;
    $30 = $29&1;
    if ($30) {
     label = 44;
    } else {
     $31 = ($__n$0|0)==(0);
     if ($31) {
      $41 = 0;
     } else {
      $32 = HEAP32[$__bb>>2]|0;
      $33 = HEAP8[$32>>0]|0;
      $34 = ($33<<24>>24)==(45);
      $41 = $34;
     }
     $__i$0$i$i = 0;
     while(1) {
      $exitcond$i$i = ($__i$0$i$i|0)==(3);
      if ($exitcond$i$i) {
       break;
      }
      $35 = (($__grp) + ($__i$0$i$i<<2)|0);
      HEAP32[$35>>2] = 0;
      $36 = (($__i$0$i$i) + 1)|0;
      $__i$0$i$i = $36;
     }
     $__i$0$i$i6 = 0;
     while(1) {
      $exitcond$i$i7 = ($__i$0$i$i6|0)==(3);
      if ($exitcond$i$i7) {
       break;
      }
      $37 = (($__sym) + ($__i$0$i$i6<<2)|0);
      HEAP32[$37>>2] = 0;
      $38 = (($__i$0$i$i6) + 1)|0;
      $__i$0$i$i6 = $38;
     }
     $__i$0$i$i9 = 0;
     while(1) {
      $exitcond$i$i10 = ($__i$0$i$i9|0)==(3);
      if ($exitcond$i$i10) {
       break;
      }
      $39 = (($__sn) + ($__i$0$i$i9<<2)|0);
      HEAP32[$39>>2] = 0;
      $40 = (($__i$0$i$i9) + 1)|0;
      $__i$0$i$i9 = $40;
     }
     __THREW__ = 0;
     invoke_viiiiiiiiii(489,($__intl|0),($41|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
     $42 = __THREW__; __THREW__ = 0;
     $43 = $42&1;
     do {
      if ($43) {
       $95 = ___cxa_find_matching_catch()|0;
       $96 = tempRet0;
       $$0 = $95;$$01 = $96;
      } else {
       $44 = HEAP32[$__fd>>2]|0;
       $45 = ($__n$0|0)>($44|0);
       if ($45) {
        $46 = (($__n$0) - ($44))|0;
        $47 = $46 << 1;
        $48 = HEAP8[$__sn>>0]|0;
        $49 = $48 & 1;
        $50 = ($49<<24>>24)==(0);
        if ($50) {
         $53 = $48&255;
         $54 = $53 >>> 1;
         $64 = $54;
        } else {
         $51 = (($__sn) + 4|0);
         $52 = HEAP32[$51>>2]|0;
         $64 = $52;
        }
        $55 = HEAP8[$__sym>>0]|0;
        $56 = $55 & 1;
        $57 = ($56<<24>>24)==(0);
        if ($57) {
         $60 = $55&255;
         $61 = $60 >>> 1;
         $66 = $61;
        } else {
         $58 = (($__sym) + 4|0);
         $59 = HEAP32[$58>>2]|0;
         $66 = $59;
        }
        $62 = $47 | 1;
        $63 = (($64) + ($62))|0;
        $65 = (($63) + ($66))|0;
        $$pn = $65;
       } else {
        $67 = HEAP8[$__sn>>0]|0;
        $68 = $67 & 1;
        $69 = ($68<<24>>24)==(0);
        if ($69) {
         $72 = $67&255;
         $73 = $72 >>> 1;
         $82 = $73;
        } else {
         $70 = (($__sn) + 4|0);
         $71 = HEAP32[$70>>2]|0;
         $82 = $71;
        }
        $74 = HEAP8[$__sym>>0]|0;
        $75 = $74 & 1;
        $76 = ($75<<24>>24)==(0);
        if ($76) {
         $79 = $74&255;
         $80 = $79 >>> 1;
         $84 = $80;
        } else {
         $77 = (($__sym) + 4|0);
         $78 = HEAP32[$77>>2]|0;
         $84 = $78;
        }
        $81 = (($82) + 2)|0;
        $83 = (($81) + ($84))|0;
        $$pn = $83;
       }
       $85 = (($$pn) + ($44))|0;
       $86 = ($85>>>0)>(100);
       if ($86) {
        $87 = (_malloc($85)|0);
        $88 = ($87|0)==(0|0);
        if ($88) {
         __THREW__ = 0;
         invoke_v(465);
         $89 = __THREW__; __THREW__ = 0;
         $90 = $89&1;
         if ($90) {
          $91 = ___cxa_find_matching_catch()|0;
          $92 = tempRet0;
          $$0 = $91;$$01 = $92;
          break;
         } else {
          $99 = 0;$__mb$0 = 0;
         }
        } else {
         $99 = $87;$__mb$0 = $87;
        }
       } else {
        $99 = 0;$__mb$0 = $__mbuf;
       }
       $100 = (($__iob) + 4|0);
       $101 = HEAP32[$100>>2]|0;
       $102 = (($__db$0) + ($__n$0)|0);
       $103 = HEAP8[$__dp>>0]|0;
       $104 = HEAP8[$__ts>>0]|0;
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(490,($__mb$0|0),($__mi|0),($__me|0),($101|0),($__db$0|0),($102|0),($21|0),($41|0),($__pat|0),($103|0),($104|0),($__grp|0),($__sym|0),($__sn|0),($44|0));
       $105 = __THREW__; __THREW__ = 0;
       $106 = $105&1;
       if (!($106)) {
        $107 = HEAP32[$__s>>2]|0;
        HEAP32[$0>>2] = $107;
        $108 = HEAP32[$__mi>>2]|0;
        $109 = HEAP32[$__me>>2]|0;
        __THREW__ = 0;
        ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
        invoke_viiiiiii(416,($agg$result|0),($$byval_copy|0),($__mb$0|0),($108|0),($109|0),($__iob|0),($__fl|0));
        $110 = __THREW__; __THREW__ = 0;
        $111 = $110&1;
        if (!($111)) {
         _free($99);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         $112 = HEAP32[$__loc>>2]|0;
         (__ZNSt3__114__shared_count16__release_sharedEv($112)|0);
         _free($113);
         _free($114);
         STACKTOP = sp;return;
        }
       }
       $97 = ___cxa_find_matching_catch()|0;
       $98 = tempRet0;
       _free($99);
       $$0 = $97;$$01 = $98;
      }
     } while(0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;$$12 = $$01;
    }
   }
   if ((label|0) == 44) {
    $93 = ___cxa_find_matching_catch()|0;
    $94 = tempRet0;
    $$1 = $93;$$12 = $94;
   }
   $115 = HEAP32[$__loc>>2]|0;
   (__ZNSt3__114__shared_count16__release_sharedEv($115)|0);
   $$2 = $$1;$$23 = $$12;$116 = $113;$117 = $114;
  }
 }
 if ((label|0) == 7) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $$2 = $13;$$23 = $14;$116 = $119;$117 = $118;
 }
 _free($116);
 _free($117);
 ___resumeException($$2|0);
 // unreachable;
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__i$0$i$i$i = 0, $__i$0$i$i$i11 = 0, $__i$0$i$i$i16 = 0, $__i$0$i$i$i21 = 0, $__i$0$i$i$i26 = 0, $__i$0$i$i$i31 = 0, $__i$0$i$i$i36 = 0, $__i$0$i$i$i6 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i12 = 0, $exitcond$i$i$i17 = 0, $exitcond$i$i$i22 = 0, $exitcond$i$i$i27 = 0, $exitcond$i$i$i32 = 0, $exitcond$i$i$i37 = 0, $exitcond$i$i$i7 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6472)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = (($13) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 1023]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = (($17) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 1023]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $26 = (($__sn) + 1|0);
    HEAP8[$26>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = (($__sn) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP8[$24>>0] = 0;
    $25 = (($__sn) + 4|0);
    HEAP32[$25>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(482,($__sn|0),0);
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    $29 = ___cxa_find_matching_catch(0|0)|0;
    $30 = tempRet0;
    ___clang_call_terminate($29);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   $__i$0$i$i$i = 0;
   while(1) {
    $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
    if ($exitcond$i$i$i) {
     break;
    }
    $31 = (($1) + ($__i$0$i$i$i<<2)|0);
    HEAP32[$31>>2] = 0;
    $32 = (($__i$0$i$i$i) + 1)|0;
    $__i$0$i$i$i = $32;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  } else {
   $33 = (($13) + 40|0);
   $34 = HEAP32[$33>>2]|0;
   FUNCTION_TABLE_vii[$34 & 1023]($2,$12);
   $35 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$35&255;HEAP8[$__pat+1>>0]=($35>>8)&255;HEAP8[$__pat+2>>0]=($35>>16)&255;HEAP8[$__pat+3>>0]=$35>>24;
   $36 = HEAP32[$12>>2]|0;
   $37 = (($36) + 28|0);
   $38 = HEAP32[$37>>2]|0;
   FUNCTION_TABLE_vii[$38 & 1023]($3,$12);
   $39 = HEAP8[$__sn>>0]|0;
   $40 = $39 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $45 = (($__sn) + 1|0);
    HEAP8[$45>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $42 = (($__sn) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    HEAP8[$43>>0] = 0;
    $44 = (($__sn) + 4|0);
    HEAP32[$44>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(482,($__sn|0),0);
   $46 = __THREW__; __THREW__ = 0;
   $47 = $46&1;
   if ($47) {
    $48 = ___cxa_find_matching_catch(0|0)|0;
    $49 = tempRet0;
    ___clang_call_terminate($48);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   $__i$0$i$i$i6 = 0;
   while(1) {
    $exitcond$i$i$i7 = ($__i$0$i$i$i6|0)==(3);
    if ($exitcond$i$i$i7) {
     break;
    }
    $50 = (($3) + ($__i$0$i$i$i6<<2)|0);
    HEAP32[$50>>2] = 0;
    $51 = (($__i$0$i$i$i6) + 1)|0;
    $__i$0$i$i$i6 = $51;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  }
  $52 = HEAP32[$12>>2]|0;
  $53 = (($52) + 12|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = (FUNCTION_TABLE_ii[$54 & 1023]($12)|0);
  HEAP8[$__dp>>0] = $55;
  $56 = HEAP32[$12>>2]|0;
  $57 = (($56) + 16|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = (FUNCTION_TABLE_ii[$58 & 1023]($12)|0);
  HEAP8[$__ts>>0] = $59;
  $60 = HEAP32[$12>>2]|0;
  $61 = (($60) + 20|0);
  $62 = HEAP32[$61>>2]|0;
  FUNCTION_TABLE_vii[$62 & 1023]($4,$12);
  $63 = HEAP8[$__grp>>0]|0;
  $64 = $63 & 1;
  $65 = ($64<<24>>24)==(0);
  if ($65) {
   $69 = (($__grp) + 1|0);
   HEAP8[$69>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $66 = (($__grp) + 8|0);
   $67 = HEAP32[$66>>2]|0;
   HEAP8[$67>>0] = 0;
   $68 = (($__grp) + 4|0);
   HEAP32[$68>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $70 = __THREW__; __THREW__ = 0;
  $71 = $70&1;
  if ($71) {
   $72 = ___cxa_find_matching_catch(0|0)|0;
   $73 = tempRet0;
   ___clang_call_terminate($72);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i11 = 0;
  while(1) {
   $exitcond$i$i$i12 = ($__i$0$i$i$i11|0)==(3);
   if ($exitcond$i$i$i12) {
    break;
   }
   $74 = (($4) + ($__i$0$i$i$i11<<2)|0);
   HEAP32[$74>>2] = 0;
   $75 = (($__i$0$i$i$i11) + 1)|0;
   $__i$0$i$i$i11 = $75;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $76 = HEAP32[$12>>2]|0;
  $77 = (($76) + 24|0);
  $78 = HEAP32[$77>>2]|0;
  FUNCTION_TABLE_vii[$78 & 1023]($5,$12);
  $79 = HEAP8[$__sym>>0]|0;
  $80 = $79 & 1;
  $81 = ($80<<24>>24)==(0);
  if ($81) {
   $85 = (($__sym) + 1|0);
   HEAP8[$85>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $82 = (($__sym) + 8|0);
   $83 = HEAP32[$82>>2]|0;
   HEAP8[$83>>0] = 0;
   $84 = (($__sym) + 4|0);
   HEAP32[$84>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__sym|0),0);
  $86 = __THREW__; __THREW__ = 0;
  $87 = $86&1;
  if ($87) {
   $88 = ___cxa_find_matching_catch(0|0)|0;
   $89 = tempRet0;
   ___clang_call_terminate($88);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  $__i$0$i$i$i16 = 0;
  while(1) {
   $exitcond$i$i$i17 = ($__i$0$i$i$i16|0)==(3);
   if ($exitcond$i$i$i17) {
    break;
   }
   $90 = (($5) + ($__i$0$i$i$i16<<2)|0);
   HEAP32[$90>>2] = 0;
   $91 = (($__i$0$i$i$i16) + 1)|0;
   $__i$0$i$i$i16 = $91;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $92 = HEAP32[$12>>2]|0;
  $93 = (($92) + 36|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = (FUNCTION_TABLE_ii[$94 & 1023]($12)|0);
  $storemerge = $95;
 } else {
  $96 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6408)|0);
  $97 = HEAP32[$96>>2]|0;
  if ($__neg) {
   $98 = (($97) + 44|0);
   $99 = HEAP32[$98>>2]|0;
   FUNCTION_TABLE_vii[$99 & 1023]($6,$96);
   $100 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$100&255;HEAP8[$__pat+1>>0]=($100>>8)&255;HEAP8[$__pat+2>>0]=($100>>16)&255;HEAP8[$__pat+3>>0]=$100>>24;
   $101 = HEAP32[$96>>2]|0;
   $102 = (($101) + 32|0);
   $103 = HEAP32[$102>>2]|0;
   FUNCTION_TABLE_vii[$103 & 1023]($7,$96);
   $104 = HEAP8[$__sn>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   if ($106) {
    $110 = (($__sn) + 1|0);
    HEAP8[$110>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $107 = (($__sn) + 8|0);
    $108 = HEAP32[$107>>2]|0;
    HEAP8[$108>>0] = 0;
    $109 = (($__sn) + 4|0);
    HEAP32[$109>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(482,($__sn|0),0);
   $111 = __THREW__; __THREW__ = 0;
   $112 = $111&1;
   if ($112) {
    $113 = ___cxa_find_matching_catch(0|0)|0;
    $114 = tempRet0;
    ___clang_call_terminate($113);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   $__i$0$i$i$i21 = 0;
   while(1) {
    $exitcond$i$i$i22 = ($__i$0$i$i$i21|0)==(3);
    if ($exitcond$i$i$i22) {
     break;
    }
    $115 = (($7) + ($__i$0$i$i$i21<<2)|0);
    HEAP32[$115>>2] = 0;
    $116 = (($__i$0$i$i$i21) + 1)|0;
    $__i$0$i$i$i21 = $116;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  } else {
   $117 = (($97) + 40|0);
   $118 = HEAP32[$117>>2]|0;
   FUNCTION_TABLE_vii[$118 & 1023]($8,$96);
   $119 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$119&255;HEAP8[$__pat+1>>0]=($119>>8)&255;HEAP8[$__pat+2>>0]=($119>>16)&255;HEAP8[$__pat+3>>0]=$119>>24;
   $120 = HEAP32[$96>>2]|0;
   $121 = (($120) + 28|0);
   $122 = HEAP32[$121>>2]|0;
   FUNCTION_TABLE_vii[$122 & 1023]($9,$96);
   $123 = HEAP8[$__sn>>0]|0;
   $124 = $123 & 1;
   $125 = ($124<<24>>24)==(0);
   if ($125) {
    $129 = (($__sn) + 1|0);
    HEAP8[$129>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $126 = (($__sn) + 8|0);
    $127 = HEAP32[$126>>2]|0;
    HEAP8[$127>>0] = 0;
    $128 = (($__sn) + 4|0);
    HEAP32[$128>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(482,($__sn|0),0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    $132 = ___cxa_find_matching_catch(0|0)|0;
    $133 = tempRet0;
    ___clang_call_terminate($132);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   $__i$0$i$i$i26 = 0;
   while(1) {
    $exitcond$i$i$i27 = ($__i$0$i$i$i26|0)==(3);
    if ($exitcond$i$i$i27) {
     break;
    }
    $134 = (($9) + ($__i$0$i$i$i26<<2)|0);
    HEAP32[$134>>2] = 0;
    $135 = (($__i$0$i$i$i26) + 1)|0;
    $__i$0$i$i$i26 = $135;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  }
  $136 = HEAP32[$96>>2]|0;
  $137 = (($136) + 12|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = (FUNCTION_TABLE_ii[$138 & 1023]($96)|0);
  HEAP8[$__dp>>0] = $139;
  $140 = HEAP32[$96>>2]|0;
  $141 = (($140) + 16|0);
  $142 = HEAP32[$141>>2]|0;
  $143 = (FUNCTION_TABLE_ii[$142 & 1023]($96)|0);
  HEAP8[$__ts>>0] = $143;
  $144 = HEAP32[$96>>2]|0;
  $145 = (($144) + 20|0);
  $146 = HEAP32[$145>>2]|0;
  FUNCTION_TABLE_vii[$146 & 1023]($10,$96);
  $147 = HEAP8[$__grp>>0]|0;
  $148 = $147 & 1;
  $149 = ($148<<24>>24)==(0);
  if ($149) {
   $153 = (($__grp) + 1|0);
   HEAP8[$153>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $150 = (($__grp) + 8|0);
   $151 = HEAP32[$150>>2]|0;
   HEAP8[$151>>0] = 0;
   $152 = (($__grp) + 4|0);
   HEAP32[$152>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $154 = __THREW__; __THREW__ = 0;
  $155 = $154&1;
  if ($155) {
   $156 = ___cxa_find_matching_catch(0|0)|0;
   $157 = tempRet0;
   ___clang_call_terminate($156);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$10+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  $__i$0$i$i$i31 = 0;
  while(1) {
   $exitcond$i$i$i32 = ($__i$0$i$i$i31|0)==(3);
   if ($exitcond$i$i$i32) {
    break;
   }
   $158 = (($10) + ($__i$0$i$i$i31<<2)|0);
   HEAP32[$158>>2] = 0;
   $159 = (($__i$0$i$i$i31) + 1)|0;
   $__i$0$i$i$i31 = $159;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $160 = HEAP32[$96>>2]|0;
  $161 = (($160) + 24|0);
  $162 = HEAP32[$161>>2]|0;
  FUNCTION_TABLE_vii[$162 & 1023]($11,$96);
  $163 = HEAP8[$__sym>>0]|0;
  $164 = $163 & 1;
  $165 = ($164<<24>>24)==(0);
  if ($165) {
   $169 = (($__sym) + 1|0);
   HEAP8[$169>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $166 = (($__sym) + 8|0);
   $167 = HEAP32[$166>>2]|0;
   HEAP8[$167>>0] = 0;
   $168 = (($__sym) + 4|0);
   HEAP32[$168>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__sym|0),0);
  $170 = __THREW__; __THREW__ = 0;
  $171 = $170&1;
  if ($171) {
   $172 = ___cxa_find_matching_catch(0|0)|0;
   $173 = tempRet0;
   ___clang_call_terminate($172);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$11+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  $__i$0$i$i$i36 = 0;
  while(1) {
   $exitcond$i$i$i37 = ($__i$0$i$i$i36|0)==(3);
   if ($exitcond$i$i$i37) {
    break;
   }
   $174 = (($11) + ($__i$0$i$i$i36<<2)|0);
   HEAP32[$174>>2] = 0;
   $175 = (($__i$0$i$i$i36) + 1)|0;
   $__i$0$i$i$i36 = $175;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $176 = HEAP32[$96>>2]|0;
  $177 = (($176) + 36|0);
  $178 = HEAP32[$177>>2]|0;
  $179 = (FUNCTION_TABLE_ii[$178 & 1023]($96)|0);
  $storemerge = $179;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$$029 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$lcssa = 0, $$0$i$i11 = 0, $$0$i$i11$lcssa = 0, $$0$i$i4 = 0, $$01$i$i = 0, $$2 = 0, $$35 = 0, $$36 = 0, $$37 = 0, $$lcssa = 0, $$lcssa39 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0 = 0, $__d$0$lcssa = 0, $__d$0$lcssa28 = 0, $__d$1 = 0, $__d$2 = 0, $__d$3 = 0, $__f$0 = 0, $__f$1 = 0, $__gl$0 = 0, $__gl$0$ph = 0, $__gl$1 = 0, $__ig$0 = 0, $__ig$1 = 0;
 var $__ng$0 = 0, $__ng$1 = 0, $__p$0 = 0, $exitcond = 0, $isascii1$i = 0, $or$cond = 0, $or$cond3 = 0, $scevgep$sum = 0, $scevgep31 = 0, $smax = 0, $umax = 0, $umax30 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = (($__sn) + 1|0);
 $1 = (($__sn) + 8|0);
 $2 = (($__sn) + 4|0);
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 $5 = (($__sym) + 1|0);
 $6 = (($__sym) + 8|0);
 $7 = (($__sym) + 4|0);
 $8 = (($__ct) + 8|0);
 $9 = ($__fd|0)>(0);
 $10 = (($__grp) + 1|0);
 $11 = (($__grp) + 8|0);
 $12 = (($__grp) + 4|0);
 $13 = (($__fd) + 1)|0;
 $14 = (-2 - ($__fd))|0;
 $15 = $__fd ^ -1;
 $16 = ($15|0)>(-1);
 $smax = $16 ? $15 : -1;
 $17 = (($14) - ($smax))|0;
 $$0 = $__db;$__p$0 = 0;
 while(1) {
  $exitcond = ($__p$0|0)==(4);
  if ($exitcond) {
   break;
  }
  $18 = (($__pat) + ($__p$0)|0);
  $19 = HEAP8[$18>>0]|0;
  $20 = $19 << 24 >> 24;
  switch ($20|0) {
  case 0:  {
   $21 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $21;
   $$2 = $$0;
   break;
  }
  case 3:  {
   $29 = HEAP8[$__sn>>0]|0;
   $30 = $29 & 1;
   $31 = ($30<<24>>24)==(0);
   if ($31) {
    $33 = $29&255;
    $34 = $33 >>> 1;
    $35 = $34;
   } else {
    $32 = HEAP32[$2>>2]|0;
    $35 = $32;
   }
   $36 = ($35|0)==(0);
   if ($36) {
    $$2 = $$0;
   } else {
    $37 = HEAP32[$1>>2]|0;
    $$ = $31 ? $0 : $37;
    $38 = HEAP8[$$>>0]|0;
    $39 = HEAP32[$__me>>2]|0;
    $40 = (($39) + 1|0);
    HEAP32[$__me>>2] = $40;
    HEAP8[$39>>0] = $38;
    $$2 = $$0;
   }
   break;
  }
  case 2:  {
   $41 = HEAP8[$__sym>>0]|0;
   $42 = $41 & 1;
   $43 = ($42<<24>>24)==(0);
   if ($43) {
    $45 = $41&255;
    $46 = $45 >>> 1;
    $47 = $46;
   } else {
    $44 = HEAP32[$7>>2]|0;
    $47 = $44;
   }
   $48 = ($47|0)==(0);
   $or$cond3 = $4 | $48;
   if ($or$cond3) {
    $$2 = $$0;
   } else {
    if ($43) {
     $51 = $41&255;
     $52 = $51 >>> 1;
     $54 = $5;$55 = $52;
    } else {
     $49 = HEAP32[$6>>2]|0;
     $50 = HEAP32[$7>>2]|0;
     $54 = $49;$55 = $50;
    }
    $53 = (($54) + ($55)|0);
    $56 = HEAP32[$__me>>2]|0;
    $$0$i$i11 = $56;$57 = $54;
    while(1) {
     $58 = ($57|0)==($53|0);
     if ($58) {
      $$0$i$i11$lcssa = $$0$i$i11;
      break;
     }
     $59 = HEAP8[$57>>0]|0;
     HEAP8[$$0$i$i11>>0] = $59;
     $60 = (($57) + 1|0);
     $61 = (($$0$i$i11) + 1|0);
     $$0$i$i11 = $61;$57 = $60;
    }
    HEAP32[$__me>>2] = $$0$i$i11$lcssa;
    $$2 = $$0;
   }
   break;
  }
  case 1:  {
   $22 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $22;
   $23 = HEAP32[$__ct>>2]|0;
   $24 = (($23) + 28|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (FUNCTION_TABLE_iii[$25 & 1023]($__ct,32)|0);
   $27 = HEAP32[$__me>>2]|0;
   $28 = (($27) + 1|0);
   HEAP32[$__me>>2] = $28;
   HEAP8[$27>>0] = $26;
   $$2 = $$0;
   break;
  }
  case 4:  {
   $62 = HEAP32[$__me>>2]|0;
   $63 = (($$0) + 1|0);
   $$$0 = $__neg ? $63 : $$0;
   $$$029 = $$$0;
   $64 = HEAP32[$8>>2]|0;
   $__d$0 = $$$0;
   while(1) {
    $65 = ($__d$0>>>0)<($__de>>>0);
    if (!($65)) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $66 = HEAP8[$__d$0>>0]|0;
    $isascii1$i = ($66<<24>>24)>(-1);
    if (!($isascii1$i)) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $67 = $66 << 24 >> 24;
    $68 = (($64) + ($67<<1)|0);
    $69 = HEAP16[$68>>1]|0;
    $70 = $69 & 2048;
    $71 = ($70<<16>>16)==(0);
    if ($71) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $72 = (($__d$0) + 1|0);
    $__d$0 = $72;
   }
   $__d$0$lcssa28 = $__d$0$lcssa;
   if ($9) {
    $73 = (-2 - ($__d$0$lcssa28))|0;
    $74 = $$$029 ^ -1;
    $75 = $__d$0$lcssa28 ^ -1;
    $76 = ($74>>>0)>($75>>>0);
    $umax = $76 ? $74 : $75;
    $77 = (($73) - ($umax))|0;
    $78 = ($17>>>0)>($77>>>0);
    $umax30 = $78 ? $17 : $77;
    $__d$1 = $__d$0$lcssa;$__f$0 = $__fd;
    while(1) {
     $79 = ($__d$1>>>0)>($$$0>>>0);
     $80 = ($__f$0|0)>(0);
     $or$cond = $79 & $80;
     if (!($or$cond)) {
      $$lcssa = $80;
      break;
     }
     $81 = (($__d$1) + -1|0);
     $82 = HEAP8[$81>>0]|0;
     $83 = HEAP32[$__me>>2]|0;
     $84 = (($83) + 1|0);
     HEAP32[$__me>>2] = $84;
     HEAP8[$83>>0] = $82;
     $85 = (($__f$0) + -1)|0;
     $__d$1 = $81;$__f$0 = $85;
    }
    $86 = (($13) + ($umax30))|0;
    $scevgep$sum = (($umax30) + 1)|0;
    $scevgep31 = (($__d$0$lcssa) + ($scevgep$sum)|0);
    if ($$lcssa) {
     $87 = HEAP32[$__ct>>2]|0;
     $88 = (($87) + 28|0);
     $89 = HEAP32[$88>>2]|0;
     $90 = (FUNCTION_TABLE_iii[$89 & 1023]($__ct,48)|0);
     $94 = $90;
    } else {
     $94 = 0;
    }
    $__f$1 = $86;
    while(1) {
     $91 = ($__f$1|0)>(0);
     $92 = HEAP32[$__me>>2]|0;
     $93 = (($92) + 1|0);
     HEAP32[$__me>>2] = $93;
     if (!($91)) {
      $$lcssa39 = $92;
      break;
     }
     HEAP8[$92>>0] = $94;
     $95 = (($__f$1) + -1)|0;
     $__f$1 = $95;
    }
    HEAP8[$$lcssa39>>0] = $__dp;
    $__d$2 = $scevgep31;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $96 = ($__d$2|0)==($$$0|0);
   if ($96) {
    $97 = HEAP32[$__ct>>2]|0;
    $98 = (($97) + 28|0);
    $99 = HEAP32[$98>>2]|0;
    $100 = (FUNCTION_TABLE_iii[$99 & 1023]($__ct,48)|0);
    $101 = HEAP32[$__me>>2]|0;
    $102 = (($101) + 1|0);
    HEAP32[$__me>>2] = $102;
    HEAP8[$101>>0] = $100;
   } else {
    $103 = HEAP8[$__grp>>0]|0;
    $104 = $103 & 1;
    $105 = ($104<<24>>24)==(0);
    if ($105) {
     $107 = $103&255;
     $108 = $107 >>> 1;
     $109 = $108;
    } else {
     $106 = HEAP32[$12>>2]|0;
     $109 = $106;
    }
    $110 = ($109|0)==(0);
    if ($110) {
     $__gl$0$ph = -1;
    } else {
     $111 = HEAP32[$11>>2]|0;
     $$35 = $105 ? $10 : $111;
     $112 = HEAP8[$$35>>0]|0;
     $113 = $112 << 24 >> 24;
     $__gl$0$ph = $113;
    }
    $__d$3 = $__d$2;$__gl$0 = $__gl$0$ph;$__ig$0 = 0;$__ng$0 = 0;
    while(1) {
     $114 = ($__d$3|0)==($$$0|0);
     if ($114) {
      break;
     }
     $115 = ($__ng$0|0)==($__gl$0|0);
     if ($115) {
      $116 = HEAP32[$__me>>2]|0;
      $117 = (($116) + 1|0);
      HEAP32[$__me>>2] = $117;
      HEAP8[$116>>0] = $__ts;
      $118 = (($__ig$0) + 1)|0;
      $119 = HEAP8[$__grp>>0]|0;
      $120 = $119 & 1;
      $121 = ($120<<24>>24)==(0);
      if ($121) {
       $123 = $119&255;
       $124 = $123 >>> 1;
       $126 = $124;
      } else {
       $122 = HEAP32[$12>>2]|0;
       $126 = $122;
      }
      $125 = ($118>>>0)<($126>>>0);
      if ($125) {
       $127 = HEAP32[$11>>2]|0;
       $$36 = $121 ? $10 : $127;
       $128 = (($$36) + ($118)|0);
       $129 = HEAP8[$128>>0]|0;
       $130 = ($129<<24>>24)==(127);
       if ($130) {
        $__gl$1 = -1;$__ig$1 = $118;$__ng$1 = 0;
       } else {
        $131 = HEAP32[$11>>2]|0;
        $$37 = $121 ? $10 : $131;
        $132 = (($$37) + ($118)|0);
        $133 = HEAP8[$132>>0]|0;
        $134 = $133 << 24 >> 24;
        $__gl$1 = $134;$__ig$1 = $118;$__ng$1 = 0;
       }
      } else {
       $__gl$1 = $__ng$0;$__ig$1 = $118;$__ng$1 = 0;
      }
     } else {
      $__gl$1 = $__gl$0;$__ig$1 = $__ig$0;$__ng$1 = $__ng$0;
     }
     $135 = (($__d$3) + -1|0);
     $136 = HEAP8[$135>>0]|0;
     $137 = HEAP32[$__me>>2]|0;
     $138 = (($137) + 1|0);
     HEAP32[$__me>>2] = $138;
     HEAP8[$137>>0] = $136;
     $139 = (($__ng$1) + 1)|0;
     $__d$3 = $135;$__gl$0 = $__gl$1;$__ig$0 = $__ig$1;$__ng$0 = $139;
    }
   }
   $140 = HEAP32[$__me>>2]|0;
   $141 = ($62|0)==($140|0);
   if ($141) {
    $$2 = $$$0;
   } else {
    $$0$i$i4 = $140;$$01$i$i = $62;
    while(1) {
     $142 = (($$0$i$i4) + -1|0);
     $143 = ($$01$i$i>>>0)<($142>>>0);
     if (!($143)) {
      break;
     }
     $144 = HEAP8[$$01$i$i>>0]|0;
     $145 = HEAP8[$142>>0]|0;
     HEAP8[$$01$i$i>>0] = $145;
     HEAP8[$142>>0] = $144;
     $146 = (($$01$i$i) + 1|0);
     $$0$i$i4 = $142;$$01$i$i = $146;
    }
    $$2 = $$$0;
   }
   break;
  }
  default: {
   $$2 = $$0;
  }
  }
  $147 = (($__p$0) + 1)|0;
  $$0 = $$2;$__p$0 = $147;
 }
 $148 = HEAP8[$__sn>>0]|0;
 $149 = $148 & 1;
 $150 = ($149<<24>>24)==(0);
 if ($150) {
  $152 = $148&255;
  $153 = $152 >>> 1;
  $154 = $153;
 } else {
  $151 = HEAP32[$2>>2]|0;
  $154 = $151;
 }
 $155 = ($154>>>0)>(1);
 if ($155) {
  if ($150) {
   $158 = $148&255;
   $159 = $158 >>> 1;
   $161 = $0;$162 = $159;
  } else {
   $156 = HEAP32[$1>>2]|0;
   $157 = HEAP32[$2>>2]|0;
   $161 = $156;$162 = $157;
  }
  $160 = (($161) + ($162)|0);
  $163 = HEAP32[$__me>>2]|0;
  $$0$i$i = $163;$$pn = $161;
  while(1) {
   $164 = (($$pn) + 1|0);
   $165 = ($164|0)==($160|0);
   if ($165) {
    $$0$i$i$lcssa = $$0$i$i;
    break;
   }
   $166 = HEAP8[$164>>0]|0;
   HEAP8[$$0$i$i>>0] = $166;
   $167 = (($$0$i$i) + 1|0);
   $$0$i$i = $167;$$pn = $164;
  }
  HEAP32[$__me>>2] = $$0$i$i$lcssa;
 }
 $168 = $__flags & 176;
 if ((($168|0) == 32)) {
  $169 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $169;
 } else if (!((($168|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0;
 var $__i$0$i$i3 = 0, $__i$0$i$i6 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i4 = 0, $exitcond$i$i7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 56|0;
 $__loc = sp + 52|0;
 $__pat = sp + 164|0;
 $__dp = sp + 161|0;
 $__ts = sp + 160|0;
 $__grp = sp + 40|0;
 $__sym = sp + 28|0;
 $__sn = sp + 16|0;
 $__fd = sp + 12|0;
 $__mbuf = sp + 60|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $1 = (invoke_iii(454,($__loc|0),(7032|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if ($3) {
   label = 47;
  } else {
   $4 = HEAP8[$__digits>>0]|0;
   $5 = $4 & 1;
   $6 = ($5<<24>>24)==(0);
   if ($6) {
    $9 = $4&255;
    $10 = $9 >>> 1;
    $11 = $10;
   } else {
    $7 = (($__digits) + 4|0);
    $8 = HEAP32[$7>>2]|0;
    $11 = $8;
   }
   $12 = ($11|0)==(0);
   if ($12) {
    $31 = 0;
   } else {
    if ($6) {
     $15 = (($__digits) + 1|0);
     $17 = $15;
    } else {
     $13 = (($__digits) + 8|0);
     $14 = HEAP32[$13>>2]|0;
     $17 = $14;
    }
    $16 = HEAP8[$17>>0]|0;
    $18 = HEAP32[$1>>2]|0;
    $19 = (($18) + 28|0);
    $20 = HEAP32[$19>>2]|0;
    __THREW__ = 0;
    $21 = (invoke_iii($20|0,($1|0),45)|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 47;
     break;
    }
    $24 = ($16<<24>>24)==($21<<24>>24);
    $31 = $24;
   }
   $__i$0$i$i = 0;
   while(1) {
    $exitcond$i$i = ($__i$0$i$i|0)==(3);
    if ($exitcond$i$i) {
     break;
    }
    $25 = (($__grp) + ($__i$0$i$i<<2)|0);
    HEAP32[$25>>2] = 0;
    $26 = (($__i$0$i$i) + 1)|0;
    $__i$0$i$i = $26;
   }
   $__i$0$i$i3 = 0;
   while(1) {
    $exitcond$i$i4 = ($__i$0$i$i3|0)==(3);
    if ($exitcond$i$i4) {
     break;
    }
    $27 = (($__sym) + ($__i$0$i$i3<<2)|0);
    HEAP32[$27>>2] = 0;
    $28 = (($__i$0$i$i3) + 1)|0;
    $__i$0$i$i3 = $28;
   }
   $__i$0$i$i6 = 0;
   while(1) {
    $exitcond$i$i7 = ($__i$0$i$i6|0)==(3);
    if ($exitcond$i$i7) {
     break;
    }
    $29 = (($__sn) + ($__i$0$i$i6<<2)|0);
    HEAP32[$29>>2] = 0;
    $30 = (($__i$0$i$i6) + 1)|0;
    $__i$0$i$i6 = $30;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiii(489,($__intl|0),($31|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   L27: do {
    if ($33) {
     $98 = ___cxa_find_matching_catch()|0;
     $99 = tempRet0;
     $$0 = $98;$$01 = $99;
    } else {
     $34 = HEAP8[$__digits>>0]|0;
     $35 = $34 & 1;
     $36 = ($35<<24>>24)==(0);
     if ($36) {
      $39 = $34&255;
      $40 = $39 >>> 1;
      $42 = $40;
     } else {
      $37 = (($__digits) + 4|0);
      $38 = HEAP32[$37>>2]|0;
      $42 = $38;
     }
     $41 = HEAP32[$__fd>>2]|0;
     $43 = ($42|0)>($41|0);
     if ($43) {
      if ($36) {
       $46 = $34&255;
       $47 = $46 >>> 1;
       $49 = $47;
      } else {
       $44 = (($__digits) + 4|0);
       $45 = HEAP32[$44>>2]|0;
       $49 = $45;
      }
      $48 = (($49) - ($41))|0;
      $50 = $48 << 1;
      $51 = HEAP8[$__sn>>0]|0;
      $52 = $51 & 1;
      $53 = ($52<<24>>24)==(0);
      if ($53) {
       $56 = $51&255;
       $57 = $56 >>> 1;
       $67 = $57;
      } else {
       $54 = (($__sn) + 4|0);
       $55 = HEAP32[$54>>2]|0;
       $67 = $55;
      }
      $58 = HEAP8[$__sym>>0]|0;
      $59 = $58 & 1;
      $60 = ($59<<24>>24)==(0);
      if ($60) {
       $63 = $58&255;
       $64 = $63 >>> 1;
       $69 = $64;
      } else {
       $61 = (($__sym) + 4|0);
       $62 = HEAP32[$61>>2]|0;
       $69 = $62;
      }
      $65 = $50 | 1;
      $66 = (($67) + ($65))|0;
      $68 = (($66) + ($69))|0;
      $$pn = $68;
     } else {
      $70 = HEAP8[$__sn>>0]|0;
      $71 = $70 & 1;
      $72 = ($71<<24>>24)==(0);
      if ($72) {
       $75 = $70&255;
       $76 = $75 >>> 1;
       $85 = $76;
      } else {
       $73 = (($__sn) + 4|0);
       $74 = HEAP32[$73>>2]|0;
       $85 = $74;
      }
      $77 = HEAP8[$__sym>>0]|0;
      $78 = $77 & 1;
      $79 = ($78<<24>>24)==(0);
      if ($79) {
       $82 = $77&255;
       $83 = $82 >>> 1;
       $87 = $83;
      } else {
       $80 = (($__sym) + 4|0);
       $81 = HEAP32[$80>>2]|0;
       $87 = $81;
      }
      $84 = (($85) + 2)|0;
      $86 = (($84) + ($87))|0;
      $$pn = $86;
     }
     $88 = (($$pn) + ($41))|0;
     $89 = ($88>>>0)>(100);
     do {
      if ($89) {
       $90 = (_malloc($88)|0);
       $91 = ($90|0)==(0|0);
       if ($91) {
        __THREW__ = 0;
        invoke_v(465);
        $92 = __THREW__; __THREW__ = 0;
        $93 = $92&1;
        if ($93) {
         $94 = ___cxa_find_matching_catch()|0;
         $95 = tempRet0;
         $$0 = $94;$$01 = $95;
         break L27;
        } else {
         $$pre = HEAP8[$__digits>>0]|0;
         $102 = 0;$106 = $$pre;$__mb$0 = 0;
         break;
        }
       } else {
        $102 = $90;$106 = $34;$__mb$0 = $90;
       }
      } else {
       $102 = 0;$106 = $34;$__mb$0 = $__mbuf;
      }
     } while(0);
     $103 = (($__iob) + 4|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = $106 & 1;
     $107 = ($105<<24>>24)==(0);
     if ($107) {
      $112 = (($__digits) + 1|0);
      $113 = $106&255;
      $114 = $113 >>> 1;
      $116 = $112;$117 = $114;
     } else {
      $108 = (($__digits) + 8|0);
      $109 = HEAP32[$108>>2]|0;
      $110 = (($__digits) + 4|0);
      $111 = HEAP32[$110>>2]|0;
      $116 = $109;$117 = $111;
     }
     $115 = (($116) + ($117)|0);
     $118 = HEAP8[$__dp>>0]|0;
     $119 = HEAP8[$__ts>>0]|0;
     __THREW__ = 0;
     invoke_viiiiiiiiiiiiiii(490,($__mb$0|0),($__mi|0),($__me|0),($104|0),($116|0),($115|0),($1|0),($31|0),($__pat|0),($118|0),($119|0),($__grp|0),($__sym|0),($__sn|0),($41|0));
     $120 = __THREW__; __THREW__ = 0;
     $121 = $120&1;
     if (!($121)) {
      $122 = HEAP32[$__s>>2]|0;
      HEAP32[$0>>2] = $122;
      $123 = HEAP32[$__mi>>2]|0;
      $124 = HEAP32[$__me>>2]|0;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
      invoke_viiiiiii(416,($agg$result|0),($$byval_copy|0),($__mb$0|0),($123|0),($124|0),($__iob|0),($__fl|0));
      $125 = __THREW__; __THREW__ = 0;
      $126 = $125&1;
      if (!($126)) {
       _free($102);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
       $127 = HEAP32[$__loc>>2]|0;
       (__ZNSt3__114__shared_count16__release_sharedEv($127)|0);
       STACKTOP = sp;return;
      }
     }
     $100 = ___cxa_find_matching_catch()|0;
     $101 = tempRet0;
     _free($102);
     $$0 = $100;$$01 = $101;
    }
   } while(0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $$1 = $$0;$$12 = $$01;
  }
 } while(0);
 if ((label|0) == 47) {
  $96 = ___cxa_find_matching_catch()|0;
  $97 = tempRet0;
  $$1 = $96;$$12 = $97;
 }
 $128 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($128)|0);
 ___resumeException($$1|0);
 // unreachable;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__units) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0;
 var $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i4 = 0, $__i$0$i$i6 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i5 = 0, $exitcond$i$i7 = 0, $vararg_buffer = 0;
 var $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 892|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $__buf = sp + 900|0;
 $__bb = sp + 888|0;
 $__digits = sp + 488|0;
 $__loc = sp + 480|0;
 $__pat = sp + 896|0;
 $__dp = sp + 476|0;
 $__ts = sp + 472|0;
 $__grp = sp + 460|0;
 $__sym = sp + 448|0;
 $__sn = sp + 436|0;
 $__fd = sp + 432|0;
 $__mbuf = sp + 32|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$vararg_buffer>>3] = $__units;
 $1 = (_snprintf($__buf,100,6784,$vararg_buffer)|0);
 $2 = ($1>>>0)>(99);
 do {
  if ($2) {
   __THREW__ = 0;
   $3 = (invoke_i(459)|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $124 = 0;$125 = 0;
    label = 7;
   } else {
    __THREW__ = 0;
    HEAPF64[$vararg_buffer1>>3] = $__units;
    $6 = (invoke_iiiii(464,($__bb|0),($3|0),(6784|0),($vararg_buffer1|0))|0);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $124 = 0;$125 = 0;
     label = 7;
    } else {
     $9 = HEAP32[$__bb>>2]|0;
     $10 = ($9|0)==(0|0);
     if ($10) {
      __THREW__ = 0;
      invoke_v(465);
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if ($12) {
       $124 = 0;$125 = 0;
       label = 7;
       break;
      }
      $$pre = HEAP32[$__bb>>2]|0;
      $126 = $$pre;
     } else {
      $126 = $9;
     }
     $15 = $6 << 2;
     $16 = (_malloc($15)|0);
     $17 = ($16|0)==(0|0);
     if ($17) {
      __THREW__ = 0;
      invoke_v(465);
      $18 = __THREW__; __THREW__ = 0;
      $19 = $18&1;
      if ($19) {
       $124 = $126;$125 = 0;
       label = 7;
      } else {
       $117 = 0;$119 = $126;$__db$0 = 0;$__n$0 = $6;
       label = 10;
      }
     } else {
      $117 = $16;$119 = $126;$__db$0 = $16;$__n$0 = $6;
      label = 10;
     }
    }
   }
  } else {
   $117 = 0;$119 = 0;$__db$0 = $__digits;$__n$0 = $1;
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  __THREW__ = 0;
  invoke_vii(457,($__loc|0),($__iob|0));
  $20 = __THREW__; __THREW__ = 0;
  $21 = $20&1;
  if ($21) {
   $124 = $119;$125 = $117;
   label = 7;
  } else {
   __THREW__ = 0;
   $22 = (invoke_iii(454,($__loc|0),(7024|0))|0);
   $23 = __THREW__; __THREW__ = 0;
   $24 = $23&1;
   if ($24) {
    label = 44;
   } else {
    $25 = HEAP32[$__bb>>2]|0;
    $26 = (($25) + ($__n$0)|0);
    $27 = HEAP32[$22>>2]|0;
    $28 = (($27) + 48|0);
    $29 = HEAP32[$28>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($29|0,($22|0),($25|0),($26|0),($__db$0|0))|0);
    $30 = __THREW__; __THREW__ = 0;
    $31 = $30&1;
    if ($31) {
     label = 44;
    } else {
     $32 = ($__n$0|0)==(0);
     if ($32) {
      $42 = 0;
     } else {
      $33 = HEAP32[$__bb>>2]|0;
      $34 = HEAP8[$33>>0]|0;
      $35 = ($34<<24>>24)==(45);
      $42 = $35;
     }
     $__i$0$i$i = 0;
     while(1) {
      $exitcond$i$i = ($__i$0$i$i|0)==(3);
      if ($exitcond$i$i) {
       break;
      }
      $36 = (($__grp) + ($__i$0$i$i<<2)|0);
      HEAP32[$36>>2] = 0;
      $37 = (($__i$0$i$i) + 1)|0;
      $__i$0$i$i = $37;
     }
     $__i$0$i$i4 = 0;
     while(1) {
      $exitcond$i$i5 = ($__i$0$i$i4|0)==(3);
      if ($exitcond$i$i5) {
       break;
      }
      $38 = (($__sym) + ($__i$0$i$i4<<2)|0);
      HEAP32[$38>>2] = 0;
      $39 = (($__i$0$i$i4) + 1)|0;
      $__i$0$i$i4 = $39;
     }
     $__i$0$i$i6 = 0;
     while(1) {
      $exitcond$i$i7 = ($__i$0$i$i6|0)==(3);
      if ($exitcond$i$i7) {
       break;
      }
      $40 = (($__sn) + ($__i$0$i$i6<<2)|0);
      HEAP32[$40>>2] = 0;
      $41 = (($__i$0$i$i6) + 1)|0;
      $__i$0$i$i6 = $41;
     }
     __THREW__ = 0;
     invoke_viiiiiiiiii(491,($__intl|0),($42|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
     $43 = __THREW__; __THREW__ = 0;
     $44 = $43&1;
     do {
      if ($44) {
       $97 = ___cxa_find_matching_catch()|0;
       $98 = tempRet0;
       $$0 = $97;$$01 = $98;
      } else {
       $45 = HEAP32[$__fd>>2]|0;
       $46 = ($__n$0|0)>($45|0);
       if ($46) {
        $47 = (($__n$0) - ($45))|0;
        $48 = $47 << 1;
        $49 = HEAP8[$__sn>>0]|0;
        $50 = $49 & 1;
        $51 = ($50<<24>>24)==(0);
        if ($51) {
         $54 = $49&255;
         $55 = $54 >>> 1;
         $65 = $55;
        } else {
         $52 = (($__sn) + 4|0);
         $53 = HEAP32[$52>>2]|0;
         $65 = $53;
        }
        $56 = HEAP8[$__sym>>0]|0;
        $57 = $56 & 1;
        $58 = ($57<<24>>24)==(0);
        if ($58) {
         $61 = $56&255;
         $62 = $61 >>> 1;
         $67 = $62;
        } else {
         $59 = (($__sym) + 4|0);
         $60 = HEAP32[$59>>2]|0;
         $67 = $60;
        }
        $63 = $48 | 1;
        $64 = (($65) + ($63))|0;
        $66 = (($64) + ($67))|0;
        $$pn = $66;
       } else {
        $68 = HEAP8[$__sn>>0]|0;
        $69 = $68 & 1;
        $70 = ($69<<24>>24)==(0);
        if ($70) {
         $73 = $68&255;
         $74 = $73 >>> 1;
         $83 = $74;
        } else {
         $71 = (($__sn) + 4|0);
         $72 = HEAP32[$71>>2]|0;
         $83 = $72;
        }
        $75 = HEAP8[$__sym>>0]|0;
        $76 = $75 & 1;
        $77 = ($76<<24>>24)==(0);
        if ($77) {
         $80 = $75&255;
         $81 = $80 >>> 1;
         $85 = $81;
        } else {
         $78 = (($__sym) + 4|0);
         $79 = HEAP32[$78>>2]|0;
         $85 = $79;
        }
        $82 = (($83) + 2)|0;
        $84 = (($82) + ($85))|0;
        $$pn = $84;
       }
       $86 = (($$pn) + ($45))|0;
       $87 = ($86>>>0)>(100);
       if ($87) {
        $88 = $86 << 2;
        $89 = (_malloc($88)|0);
        $90 = ($89|0)==(0|0);
        if ($90) {
         __THREW__ = 0;
         invoke_v(465);
         $91 = __THREW__; __THREW__ = 0;
         $92 = $91&1;
         if ($92) {
          $93 = ___cxa_find_matching_catch()|0;
          $94 = tempRet0;
          $$0 = $93;$$01 = $94;
          break;
         } else {
          $101 = 0;$__mb$0 = 0;
         }
        } else {
         $101 = $89;$__mb$0 = $89;
        }
       } else {
        $101 = 0;$__mb$0 = $__mbuf;
       }
       $103 = (($__iob) + 4|0);
       $104 = HEAP32[$103>>2]|0;
       $105 = (($__db$0) + ($__n$0<<2)|0);
       $106 = HEAP32[$__dp>>2]|0;
       $107 = HEAP32[$__ts>>2]|0;
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(492,($__mb$0|0),($__mi|0),($__me|0),($104|0),($__db$0|0),($105|0),($22|0),($42|0),($__pat|0),($106|0),($107|0),($__grp|0),($__sym|0),($__sn|0),($45|0));
       $108 = __THREW__; __THREW__ = 0;
       $109 = $108&1;
       if (!($109)) {
        $110 = HEAP32[$__s>>2]|0;
        HEAP32[$0>>2] = $110;
        $111 = HEAP32[$__mi>>2]|0;
        $112 = HEAP32[$__me>>2]|0;
        __THREW__ = 0;
        ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
        invoke_viiiiiii(471,($agg$result|0),($$byval_copy|0),($__mb$0|0),($111|0),($112|0),($__iob|0),($__fl|0));
        $113 = __THREW__; __THREW__ = 0;
        $114 = $113&1;
        if (!($114)) {
         $115 = ($101|0)==(0|0);
         if (!($115)) {
          _free($101);
         }
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         $116 = HEAP32[$__loc>>2]|0;
         (__ZNSt3__114__shared_count16__release_sharedEv($116)|0);
         $118 = ($117|0)==(0|0);
         if (!($118)) {
          _free($117);
         }
         _free($119);
         STACKTOP = sp;return;
        }
       }
       $99 = ___cxa_find_matching_catch()|0;
       $100 = tempRet0;
       $102 = ($101|0)==(0|0);
       if ($102) {
        $$0 = $99;$$01 = $100;
       } else {
        _free($101);
        $$0 = $99;$$01 = $100;
       }
      }
     } while(0);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;$$12 = $$01;
    }
   }
   if ((label|0) == 44) {
    $95 = ___cxa_find_matching_catch()|0;
    $96 = tempRet0;
    $$1 = $95;$$12 = $96;
   }
   $120 = HEAP32[$__loc>>2]|0;
   (__ZNSt3__114__shared_count16__release_sharedEv($120)|0);
   $$2 = $$1;$$23 = $$12;$121 = $117;$123 = $119;
  }
 }
 if ((label|0) == 7) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $$2 = $13;$$23 = $14;$121 = $125;$123 = $124;
 }
 $122 = ($121|0)==(0|0);
 if (!($122)) {
  _free($121);
 }
 _free($123);
 ___resumeException($$2|0);
 // unreachable;
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i13 = 0, $__i$0$i$i$i18 = 0, $__i$0$i$i$i23 = 0, $__i$0$i$i$i28 = 0, $__i$0$i$i$i33 = 0;
 var $__i$0$i$i$i6 = 0, $__i$0$i$i$i9 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i10 = 0, $exitcond$i$i$i14 = 0, $exitcond$i$i$i19 = 0, $exitcond$i$i$i24 = 0, $exitcond$i$i$i29 = 0, $exitcond$i$i$i34 = 0, $exitcond$i$i$i7 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6600)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = (($13) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 1023]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = (($17) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 1023]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = (($__sn) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP32[$24>>2] = 0;
   }
   $25 = (($__sn) + 4|0);
   HEAP32[$25>>2] = 0;
   __THREW__ = 0;
   invoke_vii(488,($__sn|0),0);
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if ($27) {
    $28 = ___cxa_find_matching_catch(0|0)|0;
    $29 = tempRet0;
    ___clang_call_terminate($28);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   $__i$0$i$i$i = 0;
   while(1) {
    $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
    if ($exitcond$i$i$i) {
     break;
    }
    $30 = (($1) + ($__i$0$i$i$i<<2)|0);
    HEAP32[$30>>2] = 0;
    $31 = (($__i$0$i$i$i) + 1)|0;
    $__i$0$i$i$i = $31;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  } else {
   $32 = (($13) + 40|0);
   $33 = HEAP32[$32>>2]|0;
   FUNCTION_TABLE_vii[$33 & 1023]($2,$12);
   $34 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$34&255;HEAP8[$__pat+1>>0]=($34>>8)&255;HEAP8[$__pat+2>>0]=($34>>16)&255;HEAP8[$__pat+3>>0]=$34>>24;
   $35 = HEAP32[$12>>2]|0;
   $36 = (($35) + 28|0);
   $37 = HEAP32[$36>>2]|0;
   FUNCTION_TABLE_vii[$37 & 1023]($3,$12);
   $38 = HEAP8[$__sn>>0]|0;
   $39 = $38 & 1;
   $40 = ($39<<24>>24)==(0);
   if ($40) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $41 = (($__sn) + 8|0);
    $42 = HEAP32[$41>>2]|0;
    HEAP32[$42>>2] = 0;
   }
   $43 = (($__sn) + 4|0);
   HEAP32[$43>>2] = 0;
   __THREW__ = 0;
   invoke_vii(488,($__sn|0),0);
   $44 = __THREW__; __THREW__ = 0;
   $45 = $44&1;
   if ($45) {
    $46 = ___cxa_find_matching_catch(0|0)|0;
    $47 = tempRet0;
    ___clang_call_terminate($46);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   $__i$0$i$i$i6 = 0;
   while(1) {
    $exitcond$i$i$i7 = ($__i$0$i$i$i6|0)==(3);
    if ($exitcond$i$i$i7) {
     break;
    }
    $48 = (($3) + ($__i$0$i$i$i6<<2)|0);
    HEAP32[$48>>2] = 0;
    $49 = (($__i$0$i$i$i6) + 1)|0;
    $__i$0$i$i$i6 = $49;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
  }
  $50 = HEAP32[$12>>2]|0;
  $51 = (($50) + 12|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = (FUNCTION_TABLE_ii[$52 & 1023]($12)|0);
  HEAP32[$__dp>>2] = $53;
  $54 = HEAP32[$12>>2]|0;
  $55 = (($54) + 16|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = (FUNCTION_TABLE_ii[$56 & 1023]($12)|0);
  HEAP32[$__ts>>2] = $57;
  $58 = HEAP32[$12>>2]|0;
  $59 = (($58) + 20|0);
  $60 = HEAP32[$59>>2]|0;
  FUNCTION_TABLE_vii[$60 & 1023]($4,$12);
  $61 = HEAP8[$__grp>>0]|0;
  $62 = $61 & 1;
  $63 = ($62<<24>>24)==(0);
  if ($63) {
   $67 = (($__grp) + 1|0);
   HEAP8[$67>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $64 = (($__grp) + 8|0);
   $65 = HEAP32[$64>>2]|0;
   HEAP8[$65>>0] = 0;
   $66 = (($__grp) + 4|0);
   HEAP32[$66>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $68 = __THREW__; __THREW__ = 0;
  $69 = $68&1;
  if ($69) {
   $70 = ___cxa_find_matching_catch(0|0)|0;
   $71 = tempRet0;
   ___clang_call_terminate($70);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i9 = 0;
  while(1) {
   $exitcond$i$i$i10 = ($__i$0$i$i$i9|0)==(3);
   if ($exitcond$i$i$i10) {
    break;
   }
   $72 = (($4) + ($__i$0$i$i$i9<<2)|0);
   HEAP32[$72>>2] = 0;
   $73 = (($__i$0$i$i$i9) + 1)|0;
   $__i$0$i$i$i9 = $73;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $74 = HEAP32[$12>>2]|0;
  $75 = (($74) + 24|0);
  $76 = HEAP32[$75>>2]|0;
  FUNCTION_TABLE_vii[$76 & 1023]($5,$12);
  $77 = HEAP8[$__sym>>0]|0;
  $78 = $77 & 1;
  $79 = ($78<<24>>24)==(0);
  if ($79) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $80 = (($__sym) + 8|0);
   $81 = HEAP32[$80>>2]|0;
   HEAP32[$81>>2] = 0;
  }
  $82 = (($__sym) + 4|0);
  HEAP32[$82>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__sym|0),0);
  $83 = __THREW__; __THREW__ = 0;
  $84 = $83&1;
  if ($84) {
   $85 = ___cxa_find_matching_catch(0|0)|0;
   $86 = tempRet0;
   ___clang_call_terminate($85);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  $__i$0$i$i$i13 = 0;
  while(1) {
   $exitcond$i$i$i14 = ($__i$0$i$i$i13|0)==(3);
   if ($exitcond$i$i$i14) {
    break;
   }
   $87 = (($5) + ($__i$0$i$i$i13<<2)|0);
   HEAP32[$87>>2] = 0;
   $88 = (($__i$0$i$i$i13) + 1)|0;
   $__i$0$i$i$i13 = $88;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
  $89 = HEAP32[$12>>2]|0;
  $90 = (($89) + 36|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = (FUNCTION_TABLE_ii[$91 & 1023]($12)|0);
  $storemerge = $92;
 } else {
  $93 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6536)|0);
  $94 = HEAP32[$93>>2]|0;
  if ($__neg) {
   $95 = (($94) + 44|0);
   $96 = HEAP32[$95>>2]|0;
   FUNCTION_TABLE_vii[$96 & 1023]($6,$93);
   $97 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$97&255;HEAP8[$__pat+1>>0]=($97>>8)&255;HEAP8[$__pat+2>>0]=($97>>16)&255;HEAP8[$__pat+3>>0]=$97>>24;
   $98 = HEAP32[$93>>2]|0;
   $99 = (($98) + 32|0);
   $100 = HEAP32[$99>>2]|0;
   FUNCTION_TABLE_vii[$100 & 1023]($7,$93);
   $101 = HEAP8[$__sn>>0]|0;
   $102 = $101 & 1;
   $103 = ($102<<24>>24)==(0);
   if ($103) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $104 = (($__sn) + 8|0);
    $105 = HEAP32[$104>>2]|0;
    HEAP32[$105>>2] = 0;
   }
   $106 = (($__sn) + 4|0);
   HEAP32[$106>>2] = 0;
   __THREW__ = 0;
   invoke_vii(488,($__sn|0),0);
   $107 = __THREW__; __THREW__ = 0;
   $108 = $107&1;
   if ($108) {
    $109 = ___cxa_find_matching_catch(0|0)|0;
    $110 = tempRet0;
    ___clang_call_terminate($109);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   $__i$0$i$i$i18 = 0;
   while(1) {
    $exitcond$i$i$i19 = ($__i$0$i$i$i18|0)==(3);
    if ($exitcond$i$i$i19) {
     break;
    }
    $111 = (($7) + ($__i$0$i$i$i18<<2)|0);
    HEAP32[$111>>2] = 0;
    $112 = (($__i$0$i$i$i18) + 1)|0;
    $__i$0$i$i$i18 = $112;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  } else {
   $113 = (($94) + 40|0);
   $114 = HEAP32[$113>>2]|0;
   FUNCTION_TABLE_vii[$114 & 1023]($8,$93);
   $115 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$115&255;HEAP8[$__pat+1>>0]=($115>>8)&255;HEAP8[$__pat+2>>0]=($115>>16)&255;HEAP8[$__pat+3>>0]=$115>>24;
   $116 = HEAP32[$93>>2]|0;
   $117 = (($116) + 28|0);
   $118 = HEAP32[$117>>2]|0;
   FUNCTION_TABLE_vii[$118 & 1023]($9,$93);
   $119 = HEAP8[$__sn>>0]|0;
   $120 = $119 & 1;
   $121 = ($120<<24>>24)==(0);
   if ($121) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $122 = (($__sn) + 8|0);
    $123 = HEAP32[$122>>2]|0;
    HEAP32[$123>>2] = 0;
   }
   $124 = (($__sn) + 4|0);
   HEAP32[$124>>2] = 0;
   __THREW__ = 0;
   invoke_vii(488,($__sn|0),0);
   $125 = __THREW__; __THREW__ = 0;
   $126 = $125&1;
   if ($126) {
    $127 = ___cxa_find_matching_catch(0|0)|0;
    $128 = tempRet0;
    ___clang_call_terminate($127);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   $__i$0$i$i$i23 = 0;
   while(1) {
    $exitcond$i$i$i24 = ($__i$0$i$i$i23|0)==(3);
    if ($exitcond$i$i$i24) {
     break;
    }
    $129 = (($9) + ($__i$0$i$i$i23<<2)|0);
    HEAP32[$129>>2] = 0;
    $130 = (($__i$0$i$i$i23) + 1)|0;
    $__i$0$i$i$i23 = $130;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  }
  $131 = HEAP32[$93>>2]|0;
  $132 = (($131) + 12|0);
  $133 = HEAP32[$132>>2]|0;
  $134 = (FUNCTION_TABLE_ii[$133 & 1023]($93)|0);
  HEAP32[$__dp>>2] = $134;
  $135 = HEAP32[$93>>2]|0;
  $136 = (($135) + 16|0);
  $137 = HEAP32[$136>>2]|0;
  $138 = (FUNCTION_TABLE_ii[$137 & 1023]($93)|0);
  HEAP32[$__ts>>2] = $138;
  $139 = HEAP32[$93>>2]|0;
  $140 = (($139) + 20|0);
  $141 = HEAP32[$140>>2]|0;
  FUNCTION_TABLE_vii[$141 & 1023]($10,$93);
  $142 = HEAP8[$__grp>>0]|0;
  $143 = $142 & 1;
  $144 = ($143<<24>>24)==(0);
  if ($144) {
   $148 = (($__grp) + 1|0);
   HEAP8[$148>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $145 = (($__grp) + 8|0);
   $146 = HEAP32[$145>>2]|0;
   HEAP8[$146>>0] = 0;
   $147 = (($__grp) + 4|0);
   HEAP32[$147>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $149 = __THREW__; __THREW__ = 0;
  $150 = $149&1;
  if ($150) {
   $151 = ___cxa_find_matching_catch(0|0)|0;
   $152 = tempRet0;
   ___clang_call_terminate($151);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$10+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  $__i$0$i$i$i28 = 0;
  while(1) {
   $exitcond$i$i$i29 = ($__i$0$i$i$i28|0)==(3);
   if ($exitcond$i$i$i29) {
    break;
   }
   $153 = (($10) + ($__i$0$i$i$i28<<2)|0);
   HEAP32[$153>>2] = 0;
   $154 = (($__i$0$i$i$i28) + 1)|0;
   $__i$0$i$i$i28 = $154;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $155 = HEAP32[$93>>2]|0;
  $156 = (($155) + 24|0);
  $157 = HEAP32[$156>>2]|0;
  FUNCTION_TABLE_vii[$157 & 1023]($11,$93);
  $158 = HEAP8[$__sym>>0]|0;
  $159 = $158 & 1;
  $160 = ($159<<24>>24)==(0);
  if ($160) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $161 = (($__sym) + 8|0);
   $162 = HEAP32[$161>>2]|0;
   HEAP32[$162>>2] = 0;
  }
  $163 = (($__sym) + 4|0);
  HEAP32[$163>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__sym|0),0);
  $164 = __THREW__; __THREW__ = 0;
  $165 = $164&1;
  if ($165) {
   $166 = ___cxa_find_matching_catch(0|0)|0;
   $167 = tempRet0;
   ___clang_call_terminate($166);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$11+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  $__i$0$i$i$i33 = 0;
  while(1) {
   $exitcond$i$i$i34 = ($__i$0$i$i$i33|0)==(3);
   if ($exitcond$i$i$i34) {
    break;
   }
   $168 = (($11) + ($__i$0$i$i$i33<<2)|0);
   HEAP32[$168>>2] = 0;
   $169 = (($__i$0$i$i$i33) + 1)|0;
   $__i$0$i$i$i33 = $169;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $170 = HEAP32[$93>>2]|0;
  $171 = (($170) + 36|0);
  $172 = HEAP32[$171>>2]|0;
  $173 = (FUNCTION_TABLE_ii[$172 & 1023]($93)|0);
  $storemerge = $173;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i4 = 0, $$0$i$i9 = 0, $$01$i$i = 0, $$2 = 0, $$30 = 0, $$31 = 0, $$32 = 0, $$lcssa = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $157$phi = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0 = 0, $__d$0$lcssa = 0, $__d$1 = 0;
 var $__d$1$lcssa = 0, $__d$2 = 0, $__d$3 = 0, $__f$0 = 0, $__f$0$lcssa = 0, $__f$1 = 0, $__gl$0 = 0, $__gl$0$ph = 0, $__gl$1 = 0, $__ig$0 = 0, $__ig$1 = 0, $__me$promoted = 0, $__ng$0 = 0, $__ng$1 = 0, $__p$0 = 0, $exitcond = 0, $or$cond = 0, $or$cond3 = 0, $scevgep$i = 0, $scevgep$i10 = 0;
 var $scevgep$sum = 0, $scevgep26 = 0, $scevgep27$sum = 0, $scevgep28 = 0, $smax = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = (($__sn) + 4|0);
 $1 = (($__sn) + 8|0);
 $2 = $__flags & 512;
 $3 = ($2|0)==(0);
 $4 = (($__sym) + 4|0);
 $5 = (($__sym) + 8|0);
 $6 = ($__fd|0)>(0);
 $7 = (($__grp) + 1|0);
 $8 = (($__grp) + 8|0);
 $9 = (($__grp) + 4|0);
 $$0 = $__db;$__p$0 = 0;
 while(1) {
  $exitcond = ($__p$0|0)==(4);
  if ($exitcond) {
   break;
  }
  $10 = (($__pat) + ($__p$0)|0);
  $11 = HEAP8[$10>>0]|0;
  $12 = $11 << 24 >> 24;
  switch ($12|0) {
  case 4:  {
   $54 = HEAP32[$__me>>2]|0;
   $55 = (($$0) + 4|0);
   $$$0 = $__neg ? $55 : $$0;
   $__d$0 = $$$0;
   while(1) {
    $56 = ($__d$0>>>0)<($__de>>>0);
    if (!($56)) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $57 = HEAP32[$__d$0>>2]|0;
    $58 = HEAP32[$__ct>>2]|0;
    $59 = (($58) + 12|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (FUNCTION_TABLE_iiii[$60 & 1023]($__ct,2048,$57)|0);
    if (!($61)) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $62 = (($__d$0) + 4|0);
    $__d$0 = $62;
   }
   if ($6) {
    $__d$1 = $__d$0$lcssa;$__f$0 = $__fd;
    while(1) {
     $63 = ($__d$1>>>0)>($$$0>>>0);
     $64 = ($__f$0|0)>(0);
     $or$cond = $63 & $64;
     if (!($or$cond)) {
      $$lcssa = $64;$__d$1$lcssa = $__d$1;$__f$0$lcssa = $__f$0;
      break;
     }
     $65 = (($__d$1) + -4|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = HEAP32[$__me>>2]|0;
     $68 = (($67) + 4|0);
     HEAP32[$__me>>2] = $68;
     HEAP32[$67>>2] = $66;
     $69 = (($__f$0) + -1)|0;
     $__d$1 = $65;$__f$0 = $69;
    }
    if ($$lcssa) {
     $70 = HEAP32[$__ct>>2]|0;
     $71 = (($70) + 44|0);
     $72 = HEAP32[$71>>2]|0;
     $73 = (FUNCTION_TABLE_iii[$72 & 1023]($__ct,48)|0);
     $80 = $73;
    } else {
     $80 = 0;
    }
    $__me$promoted = HEAP32[$__me>>2]|0;
    $74 = $__f$0$lcssa ^ -1;
    $75 = ($74|0)>(-1);
    $smax = $75 ? $74 : -1;
    $76 = (($__f$0$lcssa) + ($smax))|0;
    $79 = $__me$promoted;$__f$1 = $__f$0$lcssa;
    while(1) {
     $77 = ($__f$1|0)>(0);
     if (!($77)) {
      break;
     }
     $78 = (($79) + 4|0);
     HEAP32[$79>>2] = $80;
     $81 = (($__f$1) + -1)|0;
     $79 = $78;$__f$1 = $81;
    }
    $scevgep$sum = (($76) + 2)|0;
    $scevgep26 = (($__me$promoted) + ($scevgep$sum<<2)|0);
    $scevgep27$sum = (($76) + 1)|0;
    $scevgep28 = (($__me$promoted) + ($scevgep27$sum<<2)|0);
    HEAP32[$__me>>2] = $scevgep26;
    HEAP32[$scevgep28>>2] = $__dp;
    $__d$2 = $__d$1$lcssa;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $82 = ($__d$2|0)==($$$0|0);
   if ($82) {
    $83 = HEAP32[$__ct>>2]|0;
    $84 = (($83) + 44|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = (FUNCTION_TABLE_iii[$85 & 1023]($__ct,48)|0);
    $87 = HEAP32[$__me>>2]|0;
    $88 = (($87) + 4|0);
    HEAP32[$__me>>2] = $88;
    HEAP32[$87>>2] = $86;
    $127 = $88;
   } else {
    $89 = HEAP8[$__grp>>0]|0;
    $90 = $89 & 1;
    $91 = ($90<<24>>24)==(0);
    if ($91) {
     $93 = $89&255;
     $94 = $93 >>> 1;
     $95 = $94;
    } else {
     $92 = HEAP32[$9>>2]|0;
     $95 = $92;
    }
    $96 = ($95|0)==(0);
    if ($96) {
     $__gl$0$ph = -1;
    } else {
     $97 = HEAP32[$8>>2]|0;
     $$30 = $91 ? $7 : $97;
     $98 = HEAP8[$$30>>0]|0;
     $99 = $98 << 24 >> 24;
     $__gl$0$ph = $99;
    }
    $__d$3 = $__d$2;$__gl$0 = $__gl$0$ph;$__ig$0 = 0;$__ng$0 = 0;
    while(1) {
     $100 = ($__d$3|0)==($$$0|0);
     if ($100) {
      break;
     }
     $101 = ($__ng$0|0)==($__gl$0|0);
     $102 = HEAP32[$__me>>2]|0;
     if ($101) {
      $103 = (($102) + 4|0);
      HEAP32[$__me>>2] = $103;
      HEAP32[$102>>2] = $__ts;
      $104 = (($__ig$0) + 1)|0;
      $105 = HEAP8[$__grp>>0]|0;
      $106 = $105 & 1;
      $107 = ($106<<24>>24)==(0);
      if ($107) {
       $109 = $105&255;
       $110 = $109 >>> 1;
       $112 = $110;
      } else {
       $108 = HEAP32[$9>>2]|0;
       $112 = $108;
      }
      $111 = ($104>>>0)<($112>>>0);
      if ($111) {
       $113 = HEAP32[$8>>2]|0;
       $$31 = $107 ? $7 : $113;
       $114 = (($$31) + ($104)|0);
       $115 = HEAP8[$114>>0]|0;
       $116 = ($115<<24>>24)==(127);
       if ($116) {
        $124 = $103;$__gl$1 = -1;$__ig$1 = $104;$__ng$1 = 0;
       } else {
        $117 = HEAP32[$8>>2]|0;
        $$32 = $107 ? $7 : $117;
        $118 = (($$32) + ($104)|0);
        $119 = HEAP8[$118>>0]|0;
        $120 = $119 << 24 >> 24;
        $124 = $103;$__gl$1 = $120;$__ig$1 = $104;$__ng$1 = 0;
       }
      } else {
       $124 = $103;$__gl$1 = $__ng$0;$__ig$1 = $104;$__ng$1 = 0;
      }
     } else {
      $124 = $102;$__gl$1 = $__gl$0;$__ig$1 = $__ig$0;$__ng$1 = $__ng$0;
     }
     $121 = (($__d$3) + -4|0);
     $122 = HEAP32[$121>>2]|0;
     $123 = (($124) + 4|0);
     HEAP32[$__me>>2] = $123;
     HEAP32[$124>>2] = $122;
     $125 = (($__ng$1) + 1)|0;
     $__d$3 = $121;$__gl$0 = $__gl$1;$__ig$0 = $__ig$1;$__ng$0 = $125;
    }
    $$pre = HEAP32[$__me>>2]|0;
    $127 = $$pre;
   }
   $126 = ($54|0)==($127|0);
   if ($126) {
    $$2 = $$$0;
   } else {
    $$0$i$i4 = $127;$$01$i$i = $54;
    while(1) {
     $128 = (($$0$i$i4) + -4|0);
     $129 = ($$01$i$i>>>0)<($128>>>0);
     if (!($129)) {
      break;
     }
     $130 = HEAP32[$$01$i$i>>2]|0;
     $131 = HEAP32[$128>>2]|0;
     HEAP32[$$01$i$i>>2] = $131;
     HEAP32[$128>>2] = $130;
     $132 = (($$01$i$i) + 4|0);
     $$0$i$i4 = $128;$$01$i$i = $132;
    }
    $$2 = $$$0;
   }
   break;
  }
  case 0:  {
   $13 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $13;
   $$2 = $$0;
   break;
  }
  case 2:  {
   $33 = HEAP8[$__sym>>0]|0;
   $34 = $33 & 1;
   $35 = ($34<<24>>24)==(0);
   if ($35) {
    $37 = $33&255;
    $38 = $37 >>> 1;
    $39 = $38;
   } else {
    $36 = HEAP32[$4>>2]|0;
    $39 = $36;
   }
   $40 = ($39|0)==(0);
   $or$cond3 = $3 | $40;
   if ($or$cond3) {
    $$2 = $$0;
   } else {
    if ($35) {
     $43 = $33&255;
     $44 = $43 >>> 1;
     $46 = $4;$47 = $44;
    } else {
     $41 = HEAP32[$5>>2]|0;
     $42 = HEAP32[$4>>2]|0;
     $46 = $41;$47 = $42;
    }
    $45 = (($46) + ($47<<2)|0);
    $48 = HEAP32[$__me>>2]|0;
    $$0$i$i9 = $48;$49 = $46;
    while(1) {
     $50 = ($49|0)==($45|0);
     if ($50) {
      break;
     }
     $51 = HEAP32[$49>>2]|0;
     HEAP32[$$0$i$i9>>2] = $51;
     $52 = (($49) + 4|0);
     $53 = (($$0$i$i9) + 4|0);
     $$0$i$i9 = $53;$49 = $52;
    }
    $scevgep$i10 = (($48) + ($47<<2)|0);
    HEAP32[$__me>>2] = $scevgep$i10;
    $$2 = $$0;
   }
   break;
  }
  case 3:  {
   $21 = HEAP8[$__sn>>0]|0;
   $22 = $21 & 1;
   $23 = ($22<<24>>24)==(0);
   if ($23) {
    $25 = $21&255;
    $26 = $25 >>> 1;
    $27 = $26;
   } else {
    $24 = HEAP32[$0>>2]|0;
    $27 = $24;
   }
   $28 = ($27|0)==(0);
   if ($28) {
    $$2 = $$0;
   } else {
    $29 = HEAP32[$1>>2]|0;
    $$ = $23 ? $0 : $29;
    $30 = HEAP32[$$>>2]|0;
    $31 = HEAP32[$__me>>2]|0;
    $32 = (($31) + 4|0);
    HEAP32[$__me>>2] = $32;
    HEAP32[$31>>2] = $30;
    $$2 = $$0;
   }
   break;
  }
  case 1:  {
   $14 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $14;
   $15 = HEAP32[$__ct>>2]|0;
   $16 = (($15) + 44|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (FUNCTION_TABLE_iii[$17 & 1023]($__ct,32)|0);
   $19 = HEAP32[$__me>>2]|0;
   $20 = (($19) + 4|0);
   HEAP32[$__me>>2] = $20;
   HEAP32[$19>>2] = $18;
   $$2 = $$0;
   break;
  }
  default: {
   $$2 = $$0;
  }
  }
  $133 = (($__p$0) + 1)|0;
  $$0 = $$2;$__p$0 = $133;
 }
 $134 = HEAP8[$__sn>>0]|0;
 $135 = $134 & 1;
 $136 = ($135<<24>>24)==(0);
 if ($136) {
  $138 = $134&255;
  $139 = $138 >>> 1;
  $140 = $139;
 } else {
  $137 = HEAP32[$0>>2]|0;
  $140 = $137;
 }
 $141 = ($140>>>0)>(1);
 if ($141) {
  if ($136) {
   $144 = $134&255;
   $145 = $144 >>> 1;
   $$pn = $0;$148 = $145;
  } else {
   $142 = HEAP32[$1>>2]|0;
   $143 = HEAP32[$0>>2]|0;
   $$pn = $142;$148 = $143;
  }
  $146 = (($$pn) + 4|0);
  $147 = (($$pn) + ($148<<2)|0);
  $149 = HEAP32[$__me>>2]|0;
  $150 = $146;
  $151 = $147;
  $152 = (($151) - ($150))|0;
  $$0$i$i = $149;$153 = $146;$157 = $$pn;
  while(1) {
   $154 = ($153|0)==($147|0);
   if ($154) {
    break;
   }
   $155 = HEAP32[$153>>2]|0;
   HEAP32[$$0$i$i>>2] = $155;
   $156 = (($157) + 8|0);
   $158 = (($$0$i$i) + 4|0);
   $157$phi = $153;$$0$i$i = $158;$153 = $156;$157 = $157$phi;
  }
  $159 = $152 >>> 2;
  $scevgep$i = (($149) + ($159<<2)|0);
  HEAP32[$__me>>2] = $scevgep$i;
 }
 $160 = $__flags & 176;
 if ((($160|0) == 32)) {
  $161 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $161;
 } else if (!((($160|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0;
 var $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__i$0$i$i5 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i4 = 0, $exitcond$i$i6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 468|0;
 $__loc = sp + 464|0;
 $__pat = sp + 472|0;
 $__dp = sp + 460|0;
 $__ts = sp + 456|0;
 $__grp = sp + 444|0;
 $__sym = sp + 432|0;
 $__sn = sp + 420|0;
 $__fd = sp + 416|0;
 $__mbuf = sp + 16|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $1 = (invoke_iii(454,($__loc|0),(7024|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if ($3) {
   label = 47;
  } else {
   $4 = HEAP8[$__digits>>0]|0;
   $5 = $4 & 1;
   $6 = ($5<<24>>24)==(0);
   if ($6) {
    $9 = $4&255;
    $10 = $9 >>> 1;
    $11 = $10;
   } else {
    $7 = (($__digits) + 4|0);
    $8 = HEAP32[$7>>2]|0;
    $11 = $8;
   }
   $12 = ($11|0)==(0);
   if ($12) {
    $31 = 0;
   } else {
    if ($6) {
     $15 = (($__digits) + 4|0);
     $17 = $15;
    } else {
     $13 = (($__digits) + 8|0);
     $14 = HEAP32[$13>>2]|0;
     $17 = $14;
    }
    $16 = HEAP32[$17>>2]|0;
    $18 = HEAP32[$1>>2]|0;
    $19 = (($18) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    __THREW__ = 0;
    $21 = (invoke_iii($20|0,($1|0),45)|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 47;
     break;
    }
    $24 = ($16|0)==($21|0);
    $31 = $24;
   }
   $__i$0$i$i = 0;
   while(1) {
    $exitcond$i$i = ($__i$0$i$i|0)==(3);
    if ($exitcond$i$i) {
     break;
    }
    $25 = (($__grp) + ($__i$0$i$i<<2)|0);
    HEAP32[$25>>2] = 0;
    $26 = (($__i$0$i$i) + 1)|0;
    $__i$0$i$i = $26;
   }
   $__i$0$i$i3 = 0;
   while(1) {
    $exitcond$i$i4 = ($__i$0$i$i3|0)==(3);
    if ($exitcond$i$i4) {
     break;
    }
    $27 = (($__sym) + ($__i$0$i$i3<<2)|0);
    HEAP32[$27>>2] = 0;
    $28 = (($__i$0$i$i3) + 1)|0;
    $__i$0$i$i3 = $28;
   }
   $__i$0$i$i5 = 0;
   while(1) {
    $exitcond$i$i6 = ($__i$0$i$i5|0)==(3);
    if ($exitcond$i$i6) {
     break;
    }
    $29 = (($__sn) + ($__i$0$i$i5<<2)|0);
    HEAP32[$29>>2] = 0;
    $30 = (($__i$0$i$i5) + 1)|0;
    $__i$0$i$i5 = $30;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiii(491,($__intl|0),($31|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   L27: do {
    if ($33) {
     $99 = ___cxa_find_matching_catch()|0;
     $100 = tempRet0;
     $$0 = $99;$$01 = $100;
    } else {
     $34 = HEAP8[$__digits>>0]|0;
     $35 = $34 & 1;
     $36 = ($35<<24>>24)==(0);
     if ($36) {
      $39 = $34&255;
      $40 = $39 >>> 1;
      $42 = $40;
     } else {
      $37 = (($__digits) + 4|0);
      $38 = HEAP32[$37>>2]|0;
      $42 = $38;
     }
     $41 = HEAP32[$__fd>>2]|0;
     $43 = ($42|0)>($41|0);
     if ($43) {
      if ($36) {
       $46 = $34&255;
       $47 = $46 >>> 1;
       $49 = $47;
      } else {
       $44 = (($__digits) + 4|0);
       $45 = HEAP32[$44>>2]|0;
       $49 = $45;
      }
      $48 = (($49) - ($41))|0;
      $50 = $48 << 1;
      $51 = HEAP8[$__sn>>0]|0;
      $52 = $51 & 1;
      $53 = ($52<<24>>24)==(0);
      if ($53) {
       $56 = $51&255;
       $57 = $56 >>> 1;
       $67 = $57;
      } else {
       $54 = (($__sn) + 4|0);
       $55 = HEAP32[$54>>2]|0;
       $67 = $55;
      }
      $58 = HEAP8[$__sym>>0]|0;
      $59 = $58 & 1;
      $60 = ($59<<24>>24)==(0);
      if ($60) {
       $63 = $58&255;
       $64 = $63 >>> 1;
       $69 = $64;
      } else {
       $61 = (($__sym) + 4|0);
       $62 = HEAP32[$61>>2]|0;
       $69 = $62;
      }
      $65 = $50 | 1;
      $66 = (($67) + ($65))|0;
      $68 = (($66) + ($69))|0;
      $$pn = $68;
     } else {
      $70 = HEAP8[$__sn>>0]|0;
      $71 = $70 & 1;
      $72 = ($71<<24>>24)==(0);
      if ($72) {
       $75 = $70&255;
       $76 = $75 >>> 1;
       $85 = $76;
      } else {
       $73 = (($__sn) + 4|0);
       $74 = HEAP32[$73>>2]|0;
       $85 = $74;
      }
      $77 = HEAP8[$__sym>>0]|0;
      $78 = $77 & 1;
      $79 = ($78<<24>>24)==(0);
      if ($79) {
       $82 = $77&255;
       $83 = $82 >>> 1;
       $87 = $83;
      } else {
       $80 = (($__sym) + 4|0);
       $81 = HEAP32[$80>>2]|0;
       $87 = $81;
      }
      $84 = (($85) + 2)|0;
      $86 = (($84) + ($87))|0;
      $$pn = $86;
     }
     $88 = (($$pn) + ($41))|0;
     $89 = ($88>>>0)>(100);
     do {
      if ($89) {
       $90 = $88 << 2;
       $91 = (_malloc($90)|0);
       $92 = ($91|0)==(0|0);
       if ($92) {
        __THREW__ = 0;
        invoke_v(465);
        $93 = __THREW__; __THREW__ = 0;
        $94 = $93&1;
        if ($94) {
         $95 = ___cxa_find_matching_catch()|0;
         $96 = tempRet0;
         $$0 = $95;$$01 = $96;
         break L27;
        } else {
         $$pre = HEAP8[$__digits>>0]|0;
         $103 = 0;$108 = $$pre;$__mb$0 = 0;
         break;
        }
       } else {
        $103 = $91;$108 = $34;$__mb$0 = $91;
       }
      } else {
       $103 = 0;$108 = $34;$__mb$0 = $__mbuf;
      }
     } while(0);
     $105 = (($__iob) + 4|0);
     $106 = HEAP32[$105>>2]|0;
     $107 = $108 & 1;
     $109 = ($107<<24>>24)==(0);
     if ($109) {
      $114 = (($__digits) + 4|0);
      $115 = $108&255;
      $116 = $115 >>> 1;
      $118 = $114;$119 = $116;
     } else {
      $110 = (($__digits) + 8|0);
      $111 = HEAP32[$110>>2]|0;
      $112 = (($__digits) + 4|0);
      $113 = HEAP32[$112>>2]|0;
      $118 = $111;$119 = $113;
     }
     $117 = (($118) + ($119<<2)|0);
     $120 = HEAP32[$__dp>>2]|0;
     $121 = HEAP32[$__ts>>2]|0;
     __THREW__ = 0;
     invoke_viiiiiiiiiiiiiii(492,($__mb$0|0),($__mi|0),($__me|0),($106|0),($118|0),($117|0),($1|0),($31|0),($__pat|0),($120|0),($121|0),($__grp|0),($__sym|0),($__sn|0),($41|0));
     $122 = __THREW__; __THREW__ = 0;
     $123 = $122&1;
     if (!($123)) {
      $124 = HEAP32[$__s>>2]|0;
      HEAP32[$0>>2] = $124;
      $125 = HEAP32[$__mi>>2]|0;
      $126 = HEAP32[$__me>>2]|0;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
      invoke_viiiiiii(471,($agg$result|0),($$byval_copy|0),($__mb$0|0),($125|0),($126|0),($__iob|0),($__fl|0));
      $127 = __THREW__; __THREW__ = 0;
      $128 = $127&1;
      if (!($128)) {
       $129 = ($103|0)==(0|0);
       if (!($129)) {
        _free($103);
       }
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
       $130 = HEAP32[$__loc>>2]|0;
       (__ZNSt3__114__shared_count16__release_sharedEv($130)|0);
       STACKTOP = sp;return;
      }
     }
     $101 = ___cxa_find_matching_catch()|0;
     $102 = tempRet0;
     $104 = ($103|0)==(0|0);
     if ($104) {
      $$0 = $101;$$01 = $102;
     } else {
      _free($103);
      $$0 = $101;$$01 = $102;
     }
    }
   } while(0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $$1 = $$0;$$12 = $$01;
  }
 } while(0);
 if ((label|0) == 47) {
  $97 = ___cxa_find_matching_catch()|0;
  $98 = tempRet0;
  $$1 = $97;$$12 = $98;
 }
 $131 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($131)|0);
 ___resumeException($$1|0);
 // unreachable;
}
function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $6 = (($__nm) + 1|0);
  $7 = $6;
 } else {
  $4 = (($__nm) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $7 = $5;
 }
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i = 0, $$0$i6 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__ndflt = 0, $exitcond$i$i = 0, $exitcond$i$i4 = 0;
 var $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__ndflt = sp;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__ndflt) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__dflt>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $9 = (($__dflt) + 1|0);
  $10 = (($__dflt) + 1|0);
  $11 = $2&255;
  $12 = $11 >>> 1;
  $14 = $10;$15 = $12;$50 = $9;
 } else {
  $5 = (($__dflt) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($__dflt) + 4|0);
  $8 = HEAP32[$7>>2]|0;
  $14 = $6;$15 = $8;$50 = $6;
 }
 $13 = (($14) + ($15)|0);
 $$0$i6 = $50;
 while(1) {
  $16 = ($$0$i6>>>0)<($13>>>0);
  if (!($16)) {
   label = 11;
   break;
  }
  $17 = HEAP8[$$0$i6>>0]|0;
  __THREW__ = 0;
  invoke_vii(372,($__ndflt|0),($17|0));
  $18 = __THREW__; __THREW__ = 0;
  $19 = $18&1;
  if ($19) {
   label = 15;
   break;
  }
  $20 = (($$0$i6) + 1|0);
  $$0$i6 = $20;
 }
 do {
  if ((label|0) == 11) {
   $21 = ($__c|0)==(-1);
   $22 = $__c << 1;
   $23 = $22;
   $24 = $21 ? (-1) : $23;
   $25 = HEAP8[$__ndflt>>0]|0;
   $26 = $25 & 1;
   $27 = ($26<<24>>24)==(0);
   if ($27) {
    $30 = (($__ndflt) + 1|0);
    $31 = $30;
   } else {
    $28 = (($__ndflt) + 8|0);
    $29 = HEAP32[$28>>2]|0;
    $31 = $29;
   }
   __THREW__ = 0;
   $32 = (invoke_iiiii(493,($24|0),($__set|0),($__msgid|0),($31|0))|0);
   $33 = __THREW__; __THREW__ = 0;
   $34 = $33&1;
   if ($34) {
    $37 = ___cxa_find_matching_catch()|0;
    $38 = tempRet0;
    $lpad$phi$index = $37;$lpad$phi$index2 = $38;
    label = 17;
    break;
   }
   $__i$0$i$i3 = 0;
   while(1) {
    $exitcond$i$i4 = ($__i$0$i$i3|0)==(3);
    if ($exitcond$i$i4) {
     break;
    }
    $39 = (($agg$result) + ($__i$0$i$i3<<2)|0);
    HEAP32[$39>>2] = 0;
    $40 = (($__i$0$i$i3) + 1)|0;
    $__i$0$i$i3 = $40;
   }
   $41 = (_strlen(($32|0))|0);
   $42 = (($32) + ($41)|0);
   $$0$i = $32;
   while(1) {
    $43 = ($$0$i>>>0)<($42>>>0);
    if (!($43)) {
     label = 26;
     break;
    }
    $44 = HEAP8[$$0$i>>0]|0;
    __THREW__ = 0;
    invoke_vii(372,($agg$result|0),($44|0));
    $45 = __THREW__; __THREW__ = 0;
    $46 = $45&1;
    if ($46) {
     label = 25;
     break;
    }
    $47 = (($$0$i) + 1|0);
    $$0$i = $47;
   }
   if ((label|0) == 25) {
    $48 = ___cxa_find_matching_catch()|0;
    $49 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    $$01 = $48;$$02 = $49;
    break;
   }
   else if ((label|0) == 26) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
    STACKTOP = sp;return;
   }
  }
  else if ((label|0) == 15) {
   $35 = ___cxa_find_matching_catch()|0;
   $36 = tempRet0;
   $lpad$phi$index = $35;$lpad$phi$index2 = $36;
   label = 17;
  }
 } while(0);
 if ((label|0) == 17) {
  $$01 = $lpad$phi$index;$$02 = $lpad$phi$index2;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$01|0);
 // unreachable;
}
function __ZNKSt3__18messagesIcE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $6 = (($__nm) + 1|0);
  $7 = $6;
 } else {
  $4 = (($__nm) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $7 = $5;
 }
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i = 0, $$0$i13 = 0, $$1 = 0, $$13 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bn$i = 0, $__bn$i11 = 0, $__buf$i = 0, $__buf$i10 = 0, $__i$0$i$i = 0, $__i$0$i$i7 = 0, $__mb$i = 0, $__mb$i9 = 0, $__ndflt = 0, $__nn$i = 0, $__p$0$i = 0, $__p$0$i16 = 0, $__r$0$i = 0, $__r$0$i12 = 0, $__wn$i = 0;
 var $exitcond$i$i = 0, $exitcond$i$i8 = 0, $lpad$phi$index = 0, $lpad$phi$index10 = 0, $lpad$phi32$index = 0, $lpad$phi32$index3 = 0, $or$cond$i = 0, $or$cond$i14 = 0, $or$cond3$i = 0, $or$cond3$i15 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mb$i9 = sp + 184|0;
 $__buf$i10 = sp + 192|0;
 $__bn$i11 = sp + 180|0;
 $__wn$i = sp + 176|0;
 $__mb$i = sp + 168|0;
 $__buf$i = sp + 40|0;
 $__bn$i = sp + 32|0;
 $__nn$i = sp + 28|0;
 $__ndflt = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($__ndflt) + ($__i$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $3;
 }
 $4 = (($0) + 4|0);
 HEAP32[$4>>2] = 0;
 HEAP32[$0>>2] = ((8680 + 8|0));
 $5 = HEAP8[$__dflt>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $12 = (($__dflt) + 4|0);
  $13 = (($__dflt) + 4|0);
  $14 = $5&255;
  $15 = $14 >>> 1;
  $100 = $12;$17 = $13;$18 = $15;
 } else {
  $8 = (($__dflt) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($__dflt) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $100 = $9;$17 = $9;$18 = $11;
 }
 $16 = (($17) + ($18<<2)|0);
 $19 = (($__buf$i10) + 32|0);
 $$0$i13 = $100;$__r$0$i12 = 0;
 L9: while(1) {
  $20 = ($$0$i13>>>0)<($16>>>0);
  $21 = ($__r$0$i12|0)!=(2);
  $or$cond$i14 = $21 & $20;
  if (!($or$cond$i14)) {
   label = 18;
   break;
  }
  HEAP32[$__wn$i>>2] = $$0$i13;
  $22 = HEAP32[$0>>2]|0;
  $23 = (($22) + 12|0);
  $24 = HEAP32[$23>>2]|0;
  __THREW__ = 0;
  $25 = (invoke_iiiiiiiii($24|0,($0|0),($__mb$i9|0),($$0$i13|0),($16|0),($__wn$i|0),($__buf$i10|0),($19|0),($__bn$i11|0))|0);
  $26 = __THREW__; __THREW__ = 0;
  $27 = $26&1;
  if ($27) {
   label = 24;
   break;
  }
  $28 = ($25|0)==(2);
  $29 = HEAP32[$__wn$i>>2]|0;
  $30 = ($29|0)==($$0$i13|0);
  $or$cond3$i15 = $28 | $30;
  if ($or$cond3$i15) {
   label = 12;
   break;
  }
  $__p$0$i16 = $__buf$i10;
  while(1) {
   $33 = HEAP32[$__bn$i11>>2]|0;
   $34 = ($__p$0$i16>>>0)<($33>>>0);
   if (!($34)) {
    break;
   }
   $35 = HEAP8[$__p$0$i16>>0]|0;
   __THREW__ = 0;
   invoke_vii(372,($__ndflt|0),($35|0));
   $36 = __THREW__; __THREW__ = 0;
   $37 = $36&1;
   if ($37) {
    label = 23;
    break L9;
   }
   $38 = (($__p$0$i16) + 1|0);
   $__p$0$i16 = $38;
  }
  $39 = HEAP32[$__wn$i>>2]|0;
  $$0$i13 = $39;$__r$0$i12 = $25;
 }
 do {
  if ((label|0) == 12) {
   __THREW__ = 0;
   invoke_vi(477,(7912|0));
   $31 = __THREW__; __THREW__ = 0;
   $32 = $31&1;
   if ($32) {
    $60 = ___cxa_find_matching_catch()|0;
    $61 = tempRet0;
    $lpad$phi32$index = $60;$lpad$phi32$index3 = $61;
    label = 26;
    break;
   } else {
    // unreachable;
   }
  }
  else if ((label|0) == 18) {
   $40 = ($__c|0)==(-1);
   $41 = $__c << 1;
   $42 = $41;
   $43 = $40 ? (-1) : $42;
   $44 = HEAP8[$__ndflt>>0]|0;
   $45 = $44 & 1;
   $46 = ($45<<24>>24)==(0);
   if ($46) {
    $49 = (($__ndflt) + 1|0);
    $50 = $49;
   } else {
    $47 = (($__ndflt) + 8|0);
    $48 = HEAP32[$47>>2]|0;
    $50 = $48;
   }
   __THREW__ = 0;
   $51 = (invoke_iiiii(493,($43|0),($__set|0),($__msgid|0),($50|0))|0);
   $52 = __THREW__; __THREW__ = 0;
   $53 = $52&1;
   if ($53) {
    $54 = ___cxa_find_matching_catch()|0;
    $55 = tempRet0;
    $$1 = $54;$$13 = $55;
    break;
   }
   $__i$0$i$i7 = 0;
   while(1) {
    $exitcond$i$i8 = ($__i$0$i$i7|0)==(3);
    if ($exitcond$i$i8) {
     break;
    }
    $62 = (($agg$result) + ($__i$0$i$i7<<2)|0);
    HEAP32[$62>>2] = 0;
    $63 = (($__i$0$i$i7) + 1)|0;
    $__i$0$i$i7 = $63;
   }
   $64 = (($1) + 4|0);
   HEAP32[$64>>2] = 0;
   HEAP32[$1>>2] = ((8784 + 8|0));
   $65 = (_strlen(($51|0))|0);
   $66 = (($51) + ($65)|0);
   $67 = $66;
   $68 = (($__buf$i) + 128|0);
   $$0$i = $51;$__r$0$i = 0;
   L38: while(1) {
    $69 = ($$0$i>>>0)<($66>>>0);
    $70 = ($__r$0$i|0)!=(2);
    $or$cond$i = $70 & $69;
    if (!($or$cond$i)) {
     label = 41;
     break;
    }
    HEAP32[$__nn$i>>2] = $$0$i;
    $71 = HEAP32[$1>>2]|0;
    $72 = (($71) + 16|0);
    $73 = HEAP32[$72>>2]|0;
    $74 = $$0$i;
    $75 = (($67) - ($74))|0;
    $76 = ($75|0)>(32);
    $77 = (($$0$i) + 32|0);
    $78 = $76 ? $77 : $66;
    __THREW__ = 0;
    $79 = (invoke_iiiiiiiii($73|0,($1|0),($__mb$i|0),($$0$i|0),($78|0),($__nn$i|0),($__buf$i|0),($68|0),($__bn$i|0))|0);
    $80 = __THREW__; __THREW__ = 0;
    $81 = $80&1;
    if ($81) {
     label = 43;
     break;
    }
    $82 = ($79|0)==(2);
    $83 = HEAP32[$__nn$i>>2]|0;
    $84 = ($83|0)==($$0$i|0);
    $or$cond3$i = $82 | $84;
    if ($or$cond3$i) {
     label = 35;
     break;
    }
    $__p$0$i = $__buf$i;
    while(1) {
     $87 = HEAP32[$__bn$i>>2]|0;
     $88 = ($__p$0$i>>>0)<($87>>>0);
     if (!($88)) {
      break;
     }
     $89 = HEAP32[$__p$0$i>>2]|0;
     __THREW__ = 0;
     invoke_vii(485,($agg$result|0),($89|0));
     $90 = __THREW__; __THREW__ = 0;
     $91 = $90&1;
     if ($91) {
      label = 42;
      break L38;
     }
     $92 = (($__p$0$i) + 4|0);
     $__p$0$i = $92;
    }
    $93 = HEAP32[$__nn$i>>2]|0;
    $$0$i = $93;$__r$0$i = $79;
   }
   do {
    if ((label|0) == 35) {
     __THREW__ = 0;
     invoke_vi(477,(7912|0));
     $85 = __THREW__; __THREW__ = 0;
     $86 = $85&1;
     if ($86) {
      $98 = ___cxa_find_matching_catch()|0;
      $99 = tempRet0;
      $lpad$phi$index = $98;$lpad$phi$index10 = $99;
      break;
     } else {
      // unreachable;
     }
    }
    else if ((label|0) == 41) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
     STACKTOP = sp;return;
    }
    else if ((label|0) == 42) {
     $94 = ___cxa_find_matching_catch()|0;
     $95 = tempRet0;
     $lpad$phi$index = $94;$lpad$phi$index10 = $95;
    }
    else if ((label|0) == 43) {
     $96 = ___cxa_find_matching_catch()|0;
     $97 = tempRet0;
     $lpad$phi$index = $96;$lpad$phi$index10 = $97;
    }
   } while(0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($agg$result);
   $$1 = $lpad$phi$index;$$13 = $lpad$phi$index10;
  }
  else if ((label|0) == 23) {
   $56 = ___cxa_find_matching_catch()|0;
   $57 = tempRet0;
   $lpad$phi32$index = $56;$lpad$phi32$index3 = $57;
   label = 26;
  }
  else if ((label|0) == 24) {
   $58 = ___cxa_find_matching_catch()|0;
   $59 = tempRet0;
   $lpad$phi32$index = $58;$lpad$phi32$index3 = $59;
   label = 26;
  }
 } while(0);
 if ((label|0) == 26) {
  $$1 = $lpad$phi32$index;$$13 = $lpad$phi32$index3;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$1|0);
 // unreachable;
}
function __ZNKSt3__18messagesIwE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNSt3__120__vector_base_commonILb1EEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(450,($0|0),(6912|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  HEAP32[$0>>2] = ((2424 + 8|0));
  ___cxa_throw(($0|0),(2472|0),(59|0));
  // unreachable;
 }
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(450,($0|0),(6912|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  HEAP32[$0>>2] = ((2488 + 8|0));
  ___cxa_throw(($0|0),(2536|0),(59|0));
  // unreachable;
 }
}
function __ZNSt3__16locale5__impC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((6944 + 8|0));
 $2 = (($this) + 8|0);
 __THREW__ = 0;
 invoke_vii(494,($2|0),28);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $82 = ___cxa_find_matching_catch()|0;
  $83 = tempRet0;
  $$1 = $83;$$12 = $82;
 } else {
  $5 = (($this) + 144|0);
  __THREW__ = 0;
  invoke_viii(495,($5|0),(6936|0),1);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if ($7) {
   $84 = ___cxa_find_matching_catch()|0;
   $85 = tempRet0;
   $$0 = $85;$$01 = $84;
  } else {
   $8 = HEAP32[$2>>2]|0;
   $9 = (($this) + 12|0);
   $$pre$i$i$i = HEAP32[$9>>2]|0;
   $10 = $$pre$i$i$i;
   while(1) {
    $11 = ($10|0)==($8|0);
    if ($11) {
     break;
    }
    $12 = (($10) + -4|0);
    HEAP32[$9>>2] = $12;
    $10 = $12;
   }
   HEAP32[((11840 + 4|0))>>2] = 0;
   HEAP32[11840>>2] = ((5392 + 8|0));
   __THREW__ = 0;
   invoke_vii(496,($this|0),(11840|0));
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   do {
    if ($14) {
     label = 42;
    } else {
     HEAP32[((11832 + 4|0))>>2] = 0;
     HEAP32[11832>>2] = ((5432 + 8|0));
     __THREW__ = 0;
     invoke_vii(497,($this|0),(11832|0));
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if ($16) {
      label = 42;
     } else {
      HEAP32[((11816 + 4|0))>>2] = 0;
      HEAP32[11816>>2] = ((7040 + 8|0));
      HEAP32[((11816 + 8|0))>>2] = 0;
      HEAP8[((11816 + 12|0))>>0] = 0;
      $17 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
      HEAP32[((11816 + 8|0))>>2] = $17;
      __THREW__ = 0;
      invoke_vii(498,($this|0),(11816|0));
      $18 = __THREW__; __THREW__ = 0;
      $19 = $18&1;
      if ($19) {
       label = 42;
      } else {
       HEAP32[((11808 + 4|0))>>2] = 0;
       HEAP32[11808>>2] = ((8000 + 8|0));
       __THREW__ = 0;
       invoke_vii(499,($this|0),(11808|0));
       $20 = __THREW__; __THREW__ = 0;
       $21 = $20&1;
       if ($21) {
        label = 42;
       } else {
        HEAP32[((11800 + 4|0))>>2] = 0;
        HEAP32[11800>>2] = ((8216 + 8|0));
        __THREW__ = 0;
        invoke_vii(500,($this|0),(11800|0));
        $22 = __THREW__; __THREW__ = 0;
        $23 = $22&1;
        if ($23) {
         label = 42;
        } else {
         __THREW__ = 0;
         invoke_vii(501,(11784|0),1);
         $24 = __THREW__; __THREW__ = 0;
         $25 = $24&1;
         if ($25) {
          label = 42;
         } else {
          __THREW__ = 0;
          invoke_vii(502,($this|0),(11784|0));
          $26 = __THREW__; __THREW__ = 0;
          $27 = $26&1;
          if ($27) {
           label = 42;
          } else {
           HEAP32[((11776 + 4|0))>>2] = 0;
           HEAP32[11776>>2] = ((8440 + 8|0));
           __THREW__ = 0;
           invoke_vii(503,($this|0),(11776|0));
           $28 = __THREW__; __THREW__ = 0;
           $29 = $28&1;
           if ($29) {
            label = 42;
           } else {
            HEAP32[((11768 + 4|0))>>2] = 0;
            HEAP32[11768>>2] = ((8560 + 8|0));
            __THREW__ = 0;
            invoke_vii(504,($this|0),(11768|0));
            $30 = __THREW__; __THREW__ = 0;
            $31 = $30&1;
            if ($31) {
             label = 42;
            } else {
             __ZNSt3__18numpunctIcEC2Ej(11744,1);
             __THREW__ = 0;
             invoke_vii(505,($this|0),(11744|0));
             $32 = __THREW__; __THREW__ = 0;
             $33 = $32&1;
             if ($33) {
              label = 42;
             } else {
              __ZNSt3__18numpunctIwEC2Ej(11712,1);
              __THREW__ = 0;
              invoke_vii(506,($this|0),(11712|0));
              $34 = __THREW__; __THREW__ = 0;
              $35 = $34&1;
              if ($35) {
               label = 42;
              } else {
               HEAP32[((11704 + 4|0))>>2] = 0;
               HEAP32[11704>>2] = ((5472 + 8|0));
               __THREW__ = 0;
               invoke_vii(507,($this|0),(11704|0));
               $36 = __THREW__; __THREW__ = 0;
               $37 = $36&1;
               if ($37) {
                label = 42;
               } else {
                HEAP32[((11696 + 4|0))>>2] = 0;
                HEAP32[11696>>2] = ((5592 + 8|0));
                __THREW__ = 0;
                invoke_vii(508,($this|0),(11696|0));
                $38 = __THREW__; __THREW__ = 0;
                $39 = $38&1;
                if ($39) {
                 label = 42;
                } else {
                 HEAP32[((11688 + 4|0))>>2] = 0;
                 HEAP32[11688>>2] = ((5664 + 8|0));
                 __THREW__ = 0;
                 invoke_vii(509,($this|0),(11688|0));
                 $40 = __THREW__; __THREW__ = 0;
                 $41 = $40&1;
                 if ($41) {
                  label = 42;
                 } else {
                  HEAP32[((11680 + 4|0))>>2] = 0;
                  HEAP32[11680>>2] = ((5760 + 8|0));
                  __THREW__ = 0;
                  invoke_vii(510,($this|0),(11680|0));
                  $42 = __THREW__; __THREW__ = 0;
                  $43 = $42&1;
                  if ($43) {
                   label = 42;
                  } else {
                   HEAP32[((11672 + 4|0))>>2] = 0;
                   HEAP32[11672>>2] = ((6352 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(511,($this|0),(11672|0));
                   $44 = __THREW__; __THREW__ = 0;
                   $45 = $44&1;
                   if ($45) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11664 + 4|0))>>2] = 0;
                   HEAP32[11664>>2] = ((6416 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(512,($this|0),(11664|0));
                   $46 = __THREW__; __THREW__ = 0;
                   $47 = $46&1;
                   if ($47) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11656 + 4|0))>>2] = 0;
                   HEAP32[11656>>2] = ((6480 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(513,($this|0),(11656|0));
                   $48 = __THREW__; __THREW__ = 0;
                   $49 = $48&1;
                   if ($49) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11648 + 4|0))>>2] = 0;
                   HEAP32[11648>>2] = ((6544 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(514,($this|0),(11648|0));
                   $50 = __THREW__; __THREW__ = 0;
                   $51 = $50&1;
                   if ($51) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11640 + 4|0))>>2] = 0;
                   HEAP32[11640>>2] = ((6608 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(515,($this|0),(11640|0));
                   $52 = __THREW__; __THREW__ = 0;
                   $53 = $52&1;
                   if ($53) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11632 + 4|0))>>2] = 0;
                   HEAP32[11632>>2] = ((6688 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(516,($this|0),(11632|0));
                   $54 = __THREW__; __THREW__ = 0;
                   $55 = $54&1;
                   if ($55) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11624 + 4|0))>>2] = 0;
                   HEAP32[11624>>2] = ((6744 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(517,($this|0),(11624|0));
                   $56 = __THREW__; __THREW__ = 0;
                   $57 = $56&1;
                   if ($57) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11616 + 4|0))>>2] = 0;
                   HEAP32[11616>>2] = ((6792 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(518,($this|0),(11616|0));
                   $58 = __THREW__; __THREW__ = 0;
                   $59 = $58&1;
                   if ($59) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11600 + 4|0))>>2] = 0;
                   HEAP32[11600>>2] = ((5840 + 8|0));
                   HEAP32[((11600 + 8|0))>>2] = ((5840 + 56|0));
                   __THREW__ = 0;
                   invoke_vii(519,($this|0),(11600|0));
                   $60 = __THREW__; __THREW__ = 0;
                   $61 = $60&1;
                   if ($61) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11584 + 4|0))>>2] = 0;
                   HEAP32[11584>>2] = ((5992 + 8|0));
                   HEAP32[((11584 + 8|0))>>2] = ((5992 + 56|0));
                   __THREW__ = 0;
                   invoke_vii(520,($this|0),(11584|0));
                   $62 = __THREW__; __THREW__ = 0;
                   $63 = $62&1;
                   if ($63) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11568 + 4|0))>>2] = 0;
                   HEAP32[11568>>2] = ((7936 + 8|0));
                   __THREW__ = 0;
                   $64 = (invoke_i(459)|0);
                   $65 = __THREW__; __THREW__ = 0;
                   $66 = $65&1;
                   if ($66) {
                    $67 = ___cxa_find_matching_catch()|0;
                    $68 = tempRet0;
                    $eh$lpad$body$index3Z2D = $68;$eh$lpad$body$indexZ2D = $67;
                    break;
                   }
                   HEAP32[((11568 + 8|0))>>2] = $64;
                   HEAP32[11568>>2] = ((6288 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(521,($this|0),(11568|0));
                   $69 = __THREW__; __THREW__ = 0;
                   $70 = $69&1;
                   if ($70) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11552 + 4|0))>>2] = 0;
                   HEAP32[11552>>2] = ((7936 + 8|0));
                   __THREW__ = 0;
                   $71 = (invoke_i(459)|0);
                   $72 = __THREW__; __THREW__ = 0;
                   $73 = $72&1;
                   if ($73) {
                    $74 = ___cxa_find_matching_catch()|0;
                    $75 = tempRet0;
                    $eh$lpad$body$index3Z2D = $75;$eh$lpad$body$indexZ2D = $74;
                    break;
                   }
                   HEAP32[((11552 + 8|0))>>2] = $71;
                   HEAP32[11552>>2] = ((6320 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(522,($this|0),(11552|0));
                   $76 = __THREW__; __THREW__ = 0;
                   $77 = $76&1;
                   if ($77) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11544 + 4|0))>>2] = 0;
                   HEAP32[11544>>2] = ((6832 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(523,($this|0),(11544|0));
                   $78 = __THREW__; __THREW__ = 0;
                   $79 = $78&1;
                   if ($79) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11536 + 4|0))>>2] = 0;
                   HEAP32[11536>>2] = ((6872 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(524,($this|0),(11536|0));
                   $80 = __THREW__; __THREW__ = 0;
                   $81 = $80&1;
                   if ($81) {
                    label = 42;
                    break;
                   }
                   return;
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   } while(0);
   if ((label|0) == 42) {
    $86 = ___cxa_find_matching_catch()|0;
    $87 = tempRet0;
    $eh$lpad$body$index3Z2D = $87;$eh$lpad$body$indexZ2D = $86;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   $$0 = $eh$lpad$body$index3Z2D;$$01 = $eh$lpad$body$indexZ2D;
  }
  __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($2);
  $$1 = $$0;$$12 = $$01;
 }
 ___resumeException($$12|0);
 // unreachable;
}
function __ZNSt3__16locale7classicEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[6984>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((6984|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    (invoke_i(525)|0);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $7 = ___cxa_find_matching_catch()|0;
     $8 = tempRet0;
     ___cxa_guard_abort((6984|0));
     ___resumeException($7|0);
     // unreachable;
    } else {
     HEAP32[6976>>2] = 6968;
     ___cxa_guard_release((6984|0));
     break;
    }
   }
  }
 } while(0);
 $6 = HEAP32[6976>>2]|0;
 return ($6|0);
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$id) {
 $this = $this|0;
 $f = $f|0;
 $id = $id|0;
 var $$pre = 0, $$pre2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = (($this) + 8|0);
 $1 = (($this) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = $2;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 do {
  if ($8) {
   $16 = $3;
  } else {
   $9 = (($id) + 1)|0;
   __THREW__ = 0;
   invoke_vii(526,($0|0),($9|0));
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $$pre = HEAP32[$0>>2]|0;
    $16 = $$pre;
    break;
   }
   $12 = ___cxa_find_matching_catch()|0;
   $13 = tempRet0;
   $14 = ($f|0)==(0|0);
   if (!($14)) {
    (__ZNSt3__114__shared_count16__release_sharedEv($f)|0);
   }
   ___resumeException($12|0);
   // unreachable;
  }
 } while(0);
 $15 = (($16) + ($id<<2)|0);
 $17 = HEAP32[$15>>2]|0;
 $18 = ($17|0)==(0|0);
 if ($18) {
  $20 = $16;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  $$pre2 = HEAP32[$0>>2]|0;
  $20 = $$pre2;
 }
 $19 = (($20) + ($id<<2)|0);
 HEAP32[$19>>2] = $f;
 return;
}
function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((6944 + 8|0));
 $0 = (($this) + 8|0);
 $1 = (($this) + 12|0);
 $i$0 = 0;
 while(1) {
  $2 = HEAP32[$1>>2]|0;
  $3 = HEAP32[$0>>2]|0;
  $4 = $2;
  $5 = $3;
  $6 = (($4) - ($5))|0;
  $7 = $6 >> 2;
  $8 = ($i$0>>>0)<($7>>>0);
  if (!($8)) {
   break;
  }
  $9 = (($3) + ($i$0<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0|0);
  if (!($11)) {
   (__ZNSt3__114__shared_count16__release_sharedEv($10)|0);
  }
  $12 = (($i$0) + 1)|0;
  $i$0 = $12;
 }
 $13 = (($this) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}
function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__16locale5__imp9use_facetEl($this,$id) {
 $this = $this|0;
 $id = $id|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16locale5__imp9has_facetEl($this,$id)|0);
 if ($0) {
  $2 = (($this) + 8|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = (($3) + ($id<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  return ($5|0);
 } else {
  $1 = (___cxa_allocate_exception(4)|0);
  __ZNSt8bad_castC2Ev($1);
  ___cxa_throw(($1|0),(2672|0),(67|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__16locale5__imp12make_classicEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impC2Ej(11376,1);
 HEAP32[6968>>2] = 11376;
 return (6968|0);
}
function __ZNSt3__16locale5__imp11make_globalEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale7classicEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[6992>>2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return (6992|0);
}
function __ZNSt3__16locale8__globalEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7008>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7008|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    (invoke_i(527)|0);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $7 = ___cxa_find_matching_catch()|0;
     $8 = tempRet0;
     ___cxa_guard_abort((7008|0));
     ___resumeException($7|0);
     // unreachable;
    } else {
     HEAP32[7000>>2] = 6992;
     ___cxa_guard_release((7008|0));
     break;
    }
   }
  }
 } while(0);
 $6 = HEAP32[7000>>2]|0;
 return ($6|0);
}
function __ZNSt3__16localeC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(528)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  HEAP32[$this>>2] = $3;
  __ZNSt3__114__shared_count12__add_sharedEv($3);
  return;
 }
}
function __ZNSt3__16localeC2ERKS0_($this,$l) {
 $this = $this|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$l>>2]|0;
 HEAP32[$this>>2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}
function __ZNSt3__16localeD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 return;
}
function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__p$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p$i = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(-1);
 if (!($1)) {
  HEAP32[$__p$i>>2] = $this;
  $2 = (($__p$i) + 4|0);
  HEAP32[$2>>2] = (529);
  $3 = (($__p$i) + 8|0);
  HEAP32[$3>>2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this,$__p$i,530);
 }
 $4 = (($this) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + -1)|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__16locale9use_facetERNS0_2idE($this,$x) {
 $this = $this|0;
 $x = $x|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv($x)|0);
 $2 = (__ZNKSt3__16locale5__imp9use_facetEl($0,$1)|0);
 return ($2|0);
}
function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==(0|0);
 if (!($0)) {
  $1 = HEAP32[$this>>2]|0;
  $2 = (($1) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$3 & 1023]($this);
 }
 return;
}
function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[7016>>2]|0;HEAP32[7016>>2] = (($0+1)|0);
 $1 = (($0) + 1)|0;
 $2 = (($this) + 4|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this,$m,$c) {
 $this = $this|0;
 $m = $m|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
  $1 = (($0) + ($c<<1)|0);
  $2 = HEAP16[$1>>1]|0;
  $3 = $2 & $m;
  $4 = ($3<<16>>16)!=(0);
  $5 = $4;
 } else {
  $5 = 0;
 }
 return ($5|0);
}
function __ZNSt3__15ctypeIcE13classic_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(531)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this,$low,$high,$vec) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $vec = $vec|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $$0 = $vec;$$01 = $low;
 while(1) {
  $3 = ($$01|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$01>>2]|0;
  $isascii = ($4>>>0)<(128);
  if ($isascii) {
   $5 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
   $6 = (($5) + ($4<<1)|0);
   $7 = HEAP16[$6>>1]|0;
   $8 = $7&65535;
   $10 = $8;
  } else {
   $10 = 0;
  }
  $9 = $10&65535;
  HEAP16[$$0>>1] = $9;
  $11 = (($$01) + 4|0);
  $12 = (($$0) + 2|0);
  $$0 = $12;$$01 = $11;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   $$0$lcssa = $high;
   break;
  }
  $1 = HEAP32[$$0>>2]|0;
  $isascii = ($1>>>0)<(128);
  if ($isascii) {
   $2 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
   $3 = (($2) + ($1<<1)|0);
   $4 = HEAP16[$3>>1]|0;
   $5 = $4 & $m;
   $6 = ($5<<16>>16)==(0);
   if (!($6)) {
    $$0$lcssa = $$0;
    break;
   }
  }
  $7 = (($$0) + 4|0);
  $$0 = $7;
 }
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   $$0$lcssa = $high;
   break;
  }
  $1 = HEAP32[$$0>>2]|0;
  $isascii = ($1>>>0)<(128);
  if (!($isascii)) {
   $$0$lcssa = $$0;
   break;
  }
  $2 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
  $3 = (($2) + ($1<<1)|0);
  $4 = HEAP16[$3>>1]|0;
  $5 = $4 & $m;
  $6 = ($5<<16>>16)==(0);
  if ($6) {
   $$0$lcssa = $$0;
   break;
  }
  $7 = (($$0) + 4|0);
  $$0 = $7;
 }
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
  $1 = (($0) + ($c<<2)|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = $2;
 } else {
  $3 = $c;
 }
 return ($3|0);
}
function __ZNSt3__15ctypeIcE21__classic_upper_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(532)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $$0 = $low;
 while(1) {
  $3 = ($$0|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$0>>2]|0;
  $isascii = ($4>>>0)<(128);
  if ($isascii) {
   $5 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
   $6 = (($5) + ($4<<2)|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = $7;
  } else {
   $8 = $4;
  }
  HEAP32[$$0>>2] = $8;
  $9 = (($$0) + 4|0);
  $$0 = $9;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
  $1 = (($0) + ($c<<2)|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = $2;
 } else {
  $3 = $c;
 }
 return ($3|0);
}
function __ZNSt3__15ctypeIcE21__classic_lower_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(533)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $$0 = $low;
 while(1) {
  $3 = ($$0|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$0>>2]|0;
  $isascii = ($4>>>0)<(128);
  if ($isascii) {
   $5 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
   $6 = (($5) + ($4<<2)|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = $7;
  } else {
   $8 = $4;
  }
  HEAP32[$$0>>2] = $8;
  $9 = (($$0) + 4|0);
  $$0 = $9;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c << 24 >> 24;
 return ($0|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $0 = ($$01|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$01>>0]|0;
  $2 = $1 << 24 >> 24;
  HEAP32[$$0>>2] = $2;
  $3 = (($$01) + 1|0);
  $4 = (($$0) + 4|0);
  $$0 = $4;$$01 = $3;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $$0 = 0, $0 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 $0 = $c&255;
 $$0 = $isascii ? $0 : $dfault;
 return ($$0|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $3 = ($$01|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$01>>2]|0;
  $isascii = ($4>>>0)<(128);
  $5 = $4&255;
  $$dfault = $isascii ? $5 : $dfault;
  HEAP8[$$0>>0] = $$dfault;
  $6 = (($$01) + 4|0);
  $7 = (($$0) + 1|0);
  $$0 = $7;$$01 = $6;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((7040 + 8|0));
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = (($this) + 12|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   __ZdaPv($1);
  }
 }
 return;
}
function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c&255;
  $1 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
  $2 = (($1) + ($0<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3&255;
  $5 = $4;
 } else {
  $5 = $c;
 }
 return ($5|0);
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$0>>0]|0;
  $isascii1 = ($1<<24>>24)>(-1);
  if ($isascii1) {
   $2 = $1 << 24 >> 24;
   $3 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
   $4 = (($3) + ($2<<2)|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = $5&255;
   $7 = $6;
  } else {
   $7 = $1;
  }
  HEAP8[$$0>>0] = $7;
  $8 = (($$0) + 1|0);
  $$0 = $8;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c << 24 >> 24;
  $1 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
  $2 = (($1) + ($0<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3&255;
  $5 = $4;
 } else {
  $5 = $c;
 }
 return ($5|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$0>>0]|0;
  $isascii1 = ($1<<24>>24)>(-1);
  if ($isascii1) {
   $2 = $1 << 24 >> 24;
   $3 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
   $4 = (($3) + ($2<<2)|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = $5&255;
   $7 = $6;
  } else {
   $7 = $1;
  }
  HEAP8[$$0>>0] = $7;
  $8 = (($$0) + 1|0);
  $$0 = $8;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($c|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $0 = ($$01|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$01>>0]|0;
  HEAP8[$$0>>0] = $1;
  $2 = (($$01) + 1|0);
  $3 = (($$0) + 1|0);
  $$0 = $3;$$01 = $2;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $c$dfault = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 $c$dfault = $isascii1 ? $c : $dfault;
 return ($c$dfault|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $0 = ($$01|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$01>>0]|0;
  $isascii2 = ($1<<24>>24)>(-1);
  $$dfault = $isascii2 ? $1 : $dfault;
  HEAP8[$$0>>0] = $$dfault;
  $2 = (($$01) + 1|0);
  $3 = (($$0) + 1|0);
  $$0 = $3;$$01 = $2;
 }
 return ($high|0);
}
function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $end = $end|0;
 $mx = $mx|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $end;
 $2 = $frm;
 $3 = (($1) - ($2))|0;
 $4 = ($3>>>0)<($mx>>>0);
 $5 = $4 ? $3 : $mx;
 return ($5|0);
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNSt3__17codecvtIwc11__mbstate_tEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((7112 + 8|0));
 __THREW__ = 0;
 $2 = (invoke_i(459)|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $6 = ___cxa_find_matching_catch()|0;
  $7 = tempRet0;
  ___resumeException($6|0);
  // unreachable;
 } else {
  $5 = (($this) + 8|0);
  HEAP32[$5>>2] = $2;
  return;
 }
}
function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$01$be = 0, $$01$lcssa = 0, $$01$lcssa99 = 0, $$02 = 0, $$02$be = 0, $$02$lcssa92 = 0, $$1 = 0, $$1$lcssa = 0, $$lcssa = 0, $$lcssa104 = 0, $$lcssa111 = 0, $$pre = 0, $$pre59 = 0, $$pre60 = 0, $0 = 0, $1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $104$phi = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $fend$0 = 0, $fend$0$lcssa = 0, $fend$1 = 0, $fend$1$be = 0, $fend$2 = 0, $fend$2$lcssa = 0, $n$0 = 0, $not$ = 0, $or$cond = 0, $p$0 = 0, $save_state = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $save_state = sp;
 $tmp = sp + 8|0;
 $fend$0 = $frm;
 while(1) {
  $0 = ($fend$0|0)==($frm_end|0);
  if ($0) {
   $fend$0$lcssa = $frm_end;
   break;
  }
  $1 = HEAP32[$fend$0>>2]|0;
  $2 = ($1|0)==(0);
  if ($2) {
   $fend$0$lcssa = $fend$0;
   break;
  }
  $3 = (($fend$0) + 4|0);
  $fend$0 = $3;
 }
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $4 = $to_end;
 $5 = (($this) + 8|0);
 $$01 = $frm;$$02 = $to;$fend$1 = $fend$0$lcssa;
 while(1) {
  $6 = ($$01|0)==($frm_end|0);
  $7 = ($$02|0)==($to_end|0);
  $or$cond = $7 | $6;
  if ($or$cond) {
   $$01$lcssa = $$01;
   label = 51;
   break;
  }
  $8 = $st;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $save_state;
  $15 = $14;
  HEAP32[$15>>2] = $10;
  $16 = (($14) + 4)|0;
  $17 = $16;
  HEAP32[$17>>2] = $13;
  $18 = $fend$1;
  $19 = $$01;
  $20 = (($18) - ($19))|0;
  $21 = $20 >> 2;
  $22 = $$02;
  $23 = (($4) - ($22))|0;
  $24 = HEAP32[$5>>2]|0;
  $25 = (_uselocale(($24|0))|0);
  __THREW__ = 0;
  $26 = (invoke_iiiiii(534,($$02|0),($frm_nxt|0),($21|0),($23|0),($st|0))|0);
  $27 = __THREW__; __THREW__ = 0;
  $28 = $27&1;
  if ($28) {
   $$lcssa104 = $25;
   label = 11;
   break;
  }
  $29 = ($25|0)==(0|0);
  if (!($29)) {
   __THREW__ = 0;
   (invoke_ii(474,($25|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    label = 10;
    break;
   }
  }
  if ((($26|0) == 0)) {
   $$0$ph = 1;
   label = 53;
   break;
  } else if ((($26|0) == -1)) {
   $$01$lcssa99 = $$01;$$02$lcssa92 = $$02;
   label = 16;
   break;
  }
  $66 = HEAP32[$to_nxt>>2]|0;
  $67 = (($66) + ($26)|0);
  HEAP32[$to_nxt>>2] = $67;
  $68 = ($67|0)==($to_end|0);
  if ($68) {
   label = 30;
   break;
  }
  $69 = ($fend$1|0)==($frm_end|0);
  if ($69) {
   $$pre59 = HEAP32[$frm_nxt>>2]|0;
   $$01$be = $$pre59;$$02$be = $67;$fend$1$be = $frm_end;
  } else {
   $70 = HEAP32[$5>>2]|0;
   $71 = (_uselocale(($70|0))|0);
   __THREW__ = 0;
   $72 = (invoke_iiii(535,($tmp|0),0,($st|0))|0);
   $73 = __THREW__; __THREW__ = 0;
   $74 = $73&1;
   if ($74) {
    $$lcssa111 = $71;
    label = 38;
    break;
   }
   $75 = ($71|0)==(0|0);
   if (!($75)) {
    __THREW__ = 0;
    (invoke_ii(474,($71|0))|0);
    $76 = __THREW__; __THREW__ = 0;
    $77 = $76&1;
    if ($77) {
     label = 37;
     break;
    }
   }
   $87 = ($72|0)==(-1);
   if ($87) {
    $$0$ph = 2;
    label = 53;
    break;
   }
   $88 = HEAP32[$to_nxt>>2]|0;
   $89 = $88;
   $90 = (($4) - ($89))|0;
   $91 = ($72>>>0)>($90>>>0);
   if ($91) {
    $$0$ph = 1;
    label = 53;
    break;
   }
   $n$0 = $72;$p$0 = $tmp;
   while(1) {
    $92 = ($n$0|0)==(0);
    if ($92) {
     break;
    }
    $93 = (($p$0) + 1|0);
    $94 = HEAP8[$p$0>>0]|0;
    $95 = HEAP32[$to_nxt>>2]|0;
    $96 = (($95) + 1|0);
    HEAP32[$to_nxt>>2] = $96;
    HEAP8[$95>>0] = $94;
    $97 = (($n$0) + -1)|0;
    $n$0 = $97;$p$0 = $93;
   }
   $98 = HEAP32[$frm_nxt>>2]|0;
   $99 = (($98) + 4|0);
   HEAP32[$frm_nxt>>2] = $99;
   $104 = $98;$fend$2 = $99;
   while(1) {
    $100 = ($fend$2|0)==($frm_end|0);
    if ($100) {
     $fend$2$lcssa = $frm_end;
     break;
    }
    $101 = HEAP32[$fend$2>>2]|0;
    $102 = ($101|0)==(0);
    $103 = (($104) + 8|0);
    if ($102) {
     $fend$2$lcssa = $fend$2;
     break;
    } else {
     $104$phi = $fend$2;$fend$2 = $103;$104 = $104$phi;
    }
   }
   $$pre60 = HEAP32[$to_nxt>>2]|0;
   $$01$be = $99;$$02$be = $$pre60;$fend$1$be = $fend$2$lcssa;
  }
  $$01 = $$01$be;$$02 = $$02$be;$fend$1 = $fend$1$be;
 }
 do {
  if ((label|0) == 10) {
   $32 = ___cxa_find_matching_catch(0|0)|0;
   $33 = tempRet0;
   ___clang_call_terminate($32);
   // unreachable;
  }
  else if ((label|0) == 11) {
   $34 = ___cxa_find_matching_catch()|0;
   $35 = tempRet0;
   $36 = ($$lcssa104|0)==(0|0);
   if (!($36)) {
    __THREW__ = 0;
    (invoke_ii(474,($$lcssa104|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if ($38) {
     $39 = ___cxa_find_matching_catch(0|0)|0;
     $40 = tempRet0;
     ___clang_call_terminate($39);
     // unreachable;
    }
   }
   ___resumeException($34|0);
   // unreachable;
  }
  else if ((label|0) == 16) {
   HEAP32[$to_nxt>>2] = $$02$lcssa92;
   $$1 = $$01$lcssa99;$46 = $$02$lcssa92;
   while(1) {
    $41 = HEAP32[$frm_nxt>>2]|0;
    $42 = ($$1|0)==($41|0);
    if ($42) {
     $$1$lcssa = $$1;
     label = 28;
     break;
    }
    $43 = HEAP32[$$1>>2]|0;
    $44 = HEAP32[$5>>2]|0;
    $45 = (_uselocale(($44|0))|0);
    __THREW__ = 0;
    $47 = (invoke_iiii(535,($46|0),($43|0),($save_state|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $$lcssa = $45;
     label = 22;
     break;
    }
    $50 = ($45|0)==(0|0);
    if (!($50)) {
     __THREW__ = 0;
     (invoke_ii(474,($45|0))|0);
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      label = 21;
      break;
     }
    }
    $62 = ($47|0)==(-1);
    if ($62) {
     $$1$lcssa = $$1;
     label = 28;
     break;
    }
    $63 = HEAP32[$to_nxt>>2]|0;
    $64 = (($63) + ($47)|0);
    HEAP32[$to_nxt>>2] = $64;
    $65 = (($$1) + 4|0);
    $$1 = $65;$46 = $64;
   }
   if ((label|0) == 21) {
    $53 = ___cxa_find_matching_catch(0|0)|0;
    $54 = tempRet0;
    ___clang_call_terminate($53);
    // unreachable;
   }
   else if ((label|0) == 22) {
    $55 = ___cxa_find_matching_catch()|0;
    $56 = tempRet0;
    $57 = ($$lcssa|0)==(0|0);
    if (!($57)) {
     __THREW__ = 0;
     (invoke_ii(474,($$lcssa|0))|0);
     $58 = __THREW__; __THREW__ = 0;
     $59 = $58&1;
     if ($59) {
      $60 = ___cxa_find_matching_catch(0|0)|0;
      $61 = tempRet0;
      ___clang_call_terminate($60);
      // unreachable;
     }
    }
    ___resumeException($55|0);
    // unreachable;
   }
   else if ((label|0) == 28) {
    HEAP32[$frm_nxt>>2] = $$1$lcssa;
    $$0 = 2;
    break;
   }
  }
  else if ((label|0) == 30) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $105 = $$pre;
   label = 52;
  }
  else if ((label|0) == 37) {
   $78 = ___cxa_find_matching_catch(0|0)|0;
   $79 = tempRet0;
   ___clang_call_terminate($78);
   // unreachable;
  }
  else if ((label|0) == 38) {
   $80 = ___cxa_find_matching_catch()|0;
   $81 = tempRet0;
   $82 = ($$lcssa111|0)==(0|0);
   if (!($82)) {
    __THREW__ = 0;
    (invoke_ii(474,($$lcssa111|0))|0);
    $83 = __THREW__; __THREW__ = 0;
    $84 = $83&1;
    if ($84) {
     $85 = ___cxa_find_matching_catch(0|0)|0;
     $86 = tempRet0;
     ___clang_call_terminate($85);
     // unreachable;
    }
   }
   ___resumeException($80|0);
   // unreachable;
  }
  else if ((label|0) == 51) {
   $105 = $$01$lcssa;
   label = 52;
  }
  else if ((label|0) == 53) {
   $$0 = $$0$ph;
  }
 } while(0);
 if ((label|0) == 52) {
  $not$ = ($105|0)!=($frm_end|0);
  $106 = $not$&1;
  $$0 = $106;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01 = 0, $$01$be = 0, $$01$lcssa = 0, $$01$lcssa135 = 0, $$02 = 0, $$02$be = 0, $$02$lcssa128 = 0, $$1 = 0, $$1$lcssa = 0, $$1$lcssa121 = 0, $$1$lcssa122 = 0, $$2 = 0, $$lcssa = 0, $$lcssa142 = 0, $$lcssa147 = 0, $$lcssa154 = 0, $$pre = 0, $$pre80 = 0, $$pre81 = 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $97$phi = 0, $98 = 0;
 var $99 = 0, $fend$0 = 0, $fend$0$lcssa = 0, $fend$1 = 0, $fend$1$be = 0, $fend$2 = 0, $fend$2$lcssa = 0, $not$ = 0, $not$3 = 0, $or$cond = 0, $save_state = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $save_state = sp;
 $fend$0 = $frm;
 while(1) {
  $0 = ($fend$0|0)==($frm_end|0);
  if ($0) {
   $fend$0$lcssa = $frm_end;
   break;
  }
  $1 = HEAP8[$fend$0>>0]|0;
  $2 = ($1<<24>>24)==(0);
  if ($2) {
   $fend$0$lcssa = $fend$0;
   break;
  }
  $3 = (($fend$0) + 1|0);
  $fend$0 = $3;
 }
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $4 = $to_end;
 $5 = (($this) + 8|0);
 $$01 = $frm;$$02 = $to;$fend$1 = $fend$0$lcssa;
 while(1) {
  $6 = ($$01|0)==($frm_end|0);
  $7 = ($$02|0)==($to_end|0);
  $or$cond = $7 | $6;
  if ($or$cond) {
   $$01$lcssa = $$01;
   label = 50;
   break;
  }
  $8 = $st;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $save_state;
  $15 = $14;
  HEAP32[$15>>2] = $10;
  $16 = (($14) + 4)|0;
  $17 = $16;
  HEAP32[$17>>2] = $13;
  $18 = $fend$1;
  $19 = $$01;
  $20 = (($18) - ($19))|0;
  $21 = $$02;
  $22 = (($4) - ($21))|0;
  $23 = $22 >> 2;
  $24 = HEAP32[$5>>2]|0;
  $25 = (_uselocale(($24|0))|0);
  __THREW__ = 0;
  $26 = (invoke_iiiiii(536,($$02|0),($frm_nxt|0),($20|0),($23|0),($st|0))|0);
  $27 = __THREW__; __THREW__ = 0;
  $28 = $27&1;
  if ($28) {
   $$lcssa147 = $25;
   label = 11;
   break;
  }
  $29 = ($25|0)==(0|0);
  if (!($29)) {
   __THREW__ = 0;
   (invoke_ii(474,($25|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    label = 10;
    break;
   }
  }
  if ((($26|0) == 0)) {
   label = 52;
   break;
  } else if ((($26|0) == -1)) {
   $$01$lcssa135 = $$01;$$02$lcssa128 = $$02;$$lcssa142 = $18;
   label = 16;
   break;
  }
  $67 = HEAP32[$to_nxt>>2]|0;
  $68 = (($67) + ($26<<2)|0);
  HEAP32[$to_nxt>>2] = $68;
  $69 = ($68|0)==($to_end|0);
  if ($69) {
   label = 34;
   break;
  }
  $70 = ($fend$1|0)==($frm_end|0);
  $$pre80 = HEAP32[$frm_nxt>>2]|0;
  if ($70) {
   $$01$be = $$pre80;$$02$be = $68;$fend$1$be = $frm_end;
  } else {
   $71 = HEAP32[$5>>2]|0;
   $72 = (_uselocale(($71|0))|0);
   __THREW__ = 0;
   $73 = (invoke_iiiii(537,($68|0),($$pre80|0),1,($st|0))|0);
   $74 = __THREW__; __THREW__ = 0;
   $75 = $74&1;
   if ($75) {
    $$lcssa154 = $72;
    label = 40;
    break;
   }
   $76 = ($72|0)==(0|0);
   if (!($76)) {
    __THREW__ = 0;
    (invoke_ii(474,($72|0))|0);
    $77 = __THREW__; __THREW__ = 0;
    $78 = $77&1;
    if ($78) {
     label = 39;
     break;
    }
   }
   $88 = ($73|0)==(0);
   if (!($88)) {
    label = 52;
    break;
   }
   $89 = HEAP32[$to_nxt>>2]|0;
   $90 = (($89) + 4|0);
   HEAP32[$to_nxt>>2] = $90;
   $91 = HEAP32[$frm_nxt>>2]|0;
   $92 = (($91) + 1|0);
   HEAP32[$frm_nxt>>2] = $92;
   $97 = $91;$fend$2 = $92;
   while(1) {
    $93 = ($fend$2|0)==($frm_end|0);
    if ($93) {
     $fend$2$lcssa = $frm_end;
     break;
    }
    $94 = HEAP8[$fend$2>>0]|0;
    $95 = ($94<<24>>24)==(0);
    $96 = (($97) + 2|0);
    if ($95) {
     $fend$2$lcssa = $fend$2;
     break;
    } else {
     $97$phi = $fend$2;$fend$2 = $96;$97 = $97$phi;
    }
   }
   $$pre81 = HEAP32[$to_nxt>>2]|0;
   $$01$be = $92;$$02$be = $$pre81;$fend$1$be = $fend$2$lcssa;
  }
  $$01 = $$01$be;$$02 = $$02$be;$fend$1 = $fend$1$be;
 }
 do {
  if ((label|0) == 10) {
   $32 = ___cxa_find_matching_catch(0|0)|0;
   $33 = tempRet0;
   ___clang_call_terminate($32);
   // unreachable;
  }
  else if ((label|0) == 11) {
   $34 = ___cxa_find_matching_catch()|0;
   $35 = tempRet0;
   $36 = ($$lcssa147|0)==(0|0);
   if (!($36)) {
    __THREW__ = 0;
    (invoke_ii(474,($$lcssa147|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if ($38) {
     $39 = ___cxa_find_matching_catch(0|0)|0;
     $40 = tempRet0;
     ___clang_call_terminate($39);
     // unreachable;
    }
   }
   ___resumeException($34|0);
   // unreachable;
  }
  else if ((label|0) == 16) {
   $$1 = $$01$lcssa135;$storemerge = $$02$lcssa128;
   while(1) {
    HEAP32[$to_nxt>>2] = $storemerge;
    $41 = HEAP32[$frm_nxt>>2]|0;
    $42 = ($$1|0)==($41|0);
    if ($42) {
     $$1$lcssa = $$1;
     label = 32;
     break;
    }
    $43 = $$1;
    $44 = (($$lcssa142) - ($43))|0;
    $45 = HEAP32[$5>>2]|0;
    $46 = (_uselocale(($45|0))|0);
    __THREW__ = 0;
    $47 = (invoke_iiiii(537,($storemerge|0),($$1|0),($44|0),($save_state|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $$lcssa = $46;
     label = 22;
     break;
    }
    $50 = ($46|0)==(0|0);
    if (!($50)) {
     __THREW__ = 0;
     (invoke_ii(474,($46|0))|0);
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      label = 21;
      break;
     }
    }
    if ((($47|0) == 0)) {
     $62 = (($$1) + 1|0);
     $$2 = $62;
    } else if ((($47|0) == -1)) {
     $$1$lcssa121 = $$1;
     label = 28;
     break;
    } else if ((($47|0) == -2)) {
     $$1$lcssa122 = $$1;
     label = 29;
     break;
    } else {
     $63 = (($$1) + ($47)|0);
     $$2 = $63;
    }
    $64 = HEAP32[$to_nxt>>2]|0;
    $65 = (($64) + 4|0);
    $$1 = $$2;$storemerge = $65;
   }
   if ((label|0) == 21) {
    $53 = ___cxa_find_matching_catch(0|0)|0;
    $54 = tempRet0;
    ___clang_call_terminate($53);
    // unreachable;
   }
   else if ((label|0) == 22) {
    $55 = ___cxa_find_matching_catch()|0;
    $56 = tempRet0;
    $57 = ($$lcssa|0)==(0|0);
    if (!($57)) {
     __THREW__ = 0;
     (invoke_ii(474,($$lcssa|0))|0);
     $58 = __THREW__; __THREW__ = 0;
     $59 = $58&1;
     if ($59) {
      $60 = ___cxa_find_matching_catch(0|0)|0;
      $61 = tempRet0;
      ___clang_call_terminate($60);
      // unreachable;
     }
    }
    ___resumeException($55|0);
    // unreachable;
   }
   else if ((label|0) == 28) {
    HEAP32[$frm_nxt>>2] = $$1$lcssa121;
    $$0 = 2;
    break;
   }
   else if ((label|0) == 29) {
    HEAP32[$frm_nxt>>2] = $$1$lcssa122;
    $$0 = 1;
    break;
   }
   else if ((label|0) == 32) {
    HEAP32[$frm_nxt>>2] = $$1$lcssa;
    $not$3 = ($$1$lcssa|0)!=($frm_end|0);
    $66 = $not$3&1;
    $$0 = $66;
    break;
   }
  }
  else if ((label|0) == 34) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $98 = $$pre;
   label = 51;
  }
  else if ((label|0) == 39) {
   $79 = ___cxa_find_matching_catch(0|0)|0;
   $80 = tempRet0;
   ___clang_call_terminate($79);
   // unreachable;
  }
  else if ((label|0) == 40) {
   $81 = ___cxa_find_matching_catch()|0;
   $82 = tempRet0;
   $83 = ($$lcssa154|0)==(0|0);
   if (!($83)) {
    __THREW__ = 0;
    (invoke_ii(474,($$lcssa154|0))|0);
    $84 = __THREW__; __THREW__ = 0;
    $85 = $84&1;
    if ($85) {
     $86 = ___cxa_find_matching_catch(0|0)|0;
     $87 = tempRet0;
     ___clang_call_terminate($86);
     // unreachable;
    }
   }
   ___resumeException($81|0);
   // unreachable;
  }
  else if ((label|0) == 50) {
   $98 = $$01$lcssa;
   label = 51;
  }
  else if ((label|0) == 52) {
   $$0 = 2;
  }
 } while(0);
 if ((label|0) == 51) {
  $not$ = ($98|0)!=($frm_end|0);
  $99 = $not$&1;
  $$0 = $99;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$st,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n$0 = 0, $p$0 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp;
 HEAP32[$to_nxt>>2] = $to;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 __THREW__ = 0;
 $3 = (invoke_iiii(535,($tmp|0),0,($st|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $11 = ___cxa_find_matching_catch()|0;
  $12 = tempRet0;
  $13 = ($2|0)==(0|0);
  if (!($13)) {
   __THREW__ = 0;
   (invoke_ii(474,($2|0))|0);
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $16 = ___cxa_find_matching_catch(0|0)|0;
    $17 = tempRet0;
    ___clang_call_terminate($16);
    // unreachable;
   }
  }
  ___resumeException($11|0);
  // unreachable;
 }
 $6 = ($2|0)==(0|0);
 if (!($6)) {
  __THREW__ = 0;
  (invoke_ii(474,($2|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if ($8) {
   $9 = ___cxa_find_matching_catch(0|0)|0;
   $10 = tempRet0;
   ___clang_call_terminate($9);
   // unreachable;
  }
 }
 if ((($3|0) == 0) | (($3|0) == -1)) {
  $$0 = 2;
 } else {
  $18 = (($3) + -1)|0;
  $19 = HEAP32[$to_nxt>>2]|0;
  $20 = $to_end;
  $21 = $19;
  $22 = (($20) - ($21))|0;
  $23 = ($18>>>0)>($22>>>0);
  if ($23) {
   $$0 = 1;
  } else {
   $n$0 = $18;$p$0 = $tmp;
   while(1) {
    $24 = ($n$0|0)==(0);
    if ($24) {
     break;
    }
    $25 = (($p$0) + 1|0);
    $26 = HEAP8[$p$0>>0]|0;
    $27 = HEAP32[$to_nxt>>2]|0;
    $28 = (($27) + 1|0);
    HEAP32[$to_nxt>>2] = $28;
    HEAP8[$27>>0] = $26;
    $29 = (($n$0) + -1)|0;
    $n$0 = $29;$p$0 = $25;
   }
   $$0 = 0;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 __THREW__ = 0;
 $2 = (invoke_ii(474,($1|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 16;
  } else {
   __THREW__ = 0;
   $5 = (invoke_iiii(538,(0|0),(0|0),4)|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if ($7) {
    $13 = ___cxa_find_matching_catch(0|0)|0;
    $14 = tempRet0;
    $15 = ($2|0)==(0|0);
    if ($15) {
     $eh$lpad$body$indexZ2D = $13;
     break;
    }
    __THREW__ = 0;
    (invoke_ii(474,($2|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     $eh$lpad$body$indexZ2D = $13;
     break;
    }
    $18 = ___cxa_find_matching_catch(0|0)|0;
    $19 = tempRet0;
    ___clang_call_terminate($18);
    // unreachable;
   }
   $8 = ($2|0)==(0|0);
   if (!($8)) {
    __THREW__ = 0;
    (invoke_ii(474,($2|0))|0);
    $9 = __THREW__; __THREW__ = 0;
    $10 = $9&1;
    if ($10) {
     $11 = ___cxa_find_matching_catch(0|0)|0;
     $12 = tempRet0;
     ___clang_call_terminate($11);
     // unreachable;
    }
   }
   $20 = ($5|0)==(0);
   if ($20) {
    $21 = HEAP32[$0>>2]|0;
    $22 = ($21|0)==(0|0);
    if ($22) {
     $$0 = 1;
    } else {
     __THREW__ = 0;
     $23 = (invoke_ii(474,($21|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 16;
      break;
     }
     $26 = ($23|0)==(0|0);
     if ($26) {
      $$0 = 0;
     } else {
      __THREW__ = 0;
      (invoke_ii(474,($23|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       $29 = ___cxa_find_matching_catch(0|0)|0;
       $30 = tempRet0;
       ___clang_call_terminate($29);
       // unreachable;
      } else {
       $$0 = 0;
      }
     }
    }
   } else {
    $$0 = -1;
   }
   return ($$0|0);
  }
 } while(0);
 if ((label|0) == 16) {
  $31 = ___cxa_find_matching_catch(0|0)|0;
  $32 = tempRet0;
  $eh$lpad$body$indexZ2D = $31;
 }
 ___clang_call_terminate($eh$lpad$body$indexZ2D);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$st,$frm,$frm_end,$mx) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $$01 = 0, $$1 = 0, $$lcssa = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0 = 0, $nbytes$0$lcssa = 0, $nbytes$1 = 0, $nwchar_t$0 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $frm_end;
 $1 = (($this) + 8|0);
 $$01 = $frm;$nbytes$0 = 0;$nwchar_t$0 = 0;
 while(1) {
  $2 = ($nwchar_t$0>>>0)>=($mx>>>0);
  $3 = ($$01|0)==($frm_end|0);
  $or$cond = $3 | $2;
  if ($or$cond) {
   $nbytes$0$lcssa = $nbytes$0;
   label = 15;
   break;
  }
  $4 = $$01;
  $5 = (($0) - ($4))|0;
  $6 = HEAP32[$1>>2]|0;
  $7 = (_uselocale(($6|0))|0);
  __THREW__ = 0;
  $8 = (invoke_iiii(539,($$01|0),($5|0),($st|0))|0);
  $9 = __THREW__; __THREW__ = 0;
  $10 = $9&1;
  if ($10) {
   $$lcssa = $7;
   label = 7;
   break;
  }
  $11 = ($7|0)==(0|0);
  if (!($11)) {
   __THREW__ = 0;
   (invoke_ii(474,($7|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    label = 6;
    break;
   }
  }
  if ((($8|0) == 0)) {
   $23 = (($$01) + 1|0);
   $$1 = $23;$$pn = 1;
  } else if ((($8|0) == -2) | (($8|0) == -1)) {
   $nbytes$0$lcssa = $nbytes$0;
   label = 15;
   break;
  } else {
   $24 = (($$01) + ($8)|0);
   $$1 = $24;$$pn = $8;
  }
  $nbytes$1 = (($$pn) + ($nbytes$0))|0;
  $25 = (($nwchar_t$0) + 1)|0;
  $$01 = $$1;$nbytes$0 = $nbytes$1;$nwchar_t$0 = $25;
 }
 if ((label|0) == 6) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 else if ((label|0) == 7) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  $18 = ($$lcssa|0)==(0|0);
  if (!($18)) {
   __THREW__ = 0;
   (invoke_ii(474,($$lcssa|0))|0);
   $19 = __THREW__; __THREW__ = 0;
   $20 = $19&1;
   if ($20) {
    $21 = ___cxa_find_matching_catch(0|0)|0;
    $22 = tempRet0;
    ___clang_call_terminate($21);
    // unreachable;
   }
  }
  ___resumeException($16|0);
  // unreachable;
 }
 else if ((label|0) == 15) {
  return ($nbytes$0$lcssa|0);
 }
 return (0)|0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $11 = 1;
 } else {
  __THREW__ = 0;
  $3 = (invoke_ii(474,($1|0))|0);
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if ($5) {
   $12 = ___cxa_find_matching_catch(0|0)|0;
   $13 = tempRet0;
   ___clang_call_terminate($12);
   // unreachable;
  }
  $6 = ($3|0)==(0|0);
  if ($6) {
   $11 = 4;
  } else {
   __THREW__ = 0;
   (invoke_ii(474,($3|0))|0);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if ($8) {
    $9 = ___cxa_find_matching_catch(0|0)|0;
    $10 = tempRet0;
    ___clang_call_terminate($9);
    // unreachable;
   } else {
    $11 = 4;
   }
  }
 }
 return ($11|0);
}
function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIcEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((7192 + 8|0));
 $2 = (($this) + 8|0);
 HEAP8[$2>>0] = 46;
 $3 = (($this) + 9|0);
 HEAP8[$3>>0] = 44;
 $4 = (($this) + 12|0);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $5 = (($4) + ($__i$0$i$i<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $6;
 }
 return;
}
function __ZNSt3__18numpunctIwEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((7232 + 8|0));
 $2 = (($this) + 8|0);
 HEAP32[$2>>2] = 46;
 $3 = (($this) + 12|0);
 HEAP32[$3>>2] = 44;
 $4 = (($this) + 16|0);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $5 = (($4) + ($__i$0$i$i<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $6;
 }
 return;
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((7192 + 8|0));
 $0 = (($this) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((7232 + 8|0));
 $0 = (($this) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 9|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,7272,4);
 return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(7280)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,7280,$0);
 return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,7304,5);
 return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(7312)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,7312,$0);
 return;
}
function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($iob) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 if ((($2|0) == 64)) {
  $$0 = 8;
 } else if ((($2|0) == 0)) {
  $$0 = 0;
 } else if ((($2|0) == 8)) {
  $$0 = 16;
 } else {
  $$0 = 10;
 }
 return ($$0|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7344>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7344|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[14544>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((14544|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 14376;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((14376 + 168|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((14544|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(540,(14376|0),(14552|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(540,(((14376 + 12|0))|0),(14560|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      (invoke_iii(540,(((14376 + 24|0))|0),(14568|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if (!($18)) {
       __THREW__ = 0;
       (invoke_iii(540,(((14376 + 36|0))|0),(14576|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        __THREW__ = 0;
        (invoke_iii(540,(((14376 + 48|0))|0),(14592|0))|0);
        $21 = __THREW__; __THREW__ = 0;
        $22 = $21&1;
        if (!($22)) {
         __THREW__ = 0;
         (invoke_iii(540,(((14376 + 60|0))|0),(14608|0))|0);
         $23 = __THREW__; __THREW__ = 0;
         $24 = $23&1;
         if (!($24)) {
          __THREW__ = 0;
          (invoke_iii(540,(((14376 + 72|0))|0),(14616|0))|0);
          $25 = __THREW__; __THREW__ = 0;
          $26 = $25&1;
          if (!($26)) {
           __THREW__ = 0;
           (invoke_iii(540,(((14376 + 84|0))|0),(14632|0))|0);
           $27 = __THREW__; __THREW__ = 0;
           $28 = $27&1;
           if (!($28)) {
            __THREW__ = 0;
            (invoke_iii(540,(((14376 + 96|0))|0),(14640|0))|0);
            $29 = __THREW__; __THREW__ = 0;
            $30 = $29&1;
            if (!($30)) {
             __THREW__ = 0;
             (invoke_iii(540,(((14376 + 108|0))|0),(14648|0))|0);
             $31 = __THREW__; __THREW__ = 0;
             $32 = $31&1;
             if (!($32)) {
              __THREW__ = 0;
              (invoke_iii(540,(((14376 + 120|0))|0),(14656|0))|0);
              $33 = __THREW__; __THREW__ = 0;
              $34 = $33&1;
              if (!($34)) {
               __THREW__ = 0;
               (invoke_iii(540,(((14376 + 132|0))|0),(14664|0))|0);
               $35 = __THREW__; __THREW__ = 0;
               $36 = $35&1;
               if (!($36)) {
                __THREW__ = 0;
                (invoke_iii(540,(((14376 + 144|0))|0),(14672|0))|0);
                $37 = __THREW__; __THREW__ = 0;
                $38 = $37&1;
                if (!($38)) {
                 __THREW__ = 0;
                 (invoke_iii(540,(((14376 + 156|0))|0),(14680|0))|0);
                 $39 = __THREW__; __THREW__ = 0;
                 $40 = $39&1;
                 if (!($40)) {
                  HEAP32[7336>>2] = 14376;
                  ___cxa_guard_release((7344|0));
                  break;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $42 = ___cxa_find_matching_catch()|0;
    $43 = tempRet0;
    ___cxa_guard_abort((7344|0));
    ___resumeException($42|0);
    // unreachable;
   }
  }
 } while(0);
 $41 = HEAP32[7336>>2]|0;
 return ($41|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7360>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7360|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[14008>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((14008|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 13840;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((13840 + 168|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((14008|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(541,(13840|0),(14016|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(541,(((13840 + 12|0))|0),(14048|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      (invoke_iii(541,(((13840 + 24|0))|0),(14080|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if (!($18)) {
       __THREW__ = 0;
       (invoke_iii(541,(((13840 + 36|0))|0),(14112|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        __THREW__ = 0;
        (invoke_iii(541,(((13840 + 48|0))|0),(14152|0))|0);
        $21 = __THREW__; __THREW__ = 0;
        $22 = $21&1;
        if (!($22)) {
         __THREW__ = 0;
         (invoke_iii(541,(((13840 + 60|0))|0),(14192|0))|0);
         $23 = __THREW__; __THREW__ = 0;
         $24 = $23&1;
         if (!($24)) {
          __THREW__ = 0;
          (invoke_iii(541,(((13840 + 72|0))|0),(14224|0))|0);
          $25 = __THREW__; __THREW__ = 0;
          $26 = $25&1;
          if (!($26)) {
           __THREW__ = 0;
           (invoke_iii(541,(((13840 + 84|0))|0),(14264|0))|0);
           $27 = __THREW__; __THREW__ = 0;
           $28 = $27&1;
           if (!($28)) {
            __THREW__ = 0;
            (invoke_iii(541,(((13840 + 96|0))|0),(14280|0))|0);
            $29 = __THREW__; __THREW__ = 0;
            $30 = $29&1;
            if (!($30)) {
             __THREW__ = 0;
             (invoke_iii(541,(((13840 + 108|0))|0),(14296|0))|0);
             $31 = __THREW__; __THREW__ = 0;
             $32 = $31&1;
             if (!($32)) {
              __THREW__ = 0;
              (invoke_iii(541,(((13840 + 120|0))|0),(14312|0))|0);
              $33 = __THREW__; __THREW__ = 0;
              $34 = $33&1;
              if (!($34)) {
               __THREW__ = 0;
               (invoke_iii(541,(((13840 + 132|0))|0),(14328|0))|0);
               $35 = __THREW__; __THREW__ = 0;
               $36 = $35&1;
               if (!($36)) {
                __THREW__ = 0;
                (invoke_iii(541,(((13840 + 144|0))|0),(14344|0))|0);
                $37 = __THREW__; __THREW__ = 0;
                $38 = $37&1;
                if (!($38)) {
                 __THREW__ = 0;
                 (invoke_iii(541,(((13840 + 156|0))|0),(14360|0))|0);
                 $39 = __THREW__; __THREW__ = 0;
                 $40 = $39&1;
                 if (!($40)) {
                  HEAP32[7352>>2] = 13840;
                  ___cxa_guard_release((7360|0));
                  break;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $42 = ___cxa_find_matching_catch()|0;
    $43 = tempRet0;
    ___cxa_guard_abort((7360|0));
    ___resumeException($42|0);
    // unreachable;
   }
  }
 } while(0);
 $41 = HEAP32[7352>>2]|0;
 return ($41|0);
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7376>>0]|0;
 $1 = ($0<<24>>24)==(0);
 L1: do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7376|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[13616>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((13616|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 13328;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((13328 + 288|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((13616|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(540,(13328|0),(13624|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    do {
     if (!($14)) {
      __THREW__ = 0;
      (invoke_iii(540,(((13328 + 12|0))|0),(13632|0))|0);
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if (!($16)) {
       __THREW__ = 0;
       (invoke_iii(540,(((13328 + 24|0))|0),(13648|0))|0);
       $17 = __THREW__; __THREW__ = 0;
       $18 = $17&1;
       if (!($18)) {
        __THREW__ = 0;
        (invoke_iii(540,(((13328 + 36|0))|0),(13656|0))|0);
        $19 = __THREW__; __THREW__ = 0;
        $20 = $19&1;
        if (!($20)) {
         __THREW__ = 0;
         (invoke_iii(540,(((13328 + 48|0))|0),(13664|0))|0);
         $21 = __THREW__; __THREW__ = 0;
         $22 = $21&1;
         if (!($22)) {
          __THREW__ = 0;
          (invoke_iii(540,(((13328 + 60|0))|0),(13672|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          if (!($24)) {
           __THREW__ = 0;
           (invoke_iii(540,(((13328 + 72|0))|0),(13680|0))|0);
           $25 = __THREW__; __THREW__ = 0;
           $26 = $25&1;
           if (!($26)) {
            __THREW__ = 0;
            (invoke_iii(540,(((13328 + 84|0))|0),(13688|0))|0);
            $27 = __THREW__; __THREW__ = 0;
            $28 = $27&1;
            if (!($28)) {
             __THREW__ = 0;
             (invoke_iii(540,(((13328 + 96|0))|0),(13696|0))|0);
             $29 = __THREW__; __THREW__ = 0;
             $30 = $29&1;
             if (!($30)) {
              __THREW__ = 0;
              (invoke_iii(540,(((13328 + 108|0))|0),(13712|0))|0);
              $31 = __THREW__; __THREW__ = 0;
              $32 = $31&1;
              if (!($32)) {
               __THREW__ = 0;
               (invoke_iii(540,(((13328 + 120|0))|0),(13720|0))|0);
               $33 = __THREW__; __THREW__ = 0;
               $34 = $33&1;
               if (!($34)) {
                __THREW__ = 0;
                (invoke_iii(540,(((13328 + 132|0))|0),(13736|0))|0);
                $35 = __THREW__; __THREW__ = 0;
                $36 = $35&1;
                if (!($36)) {
                 __THREW__ = 0;
                 (invoke_iii(540,(((13328 + 144|0))|0),(13752|0))|0);
                 $37 = __THREW__; __THREW__ = 0;
                 $38 = $37&1;
                 if (!($38)) {
                  __THREW__ = 0;
                  (invoke_iii(540,(((13328 + 156|0))|0),(13760|0))|0);
                  $39 = __THREW__; __THREW__ = 0;
                  $40 = $39&1;
                  if (!($40)) {
                   __THREW__ = 0;
                   (invoke_iii(540,(((13328 + 168|0))|0),(13768|0))|0);
                   $41 = __THREW__; __THREW__ = 0;
                   $42 = $41&1;
                   if (!($42)) {
                    __THREW__ = 0;
                    (invoke_iii(540,(((13328 + 180|0))|0),(13776|0))|0);
                    $43 = __THREW__; __THREW__ = 0;
                    $44 = $43&1;
                    if ($44) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13328 + 192|0))|0),(13664|0))|0);
                    $45 = __THREW__; __THREW__ = 0;
                    $46 = $45&1;
                    if ($46) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13328 + 204|0))|0),(13784|0))|0);
                    $47 = __THREW__; __THREW__ = 0;
                    $48 = $47&1;
                    if ($48) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13328 + 216|0))|0),(13792|0))|0);
                    $49 = __THREW__; __THREW__ = 0;
                    $50 = $49&1;
                    if ($50) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13328 + 228|0))|0),(13800|0))|0);
                    $51 = __THREW__; __THREW__ = 0;
                    $52 = $51&1;
                    if ($52) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13328 + 240|0))|0),(13808|0))|0);
                    $53 = __THREW__; __THREW__ = 0;
                    $54 = $53&1;
                    if ($54) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13328 + 252|0))|0),(13816|0))|0);
                    $55 = __THREW__; __THREW__ = 0;
                    $56 = $55&1;
                    if ($56) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13328 + 264|0))|0),(13824|0))|0);
                    $57 = __THREW__; __THREW__ = 0;
                    $58 = $57&1;
                    if ($58) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13328 + 276|0))|0),(13832|0))|0);
                    $59 = __THREW__; __THREW__ = 0;
                    $60 = $59&1;
                    if ($60) {
                     break;
                    }
                    HEAP32[7368>>2] = 13328;
                    ___cxa_guard_release((7376|0));
                    break L1;
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    $62 = ___cxa_find_matching_catch()|0;
    $63 = tempRet0;
    ___cxa_guard_abort((7376|0));
    ___resumeException($62|0);
    // unreachable;
   }
  }
 } while(0);
 $61 = HEAP32[7368>>2]|0;
 return ($61|0);
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7392>>0]|0;
 $1 = ($0<<24>>24)==(0);
 L1: do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7392|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[12776>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((12776|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 12488;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((12488 + 288|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((12776|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(541,(12488|0),(12784|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    do {
     if (!($14)) {
      __THREW__ = 0;
      (invoke_iii(541,(((12488 + 12|0))|0),(12816|0))|0);
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if (!($16)) {
       __THREW__ = 0;
       (invoke_iii(541,(((12488 + 24|0))|0),(12856|0))|0);
       $17 = __THREW__; __THREW__ = 0;
       $18 = $17&1;
       if (!($18)) {
        __THREW__ = 0;
        (invoke_iii(541,(((12488 + 36|0))|0),(12880|0))|0);
        $19 = __THREW__; __THREW__ = 0;
        $20 = $19&1;
        if (!($20)) {
         __THREW__ = 0;
         (invoke_iii(541,(((12488 + 48|0))|0),(12904|0))|0);
         $21 = __THREW__; __THREW__ = 0;
         $22 = $21&1;
         if (!($22)) {
          __THREW__ = 0;
          (invoke_iii(541,(((12488 + 60|0))|0),(12920|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          if (!($24)) {
           __THREW__ = 0;
           (invoke_iii(541,(((12488 + 72|0))|0),(12944|0))|0);
           $25 = __THREW__; __THREW__ = 0;
           $26 = $25&1;
           if (!($26)) {
            __THREW__ = 0;
            (invoke_iii(541,(((12488 + 84|0))|0),(12968|0))|0);
            $27 = __THREW__; __THREW__ = 0;
            $28 = $27&1;
            if (!($28)) {
             __THREW__ = 0;
             (invoke_iii(541,(((12488 + 96|0))|0),(13000|0))|0);
             $29 = __THREW__; __THREW__ = 0;
             $30 = $29&1;
             if (!($30)) {
              __THREW__ = 0;
              (invoke_iii(541,(((12488 + 108|0))|0),(13040|0))|0);
              $31 = __THREW__; __THREW__ = 0;
              $32 = $31&1;
              if (!($32)) {
               __THREW__ = 0;
               (invoke_iii(541,(((12488 + 120|0))|0),(13072|0))|0);
               $33 = __THREW__; __THREW__ = 0;
               $34 = $33&1;
               if (!($34)) {
                __THREW__ = 0;
                (invoke_iii(541,(((12488 + 132|0))|0),(13112|0))|0);
                $35 = __THREW__; __THREW__ = 0;
                $36 = $35&1;
                if (!($36)) {
                 __THREW__ = 0;
                 (invoke_iii(541,(((12488 + 144|0))|0),(13152|0))|0);
                 $37 = __THREW__; __THREW__ = 0;
                 $38 = $37&1;
                 if (!($38)) {
                  __THREW__ = 0;
                  (invoke_iii(541,(((12488 + 156|0))|0),(13168|0))|0);
                  $39 = __THREW__; __THREW__ = 0;
                  $40 = $39&1;
                  if (!($40)) {
                   __THREW__ = 0;
                   (invoke_iii(541,(((12488 + 168|0))|0),(13184|0))|0);
                   $41 = __THREW__; __THREW__ = 0;
                   $42 = $41&1;
                   if (!($42)) {
                    __THREW__ = 0;
                    (invoke_iii(541,(((12488 + 180|0))|0),(13200|0))|0);
                    $43 = __THREW__; __THREW__ = 0;
                    $44 = $43&1;
                    if ($44) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12488 + 192|0))|0),(12904|0))|0);
                    $45 = __THREW__; __THREW__ = 0;
                    $46 = $45&1;
                    if ($46) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12488 + 204|0))|0),(13216|0))|0);
                    $47 = __THREW__; __THREW__ = 0;
                    $48 = $47&1;
                    if ($48) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12488 + 216|0))|0),(13232|0))|0);
                    $49 = __THREW__; __THREW__ = 0;
                    $50 = $49&1;
                    if ($50) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12488 + 228|0))|0),(13248|0))|0);
                    $51 = __THREW__; __THREW__ = 0;
                    $52 = $51&1;
                    if ($52) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12488 + 240|0))|0),(13264|0))|0);
                    $53 = __THREW__; __THREW__ = 0;
                    $54 = $53&1;
                    if ($54) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12488 + 252|0))|0),(13280|0))|0);
                    $55 = __THREW__; __THREW__ = 0;
                    $56 = $55&1;
                    if ($56) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12488 + 264|0))|0),(13296|0))|0);
                    $57 = __THREW__; __THREW__ = 0;
                    $58 = $57&1;
                    if ($58) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12488 + 276|0))|0),(13312|0))|0);
                    $59 = __THREW__; __THREW__ = 0;
                    $60 = $59&1;
                    if ($60) {
                     break;
                    }
                    HEAP32[7384>>2] = 12488;
                    ___cxa_guard_release((7392|0));
                    break L1;
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    $62 = ___cxa_find_matching_catch()|0;
    $63 = tempRet0;
    ___cxa_guard_abort((7392|0));
    ___resumeException($62|0);
    // unreachable;
   }
  }
 } while(0);
 $61 = HEAP32[7384>>2]|0;
 return ($61|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7408>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7408|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[12464>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((12464|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 12176;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((12176 + 288|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((12464|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(540,(12176|0),(12472|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(540,(((12176 + 12|0))|0),(12480|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      HEAP32[7400>>2] = 12176;
      ___cxa_guard_release((7408|0));
      break;
     }
    }
    $18 = ___cxa_find_matching_catch()|0;
    $19 = tempRet0;
    ___cxa_guard_abort((7408|0));
    ___resumeException($18|0);
    // unreachable;
   }
  }
 } while(0);
 $17 = HEAP32[7400>>2]|0;
 return ($17|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7424>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7424|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[12136>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((12136|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 11848;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((11848 + 288|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((12136|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(541,(11848|0),(12144|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(541,(((11848 + 12|0))|0),(12160|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      HEAP32[7416>>2] = 11848;
      ___cxa_guard_release((7424|0));
      break;
     }
    }
    $18 = ___cxa_find_matching_catch()|0;
    $19 = tempRet0;
    ___cxa_guard_abort((7424|0));
    ___resumeException($18|0);
    // unreachable;
   }
  }
 } while(0);
 $17 = HEAP32[7416>>2]|0;
 return ($17|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7448>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7448|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(495,(7432|0),(7456|0),8);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((7448|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((7448|0));
     break;
    }
   }
  }
 } while(0);
 return (7432|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7488>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7488|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(542,(7496|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(543,(7472|0),(7496|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((7488|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((7488|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (7472|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7552>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7552|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(495,(7536|0),(7560|0),8);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((7552|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((7552|0));
     break;
    }
   }
  }
 } while(0);
 return (7536|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7592>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7592|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(542,(7600|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(543,(7576|0),(7600|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((7592|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((7592|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (7576|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7656>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7656|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(495,(7640|0),(7664|0),20);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((7656|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((7656|0));
     break;
    }
   }
  }
 } while(0);
 return (7640|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7704>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7704|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(542,(7712|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(543,(7688|0),(7712|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((7704|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((7704|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (7688|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7816>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7816|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(495,(7800|0),(7824|0),11);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((7816|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((7816|0));
     break;
    }
   }
  }
 } while(0);
 return (7800|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7856>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7856|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(542,(7864|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(543,(7840|0),(7864|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((7856|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((7856|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (7840|0);
}
function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((7112 + 8|0));
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 __THREW__ = 0;
 $2 = (invoke_i(459)|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if (!($4)) {
   $5 = ($1|0)==($2|0);
   if (!($5)) {
    $6 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi(472,($6|0));
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     break;
    }
   }
   return;
  }
 } while(0);
 $9 = ___cxa_find_matching_catch(0|0)|0;
 $10 = tempRet0;
 ___clang_call_terminate($9);
 // unreachable;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$lcssa71 = 0, $$041 = 0, $$index = 0, $$index10 = 0, $$lcssa = 0, $$lcssa77 = 0, $$pre$i$i$i = 0, $$pre$i$i$i12 = 0, $$pre$i2$i$i16 = 0, $$pre$i2$i$i16$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0;
 var $__consume$0$off0 = 0, $__consume$0$off0$lcssa = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0 = 0, $__ky1$0 = 0, $__ky2$0 = 0, $__n_does_match$0 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$2$be = 0, $__n_does_match$3 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$4 = 0, $__n_does_match$5 = 0, $__n_does_match$5$lcssa = 0, $__n_does_match$6 = 0, $__n_might_match$0 = 0;
 var $__n_might_match$0$lcssa = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$4 = 0, $__st$0 = 0, $__st$1 = 0, $__st$2 = 0, $__st$3 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __THREW__ = 0;
   invoke_v(465);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if ($8) {
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    $$index = $9;$$index10 = $10;
   } else {
    $17 = 0;$__status$0 = 0;
    label = 11;
   }
  } else {
   $17 = $5;$__status$0 = $5;
   label = 11;
  }
 } else {
  $17 = 0;$__status$0 = $__statbuf;
  label = 11;
 }
 if ((label|0) == 11) {
  $__ky$0 = $__kb;$__n_does_match$0 = 0;$__n_might_match$0 = $3;$__st$0 = $__status$0;
  while(1) {
   $19 = ($__ky$0|0)==($__ke|0);
   if ($19) {
    $__n_does_match$0$lcssa = $__n_does_match$0;$__n_might_match$0$lcssa = $__n_might_match$0;
    break;
   }
   $20 = HEAP8[$__ky$0>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $25 = $20&255;
    $26 = $25 >>> 1;
    $27 = $26;
   } else {
    $23 = (($__ky$0) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $27 = $24;
   }
   $28 = ($27|0)==(0);
   if ($28) {
    HEAP8[$__st$0>>0] = 2;
    $29 = (($__n_might_match$0) + -1)|0;
    $30 = (($__n_does_match$0) + 1)|0;
    $__n_does_match$1 = $30;$__n_might_match$1 = $29;
   } else {
    HEAP8[$__st$0>>0] = 1;
    $__n_does_match$1 = $__n_does_match$0;$__n_might_match$1 = $__n_might_match$0;
   }
   $31 = (($__ky$0) + 12|0);
   $32 = (($__st$0) + 1|0);
   $__ky$0 = $31;$__n_does_match$0 = $__n_does_match$1;$__n_might_match$0 = $__n_might_match$1;$__st$0 = $32;
  }
  $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
  L19: while(1) {
   $33 = HEAP32[$__b>>2]|0;
   $34 = ($33|0)==(0|0);
   do {
    if ($34) {
     $47 = 0;
    } else {
     $35 = (($33) + 12|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = (($33) + 16|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ($36|0)==($38|0);
     if ($39) {
      $40 = HEAP32[$33>>2]|0;
      $41 = (($40) + 36|0);
      $42 = HEAP32[$41>>2]|0;
      __THREW__ = 0;
      $43 = (invoke_ii($42|0,($33|0))|0);
      $44 = __THREW__; __THREW__ = 0;
      $45 = $44&1;
      if ($45) {
       label = 6;
       break L19;
      }
      $46 = ($43|0)==(-1);
      if ($46) {
       HEAP32[$__b>>2] = 0;
       $47 = 0;
       break;
      } else {
       $$pre$i$i$i = HEAP32[$__b>>2]|0;
       $47 = $$pre$i$i$i;
       break;
      }
     } else {
      $47 = $33;
     }
    }
   } while(0);
   $48 = ($47|0)==(0|0);
   $49 = HEAP32[$__e>>2]|0;
   $50 = ($49|0)==(0|0);
   if ($50) {
    $$pre$i2$i$i16 = 0;
   } else {
    $51 = (($49) + 12|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = (($49) + 16|0);
    $54 = HEAP32[$53>>2]|0;
    $55 = ($52|0)==($54|0);
    if ($55) {
     $56 = HEAP32[$49>>2]|0;
     $57 = (($56) + 36|0);
     $58 = HEAP32[$57>>2]|0;
     __THREW__ = 0;
     $59 = (invoke_ii($58|0,($49|0))|0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 6;
      break;
     }
     $62 = ($59|0)==(-1);
     if ($62) {
      HEAP32[$__e>>2] = 0;
      $$pre$i2$i$i16 = 0;
     } else {
      $$pre$i2$i$i16 = $49;
     }
    } else {
     $$pre$i2$i$i16 = $49;
    }
   }
   $63 = ($$pre$i2$i$i16|0)==(0|0);
   $tmp$i$i = $48 ^ $63;
   $64 = ($__n_might_match$2|0)!=(0);
   $$ = $64 & $tmp$i$i;
   $65 = HEAP32[$__b>>2]|0;
   if (!($$)) {
    $$lcssa = $63;$$lcssa77 = $65;$$pre$i2$i$i16$lcssa = $$pre$i2$i$i16;
    label = 70;
    break;
   }
   $66 = (($65) + 12|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = (($65) + 16|0);
   $69 = HEAP32[$68>>2]|0;
   $70 = ($67|0)==($69|0);
   if ($70) {
    $71 = HEAP32[$65>>2]|0;
    $72 = (($71) + 36|0);
    $73 = HEAP32[$72>>2]|0;
    __THREW__ = 0;
    $74 = (invoke_ii($73|0,($65|0))|0);
    $75 = __THREW__; __THREW__ = 0;
    $76 = $75&1;
    if ($76) {
     label = 6;
     break;
    } else {
     $$0$i$i = $74;
    }
   } else {
    $77 = HEAP8[$67>>0]|0;
    $78 = $77&255;
    $$0$i$i = $78;
   }
   $79 = $$0$i$i&255;
   if ($__case_sensitive) {
    $__c$0 = $79;
   } else {
    $80 = HEAP32[$__ct>>2]|0;
    $81 = (($80) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    __THREW__ = 0;
    $83 = (invoke_iii($82|0,($__ct|0),($79|0))|0);
    $84 = __THREW__; __THREW__ = 0;
    $85 = $84&1;
    if ($85) {
     label = 6;
     break;
    } else {
     $__c$0 = $83;
    }
   }
   $86 = (($__indx$0) + 1)|0;
   $__consume$0$off0 = 0;$__ky1$0 = $__kb;$__n_does_match$3 = $__n_does_match$2;$__n_might_match$3 = $__n_might_match$2;$__st$1 = $__status$0;
   while(1) {
    $87 = ($__ky1$0|0)==($__ke|0);
    if ($87) {
     $__consume$0$off0$lcssa = $__consume$0$off0;$__n_does_match$3$lcssa = $__n_does_match$3;$__n_might_match$3$lcssa = $__n_might_match$3;
     break;
    }
    $88 = HEAP8[$__st$1>>0]|0;
    $89 = ($88<<24>>24)==(1);
    do {
     if ($89) {
      $90 = HEAP8[$__ky1$0>>0]|0;
      $91 = $90 & 1;
      $92 = ($91<<24>>24)==(0);
      if ($92) {
       $95 = (($__ky1$0) + 1|0);
       $97 = $95;
      } else {
       $93 = (($__ky1$0) + 8|0);
       $94 = HEAP32[$93>>2]|0;
       $97 = $94;
      }
      $96 = (($97) + ($__indx$0)|0);
      $98 = HEAP8[$96>>0]|0;
      if ($__case_sensitive) {
       $__kc$0 = $98;
      } else {
       $99 = HEAP32[$__ct>>2]|0;
       $100 = (($99) + 12|0);
       $101 = HEAP32[$100>>2]|0;
       __THREW__ = 0;
       $102 = (invoke_iii($101|0,($__ct|0),($98|0))|0);
       $103 = __THREW__; __THREW__ = 0;
       $104 = $103&1;
       if ($104) {
        label = 5;
        break L19;
       } else {
        $__kc$0 = $102;
       }
      }
      $105 = ($__c$0<<24>>24)==($__kc$0<<24>>24);
      if (!($105)) {
       HEAP8[$__st$1>>0] = 0;
       $117 = (($__n_might_match$3) + -1)|0;
       $__consume$1$off0 = $__consume$0$off0;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $117;
       break;
      }
      $106 = HEAP8[$__ky1$0>>0]|0;
      $107 = $106 & 1;
      $108 = ($107<<24>>24)==(0);
      if ($108) {
       $111 = $106&255;
       $112 = $111 >>> 1;
       $113 = $112;
      } else {
       $109 = (($__ky1$0) + 4|0);
       $110 = HEAP32[$109>>2]|0;
       $113 = $110;
      }
      $114 = ($113|0)==($86|0);
      if ($114) {
       HEAP8[$__st$1>>0] = 2;
       $115 = (($__n_might_match$3) + -1)|0;
       $116 = (($__n_does_match$3) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $116;$__n_might_match$4 = $115;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $__n_might_match$3;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off0;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $__n_might_match$3;
     }
    } while(0);
    $118 = (($__ky1$0) + 12|0);
    $119 = (($__st$1) + 1|0);
    $__consume$0$off0 = $__consume$1$off0;$__ky1$0 = $118;$__n_does_match$3 = $__n_does_match$4;$__n_might_match$3 = $__n_might_match$4;$__st$1 = $119;
   }
   if ($__consume$0$off0$lcssa) {
    $120 = HEAP32[$__b>>2]|0;
    $121 = (($120) + 12|0);
    $122 = HEAP32[$121>>2]|0;
    $123 = (($120) + 16|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = ($122|0)==($124|0);
    if ($125) {
     $126 = HEAP32[$120>>2]|0;
     $127 = (($126) + 40|0);
     $128 = HEAP32[$127>>2]|0;
     __THREW__ = 0;
     (invoke_ii($128|0,($120|0))|0);
     $129 = __THREW__; __THREW__ = 0;
     $130 = $129&1;
     if ($130) {
      label = 6;
      break;
     }
    } else {
     $131 = (($122) + 1|0);
     HEAP32[$121>>2] = $131;
    }
    $132 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
    $133 = ($132>>>0)>(1);
    if ($133) {
     $__ky2$0 = $__kb;$__n_does_match$5 = $__n_does_match$3$lcssa;$__st$2 = $__status$0;
     while(1) {
      $134 = ($__ky2$0|0)==($__ke|0);
      if ($134) {
       $__n_does_match$5$lcssa = $__n_does_match$5;
       break;
      }
      $135 = HEAP8[$__st$2>>0]|0;
      $136 = ($135<<24>>24)==(2);
      if ($136) {
       $137 = HEAP8[$__ky2$0>>0]|0;
       $138 = $137 & 1;
       $139 = ($138<<24>>24)==(0);
       if ($139) {
        $142 = $137&255;
        $143 = $142 >>> 1;
        $144 = $143;
       } else {
        $140 = (($__ky2$0) + 4|0);
        $141 = HEAP32[$140>>2]|0;
        $144 = $141;
       }
       $145 = ($144|0)==($86|0);
       if ($145) {
        $__n_does_match$6 = $__n_does_match$5;
       } else {
        HEAP8[$__st$2>>0] = 0;
        $146 = (($__n_does_match$5) + -1)|0;
        $__n_does_match$6 = $146;
       }
      } else {
       $__n_does_match$6 = $__n_does_match$5;
      }
      $147 = (($__ky2$0) + 12|0);
      $148 = (($__st$2) + 1|0);
      $__ky2$0 = $147;$__n_does_match$5 = $__n_does_match$6;$__st$2 = $148;
     }
     $__n_does_match$2$be = $__n_does_match$5$lcssa;
    } else {
     $__n_does_match$2$be = $__n_does_match$3$lcssa;
    }
   } else {
    $__n_does_match$2$be = $__n_does_match$3$lcssa;
   }
   $__indx$0 = $86;$__n_does_match$2 = $__n_does_match$2$be;$__n_might_match$2 = $__n_might_match$3$lcssa;
  }
  if ((label|0) == 5) {
   $11 = ___cxa_find_matching_catch()|0;
   $12 = tempRet0;
   $lpad$phi$index = $11;$lpad$phi$index3 = $12;
  }
  else if ((label|0) == 6) {
   $13 = ___cxa_find_matching_catch()|0;
   $14 = tempRet0;
   $lpad$phi$index = $13;$lpad$phi$index3 = $14;
  }
  else if ((label|0) == 70) {
   $149 = ($$lcssa77|0)==(0|0);
   do {
    if ($149) {
     $162 = 0;
     label = 76;
    } else {
     $150 = (($$lcssa77) + 12|0);
     $151 = HEAP32[$150>>2]|0;
     $152 = (($$lcssa77) + 16|0);
     $153 = HEAP32[$152>>2]|0;
     $154 = ($151|0)==($153|0);
     if ($154) {
      $155 = HEAP32[$$lcssa77>>2]|0;
      $156 = (($155) + 36|0);
      $157 = HEAP32[$156>>2]|0;
      __THREW__ = 0;
      $158 = (invoke_ii($157|0,($$lcssa77|0))|0);
      $159 = __THREW__; __THREW__ = 0;
      $160 = $159&1;
      if (!($160)) {
       $161 = ($158|0)==(-1);
       if ($161) {
        HEAP32[$__b>>2] = 0;
        $162 = 0;
        label = 76;
        break;
       } else {
        $$pre$i$i$i12 = HEAP32[$__b>>2]|0;
        $162 = $$pre$i$i$i12;
        label = 76;
        break;
       }
      }
     } else {
      $162 = $$lcssa77;
      label = 76;
     }
    }
   } while(0);
   L94: do {
    if ((label|0) == 76) {
     $163 = ($162|0)==(0|0);
     do {
      if ($$lcssa) {
       label = 82;
      } else {
       $164 = (($$pre$i2$i$i16$lcssa) + 12|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = (($$pre$i2$i$i16$lcssa) + 16|0);
       $167 = HEAP32[$166>>2]|0;
       $168 = ($165|0)==($167|0);
       if ($168) {
        $169 = HEAP32[$$pre$i2$i$i16$lcssa>>2]|0;
        $170 = (($169) + 36|0);
        $171 = HEAP32[$170>>2]|0;
        __THREW__ = 0;
        $172 = (invoke_ii($171|0,($$pre$i2$i$i16$lcssa|0))|0);
        $173 = __THREW__; __THREW__ = 0;
        $174 = $173&1;
        if ($174) {
         break L94;
        }
        $175 = ($172|0)==(-1);
        if ($175) {
         HEAP32[$__e>>2] = 0;
         label = 82;
         break;
        }
       }
       if (!($163)) {
        label = 83;
       }
      }
     } while(0);
     if ((label|0) == 82) {
      if ($163) {
       label = 83;
      }
     }
     if ((label|0) == 83) {
      $176 = HEAP32[$__err>>2]|0;
      $177 = $176 | 2;
      HEAP32[$__err>>2] = $177;
     }
     $$0 = $__kb;$__st$3 = $__status$0;
     while(1) {
      $178 = ($$0|0)==($__ke|0);
      if ($178) {
       label = 88;
       break;
      }
      $179 = HEAP8[$__st$3>>0]|0;
      $180 = ($179<<24>>24)==(2);
      if ($180) {
       $$0$lcssa71 = $$0;
       label = 89;
       break;
      }
      $181 = (($$0) + 12|0);
      $182 = (($__st$3) + 1|0);
      $$0 = $181;$__st$3 = $182;
     }
     if ((label|0) == 88) {
      $183 = HEAP32[$__err>>2]|0;
      $184 = $183 | 4;
      HEAP32[$__err>>2] = $184;
      $$041 = $__ke;
     }
     else if ((label|0) == 89) {
      $$041 = $$0$lcssa71;
     }
     $185 = ($17|0)==(0|0);
     _free($17);
     if (!($185)) {
     }
     STACKTOP = sp;return ($$041|0);
    }
   } while(0);
   $15 = ___cxa_find_matching_catch()|0;
   $16 = tempRet0;
   $lpad$phi$index = $15;$lpad$phi$index3 = $16;
  }
  $18 = ($17|0)==(0|0);
  _free($17);
  if ($18) {
   $$index = $lpad$phi$index;$$index10 = $lpad$phi$index3;
  } else {
   $$index = $lpad$phi$index;$$index10 = $lpad$phi$index3;
  }
 }
 ___resumeException($$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(544,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 39;
   } else {
    HEAP32[$__v>>2] = $129;
    $132 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$132,$__err);
    $133 = ($$lcssa|0)==(0|0);
    if ($133) {
     $146 = 0;
    } else {
     $134 = (($$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      __THREW__ = 0;
      $142 = (invoke_ii($141|0,($$lcssa|0))|0);
      $143 = __THREW__; __THREW__ = 0;
      $144 = $143&1;
      if ($144) {
       label = 39;
       break;
      }
      $145 = ($142|0)==(-1);
      if ($145) {
       HEAP32[$__b>>2] = 0;
       $146 = 0;
      } else {
       $146 = $$lcssa;
      }
     } else {
      $146 = $$lcssa;
     }
    }
    $147 = ($146|0)==(0|0);
    $148 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 67;
     } else {
      $149 = (($$pre$i2$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i2$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i2$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i2$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 39;
        break L8;
       }
       $160 = ($157|0)==(-1);
       if ($160) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($147)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($147) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $161 = HEAP32[$__err>>2]|0;
     $162 = $161 | 2;
     HEAP32[$__err>>2] = $162;
    }
    HEAP32[$agg$result>>2] = $146;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0;
 var $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $168 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $168 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $168 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $168;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(545,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = tempRet0;
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 39;
   } else {
    $133 = $__v;
    $134 = $133;
    HEAP32[$134>>2] = $129;
    $135 = (($133) + 4)|0;
    $136 = $135;
    HEAP32[$136>>2] = $130;
    $137 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$137,$__err);
    $138 = ($$lcssa|0)==(0|0);
    if ($138) {
     $151 = 0;
    } else {
     $139 = (($$lcssa) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = (($$lcssa) + 16|0);
     $142 = HEAP32[$141>>2]|0;
     $143 = ($140|0)==($142|0);
     if ($143) {
      $144 = HEAP32[$$lcssa>>2]|0;
      $145 = (($144) + 36|0);
      $146 = HEAP32[$145>>2]|0;
      __THREW__ = 0;
      $147 = (invoke_ii($146|0,($$lcssa|0))|0);
      $148 = __THREW__; __THREW__ = 0;
      $149 = $148&1;
      if ($149) {
       label = 39;
       break;
      }
      $150 = ($147|0)==(-1);
      if ($150) {
       HEAP32[$__b>>2] = 0;
       $151 = 0;
      } else {
       $151 = $$lcssa;
      }
     } else {
      $151 = $$lcssa;
     }
    }
    $152 = ($151|0)==(0|0);
    $153 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($153) {
      label = 67;
     } else {
      $154 = (($$pre$i2$i$i) + 12|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = (($$pre$i2$i$i) + 16|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = ($155|0)==($157|0);
      if ($158) {
       $159 = HEAP32[$$pre$i2$i$i>>2]|0;
       $160 = (($159) + 36|0);
       $161 = HEAP32[$160>>2]|0;
       __THREW__ = 0;
       $162 = (invoke_ii($161|0,($$pre$i2$i$i|0))|0);
       $163 = __THREW__; __THREW__ = 0;
       $164 = $163&1;
       if ($164) {
        label = 39;
        break L8;
       }
       $165 = ($162|0)==(-1);
       if ($165) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($152)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($152) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $166 = HEAP32[$__err>>2]|0;
     $167 = $166 | 2;
     HEAP32[$__err>>2] = $167;
    }
    HEAP32[$agg$result>>2] = $151;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(546,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 39;
   } else {
    HEAP16[$__v>>1] = $129;
    $132 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$132,$__err);
    $133 = ($$lcssa|0)==(0|0);
    if ($133) {
     $146 = 0;
    } else {
     $134 = (($$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      __THREW__ = 0;
      $142 = (invoke_ii($141|0,($$lcssa|0))|0);
      $143 = __THREW__; __THREW__ = 0;
      $144 = $143&1;
      if ($144) {
       label = 39;
       break;
      }
      $145 = ($142|0)==(-1);
      if ($145) {
       HEAP32[$__b>>2] = 0;
       $146 = 0;
      } else {
       $146 = $$lcssa;
      }
     } else {
      $146 = $$lcssa;
     }
    }
    $147 = ($146|0)==(0|0);
    $148 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 67;
     } else {
      $149 = (($$pre$i2$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i2$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i2$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i2$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 39;
        break L8;
       }
       $160 = ($157|0)==(-1);
       if ($160) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($147)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($147) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $161 = HEAP32[$__err>>2]|0;
     $162 = $161 | 2;
     HEAP32[$__err>>2] = $162;
    }
    HEAP32[$agg$result>>2] = $146;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(547,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 39;
   } else {
    HEAP32[$__v>>2] = $129;
    $132 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$132,$__err);
    $133 = ($$lcssa|0)==(0|0);
    if ($133) {
     $146 = 0;
    } else {
     $134 = (($$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      __THREW__ = 0;
      $142 = (invoke_ii($141|0,($$lcssa|0))|0);
      $143 = __THREW__; __THREW__ = 0;
      $144 = $143&1;
      if ($144) {
       label = 39;
       break;
      }
      $145 = ($142|0)==(-1);
      if ($145) {
       HEAP32[$__b>>2] = 0;
       $146 = 0;
      } else {
       $146 = $$lcssa;
      }
     } else {
      $146 = $$lcssa;
     }
    }
    $147 = ($146|0)==(0|0);
    $148 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 67;
     } else {
      $149 = (($$pre$i2$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i2$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i2$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i2$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 39;
        break L8;
       }
       $160 = ($157|0)==(-1);
       if ($160) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($147)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($147) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $161 = HEAP32[$__err>>2]|0;
     $162 = $161 | 2;
     HEAP32[$__err>>2] = $162;
    }
    HEAP32[$agg$result>>2] = $146;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(548,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 39;
   } else {
    HEAP32[$__v>>2] = $129;
    $132 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$132,$__err);
    $133 = ($$lcssa|0)==(0|0);
    if ($133) {
     $146 = 0;
    } else {
     $134 = (($$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      __THREW__ = 0;
      $142 = (invoke_ii($141|0,($$lcssa|0))|0);
      $143 = __THREW__; __THREW__ = 0;
      $144 = $143&1;
      if ($144) {
       label = 39;
       break;
      }
      $145 = ($142|0)==(-1);
      if ($145) {
       HEAP32[$__b>>2] = 0;
       $146 = 0;
      } else {
       $146 = $$lcssa;
      }
     } else {
      $146 = $$lcssa;
     }
    }
    $147 = ($146|0)==(0|0);
    $148 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 67;
     } else {
      $149 = (($$pre$i2$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i2$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i2$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i2$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 39;
        break L8;
       }
       $160 = ($157|0)==(-1);
       if ($160) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($147)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($147) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $161 = HEAP32[$__err>>2]|0;
     $162 = $161 | 2;
     HEAP32[$__err>>2] = $162;
    }
    HEAP32[$agg$result>>2] = $146;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0;
 var $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $168 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $168 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $168 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $168;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(549,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = tempRet0;
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 39;
   } else {
    $133 = $__v;
    $134 = $133;
    HEAP32[$134>>2] = $129;
    $135 = (($133) + 4)|0;
    $136 = $135;
    HEAP32[$136>>2] = $130;
    $137 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$137,$__err);
    $138 = ($$lcssa|0)==(0|0);
    if ($138) {
     $151 = 0;
    } else {
     $139 = (($$lcssa) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = (($$lcssa) + 16|0);
     $142 = HEAP32[$141>>2]|0;
     $143 = ($140|0)==($142|0);
     if ($143) {
      $144 = HEAP32[$$lcssa>>2]|0;
      $145 = (($144) + 36|0);
      $146 = HEAP32[$145>>2]|0;
      __THREW__ = 0;
      $147 = (invoke_ii($146|0,($$lcssa|0))|0);
      $148 = __THREW__; __THREW__ = 0;
      $149 = $148&1;
      if ($149) {
       label = 39;
       break;
      }
      $150 = ($147|0)==(-1);
      if ($150) {
       HEAP32[$__b>>2] = 0;
       $151 = 0;
      } else {
       $151 = $$lcssa;
      }
     } else {
      $151 = $$lcssa;
     }
    }
    $152 = ($151|0)==(0|0);
    $153 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($153) {
      label = 67;
     } else {
      $154 = (($$pre$i2$i$i) + 12|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = (($$pre$i2$i$i) + 16|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = ($155|0)==($157|0);
      if ($158) {
       $159 = HEAP32[$$pre$i2$i$i>>2]|0;
       $160 = (($159) + 36|0);
       $161 = HEAP32[$160>>2]|0;
       __THREW__ = 0;
       $162 = (invoke_ii($161|0,($$pre$i2$i$i|0))|0);
       $163 = __THREW__; __THREW__ = 0;
       $164 = $163&1;
       if ($164) {
        label = 39;
        break L8;
       }
       $165 = ($162|0)==(-1);
       if ($165) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($152)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($152) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $166 = HEAP32[$__err>>2]|0;
     $167 = $166 | 2;
     HEAP32[$__err>>2] = $167;
    }
    HEAP32[$agg$result>>2] = $151;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $$pre30 = 0, $$pre32 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0;
 var $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 39;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre32 = (($__buf) + 8|0);
    $$pre$phi31Z2D = $15;$$pre$phi33Z2D = $$pre32;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre30 = (($__buf) + 1|0);
    $$pre$phi31Z2D = $$pre30;$$pre$phi33Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i5;
      }
     } else {
      $33 = $$pre$i$i$i5;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $165 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i20 = (($72) + -1)|0;
      $73 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi31Z2D;
     } else {
      $79 = HEAP32[$$pre$phi33Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($100,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $165;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i5 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   $121 = HEAP8[$__in_units>>0]|0;
   $122 = ($121<<24>>24)==(0);
   $or$cond = $120 | $122;
   if (!($or$cond)) {
    $123 = HEAP32[$__g_end>>2]|0;
    $124 = $123;
    $125 = $__g;
    $126 = (($124) - ($125))|0;
    $127 = ($126|0)<(160);
    if ($127) {
     $128 = HEAP32[$__dc>>2]|0;
     $129 = (($123) + 4|0);
     HEAP32[$__g_end>>2] = $129;
     HEAP32[$123>>2] = $128;
    }
   }
   $130 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $131 = (+invoke_diii(550,($__a$2|0),($130|0),($__err|0)));
   $132 = __THREW__; __THREW__ = 0;
   $133 = $132&1;
   if ($133) {
    label = 39;
   } else {
    HEAPF32[$__v>>2] = $131;
    $134 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$134,$__err);
    $135 = ($$lcssa|0)==(0|0);
    if ($135) {
     $148 = 0;
    } else {
     $136 = (($$lcssa) + 12|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = (($$lcssa) + 16|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = ($137|0)==($139|0);
     if ($140) {
      $141 = HEAP32[$$lcssa>>2]|0;
      $142 = (($141) + 36|0);
      $143 = HEAP32[$142>>2]|0;
      __THREW__ = 0;
      $144 = (invoke_ii($143|0,($$lcssa|0))|0);
      $145 = __THREW__; __THREW__ = 0;
      $146 = $145&1;
      if ($146) {
       label = 39;
       break;
      }
      $147 = ($144|0)==(-1);
      if ($147) {
       HEAP32[$__b>>2] = 0;
       $148 = 0;
      } else {
       $148 = $$lcssa;
      }
     } else {
      $148 = $$lcssa;
     }
    }
    $149 = ($148|0)==(0|0);
    $150 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($150) {
      label = 67;
     } else {
      $151 = (($$pre$i2$i$i) + 12|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (($$pre$i2$i$i) + 16|0);
      $154 = HEAP32[$153>>2]|0;
      $155 = ($152|0)==($154|0);
      if ($155) {
       $156 = HEAP32[$$pre$i2$i$i>>2]|0;
       $157 = (($156) + 36|0);
       $158 = HEAP32[$157>>2]|0;
       __THREW__ = 0;
       $159 = (invoke_ii($158|0,($$pre$i2$i$i|0))|0);
       $160 = __THREW__; __THREW__ = 0;
       $161 = $160&1;
       if ($161) {
        label = 39;
        break L8;
       }
       $162 = ($159|0)==(-1);
       if ($162) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($149)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($149) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $163 = HEAP32[$__err>>2]|0;
     $164 = $163 | 2;
     HEAP32[$__err>>2] = $164;
    }
    HEAP32[$agg$result>>2] = $148;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $$pre30 = 0, $$pre32 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0;
 var $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 39;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre32 = (($__buf) + 8|0);
    $$pre$phi31Z2D = $15;$$pre$phi33Z2D = $$pre32;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre30 = (($__buf) + 1|0);
    $$pre$phi31Z2D = $$pre30;$$pre$phi33Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i5;
      }
     } else {
      $33 = $$pre$i$i$i5;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $165 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i20 = (($72) + -1)|0;
      $73 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi31Z2D;
     } else {
      $79 = HEAP32[$$pre$phi33Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($100,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $165;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i5 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   $121 = HEAP8[$__in_units>>0]|0;
   $122 = ($121<<24>>24)==(0);
   $or$cond = $120 | $122;
   if (!($or$cond)) {
    $123 = HEAP32[$__g_end>>2]|0;
    $124 = $123;
    $125 = $__g;
    $126 = (($124) - ($125))|0;
    $127 = ($126|0)<(160);
    if ($127) {
     $128 = HEAP32[$__dc>>2]|0;
     $129 = (($123) + 4|0);
     HEAP32[$__g_end>>2] = $129;
     HEAP32[$123>>2] = $128;
    }
   }
   $130 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $131 = (+invoke_diii(551,($__a$2|0),($130|0),($__err|0)));
   $132 = __THREW__; __THREW__ = 0;
   $133 = $132&1;
   if ($133) {
    label = 39;
   } else {
    HEAPF64[$__v>>3] = $131;
    $134 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$134,$__err);
    $135 = ($$lcssa|0)==(0|0);
    if ($135) {
     $148 = 0;
    } else {
     $136 = (($$lcssa) + 12|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = (($$lcssa) + 16|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = ($137|0)==($139|0);
     if ($140) {
      $141 = HEAP32[$$lcssa>>2]|0;
      $142 = (($141) + 36|0);
      $143 = HEAP32[$142>>2]|0;
      __THREW__ = 0;
      $144 = (invoke_ii($143|0,($$lcssa|0))|0);
      $145 = __THREW__; __THREW__ = 0;
      $146 = $145&1;
      if ($146) {
       label = 39;
       break;
      }
      $147 = ($144|0)==(-1);
      if ($147) {
       HEAP32[$__b>>2] = 0;
       $148 = 0;
      } else {
       $148 = $$lcssa;
      }
     } else {
      $148 = $$lcssa;
     }
    }
    $149 = ($148|0)==(0|0);
    $150 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($150) {
      label = 67;
     } else {
      $151 = (($$pre$i2$i$i) + 12|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (($$pre$i2$i$i) + 16|0);
      $154 = HEAP32[$153>>2]|0;
      $155 = ($152|0)==($154|0);
      if ($155) {
       $156 = HEAP32[$$pre$i2$i$i>>2]|0;
       $157 = (($156) + 36|0);
       $158 = HEAP32[$157>>2]|0;
       __THREW__ = 0;
       $159 = (invoke_ii($158|0,($$pre$i2$i$i|0))|0);
       $160 = __THREW__; __THREW__ = 0;
       $161 = $160&1;
       if ($161) {
        label = 39;
        break L8;
       }
       $162 = ($159|0)==(-1);
       if ($162) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($149)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($149) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $163 = HEAP32[$__err>>2]|0;
     $164 = $163 | 2;
     HEAP32[$__err>>2] = $164;
    }
    HEAP32[$agg$result>>2] = $148;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $$pre30 = 0, $$pre32 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0;
 var $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 39;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre32 = (($__buf) + 8|0);
    $$pre$phi31Z2D = $15;$$pre$phi33Z2D = $$pre32;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre30 = (($__buf) + 1|0);
    $$pre$phi31Z2D = $$pre30;$$pre$phi33Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i5;
      }
     } else {
      $33 = $$pre$i$i$i5;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $165 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i20 = (($72) + -1)|0;
      $73 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi31Z2D;
     } else {
      $79 = HEAP32[$$pre$phi33Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($100,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $165;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i5 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   $121 = HEAP8[$__in_units>>0]|0;
   $122 = ($121<<24>>24)==(0);
   $or$cond = $120 | $122;
   if (!($or$cond)) {
    $123 = HEAP32[$__g_end>>2]|0;
    $124 = $123;
    $125 = $__g;
    $126 = (($124) - ($125))|0;
    $127 = ($126|0)<(160);
    if ($127) {
     $128 = HEAP32[$__dc>>2]|0;
     $129 = (($123) + 4|0);
     HEAP32[$__g_end>>2] = $129;
     HEAP32[$123>>2] = $128;
    }
   }
   $130 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $131 = (+invoke_diii(552,($__a$2|0),($130|0),($__err|0)));
   $132 = __THREW__; __THREW__ = 0;
   $133 = $132&1;
   if ($133) {
    label = 39;
   } else {
    HEAPF64[$__v>>3] = $131;
    $134 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$134,$__err);
    $135 = ($$lcssa|0)==(0|0);
    if ($135) {
     $148 = 0;
    } else {
     $136 = (($$lcssa) + 12|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = (($$lcssa) + 16|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = ($137|0)==($139|0);
     if ($140) {
      $141 = HEAP32[$$lcssa>>2]|0;
      $142 = (($141) + 36|0);
      $143 = HEAP32[$142>>2]|0;
      __THREW__ = 0;
      $144 = (invoke_ii($143|0,($$lcssa|0))|0);
      $145 = __THREW__; __THREW__ = 0;
      $146 = $145&1;
      if ($146) {
       label = 39;
       break;
      }
      $147 = ($144|0)==(-1);
      if ($147) {
       HEAP32[$__b>>2] = 0;
       $148 = 0;
      } else {
       $148 = $$lcssa;
      }
     } else {
      $148 = $$lcssa;
     }
    }
    $149 = ($148|0)==(0|0);
    $150 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($150) {
      label = 67;
     } else {
      $151 = (($$pre$i2$i$i) + 12|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (($$pre$i2$i$i) + 16|0);
      $154 = HEAP32[$153>>2]|0;
      $155 = ($152|0)==($154|0);
      if ($155) {
       $156 = HEAP32[$$pre$i2$i$i>>2]|0;
       $157 = (($156) + 36|0);
       $158 = HEAP32[$157>>2]|0;
       __THREW__ = 0;
       $159 = (invoke_ii($158|0,($$pre$i2$i$i|0))|0);
       $160 = __THREW__; __THREW__ = 0;
       $161 = $160&1;
       if ($161) {
        label = 39;
        break L8;
       }
       $162 = ($159|0)==(-1);
       if ($162) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($149)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($149) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $163 = HEAP32[$__err>>2]|0;
     $164 = $163 | 2;
     HEAP32[$__err>>2] = $164;
    }
    HEAP32[$agg$result>>2] = $148;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsscanf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  __THREW__ = 0;
  (invoke_ii(474,($0|0))|0);
  $3 = __THREW__; __THREW__ = 0;
  $4 = $3&1;
  if ($4) {
   $5 = ___cxa_find_matching_catch(0|0)|0;
   $6 = tempRet0;
   ___clang_call_terminate($5);
   // unreachable;
  }
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i11 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i17 = 0, $$0$lcssa69 = 0, $$045 = 0, $$index = 0, $$index10 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i13 = 0, $$pre$i3$i$i19 = 0, $$pre$i3$i$i19$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0 = 0, $__consume$0$off0$lcssa = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0 = 0, $__ky1$0 = 0, $__ky2$0 = 0, $__n_does_match$0 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$2$be = 0, $__n_does_match$3 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$4 = 0;
 var $__n_does_match$5 = 0, $__n_does_match$5$lcssa = 0, $__n_does_match$6 = 0, $__n_might_match$0 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$4 = 0, $__st$0 = 0, $__st$1 = 0, $__st$2 = 0, $__st$3 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i14 = 0;
 var $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __THREW__ = 0;
   invoke_v(465);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if ($8) {
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    $$index = $9;$$index10 = $10;
   } else {
    $17 = 0;$__status$0 = 0;
    label = 11;
   }
  } else {
   $17 = $5;$__status$0 = $5;
   label = 11;
  }
 } else {
  $17 = 0;$__status$0 = $__statbuf;
  label = 11;
 }
 if ((label|0) == 11) {
  $__ky$0 = $__kb;$__n_does_match$0 = 0;$__n_might_match$0 = $3;$__st$0 = $__status$0;
  while(1) {
   $19 = ($__ky$0|0)==($__ke|0);
   if ($19) {
    $__n_does_match$0$lcssa = $__n_does_match$0;$__n_might_match$0$lcssa = $__n_might_match$0;
    break;
   }
   $20 = HEAP8[$__ky$0>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $25 = $20&255;
    $26 = $25 >>> 1;
    $27 = $26;
   } else {
    $23 = (($__ky$0) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $27 = $24;
   }
   $28 = ($27|0)==(0);
   if ($28) {
    HEAP8[$__st$0>>0] = 2;
    $29 = (($__n_might_match$0) + -1)|0;
    $30 = (($__n_does_match$0) + 1)|0;
    $__n_does_match$1 = $30;$__n_might_match$1 = $29;
   } else {
    HEAP8[$__st$0>>0] = 1;
    $__n_does_match$1 = $__n_does_match$0;$__n_might_match$1 = $__n_might_match$0;
   }
   $31 = (($__ky$0) + 12|0);
   $32 = (($__st$0) + 1|0);
   $__ky$0 = $31;$__n_does_match$0 = $__n_does_match$1;$__n_might_match$0 = $__n_might_match$1;$__st$0 = $32;
  }
  $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
  L19: while(1) {
   $33 = HEAP32[$__b>>2]|0;
   $34 = ($33|0)==(0|0);
   do {
    if ($34) {
     $64 = 1;
    } else {
     $35 = (($33) + 12|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = (($33) + 16|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ($36|0)==($38|0);
     if ($39) {
      $40 = HEAP32[$33>>2]|0;
      $41 = (($40) + 36|0);
      $42 = HEAP32[$41>>2]|0;
      __THREW__ = 0;
      $43 = (invoke_ii($42|0,($33|0))|0);
      $44 = __THREW__; __THREW__ = 0;
      $45 = $44&1;
      if ($45) {
       label = 6;
       break L19;
      } else {
       $$0$i$i$i$i = $43;
      }
     } else {
      $46 = HEAP32[$36>>2]|0;
      $$0$i$i$i$i = $46;
     }
     $47 = ($$0$i$i$i$i|0)==(-1);
     if ($47) {
      HEAP32[$__b>>2] = 0;
      $64 = 1;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
      $64 = $phitmp$i$i$i;
      break;
     }
    }
   } while(0);
   $48 = HEAP32[$__e>>2]|0;
   $49 = ($48|0)==(0|0);
   if ($49) {
    $$pre$i3$i$i19 = 0;$63 = 1;
   } else {
    $50 = (($48) + 12|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = (($48) + 16|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($51|0)==($53|0);
    if ($54) {
     $55 = HEAP32[$48>>2]|0;
     $56 = (($55) + 36|0);
     $57 = HEAP32[$56>>2]|0;
     __THREW__ = 0;
     $58 = (invoke_ii($57|0,($48|0))|0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 6;
      break;
     } else {
      $$0$i$i1$i$i = $58;
     }
    } else {
     $61 = HEAP32[$51>>2]|0;
     $$0$i$i1$i$i = $61;
    }
    $62 = ($$0$i$i1$i$i|0)==(-1);
    if ($62) {
     HEAP32[$__e>>2] = 0;
     $$pre$i3$i$i19 = 0;$63 = 1;
    } else {
     $$pre$i3$i$i19 = $48;$63 = 0;
    }
   }
   $tmp$i$i = $64 ^ $63;
   $65 = ($__n_might_match$2|0)!=(0);
   $$ = $65 & $tmp$i$i;
   $66 = HEAP32[$__b>>2]|0;
   if (!($$)) {
    $$lcssa = $66;$$pre$i3$i$i19$lcssa = $$pre$i3$i$i19;
    label = 72;
    break;
   }
   $67 = (($66) + 12|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = (($66) + 16|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ($68|0)==($70|0);
   if ($71) {
    $72 = HEAP32[$66>>2]|0;
    $73 = (($72) + 36|0);
    $74 = HEAP32[$73>>2]|0;
    __THREW__ = 0;
    $75 = (invoke_ii($74|0,($66|0))|0);
    $76 = __THREW__; __THREW__ = 0;
    $77 = $76&1;
    if ($77) {
     label = 6;
     break;
    } else {
     $$0$i$i = $75;
    }
   } else {
    $78 = HEAP32[$68>>2]|0;
    $$0$i$i = $78;
   }
   if ($__case_sensitive) {
    $__c$0 = $$0$i$i;
   } else {
    $79 = HEAP32[$__ct>>2]|0;
    $80 = (($79) + 28|0);
    $81 = HEAP32[$80>>2]|0;
    __THREW__ = 0;
    $82 = (invoke_iii($81|0,($__ct|0),($$0$i$i|0))|0);
    $83 = __THREW__; __THREW__ = 0;
    $84 = $83&1;
    if ($84) {
     label = 6;
     break;
    } else {
     $__c$0 = $82;
    }
   }
   $85 = (($__indx$0) + 1)|0;
   $__consume$0$off0 = 0;$__ky1$0 = $__kb;$__n_does_match$3 = $__n_does_match$2;$__n_might_match$3 = $__n_might_match$2;$__st$1 = $__status$0;
   while(1) {
    $86 = ($__ky1$0|0)==($__ke|0);
    if ($86) {
     $__consume$0$off0$lcssa = $__consume$0$off0;$__n_does_match$3$lcssa = $__n_does_match$3;$__n_might_match$3$lcssa = $__n_might_match$3;
     break;
    }
    $87 = HEAP8[$__st$1>>0]|0;
    $88 = ($87<<24>>24)==(1);
    do {
     if ($88) {
      $89 = HEAP8[$__ky1$0>>0]|0;
      $90 = $89 & 1;
      $91 = ($90<<24>>24)==(0);
      if ($91) {
       $94 = (($__ky1$0) + 4|0);
       $96 = $94;
      } else {
       $92 = (($__ky1$0) + 8|0);
       $93 = HEAP32[$92>>2]|0;
       $96 = $93;
      }
      $95 = (($96) + ($__indx$0<<2)|0);
      $97 = HEAP32[$95>>2]|0;
      if ($__case_sensitive) {
       $__kc$0 = $97;
      } else {
       $98 = HEAP32[$__ct>>2]|0;
       $99 = (($98) + 28|0);
       $100 = HEAP32[$99>>2]|0;
       __THREW__ = 0;
       $101 = (invoke_iii($100|0,($__ct|0),($97|0))|0);
       $102 = __THREW__; __THREW__ = 0;
       $103 = $102&1;
       if ($103) {
        label = 5;
        break L19;
       } else {
        $__kc$0 = $101;
       }
      }
      $104 = ($__c$0|0)==($__kc$0|0);
      if (!($104)) {
       HEAP8[$__st$1>>0] = 0;
       $116 = (($__n_might_match$3) + -1)|0;
       $__consume$1$off0 = $__consume$0$off0;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $116;
       break;
      }
      $105 = HEAP8[$__ky1$0>>0]|0;
      $106 = $105 & 1;
      $107 = ($106<<24>>24)==(0);
      if ($107) {
       $110 = $105&255;
       $111 = $110 >>> 1;
       $112 = $111;
      } else {
       $108 = (($__ky1$0) + 4|0);
       $109 = HEAP32[$108>>2]|0;
       $112 = $109;
      }
      $113 = ($112|0)==($85|0);
      if ($113) {
       HEAP8[$__st$1>>0] = 2;
       $114 = (($__n_might_match$3) + -1)|0;
       $115 = (($__n_does_match$3) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $115;$__n_might_match$4 = $114;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $__n_might_match$3;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off0;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $__n_might_match$3;
     }
    } while(0);
    $117 = (($__ky1$0) + 12|0);
    $118 = (($__st$1) + 1|0);
    $__consume$0$off0 = $__consume$1$off0;$__ky1$0 = $117;$__n_does_match$3 = $__n_does_match$4;$__n_might_match$3 = $__n_might_match$4;$__st$1 = $118;
   }
   if ($__consume$0$off0$lcssa) {
    $119 = HEAP32[$__b>>2]|0;
    $120 = (($119) + 12|0);
    $121 = HEAP32[$120>>2]|0;
    $122 = (($119) + 16|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = ($121|0)==($123|0);
    if ($124) {
     $125 = HEAP32[$119>>2]|0;
     $126 = (($125) + 40|0);
     $127 = HEAP32[$126>>2]|0;
     __THREW__ = 0;
     (invoke_ii($127|0,($119|0))|0);
     $128 = __THREW__; __THREW__ = 0;
     $129 = $128&1;
     if ($129) {
      label = 6;
      break;
     }
    } else {
     $130 = (($121) + 4|0);
     HEAP32[$120>>2] = $130;
    }
    $131 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
    $132 = ($131>>>0)>(1);
    if ($132) {
     $__ky2$0 = $__kb;$__n_does_match$5 = $__n_does_match$3$lcssa;$__st$2 = $__status$0;
     while(1) {
      $133 = ($__ky2$0|0)==($__ke|0);
      if ($133) {
       $__n_does_match$5$lcssa = $__n_does_match$5;
       break;
      }
      $134 = HEAP8[$__st$2>>0]|0;
      $135 = ($134<<24>>24)==(2);
      if ($135) {
       $136 = HEAP8[$__ky2$0>>0]|0;
       $137 = $136 & 1;
       $138 = ($137<<24>>24)==(0);
       if ($138) {
        $141 = $136&255;
        $142 = $141 >>> 1;
        $143 = $142;
       } else {
        $139 = (($__ky2$0) + 4|0);
        $140 = HEAP32[$139>>2]|0;
        $143 = $140;
       }
       $144 = ($143|0)==($85|0);
       if ($144) {
        $__n_does_match$6 = $__n_does_match$5;
       } else {
        HEAP8[$__st$2>>0] = 0;
        $145 = (($__n_does_match$5) + -1)|0;
        $__n_does_match$6 = $145;
       }
      } else {
       $__n_does_match$6 = $__n_does_match$5;
      }
      $146 = (($__ky2$0) + 12|0);
      $147 = (($__st$2) + 1|0);
      $__ky2$0 = $146;$__n_does_match$5 = $__n_does_match$6;$__st$2 = $147;
     }
     $__n_does_match$2$be = $__n_does_match$5$lcssa;
    } else {
     $__n_does_match$2$be = $__n_does_match$3$lcssa;
    }
   } else {
    $__n_does_match$2$be = $__n_does_match$3$lcssa;
   }
   $__indx$0 = $85;$__n_does_match$2 = $__n_does_match$2$be;$__n_might_match$2 = $__n_might_match$3$lcssa;
  }
  if ((label|0) == 5) {
   $11 = ___cxa_find_matching_catch()|0;
   $12 = tempRet0;
   $lpad$phi$index = $11;$lpad$phi$index3 = $12;
  }
  else if ((label|0) == 6) {
   $13 = ___cxa_find_matching_catch()|0;
   $14 = tempRet0;
   $lpad$phi$index = $13;$lpad$phi$index3 = $14;
  }
  else if ((label|0) == 72) {
   $148 = ($$lcssa|0)==(0|0);
   do {
    if ($148) {
     $186 = 1;
     label = 79;
    } else {
     $149 = (($$lcssa) + 12|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = (($$lcssa) + 16|0);
     $152 = HEAP32[$151>>2]|0;
     $153 = ($150|0)==($152|0);
     if ($153) {
      $154 = HEAP32[$$lcssa>>2]|0;
      $155 = (($154) + 36|0);
      $156 = HEAP32[$155>>2]|0;
      __THREW__ = 0;
      $157 = (invoke_ii($156|0,($$lcssa|0))|0);
      $158 = __THREW__; __THREW__ = 0;
      $159 = $158&1;
      if ($159) {
       break;
      } else {
       $$0$i$i$i$i11 = $157;
      }
     } else {
      $160 = HEAP32[$150>>2]|0;
      $$0$i$i$i$i11 = $160;
     }
     $161 = ($$0$i$i$i$i11|0)==(-1);
     if ($161) {
      HEAP32[$__b>>2] = 0;
      $186 = 1;
      label = 79;
      break;
     } else {
      $$pre$i$i$i13 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i14 = ($$pre$i$i$i13|0)==(0|0);
      $186 = $phitmp$i$i$i14;
      label = 79;
      break;
     }
    }
   } while(0);
   L101: do {
    if ((label|0) == 79) {
     $162 = ($$pre$i3$i$i19$lcssa|0)==(0|0);
     do {
      if ($162) {
       label = 85;
      } else {
       $163 = (($$pre$i3$i$i19$lcssa) + 12|0);
       $164 = HEAP32[$163>>2]|0;
       $165 = (($$pre$i3$i$i19$lcssa) + 16|0);
       $166 = HEAP32[$165>>2]|0;
       $167 = ($164|0)==($166|0);
       if ($167) {
        $168 = HEAP32[$$pre$i3$i$i19$lcssa>>2]|0;
        $169 = (($168) + 36|0);
        $170 = HEAP32[$169>>2]|0;
        __THREW__ = 0;
        $171 = (invoke_ii($170|0,($$pre$i3$i$i19$lcssa|0))|0);
        $172 = __THREW__; __THREW__ = 0;
        $173 = $172&1;
        if ($173) {
         break L101;
        } else {
         $$0$i$i1$i$i17 = $171;
        }
       } else {
        $174 = HEAP32[$164>>2]|0;
        $$0$i$i1$i$i17 = $174;
       }
       $175 = ($$0$i$i1$i$i17|0)==(-1);
       if ($175) {
        HEAP32[$__e>>2] = 0;
        label = 85;
        break;
       } else {
        if ($186) {
         break;
        } else {
         label = 87;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 85) {
      if ($186) {
       label = 87;
      }
     }
     if ((label|0) == 87) {
      $176 = HEAP32[$__err>>2]|0;
      $177 = $176 | 2;
      HEAP32[$__err>>2] = $177;
     }
     $$0 = $__kb;$__st$3 = $__status$0;
     while(1) {
      $178 = ($$0|0)==($__ke|0);
      if ($178) {
       label = 92;
       break;
      }
      $179 = HEAP8[$__st$3>>0]|0;
      $180 = ($179<<24>>24)==(2);
      if ($180) {
       $$0$lcssa69 = $$0;
       label = 93;
       break;
      }
      $181 = (($$0) + 12|0);
      $182 = (($__st$3) + 1|0);
      $$0 = $181;$__st$3 = $182;
     }
     if ((label|0) == 92) {
      $183 = HEAP32[$__err>>2]|0;
      $184 = $183 | 4;
      HEAP32[$__err>>2] = $184;
      $$045 = $__ke;
     }
     else if ((label|0) == 93) {
      $$045 = $$0$lcssa69;
     }
     $185 = ($17|0)==(0|0);
     _free($17);
     if (!($185)) {
     }
     STACKTOP = sp;return ($$045|0);
    }
   } while(0);
   $15 = ___cxa_find_matching_catch()|0;
   $16 = tempRet0;
   $lpad$phi$index = $15;$lpad$phi$index3 = $16;
  }
  $18 = ($17|0)==(0|0);
  _free($17);
  if ($18) {
   $$index = $lpad$phi$index;$$index10 = $lpad$phi$index3;
  } else {
   $$index = $lpad$phi$index;$$index10 = $lpad$phi$index3;
  }
 }
 ___resumeException($$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $163 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $163 = 1;$88 = 0;
     } else {
      $163 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($163) {
        $164 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($163) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $164 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $164;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(544,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = __THREW__; __THREW__ = 0;
   $130 = $129&1;
   if ($130) {
    label = 40;
   } else {
    HEAP32[$__v>>2] = $128;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$lcssa|0)==(0|0);
    if ($132) {
     $162 = 0;$165 = 1;
    } else {
     $133 = (($$lcssa) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = (($$lcssa) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$lcssa>>2]|0;
      $139 = (($138) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $141;
      }
     } else {
      $144 = HEAP32[$134>>2]|0;
      $$0$i$i$i$i = $144;
     }
     $145 = ($$0$i$i$i$i|0)==(-1);
     if ($145) {
      HEAP32[$__b>>2] = 0;
      $162 = 0;$165 = 1;
     } else {
      $162 = $$lcssa;$165 = 0;
     }
    }
    $146 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($146) {
      label = 69;
     } else {
      $147 = (($$pre$i3$i$i) + 12|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (($$pre$i3$i$i) + 16|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($148|0)==($150|0);
      if ($151) {
       $152 = HEAP32[$$pre$i3$i$i>>2]|0;
       $153 = (($152) + 36|0);
       $154 = HEAP32[$153>>2]|0;
       __THREW__ = 0;
       $155 = (invoke_ii($154|0,($$pre$i3$i$i|0))|0);
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $155;
       }
      } else {
       $158 = HEAP32[$148>>2]|0;
       $$0$i$i1$i$i = $158;
      }
      $159 = ($$0$i$i1$i$i|0)==(-1);
      if ($159) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($165) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($165) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    HEAP32[$agg$result>>2] = $162;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0;
 var $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $168 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $168 = 1;$88 = 0;
     } else {
      $168 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($168) {
        $169 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($168) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $169 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $169;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(545,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = tempRet0;
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 40;
   } else {
    $132 = $__v;
    $133 = $132;
    HEAP32[$133>>2] = $128;
    $134 = (($132) + 4)|0;
    $135 = $134;
    HEAP32[$135>>2] = $129;
    $136 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$136,$__err);
    $137 = ($$lcssa|0)==(0|0);
    if ($137) {
     $167 = 0;$170 = 1;
    } else {
     $138 = (($$lcssa) + 12|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = (($$lcssa) + 16|0);
     $141 = HEAP32[$140>>2]|0;
     $142 = ($139|0)==($141|0);
     if ($142) {
      $143 = HEAP32[$$lcssa>>2]|0;
      $144 = (($143) + 36|0);
      $145 = HEAP32[$144>>2]|0;
      __THREW__ = 0;
      $146 = (invoke_ii($145|0,($$lcssa|0))|0);
      $147 = __THREW__; __THREW__ = 0;
      $148 = $147&1;
      if ($148) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $146;
      }
     } else {
      $149 = HEAP32[$139>>2]|0;
      $$0$i$i$i$i = $149;
     }
     $150 = ($$0$i$i$i$i|0)==(-1);
     if ($150) {
      HEAP32[$__b>>2] = 0;
      $167 = 0;$170 = 1;
     } else {
      $167 = $$lcssa;$170 = 0;
     }
    }
    $151 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($151) {
      label = 69;
     } else {
      $152 = (($$pre$i3$i$i) + 12|0);
      $153 = HEAP32[$152>>2]|0;
      $154 = (($$pre$i3$i$i) + 16|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = ($153|0)==($155|0);
      if ($156) {
       $157 = HEAP32[$$pre$i3$i$i>>2]|0;
       $158 = (($157) + 36|0);
       $159 = HEAP32[$158>>2]|0;
       __THREW__ = 0;
       $160 = (invoke_ii($159|0,($$pre$i3$i$i|0))|0);
       $161 = __THREW__; __THREW__ = 0;
       $162 = $161&1;
       if ($162) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $160;
       }
      } else {
       $163 = HEAP32[$153>>2]|0;
       $$0$i$i1$i$i = $163;
      }
      $164 = ($$0$i$i1$i$i|0)==(-1);
      if ($164) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($170) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($170) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $165 = HEAP32[$__err>>2]|0;
     $166 = $165 | 2;
     HEAP32[$__err>>2] = $166;
    }
    HEAP32[$agg$result>>2] = $167;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $163 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $163 = 1;$88 = 0;
     } else {
      $163 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($163) {
        $164 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($163) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $164 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $164;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(546,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = __THREW__; __THREW__ = 0;
   $130 = $129&1;
   if ($130) {
    label = 40;
   } else {
    HEAP16[$__v>>1] = $128;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$lcssa|0)==(0|0);
    if ($132) {
     $162 = 0;$165 = 1;
    } else {
     $133 = (($$lcssa) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = (($$lcssa) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$lcssa>>2]|0;
      $139 = (($138) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $141;
      }
     } else {
      $144 = HEAP32[$134>>2]|0;
      $$0$i$i$i$i = $144;
     }
     $145 = ($$0$i$i$i$i|0)==(-1);
     if ($145) {
      HEAP32[$__b>>2] = 0;
      $162 = 0;$165 = 1;
     } else {
      $162 = $$lcssa;$165 = 0;
     }
    }
    $146 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($146) {
      label = 69;
     } else {
      $147 = (($$pre$i3$i$i) + 12|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (($$pre$i3$i$i) + 16|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($148|0)==($150|0);
      if ($151) {
       $152 = HEAP32[$$pre$i3$i$i>>2]|0;
       $153 = (($152) + 36|0);
       $154 = HEAP32[$153>>2]|0;
       __THREW__ = 0;
       $155 = (invoke_ii($154|0,($$pre$i3$i$i|0))|0);
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $155;
       }
      } else {
       $158 = HEAP32[$148>>2]|0;
       $$0$i$i1$i$i = $158;
      }
      $159 = ($$0$i$i1$i$i|0)==(-1);
      if ($159) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($165) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($165) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    HEAP32[$agg$result>>2] = $162;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $163 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $163 = 1;$88 = 0;
     } else {
      $163 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($163) {
        $164 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($163) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $164 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $164;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(547,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = __THREW__; __THREW__ = 0;
   $130 = $129&1;
   if ($130) {
    label = 40;
   } else {
    HEAP32[$__v>>2] = $128;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$lcssa|0)==(0|0);
    if ($132) {
     $162 = 0;$165 = 1;
    } else {
     $133 = (($$lcssa) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = (($$lcssa) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$lcssa>>2]|0;
      $139 = (($138) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $141;
      }
     } else {
      $144 = HEAP32[$134>>2]|0;
      $$0$i$i$i$i = $144;
     }
     $145 = ($$0$i$i$i$i|0)==(-1);
     if ($145) {
      HEAP32[$__b>>2] = 0;
      $162 = 0;$165 = 1;
     } else {
      $162 = $$lcssa;$165 = 0;
     }
    }
    $146 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($146) {
      label = 69;
     } else {
      $147 = (($$pre$i3$i$i) + 12|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (($$pre$i3$i$i) + 16|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($148|0)==($150|0);
      if ($151) {
       $152 = HEAP32[$$pre$i3$i$i>>2]|0;
       $153 = (($152) + 36|0);
       $154 = HEAP32[$153>>2]|0;
       __THREW__ = 0;
       $155 = (invoke_ii($154|0,($$pre$i3$i$i|0))|0);
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $155;
       }
      } else {
       $158 = HEAP32[$148>>2]|0;
       $$0$i$i1$i$i = $158;
      }
      $159 = ($$0$i$i1$i$i|0)==(-1);
      if ($159) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($165) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($165) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    HEAP32[$agg$result>>2] = $162;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $163 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $163 = 1;$88 = 0;
     } else {
      $163 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($163) {
        $164 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($163) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $164 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $164;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(548,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = __THREW__; __THREW__ = 0;
   $130 = $129&1;
   if ($130) {
    label = 40;
   } else {
    HEAP32[$__v>>2] = $128;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$lcssa|0)==(0|0);
    if ($132) {
     $162 = 0;$165 = 1;
    } else {
     $133 = (($$lcssa) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = (($$lcssa) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$lcssa>>2]|0;
      $139 = (($138) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $141;
      }
     } else {
      $144 = HEAP32[$134>>2]|0;
      $$0$i$i$i$i = $144;
     }
     $145 = ($$0$i$i$i$i|0)==(-1);
     if ($145) {
      HEAP32[$__b>>2] = 0;
      $162 = 0;$165 = 1;
     } else {
      $162 = $$lcssa;$165 = 0;
     }
    }
    $146 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($146) {
      label = 69;
     } else {
      $147 = (($$pre$i3$i$i) + 12|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (($$pre$i3$i$i) + 16|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($148|0)==($150|0);
      if ($151) {
       $152 = HEAP32[$$pre$i3$i$i>>2]|0;
       $153 = (($152) + 36|0);
       $154 = HEAP32[$153>>2]|0;
       __THREW__ = 0;
       $155 = (invoke_ii($154|0,($$pre$i3$i$i|0))|0);
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $155;
       }
      } else {
       $158 = HEAP32[$148>>2]|0;
       $$0$i$i1$i$i = $158;
      }
      $159 = ($$0$i$i1$i$i|0)==(-1);
      if ($159) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($165) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($165) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    HEAP32[$agg$result>>2] = $162;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0;
 var $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $168 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $168 = 1;$88 = 0;
     } else {
      $168 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($168) {
        $169 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($168) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $169 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $169;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(549,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = tempRet0;
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 40;
   } else {
    $132 = $__v;
    $133 = $132;
    HEAP32[$133>>2] = $128;
    $134 = (($132) + 4)|0;
    $135 = $134;
    HEAP32[$135>>2] = $129;
    $136 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$136,$__err);
    $137 = ($$lcssa|0)==(0|0);
    if ($137) {
     $167 = 0;$170 = 1;
    } else {
     $138 = (($$lcssa) + 12|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = (($$lcssa) + 16|0);
     $141 = HEAP32[$140>>2]|0;
     $142 = ($139|0)==($141|0);
     if ($142) {
      $143 = HEAP32[$$lcssa>>2]|0;
      $144 = (($143) + 36|0);
      $145 = HEAP32[$144>>2]|0;
      __THREW__ = 0;
      $146 = (invoke_ii($145|0,($$lcssa|0))|0);
      $147 = __THREW__; __THREW__ = 0;
      $148 = $147&1;
      if ($148) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $146;
      }
     } else {
      $149 = HEAP32[$139>>2]|0;
      $$0$i$i$i$i = $149;
     }
     $150 = ($$0$i$i$i$i|0)==(-1);
     if ($150) {
      HEAP32[$__b>>2] = 0;
      $167 = 0;$170 = 1;
     } else {
      $167 = $$lcssa;$170 = 0;
     }
    }
    $151 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($151) {
      label = 69;
     } else {
      $152 = (($$pre$i3$i$i) + 12|0);
      $153 = HEAP32[$152>>2]|0;
      $154 = (($$pre$i3$i$i) + 16|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = ($153|0)==($155|0);
      if ($156) {
       $157 = HEAP32[$$pre$i3$i$i>>2]|0;
       $158 = (($157) + 36|0);
       $159 = HEAP32[$158>>2]|0;
       __THREW__ = 0;
       $160 = (invoke_ii($159|0,($$pre$i3$i$i|0))|0);
       $161 = __THREW__; __THREW__ = 0;
       $162 = $161&1;
       if ($162) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $160;
       }
      } else {
       $163 = HEAP32[$153>>2]|0;
       $$0$i$i1$i$i = $163;
      }
      $164 = ($$0$i$i1$i$i|0)==(-1);
      if ($164) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($170) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($170) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $165 = HEAP32[$__err>>2]|0;
     $166 = $165 | 2;
     HEAP32[$__err>>2] = $166;
    }
    HEAP32[$agg$result>>2] = $167;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $$pre33 = 0, $$pre35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0;
 var $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 40;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre35 = (($__buf) + 8|0);
    $$pre$phi34Z2D = $15;$$pre$phi36Z2D = $$pre35;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre33 = (($__buf) + 1|0);
    $$pre$phi34Z2D = $$pre33;$$pre$phi36Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $165 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i6) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i6) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $165 = 1;$88 = 0;
     } else {
      $165 = 0;$88 = $$pre$i$i$i6;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($165) {
        $166 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($165) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $166 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i24 = (($72) + -1)|0;
      $73 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi34Z2D;
     } else {
      $79 = HEAP32[$$pre$phi36Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $166;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i6 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   $120 = HEAP8[$__in_units>>0]|0;
   $121 = ($120<<24>>24)==(0);
   $or$cond = $119 | $121;
   if (!($or$cond)) {
    $122 = HEAP32[$__g_end>>2]|0;
    $123 = $122;
    $124 = $__g;
    $125 = (($123) - ($124))|0;
    $126 = ($125|0)<(160);
    if ($126) {
     $127 = HEAP32[$__dc>>2]|0;
     $128 = (($122) + 4|0);
     HEAP32[$__g_end>>2] = $128;
     HEAP32[$122>>2] = $127;
    }
   }
   $129 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $130 = (+invoke_diii(550,($__a$2|0),($129|0),($__err|0)));
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 40;
   } else {
    HEAPF32[$__v>>2] = $130;
    $133 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$133,$__err);
    $134 = ($$lcssa|0)==(0|0);
    if ($134) {
     $164 = 0;$167 = 1;
    } else {
     $135 = (($$lcssa) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = (($$lcssa) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$lcssa>>2]|0;
      $141 = (($140) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      __THREW__ = 0;
      $143 = (invoke_ii($142|0,($$lcssa|0))|0);
      $144 = __THREW__; __THREW__ = 0;
      $145 = $144&1;
      if ($145) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $143;
      }
     } else {
      $146 = HEAP32[$136>>2]|0;
      $$0$i$i$i$i = $146;
     }
     $147 = ($$0$i$i$i$i|0)==(-1);
     if ($147) {
      HEAP32[$__b>>2] = 0;
      $164 = 0;$167 = 1;
     } else {
      $164 = $$lcssa;$167 = 0;
     }
    }
    $148 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 69;
     } else {
      $149 = (($$pre$i3$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i3$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i3$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i3$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $157;
       }
      } else {
       $160 = HEAP32[$150>>2]|0;
       $$0$i$i1$i$i = $160;
      }
      $161 = ($$0$i$i1$i$i|0)==(-1);
      if ($161) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($167) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($167) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $162 = HEAP32[$__err>>2]|0;
     $163 = $162 | 2;
     HEAP32[$__err>>2] = $163;
    }
    HEAP32[$agg$result>>2] = $164;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $$pre33 = 0, $$pre35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0;
 var $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 40;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre35 = (($__buf) + 8|0);
    $$pre$phi34Z2D = $15;$$pre$phi36Z2D = $$pre35;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre33 = (($__buf) + 1|0);
    $$pre$phi34Z2D = $$pre33;$$pre$phi36Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $165 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i6) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i6) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $165 = 1;$88 = 0;
     } else {
      $165 = 0;$88 = $$pre$i$i$i6;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($165) {
        $166 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($165) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $166 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i24 = (($72) + -1)|0;
      $73 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi34Z2D;
     } else {
      $79 = HEAP32[$$pre$phi36Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $166;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i6 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   $120 = HEAP8[$__in_units>>0]|0;
   $121 = ($120<<24>>24)==(0);
   $or$cond = $119 | $121;
   if (!($or$cond)) {
    $122 = HEAP32[$__g_end>>2]|0;
    $123 = $122;
    $124 = $__g;
    $125 = (($123) - ($124))|0;
    $126 = ($125|0)<(160);
    if ($126) {
     $127 = HEAP32[$__dc>>2]|0;
     $128 = (($122) + 4|0);
     HEAP32[$__g_end>>2] = $128;
     HEAP32[$122>>2] = $127;
    }
   }
   $129 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $130 = (+invoke_diii(551,($__a$2|0),($129|0),($__err|0)));
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 40;
   } else {
    HEAPF64[$__v>>3] = $130;
    $133 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$133,$__err);
    $134 = ($$lcssa|0)==(0|0);
    if ($134) {
     $164 = 0;$167 = 1;
    } else {
     $135 = (($$lcssa) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = (($$lcssa) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$lcssa>>2]|0;
      $141 = (($140) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      __THREW__ = 0;
      $143 = (invoke_ii($142|0,($$lcssa|0))|0);
      $144 = __THREW__; __THREW__ = 0;
      $145 = $144&1;
      if ($145) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $143;
      }
     } else {
      $146 = HEAP32[$136>>2]|0;
      $$0$i$i$i$i = $146;
     }
     $147 = ($$0$i$i$i$i|0)==(-1);
     if ($147) {
      HEAP32[$__b>>2] = 0;
      $164 = 0;$167 = 1;
     } else {
      $164 = $$lcssa;$167 = 0;
     }
    }
    $148 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 69;
     } else {
      $149 = (($$pre$i3$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i3$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i3$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i3$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $157;
       }
      } else {
       $160 = HEAP32[$150>>2]|0;
       $$0$i$i1$i$i = $160;
      }
      $161 = ($$0$i$i1$i$i|0)==(-1);
      if ($161) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($167) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($167) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $162 = HEAP32[$__err>>2]|0;
     $163 = $162 | 2;
     HEAP32[$__err>>2] = $163;
    }
    HEAP32[$agg$result>>2] = $164;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $$pre33 = 0, $$pre35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0;
 var $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 40;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre35 = (($__buf) + 8|0);
    $$pre$phi34Z2D = $15;$$pre$phi36Z2D = $$pre35;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre33 = (($__buf) + 1|0);
    $$pre$phi34Z2D = $$pre33;$$pre$phi36Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $165 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i6) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i6) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $165 = 1;$88 = 0;
     } else {
      $165 = 0;$88 = $$pre$i$i$i6;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($165) {
        $166 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($165) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $166 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i24 = (($72) + -1)|0;
      $73 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi34Z2D;
     } else {
      $79 = HEAP32[$$pre$phi36Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $166;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i6 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   $120 = HEAP8[$__in_units>>0]|0;
   $121 = ($120<<24>>24)==(0);
   $or$cond = $119 | $121;
   if (!($or$cond)) {
    $122 = HEAP32[$__g_end>>2]|0;
    $123 = $122;
    $124 = $__g;
    $125 = (($123) - ($124))|0;
    $126 = ($125|0)<(160);
    if ($126) {
     $127 = HEAP32[$__dc>>2]|0;
     $128 = (($122) + 4|0);
     HEAP32[$__g_end>>2] = $128;
     HEAP32[$122>>2] = $127;
    }
   }
   $129 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $130 = (+invoke_diii(552,($__a$2|0),($129|0),($__err|0)));
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 40;
   } else {
    HEAPF64[$__v>>3] = $130;
    $133 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$133,$__err);
    $134 = ($$lcssa|0)==(0|0);
    if ($134) {
     $164 = 0;$167 = 1;
    } else {
     $135 = (($$lcssa) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = (($$lcssa) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$lcssa>>2]|0;
      $141 = (($140) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      __THREW__ = 0;
      $143 = (invoke_ii($142|0,($$lcssa|0))|0);
      $144 = __THREW__; __THREW__ = 0;
      $145 = $144&1;
      if ($145) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $143;
      }
     } else {
      $146 = HEAP32[$136>>2]|0;
      $$0$i$i$i$i = $146;
     }
     $147 = ($$0$i$i$i$i|0)==(-1);
     if ($147) {
      HEAP32[$__b>>2] = 0;
      $164 = 0;$167 = 1;
     } else {
      $164 = $$lcssa;$167 = 0;
     }
    }
    $148 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 69;
     } else {
      $149 = (($$pre$i3$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i3$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i3$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i3$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $157;
       }
      } else {
       $160 = HEAP32[$150>>2]|0;
       $$0$i$i1$i$i = $160;
      }
      $161 = ($$0$i$i1$i$i|0)==(-1);
      if ($161) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($167) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($167) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $162 = HEAP32[$__err>>2]|0;
     $163 = $162 | 2;
     HEAP32[$__err>>2] = $163;
    }
    HEAP32[$agg$result>>2] = $164;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s,$__n,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__n = $__n|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsnprintf($__s,$__n,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  __THREW__ = 0;
  (invoke_ii(474,($0|0))|0);
  $3 = __THREW__; __THREW__ = 0;
  $4 = $3&1;
  if ($4) {
   $5 = ___cxa_find_matching_catch(0|0)|0;
   $6 = tempRet0;
   ___clang_call_terminate($5);
   // unreachable;
  }
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 __THREW__ = 0;
 $1 = (invoke_iiii(553,($__s|0),($__format|0),($__va|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if ($3) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = ($0|0)==(0|0);
  if (!($11)) {
   __THREW__ = 0;
   (invoke_ii(474,($0|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    $14 = ___cxa_find_matching_catch(0|0)|0;
    $15 = tempRet0;
    ___clang_call_terminate($14);
    // unreachable;
   }
  }
  ___resumeException($9|0);
  // unreachable;
 } else {
  $4 = ($0|0)==(0|0);
  if (!($4)) {
   __THREW__ = 0;
   (invoke_ii(474,($0|0))|0);
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    $7 = ___cxa_find_matching_catch(0|0)|0;
    $8 = tempRet0;
    ___clang_call_terminate($7);
    // unreachable;
   }
  }
  STACKTOP = sp;return ($1|0);
 }
 return (0)|0;
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $agg$result = $agg$result|0;
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   HEAP32[$agg$result>>2] = 0;
  } else {
   $2 = $__oe;
   $3 = $__ob;
   $4 = (($2) - ($3))|0;
   $5 = $4 >> 2;
   $6 = (($__iob) + 12|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)>($5|0);
   $9 = (($7) - ($5))|0;
   $__ns$0 = $8 ? $9 : 0;
   $10 = $__op;
   $11 = (($10) - ($3))|0;
   $12 = $11 >> 2;
   $13 = ($11|0)>(0);
   if ($13) {
    $14 = HEAP32[$0>>2]|0;
    $15 = (($14) + 48|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 1023]($0,$__ob,$12)|0);
    $18 = ($17|0)==($12|0);
    if (!($18)) {
     HEAP32[$__s>>2] = 0;
     HEAP32[$agg$result>>2] = 0;
     break;
    }
   }
   $19 = ($__ns$0|0)>(0);
   do {
    if ($19) {
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp,$__ns$0,$__fl);
     $20 = HEAP8[$__sp>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $25 = (($__sp) + 4|0);
      $29 = $25;
     } else {
      $23 = (($__sp) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      $29 = $24;
     }
     $26 = HEAP32[$0>>2]|0;
     $27 = (($26) + 48|0);
     $28 = HEAP32[$27>>2]|0;
     __THREW__ = 0;
     $30 = (invoke_iiii($28|0,($0|0),($29|0),($__ns$0|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      $34 = ___cxa_find_matching_catch()|0;
      $35 = tempRet0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      ___resumeException($34|0);
      // unreachable;
     }
     $33 = ($30|0)==($__ns$0|0);
     if ($33) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      break;
     } else {
      HEAP32[$__s>>2] = 0;
      HEAP32[$agg$result>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      break L1;
     }
    }
   } while(0);
   $36 = (($2) - ($10))|0;
   $37 = $36 >> 2;
   $38 = ($36|0)>(0);
   if ($38) {
    $39 = HEAP32[$0>>2]|0;
    $40 = (($39) + 48|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($0,$__op,$37)|0);
    $43 = ($42|0)==($37|0);
    if (!($43)) {
     HEAP32[$__s>>2] = 0;
     HEAP32[$agg$result>>2] = 0;
     break;
    }
   }
   HEAP32[$6>>2] = 0;
   HEAP32[$agg$result>>2] = $0;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $__r$0$lcssa35 = 0, $isascii1$i = 0, $isascii1$i12 = 0, $sext = 0, $sext24 = 0, $tmp$i$i9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = (($14) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (($14) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = (($21) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 1023]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $156 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $156 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($28) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = (($34) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $isascii1$i = ($40<<24>>24)>(-1);
   if ($isascii1$i) {
    $sext = $$0$i$i << 24;
    $41 = $sext >> 24;
    $42 = (($__ct) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (($43) + ($41<<1)|0);
    $45 = HEAP16[$44>>1]|0;
    $46 = $45 & 2048;
    $47 = ($46<<16>>16)==(0);
    if (!($47)) {
     $50 = HEAP32[$__ct>>2]|0;
     $51 = (($50) + 36|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (FUNCTION_TABLE_iiii[$52 & 1023]($__ct,$40,0)|0);
     $54 = $53 << 24 >> 24;
     $55 = HEAP32[$__b>>2]|0;
     $56 = (($55) + 12|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = (($55) + 16|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ($57|0)==($59|0);
     if ($60) {
      $61 = HEAP32[$55>>2]|0;
      $62 = (($61) + 40|0);
      $63 = HEAP32[$62>>2]|0;
      (FUNCTION_TABLE_ii[$63 & 1023]($55)|0);
     } else {
      $64 = (($57) + 1|0);
      HEAP32[$56>>2] = $64;
     }
     $$0$in = $__n;$$pre$i2$i$i7 = $156;$79 = $156;$__r$0$in = $54;
     while(1) {
      $__r$0 = (($__r$0$in) + -48)|0;
      $$0 = (($$0$in) + -1)|0;
      $65 = HEAP32[$__b>>2]|0;
      $66 = ($65|0)==(0|0);
      do {
       if ($66) {
        $77 = 0;
       } else {
        $67 = (($65) + 12|0);
        $68 = HEAP32[$67>>2]|0;
        $69 = (($65) + 16|0);
        $70 = HEAP32[$69>>2]|0;
        $71 = ($68|0)==($70|0);
        if ($71) {
         $72 = HEAP32[$65>>2]|0;
         $73 = (($72) + 36|0);
         $74 = HEAP32[$73>>2]|0;
         $75 = (FUNCTION_TABLE_ii[$74 & 1023]($65)|0);
         $76 = ($75|0)==(-1);
         if ($76) {
          HEAP32[$__b>>2] = 0;
          $77 = 0;
          break;
         } else {
          $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
          $77 = $$pre$i$i$i3;
          break;
         }
        } else {
         $77 = $65;
        }
       }
      } while(0);
      $78 = ($77|0)==(0|0);
      $80 = ($79|0)==(0|0);
      if ($80) {
       $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = 0;
      } else {
       $81 = (($79) + 12|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = (($79) + 16|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = ($82|0)==($84|0);
       if ($85) {
        $86 = HEAP32[$79>>2]|0;
        $87 = (($86) + 36|0);
        $88 = HEAP32[$87>>2]|0;
        $89 = (FUNCTION_TABLE_ii[$88 & 1023]($79)|0);
        $90 = ($89|0)==(-1);
        if ($90) {
         HEAP32[$__e>>2] = 0;
         $$pre$i2$i$i20 = 0;$91 = 0;
        } else {
         $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $$pre$i2$i$i7;
        }
       } else {
        $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $79;
       }
      }
      $92 = ($91|0)==(0|0);
      $tmp$i$i9 = $78 ^ $92;
      $93 = ($$0$in|0)>(1);
      $$ = $93 & $tmp$i$i9;
      $94 = HEAP32[$__b>>2]|0;
      if (!($$)) {
       $$lcssa = $94;$$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;$__r$0$lcssa = $__r$0;
       break;
      }
      $95 = (($94) + 12|0);
      $96 = HEAP32[$95>>2]|0;
      $97 = (($94) + 16|0);
      $98 = HEAP32[$97>>2]|0;
      $99 = ($96|0)==($98|0);
      if ($99) {
       $100 = HEAP32[$94>>2]|0;
       $101 = (($100) + 36|0);
       $102 = HEAP32[$101>>2]|0;
       $103 = (FUNCTION_TABLE_ii[$102 & 1023]($94)|0);
       $$0$i$i10 = $103;
      } else {
       $104 = HEAP8[$96>>0]|0;
       $105 = $104&255;
       $$0$i$i10 = $105;
      }
      $106 = $$0$i$i10&255;
      $isascii1$i12 = ($106<<24>>24)>(-1);
      if (!($isascii1$i12)) {
       $__r$0$lcssa35 = $__r$0;
       label = 54;
       break;
      }
      $sext24 = $$0$i$i10 << 24;
      $107 = $sext24 >> 24;
      $108 = HEAP32[$42>>2]|0;
      $109 = (($108) + ($107<<1)|0);
      $110 = HEAP16[$109>>1]|0;
      $111 = $110 & 2048;
      $112 = ($111<<16>>16)==(0);
      if ($112) {
       $__r$0$lcssa35 = $__r$0;
       label = 54;
       break;
      }
      $113 = ($__r$0*10)|0;
      $114 = HEAP32[$__ct>>2]|0;
      $115 = (($114) + 36|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = (FUNCTION_TABLE_iiii[$116 & 1023]($__ct,$106,0)|0);
      $118 = $117 << 24 >> 24;
      $119 = (($118) + ($113))|0;
      $120 = HEAP32[$__b>>2]|0;
      $121 = (($120) + 12|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = (($120) + 16|0);
      $124 = HEAP32[$123>>2]|0;
      $125 = ($122|0)==($124|0);
      if ($125) {
       $126 = HEAP32[$120>>2]|0;
       $127 = (($126) + 40|0);
       $128 = HEAP32[$127>>2]|0;
       (FUNCTION_TABLE_ii[$128 & 1023]($120)|0);
      } else {
       $129 = (($122) + 1|0);
       HEAP32[$121>>2] = $129;
      }
      $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $119;
     }
     if ((label|0) == 54) {
      $$01 = $__r$0$lcssa35;
      break;
     }
     $130 = ($$lcssa|0)==(0|0);
     do {
      if ($130) {
       $141 = 0;
      } else {
       $131 = (($$lcssa) + 12|0);
       $132 = HEAP32[$131>>2]|0;
       $133 = (($$lcssa) + 16|0);
       $134 = HEAP32[$133>>2]|0;
       $135 = ($132|0)==($134|0);
       if ($135) {
        $136 = HEAP32[$$lcssa>>2]|0;
        $137 = (($136) + 36|0);
        $138 = HEAP32[$137>>2]|0;
        $139 = (FUNCTION_TABLE_ii[$138 & 1023]($$lcssa)|0);
        $140 = ($139|0)==(-1);
        if ($140) {
         HEAP32[$__b>>2] = 0;
         $141 = 0;
         break;
        } else {
         $$pre$i$i$i16 = HEAP32[$__b>>2]|0;
         $141 = $$pre$i$i$i16;
         break;
        }
       } else {
        $141 = $$lcssa;
       }
      }
     } while(0);
     $142 = ($141|0)==(0|0);
     $143 = ($$pre$i2$i$i20$lcssa|0)==(0|0);
     do {
      if ($143) {
       label = 52;
      } else {
       $144 = (($$pre$i2$i$i20$lcssa) + 12|0);
       $145 = HEAP32[$144>>2]|0;
       $146 = (($$pre$i2$i$i20$lcssa) + 16|0);
       $147 = HEAP32[$146>>2]|0;
       $148 = ($145|0)==($147|0);
       if ($148) {
        $149 = HEAP32[$$pre$i2$i$i20$lcssa>>2]|0;
        $150 = (($149) + 36|0);
        $151 = HEAP32[$150>>2]|0;
        $152 = (FUNCTION_TABLE_ii[$151 & 1023]($$pre$i2$i$i20$lcssa)|0);
        $153 = ($152|0)==(-1);
        if ($153) {
         HEAP32[$__e>>2] = 0;
         label = 52;
         break;
        }
       }
       if ($142) {
        $$01 = $__r$0$lcssa;
        break L16;
       }
      }
     } while(0);
     if ((label|0) == 52) {
      if (!($142)) {
       $$01 = $__r$0$lcssa;
       break;
      }
     }
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $48 = HEAP32[$__err>>2]|0;
   $49 = $48 | 4;
   HEAP32[$__err>>2] = $49;
   $$01 = 0;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i19 = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $__r$0$lcssa40 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i20 = 0, $phitmp$i$i$i5 = 0, $phitmp$i4$i$i11 = 0, $tmp$i$i13 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $147 = 1;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $147 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $147 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = (($13) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($13) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($147) {
     $148 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($147) {
   label = 16;
  } else {
   $148 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($28) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = (($34) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = (($39) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($__ct,2048,$$0$i$i)|0);
   if (!($42)) {
    $43 = HEAP32[$__err>>2]|0;
    $44 = $43 | 4;
    HEAP32[$__err>>2] = $44;
    $$01 = 0;
    break;
   }
   $45 = HEAP32[$__ct>>2]|0;
   $46 = (($45) + 52|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_iiii[$47 & 1023]($__ct,$$0$i$i,0)|0);
   $49 = $48 << 24 >> 24;
   $50 = HEAP32[$__b>>2]|0;
   $51 = (($50) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = (($50) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = HEAP32[$50>>2]|0;
    $57 = (($56) + 40|0);
    $58 = HEAP32[$57>>2]|0;
    (FUNCTION_TABLE_ii[$58 & 1023]($50)|0);
   } else {
    $59 = (($52) + 4|0);
    HEAP32[$51>>2] = $59;
   }
   $$0$in = $__n;$$pre$i3$i$i10 = $148;$73 = $148;$__r$0$in = $49;
   while(1) {
    $__r$0 = (($__r$0$in) + -48)|0;
    $$0 = (($$0$in) + -1)|0;
    $60 = HEAP32[$__b>>2]|0;
    $61 = ($60|0)==(0|0);
    do {
     if ($61) {
      $87 = 1;
     } else {
      $62 = (($60) + 12|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = (($60) + 16|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($63|0)==($65|0);
      if ($66) {
       $67 = HEAP32[$60>>2]|0;
       $68 = (($67) + 36|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = (FUNCTION_TABLE_ii[$69 & 1023]($60)|0);
       $$0$i$i$i$i2 = $70;
      } else {
       $71 = HEAP32[$63>>2]|0;
       $$0$i$i$i$i2 = $71;
      }
      $72 = ($$0$i$i$i$i2|0)==(-1);
      if ($72) {
       HEAP32[$__b>>2] = 0;
       $87 = 1;
       break;
      } else {
       $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i5 = ($$pre$i$i$i4|0)==(0|0);
       $87 = $phitmp$i$i$i5;
       break;
      }
     }
    } while(0);
    $74 = ($73|0)==(0|0);
    do {
     if ($74) {
      $$pre$i3$i$i25 = $$pre$i3$i$i10;$149 = 0;$86 = 1;
     } else {
      $75 = (($73) + 12|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = (($73) + 16|0);
      $78 = HEAP32[$77>>2]|0;
      $79 = ($76|0)==($78|0);
      if ($79) {
       $80 = HEAP32[$73>>2]|0;
       $81 = (($80) + 36|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = (FUNCTION_TABLE_ii[$82 & 1023]($73)|0);
       $$0$i$i1$i$i8 = $83;
      } else {
       $84 = HEAP32[$76>>2]|0;
       $$0$i$i1$i$i8 = $84;
      }
      $85 = ($$0$i$i1$i$i8|0)==(-1);
      if ($85) {
       HEAP32[$__e>>2] = 0;
       $$pre$i3$i$i25 = 0;$149 = 0;$86 = 1;
       break;
      } else {
       $phitmp$i4$i$i11 = ($$pre$i3$i$i10|0)==(0|0);
       $$pre$i3$i$i25 = $$pre$i3$i$i10;$149 = $$pre$i3$i$i10;$86 = $phitmp$i4$i$i11;
       break;
      }
     }
    } while(0);
    $tmp$i$i13 = $87 ^ $86;
    $88 = ($$0$in|0)>(1);
    $$ = $88 & $tmp$i$i13;
    $89 = HEAP32[$__b>>2]|0;
    if (!($$)) {
     $$lcssa = $89;$$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;$__r$0$lcssa = $__r$0;
     break;
    }
    $90 = (($89) + 12|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = (($89) + 16|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($91|0)==($93|0);
    if ($94) {
     $95 = HEAP32[$89>>2]|0;
     $96 = (($95) + 36|0);
     $97 = HEAP32[$96>>2]|0;
     $98 = (FUNCTION_TABLE_ii[$97 & 1023]($89)|0);
     $$0$i$i14 = $98;
    } else {
     $99 = HEAP32[$91>>2]|0;
     $$0$i$i14 = $99;
    }
    $100 = HEAP32[$__ct>>2]|0;
    $101 = (($100) + 12|0);
    $102 = HEAP32[$101>>2]|0;
    $103 = (FUNCTION_TABLE_iiii[$102 & 1023]($__ct,2048,$$0$i$i14)|0);
    if (!($103)) {
     $__r$0$lcssa40 = $__r$0;
     label = 65;
     break;
    }
    $104 = ($__r$0*10)|0;
    $105 = HEAP32[$__ct>>2]|0;
    $106 = (($105) + 52|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = (FUNCTION_TABLE_iiii[$107 & 1023]($__ct,$$0$i$i14,0)|0);
    $109 = $108 << 24 >> 24;
    $110 = (($109) + ($104))|0;
    $111 = HEAP32[$__b>>2]|0;
    $112 = (($111) + 12|0);
    $113 = HEAP32[$112>>2]|0;
    $114 = (($111) + 16|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = ($113|0)==($115|0);
    if ($116) {
     $117 = HEAP32[$111>>2]|0;
     $118 = (($117) + 40|0);
     $119 = HEAP32[$118>>2]|0;
     (FUNCTION_TABLE_ii[$119 & 1023]($111)|0);
    } else {
     $120 = (($113) + 4|0);
     HEAP32[$112>>2] = $120;
    }
    $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $149;$__r$0$in = $110;
   }
   if ((label|0) == 65) {
    $$01 = $__r$0$lcssa40;
    break;
   }
   $121 = ($$lcssa|0)==(0|0);
   do {
    if ($121) {
     $150 = 1;
    } else {
     $122 = (($$lcssa) + 12|0);
     $123 = HEAP32[$122>>2]|0;
     $124 = (($$lcssa) + 16|0);
     $125 = HEAP32[$124>>2]|0;
     $126 = ($123|0)==($125|0);
     if ($126) {
      $127 = HEAP32[$$lcssa>>2]|0;
      $128 = (($127) + 36|0);
      $129 = HEAP32[$128>>2]|0;
      $130 = (FUNCTION_TABLE_ii[$129 & 1023]($$lcssa)|0);
      $$0$i$i$i$i17 = $130;
     } else {
      $131 = HEAP32[$123>>2]|0;
      $$0$i$i$i$i17 = $131;
     }
     $132 = ($$0$i$i$i$i17|0)==(-1);
     if ($132) {
      HEAP32[$__b>>2] = 0;
      $150 = 1;
      break;
     } else {
      $$pre$i$i$i19 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i20 = ($$pre$i$i$i19|0)==(0|0);
      $150 = $phitmp$i$i$i20;
      break;
     }
    }
   } while(0);
   $133 = ($$pre$i3$i$i25$lcssa|0)==(0|0);
   do {
    if ($133) {
     label = 62;
    } else {
     $134 = (($$pre$i3$i$i25$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$pre$i3$i$i25$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$pre$i3$i$i25$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      $142 = (FUNCTION_TABLE_ii[$141 & 1023]($$pre$i3$i$i25$lcssa)|0);
      $$0$i$i1$i$i23 = $142;
     } else {
      $143 = HEAP32[$135>>2]|0;
      $$0$i$i1$i$i23 = $143;
     }
     $144 = ($$0$i$i1$i$i23|0)==(-1);
     if ($144) {
      HEAP32[$__e>>2] = 0;
      label = 62;
      break;
     } else {
      if ($150) {
       $$01 = $__r$0$lcssa;
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 62) {
    if (!($150)) {
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $145 = HEAP32[$__err>>2]|0;
   $146 = $145 | 2;
   HEAP32[$__err>>2] = $146;
   $$01 = $__r$0$lcssa;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__b) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(475|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $2 ? $4 : 0;
 $14 = (_realloc($13,$$)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   HEAP32[$__b>>2] = $14;
   $23 = $14;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   HEAP32[$__b>>2] = $14;
   $16 = ($$pr|0)==(0|0);
   if ($16) {
    $23 = $14;
   } else {
    $17 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($17|0,($$pr|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if ($19) {
     $20 = ___cxa_find_matching_catch(0|0)|0;
     $21 = tempRet0;
     ___clang_call_terminate($20);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $23 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = 554;
 $22 = (($23) + ($12)|0);
 HEAP32[$__n>>2] = $22;
 $24 = HEAP32[$__b>>2]|0;
 $25 = (($24) + ($$)|0);
 HEAP32[$__e>>2] = $25;
 return;
}
function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__b) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(475|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   HEAP32[$__b>>2] = $15;
   $25 = $15;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   HEAP32[$__b>>2] = $15;
   $17 = ($$pr|0)==(0|0);
   if ($17) {
    $25 = $15;
   } else {
    $18 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($18|0,($$pr|0));
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if ($20) {
     $21 = ___cxa_find_matching_catch(0|0)|0;
     $22 = tempRet0;
     ___clang_call_terminate($21);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $25 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = 554;
 $23 = $$ >>> 2;
 $24 = (($25) + ($13<<2)|0);
 HEAP32[$__n>>2] = $24;
 $26 = HEAP32[$__b>>2]|0;
 $27 = (($26) + ($23<<2)|0);
 HEAP32[$__e>>2] = $27;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, $phitmp$i = 0, $scevgep = 0, $scevgep1 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $15 = $5;$16 = 10;$40 = $1;
 } else {
  $6 = (($this) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $15 = $7;$16 = $phitmp$i;$40 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = ($__last|0)==($__first|0);
 do {
  if (!($13)) {
   $14 = (($16) - ($15))|0;
   $17 = ($14>>>0)<($12>>>0);
   if ($17) {
    $18 = (($15) + ($12))|0;
    $19 = (($18) - ($16))|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $21 = $$pre;
   } else {
    $21 = $40;
   }
   $20 = $21 & 1;
   $22 = ($20<<24>>24)==(0);
   if ($22) {
    $25 = (($this) + 1|0);
    $27 = $25;
   } else {
    $23 = (($this) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $27 = $24;
   }
   $26 = (($27) + ($15)|0);
   $28 = (($15) - ($0))|0;
   $scevgep = (($__last) + ($28)|0);
   $scevgep1 = $scevgep;
   $$0 = $__first;$__p$0 = $26;
   while(1) {
    $29 = ($$0|0)==($__last|0);
    if ($29) {
     break;
    }
    $30 = HEAP8[$$0>>0]|0;
    HEAP8[$__p$0>>0] = $30;
    $31 = (($__p$0) + 1|0);
    $32 = (($$0) + 1|0);
    $$0 = $32;$__p$0 = $31;
   }
   $scevgep2 = (($27) + ($scevgep1)|0);
   HEAP8[$scevgep2>>0] = 0;
   $33 = (($15) + ($12))|0;
   $34 = HEAP8[$this>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $38 = $33 << 1;
    $39 = $38&255;
    HEAP8[$this>>0] = $39;
    break;
   } else {
    $37 = (($this) + 4|0);
    HEAP32[$37>>2] = $33;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__b) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(475|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   HEAP32[$__b>>2] = $15;
   $25 = $15;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   HEAP32[$__b>>2] = $15;
   $17 = ($$pr|0)==(0|0);
   if ($17) {
    $25 = $15;
   } else {
    $18 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($18|0,($$pr|0));
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if ($20) {
     $21 = ___cxa_find_matching_catch(0|0)|0;
     $22 = tempRet0;
     ___clang_call_terminate($21);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $25 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = 554;
 $23 = $$ >>> 2;
 $24 = (($25) + ($13<<2)|0);
 HEAP32[$__n>>2] = $24;
 $26 = HEAP32[$__b>>2]|0;
 $27 = (($26) + ($23<<2)|0);
 HEAP32[$__e>>2] = $27;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, $phitmp$i = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $16 = $5;$17 = 1;$44 = $1;
 } else {
  $6 = (($this) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $16 = $7;$17 = $phitmp$i;$44 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = $12 >> 2;
 $14 = ($13|0)==(0);
 do {
  if (!($14)) {
   $15 = (($17) - ($16))|0;
   $18 = ($15>>>0)<($13>>>0);
   if ($18) {
    $19 = (($16) + ($13))|0;
    $20 = (($19) - ($17))|0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$17,$20,$16,$16,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $22 = $$pre;
   } else {
    $22 = $44;
   }
   $21 = $22 & 1;
   $23 = ($21<<24>>24)==(0);
   if ($23) {
    $26 = (($this) + 4|0);
    $28 = $26;
   } else {
    $24 = (($this) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    $28 = $25;
   }
   $27 = (($28) + ($16<<2)|0);
   $29 = $__last;
   $30 = (($29) - ($0))|0;
   $31 = $30 >>> 2;
   $32 = (($16) + ($31))|0;
   $$0 = $__first;$__p$0 = $27;
   while(1) {
    $33 = ($$0|0)==($__last|0);
    if ($33) {
     break;
    }
    $34 = HEAP32[$$0>>2]|0;
    HEAP32[$__p$0>>2] = $34;
    $35 = (($__p$0) + 4|0);
    $36 = (($$0) + 4|0);
    $$0 = $36;$__p$0 = $35;
   }
   $scevgep = (($28) + ($32<<2)|0);
   HEAP32[$scevgep>>2] = 0;
   $37 = (($16) + ($13))|0;
   $38 = HEAP8[$this>>0]|0;
   $39 = $38 & 1;
   $40 = ($39<<24>>24)==(0);
   if ($40) {
    $42 = $37 << 1;
    $43 = $42&255;
    HEAP8[$this>>0] = $43;
    break;
   } else {
    $41 = (($this) + 4|0);
    HEAP32[$41>>2] = $37;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = (($this) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = (($this) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = (($this) + 128|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__n|0)==(0);
 do {
  if (!($3)) {
   __THREW__ = 0;
   invoke_vii(555,($this|0),($__n|0));
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $6 = ___cxa_find_matching_catch()|0;
    $7 = tempRet0;
    __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this);
    ___resumeException($6|0);
    // unreachable;
   } else {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5424)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5464)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7032)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7024)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7096)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7104)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7160)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7168)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7176)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7184)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5536)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5656)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5720)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5816)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6408)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6472)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6536)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6600)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6640)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6720)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6776)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6824)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5928)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6080)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6312)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6344)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6864)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6904)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$pre$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if (!($1)) {
   $2 = (($this) + 4|0);
   $$pre$i$i = HEAP32[$2>>2]|0;
   $3 = $$pre$i$i;
   while(1) {
    $4 = ($3|0)==($0|0);
    if ($4) {
     break;
    }
    $5 = (($3) + -4|0);
    HEAP32[$2>>2] = $5;
    $3 = $5;
   }
   $6 = (($this) + 16|0);
   $7 = ($6|0)==($0|0);
   if ($7) {
    $8 = (($this) + 128|0);
    HEAP8[$8>>0] = 0;
    break;
   } else {
    __ZdlPv($0);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$8);
 } else {
  $9 = ($6>>>0)>($__sz>>>0);
  if ($9) {
   $10 = (($2) + ($__sz<<2)|0);
   $11 = $1;
   while(1) {
    $12 = ($11|0)==($10|0);
    if ($12) {
     break;
    }
    $13 = (($11) + -4|0);
    HEAP32[$0>>2] = $13;
    $11 = $13;
   }
  }
 }
 return;
}
function __ZNKSt3__16locale5__imp9has_facetEl($this,$id) {
 $this = $this|0;
 $id = $id|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 if ($8) {
  $9 = (($3) + ($id<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)!=(0|0);
  $12 = $11;
 } else {
  $12 = 0;
 }
 return ($12|0);
}
function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__vp) + 4|0);
 $$field = HEAP32[$0>>2]|0;
 $$index1 = (($0) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $1 = HEAP32[$__vp>>2]|0;
 $2 = $$field2 >> 1;
 $3 = (($1) + ($2)|0);
 $4 = $$field2 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $9 = $$field;
  $10 = $9;
 } else {
  $6 = HEAP32[$3>>2]|0;
  $7 = (($6) + ($$field)|0);
  $8 = HEAP32[$7>>2]|0;
  $10 = $8;
 }
 FUNCTION_TABLE_vi[$10 & 1023]($3);
 return;
}
function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$0$ph = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = (($to) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = (($6) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = (($8) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 if ((label|0) == 4) {
  $10 = $frm_end;
  $$pre = HEAP32[$frm_nxt>>2]|0;
  $11 = $$pre;
  L6: while(1) {
   $12 = ($11>>>0)<($frm_end>>>0);
   if (!($12)) {
    $$0$ph = 0;
    break;
   }
   $13 = HEAP16[$11>>1]|0;
   $14 = $13&65535;
   $15 = ($14>>>0)>($Maxcode>>>0);
   if ($15) {
    $$0$ph = 2;
    break;
   }
   $16 = ($13&65535)<(128);
   do {
    if ($16) {
     $17 = HEAP32[$to_nxt>>2]|0;
     $18 = $17;
     $19 = (($$pre1) - ($18))|0;
     $20 = ($19|0)<(1);
     if ($20) {
      $$0$ph = 1;
      break L6;
     }
     $21 = $13&255;
     $22 = (($17) + 1|0);
     HEAP32[$to_nxt>>2] = $22;
     HEAP8[$17>>0] = $21;
    } else {
     $23 = ($13&65535)<(2048);
     if ($23) {
      $24 = HEAP32[$to_nxt>>2]|0;
      $25 = $24;
      $26 = (($$pre1) - ($25))|0;
      $27 = ($26|0)<(2);
      if ($27) {
       $$0$ph = 1;
       break L6;
      }
      $28 = $14 >>> 6;
      $29 = $28 | 192;
      $30 = $29&255;
      $31 = (($24) + 1|0);
      HEAP32[$to_nxt>>2] = $31;
      HEAP8[$24>>0] = $30;
      $32 = $14 & 63;
      $33 = $32 | 128;
      $34 = $33&255;
      $35 = HEAP32[$to_nxt>>2]|0;
      $36 = (($35) + 1|0);
      HEAP32[$to_nxt>>2] = $36;
      HEAP8[$35>>0] = $34;
      break;
     }
     $37 = ($13&65535)<(55296);
     if ($37) {
      $38 = HEAP32[$to_nxt>>2]|0;
      $39 = $38;
      $40 = (($$pre1) - ($39))|0;
      $41 = ($40|0)<(3);
      if ($41) {
       $$0$ph = 1;
       break L6;
      }
      $42 = $14 >>> 12;
      $43 = $42 | 224;
      $44 = $43&255;
      $45 = (($38) + 1|0);
      HEAP32[$to_nxt>>2] = $45;
      HEAP8[$38>>0] = $44;
      $46 = $14 >>> 6;
      $47 = $46 & 63;
      $48 = $47 | 128;
      $49 = $48&255;
      $50 = HEAP32[$to_nxt>>2]|0;
      $51 = (($50) + 1|0);
      HEAP32[$to_nxt>>2] = $51;
      HEAP8[$50>>0] = $49;
      $52 = $14 & 63;
      $53 = $52 | 128;
      $54 = $53&255;
      $55 = HEAP32[$to_nxt>>2]|0;
      $56 = (($55) + 1|0);
      HEAP32[$to_nxt>>2] = $56;
      HEAP8[$55>>0] = $54;
      break;
     }
     $57 = ($13&65535)<(56320);
     if (!($57)) {
      $109 = ($13&65535)<(57344);
      if ($109) {
       $$0$ph = 2;
       break L6;
      }
      $110 = HEAP32[$to_nxt>>2]|0;
      $111 = $110;
      $112 = (($$pre1) - ($111))|0;
      $113 = ($112|0)<(3);
      if ($113) {
       $$0$ph = 1;
       break L6;
      }
      $114 = $14 >>> 12;
      $115 = $114 | 224;
      $116 = $115&255;
      $117 = (($110) + 1|0);
      HEAP32[$to_nxt>>2] = $117;
      HEAP8[$110>>0] = $116;
      $118 = $14 >>> 6;
      $119 = $118 & 63;
      $120 = $119 | 128;
      $121 = $120&255;
      $122 = HEAP32[$to_nxt>>2]|0;
      $123 = (($122) + 1|0);
      HEAP32[$to_nxt>>2] = $123;
      HEAP8[$122>>0] = $121;
      $124 = $14 & 63;
      $125 = $124 | 128;
      $126 = $125&255;
      $127 = HEAP32[$to_nxt>>2]|0;
      $128 = (($127) + 1|0);
      HEAP32[$to_nxt>>2] = $128;
      HEAP8[$127>>0] = $126;
      break;
     }
     $58 = $11;
     $59 = (($10) - ($58))|0;
     $60 = ($59|0)<(4);
     if ($60) {
      $$0$ph = 1;
      break L6;
     }
     $61 = (($11) + 2|0);
     $62 = HEAP16[$61>>1]|0;
     $63 = $62&65535;
     $64 = $63 & 64512;
     $65 = ($64|0)==(56320);
     if (!($65)) {
      $$0$ph = 2;
      break L6;
     }
     $66 = HEAP32[$to_nxt>>2]|0;
     $67 = $66;
     $68 = (($$pre1) - ($67))|0;
     $69 = ($68|0)<(4);
     if ($69) {
      $$0$ph = 1;
      break L6;
     }
     $70 = $14 & 960;
     $71 = $70 << 10;
     $72 = (($71) + 65536)|0;
     $73 = $14 << 10;
     $74 = $73 & 64512;
     $75 = $72 | $74;
     $76 = $63 & 1023;
     $77 = $75 | $76;
     $78 = ($77>>>0)>($Maxcode>>>0);
     if ($78) {
      $$0$ph = 2;
      break L6;
     }
     HEAP32[$frm_nxt>>2] = $61;
     $79 = $70 >>> 6;
     $80 = (($79) + 1)|0;
     $81 = $80 >>> 2;
     $82 = $81 | 240;
     $83 = $82&255;
     $84 = HEAP32[$to_nxt>>2]|0;
     $85 = (($84) + 1|0);
     HEAP32[$to_nxt>>2] = $85;
     HEAP8[$84>>0] = $83;
     $86 = $80 << 4;
     $87 = $86 & 48;
     $88 = $14 >>> 2;
     $89 = $88 & 15;
     $90 = $89 | $87;
     $91 = $90 | 128;
     $92 = $91&255;
     $93 = HEAP32[$to_nxt>>2]|0;
     $94 = (($93) + 1|0);
     HEAP32[$to_nxt>>2] = $94;
     HEAP8[$93>>0] = $92;
     $95 = $14 << 4;
     $96 = $95 & 48;
     $97 = $63 >>> 6;
     $98 = $97 & 15;
     $99 = $96 | $98;
     $100 = $99 | 128;
     $101 = $100&255;
     $102 = HEAP32[$to_nxt>>2]|0;
     $103 = (($102) + 1|0);
     HEAP32[$to_nxt>>2] = $103;
     HEAP8[$102>>0] = $101;
     $104 = $63 & 63;
     $105 = $104 | 128;
     $106 = $105&255;
     $107 = HEAP32[$to_nxt>>2]|0;
     $108 = (($107) + 1|0);
     HEAP32[$to_nxt>>2] = $108;
     HEAP8[$107>>0] = $106;
    }
   } while(0);
   $129 = HEAP32[$frm_nxt>>2]|0;
   $130 = (($129) + 2|0);
   HEAP32[$frm_nxt>>2] = $130;
   $11 = $130;
  }
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$0$ph = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre = $frm_end;
  $$pre$phiZ2D = $$pre;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = (($2) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = (($2) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = (($2) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$phiZ2D = $3;
     } else {
      $$pre$phiZ2D = $3;
     }
    } else {
     $$pre$phiZ2D = $3;
    }
   } else {
    $$pre$phiZ2D = $3;
   }
  } else {
   $$pre$phiZ2D = $3;
  }
 }
 $16 = $to_end;
 L9: while(1) {
  $17 = HEAP32[$frm_nxt>>2]|0;
  $18 = ($17>>>0)<($frm_end>>>0);
  if (!($18)) {
   $$lcssa = $18;
   label = 41;
   break;
  }
  $19 = HEAP32[$to_nxt>>2]|0;
  $20 = ($19>>>0)<($to_end>>>0);
  if (!($20)) {
   $$lcssa = $18;
   label = 41;
   break;
  }
  $21 = HEAP8[$17>>0]|0;
  $22 = $21&255;
  $23 = ($22>>>0)>($Maxcode>>>0);
  if ($23) {
   $$0$ph = 2;
   label = 42;
   break;
  }
  $24 = ($21<<24>>24)>(-1);
  do {
   if ($24) {
    $25 = $21&255;
    HEAP16[$19>>1] = $25;
    $26 = (($17) + 1|0);
    HEAP32[$frm_nxt>>2] = $26;
   } else {
    $27 = ($21&255)<(194);
    if ($27) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $28 = ($21&255)<(224);
    if ($28) {
     $29 = $17;
     $30 = (($$pre$phiZ2D) - ($29))|0;
     $31 = ($30|0)<(2);
     if ($31) {
      $$0$ph = 1;
      label = 42;
      break L9;
     }
     $32 = (($17) + 1|0);
     $33 = HEAP8[$32>>0]|0;
     $34 = $33&255;
     $35 = $34 & 192;
     $36 = ($35|0)==(128);
     if (!($36)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
     $37 = $22 << 6;
     $38 = $37 & 1984;
     $39 = $34 & 63;
     $40 = $39 | $38;
     $41 = ($40>>>0)>($Maxcode>>>0);
     if ($41) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
     $42 = $40&65535;
     HEAP16[$19>>1] = $42;
     $43 = (($17) + 2|0);
     HEAP32[$frm_nxt>>2] = $43;
     break;
    }
    $44 = ($21&255)<(240);
    if ($44) {
     $45 = $17;
     $46 = (($$pre$phiZ2D) - ($45))|0;
     $47 = ($46|0)<(3);
     if ($47) {
      $$0$ph = 1;
      label = 42;
      break L9;
     }
     $48 = (($17) + 1|0);
     $49 = HEAP8[$48>>0]|0;
     $50 = (($17) + 2|0);
     $51 = HEAP8[$50>>0]|0;
     if ((($22|0) == 224)) {
      $52 = $49 & -32;
      $53 = ($52<<24>>24)==(-96);
      if (!($53)) {
       $$0$ph = 2;
       label = 42;
       break L9;
      }
     } else if ((($22|0) == 237)) {
      $54 = $49 & -32;
      $55 = ($54<<24>>24)==(-128);
      if (!($55)) {
       $$0$ph = 2;
       label = 42;
       break L9;
      }
     } else {
      $56 = $49 & -64;
      $57 = ($56<<24>>24)==(-128);
      if (!($57)) {
       $$0$ph = 2;
       label = 42;
       break L9;
      }
     }
     $58 = $51&255;
     $59 = $58 & 192;
     $60 = ($59|0)==(128);
     if (!($60)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
     $61 = $22 << 12;
     $62 = $49&255;
     $63 = $62 << 6;
     $64 = $63 & 4032;
     $65 = $64 | $61;
     $66 = $58 & 63;
     $67 = $65 | $66;
     $68 = $67 & 65535;
     $69 = ($68>>>0)>($Maxcode>>>0);
     if ($69) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
     $70 = $67&65535;
     HEAP16[$19>>1] = $70;
     $71 = (($17) + 3|0);
     HEAP32[$frm_nxt>>2] = $71;
     break;
    }
    $72 = ($21&255)<(245);
    if (!($72)) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $73 = $17;
    $74 = (($$pre$phiZ2D) - ($73))|0;
    $75 = ($74|0)<(4);
    if ($75) {
     $$0$ph = 1;
     label = 42;
     break L9;
    }
    $76 = (($17) + 1|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = (($17) + 2|0);
    $79 = HEAP8[$78>>0]|0;
    $80 = (($17) + 3|0);
    $81 = HEAP8[$80>>0]|0;
    if ((($22|0) == 240)) {
     $$off = (($77) + 112)<<24>>24;
     $82 = ($$off&255)<(48);
     if (!($82)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
    } else if ((($22|0) == 244)) {
     $83 = $77 & -16;
     $84 = ($83<<24>>24)==(-128);
     if (!($84)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
    } else {
     $85 = $77 & -64;
     $86 = ($85<<24>>24)==(-128);
     if (!($86)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
    }
    $87 = $79&255;
    $88 = $87 & 192;
    $89 = ($88|0)==(128);
    if (!($89)) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $90 = $81&255;
    $91 = $90 & 192;
    $92 = ($91|0)==(128);
    if (!($92)) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $93 = $19;
    $94 = (($16) - ($93))|0;
    $95 = ($94|0)<(4);
    if ($95) {
     $$0$ph = 1;
     label = 42;
     break L9;
    }
    $96 = $22 & 7;
    $97 = $96 << 18;
    $98 = $77&255;
    $99 = $98 << 12;
    $100 = $99 & 258048;
    $101 = $100 | $97;
    $102 = $87 << 6;
    $103 = $102 & 4032;
    $104 = $101 | $103;
    $105 = $90 & 63;
    $106 = $104 | $105;
    $107 = ($106>>>0)>($Maxcode>>>0);
    if ($107) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $108 = $96 << 2;
    $109 = $98 >>> 4;
    $110 = $109 & 3;
    $111 = $110 | $108;
    $112 = $111 << 6;
    $113 = (($112) + 16320)|0;
    $114 = $98 << 2;
    $115 = $114 & 60;
    $116 = $87 >>> 4;
    $117 = $116 & 3;
    $118 = $115 | $117;
    $119 = $118 | $113;
    $120 = $119 | 55296;
    $121 = $120&65535;
    HEAP16[$19>>1] = $121;
    $122 = $102 & 960;
    $123 = $105 | $122;
    $124 = $123 | 56320;
    $125 = $124&65535;
    $126 = (($19) + 2|0);
    HEAP32[$to_nxt>>2] = $126;
    HEAP16[$126>>1] = $125;
    $127 = HEAP32[$frm_nxt>>2]|0;
    $128 = (($127) + 4|0);
    HEAP32[$frm_nxt>>2] = $128;
   }
  } while(0);
  $129 = HEAP32[$to_nxt>>2]|0;
  $130 = (($129) + 2|0);
  HEAP32[$to_nxt>>2] = $130;
 }
 if ((label|0) == 41) {
  $131 = $$lcssa&1;
  $$0 = $131;
 }
 else if ((label|0) == 42) {
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa43 = 0, $$lcssa44 = 0, $$lcssa45 = 0, $$lcssa46 = 0, $$lcssa47 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$2 = 0, $nchar16_t$0 = 0, $nchar16_t$1 = 0, $or$cond = 0, $or$cond2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = (($frm) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = (($frm) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = (($frm) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $frm_nxt$1 = $frm_nxt$1$ph;$nchar16_t$0 = 0;
 L7: while(1) {
  $14 = ($frm_nxt$1>>>0)<($frm_end>>>0);
  $15 = ($nchar16_t$0>>>0)<($mx>>>0);
  $or$cond = $15 & $14;
  if (!($or$cond)) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  $16 = HEAP8[$frm_nxt$1>>0]|0;
  $17 = $16&255;
  $18 = ($17>>>0)>($Maxcode>>>0);
  if ($18) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  $19 = ($16<<24>>24)>(-1);
  do {
   if ($19) {
    $20 = (($frm_nxt$1) + 1|0);
    $frm_nxt$2 = $20;$nchar16_t$1 = $nchar16_t$0;
   } else {
    $21 = ($16&255)<(194);
    if ($21) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $22 = ($16&255)<(224);
    if ($22) {
     $23 = $frm_nxt$1;
     $24 = (($$pre) - ($23))|0;
     $25 = ($24|0)<(2);
     if ($25) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $26 = (($frm_nxt$1) + 1|0);
     $27 = HEAP8[$26>>0]|0;
     $28 = $27&255;
     $29 = $28 & 192;
     $30 = ($29|0)==(128);
     if (!($30)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $31 = $17 << 6;
     $32 = $31 & 1984;
     $33 = $28 & 63;
     $34 = $33 | $32;
     $35 = ($34>>>0)>($Maxcode>>>0);
     if ($35) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $36 = (($frm_nxt$1) + 2|0);
     $frm_nxt$2 = $36;$nchar16_t$1 = $nchar16_t$0;
     break;
    }
    $37 = ($16&255)<(240);
    if ($37) {
     $38 = $frm_nxt$1;
     $39 = (($$pre) - ($38))|0;
     $40 = ($39|0)<(3);
     if ($40) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $41 = (($frm_nxt$1) + 1|0);
     $42 = HEAP8[$41>>0]|0;
     $43 = (($frm_nxt$1) + 2|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($17|0) == 224)) {
      $45 = $42 & -32;
      $46 = ($45<<24>>24)==(-96);
      if (!($46)) {
       $$lcssa46 = $38;
       label = 21;
       break L7;
      }
     } else if ((($17|0) == 237)) {
      $49 = $42 & -32;
      $50 = ($49<<24>>24)==(-128);
      if (!($50)) {
       $$lcssa45 = $38;
       label = 23;
       break L7;
      }
     } else {
      $53 = $42 & -64;
      $54 = ($53<<24>>24)==(-128);
      if (!($54)) {
       $$lcssa47 = $38;
       label = 25;
       break L7;
      }
     }
     $57 = $44&255;
     $58 = $57 & 192;
     $59 = ($58|0)==(128);
     if (!($59)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $60 = $17 << 12;
     $61 = $60 & 61440;
     $62 = $42&255;
     $63 = $62 << 6;
     $64 = $63 & 4032;
     $65 = $64 | $61;
     $66 = $57 & 63;
     $67 = $65 | $66;
     $68 = ($67>>>0)>($Maxcode>>>0);
     if ($68) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $69 = (($frm_nxt$1) + 3|0);
     $frm_nxt$2 = $69;$nchar16_t$1 = $nchar16_t$0;
     break;
    }
    $70 = ($16&255)<(245);
    if (!($70)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $71 = $frm_nxt$1;
    $72 = (($$pre) - ($71))|0;
    $73 = ($72|0)<(4);
    $74 = (($mx) - ($nchar16_t$0))|0;
    $75 = ($74>>>0)<(2);
    $or$cond2 = $75 | $73;
    if ($or$cond2) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $76 = (($frm_nxt$1) + 1|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = (($frm_nxt$1) + 2|0);
    $79 = HEAP8[$78>>0]|0;
    $80 = (($frm_nxt$1) + 3|0);
    $81 = HEAP8[$80>>0]|0;
    if ((($17|0) == 240)) {
     $$off = (($77) + 112)<<24>>24;
     $82 = ($$off&255)<(48);
     if (!($82)) {
      $$lcssa43 = $71;
      label = 33;
      break L7;
     }
    } else if ((($17|0) == 244)) {
     $85 = $77 & -16;
     $86 = ($85<<24>>24)==(-128);
     if (!($86)) {
      $$lcssa = $71;
      label = 35;
      break L7;
     }
    } else {
     $89 = $77 & -64;
     $90 = ($89<<24>>24)==(-128);
     if (!($90)) {
      $$lcssa44 = $71;
      label = 37;
      break L7;
     }
    }
    $93 = $79&255;
    $94 = $93 & 192;
    $95 = ($94|0)==(128);
    if (!($95)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $96 = $81&255;
    $97 = $96 & 192;
    $98 = ($97|0)==(128);
    if (!($98)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $99 = $17 << 18;
    $100 = $99 & 1835008;
    $101 = $77&255;
    $102 = $101 << 12;
    $103 = $102 & 258048;
    $104 = $103 | $100;
    $105 = $93 << 6;
    $106 = $105 & 4032;
    $107 = $104 | $106;
    $108 = $96 & 63;
    $109 = $107 | $108;
    $110 = ($109>>>0)>($Maxcode>>>0);
    if ($110) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $111 = (($nchar16_t$0) + 1)|0;
    $112 = (($frm_nxt$1) + 4|0);
    $frm_nxt$2 = $112;$nchar16_t$1 = $111;
   }
  } while(0);
  $113 = (($nchar16_t$1) + 1)|0;
  $frm_nxt$1 = $frm_nxt$2;$nchar16_t$0 = $113;
 }
 if ((label|0) == 21) {
  $47 = $frm;
  $48 = (($$lcssa46) - ($47))|0;
  $$0 = $48;
 }
 else if ((label|0) == 23) {
  $51 = $frm;
  $52 = (($$lcssa45) - ($51))|0;
  $$0 = $52;
 }
 else if ((label|0) == 25) {
  $55 = $frm;
  $56 = (($$lcssa47) - ($55))|0;
  $$0 = $56;
 }
 else if ((label|0) == 33) {
  $83 = $frm;
  $84 = (($$lcssa43) - ($83))|0;
  $$0 = $84;
 }
 else if ((label|0) == 35) {
  $87 = $frm;
  $88 = (($$lcssa) - ($87))|0;
  $$0 = $88;
 }
 else if ((label|0) == 37) {
  $91 = $frm;
  $92 = (($$lcssa44) - ($91))|0;
  $$0 = $92;
 }
 else if ((label|0) == 43) {
  $114 = $frm_nxt$1$lcssa;
  $115 = $frm;
  $116 = (($114) - ($115))|0;
  $$0 = $116;
 }
 return ($$0|0);
}
function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$0$ph = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = (($to) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = (($6) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = (($8) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 if ((label|0) == 4) {
  $$pre = HEAP32[$frm_nxt>>2]|0;
  $10 = $$pre;
  L6: while(1) {
   $11 = ($10>>>0)<($frm_end>>>0);
   if (!($11)) {
    $$0$ph = 0;
    break;
   }
   $12 = HEAP32[$10>>2]|0;
   $13 = $12 & -2048;
   $14 = ($13|0)==(55296);
   $15 = ($12>>>0)>($Maxcode>>>0);
   $or$cond = $15 | $14;
   if ($or$cond) {
    $$0$ph = 2;
    break;
   }
   $16 = ($12>>>0)<(128);
   do {
    if ($16) {
     $17 = HEAP32[$to_nxt>>2]|0;
     $18 = $17;
     $19 = (($$pre1) - ($18))|0;
     $20 = ($19|0)<(1);
     if ($20) {
      $$0$ph = 1;
      break L6;
     }
     $21 = $12&255;
     $22 = (($17) + 1|0);
     HEAP32[$to_nxt>>2] = $22;
     HEAP8[$17>>0] = $21;
    } else {
     $23 = ($12>>>0)<(2048);
     if ($23) {
      $24 = HEAP32[$to_nxt>>2]|0;
      $25 = $24;
      $26 = (($$pre1) - ($25))|0;
      $27 = ($26|0)<(2);
      if ($27) {
       $$0$ph = 1;
       break L6;
      }
      $28 = $12 >>> 6;
      $29 = $28 | 192;
      $30 = $29&255;
      $31 = (($24) + 1|0);
      HEAP32[$to_nxt>>2] = $31;
      HEAP8[$24>>0] = $30;
      $32 = $12 & 63;
      $33 = $32 | 128;
      $34 = $33&255;
      $35 = HEAP32[$to_nxt>>2]|0;
      $36 = (($35) + 1|0);
      HEAP32[$to_nxt>>2] = $36;
      HEAP8[$35>>0] = $34;
      break;
     }
     $37 = ($12>>>0)<(65536);
     $38 = HEAP32[$to_nxt>>2]|0;
     $39 = $38;
     $40 = (($$pre1) - ($39))|0;
     if ($37) {
      $41 = ($40|0)<(3);
      if ($41) {
       $$0$ph = 1;
       break L6;
      }
      $42 = $12 >>> 12;
      $43 = $42 | 224;
      $44 = $43&255;
      $45 = (($38) + 1|0);
      HEAP32[$to_nxt>>2] = $45;
      HEAP8[$38>>0] = $44;
      $46 = $12 >>> 6;
      $47 = $46 & 63;
      $48 = $47 | 128;
      $49 = $48&255;
      $50 = HEAP32[$to_nxt>>2]|0;
      $51 = (($50) + 1|0);
      HEAP32[$to_nxt>>2] = $51;
      HEAP8[$50>>0] = $49;
      $52 = $12 & 63;
      $53 = $52 | 128;
      $54 = $53&255;
      $55 = HEAP32[$to_nxt>>2]|0;
      $56 = (($55) + 1|0);
      HEAP32[$to_nxt>>2] = $56;
      HEAP8[$55>>0] = $54;
      break;
     } else {
      $57 = ($40|0)<(4);
      if ($57) {
       $$0$ph = 1;
       break L6;
      }
      $58 = $12 >>> 18;
      $59 = $58 | 240;
      $60 = $59&255;
      $61 = (($38) + 1|0);
      HEAP32[$to_nxt>>2] = $61;
      HEAP8[$38>>0] = $60;
      $62 = $12 >>> 12;
      $63 = $62 & 63;
      $64 = $63 | 128;
      $65 = $64&255;
      $66 = HEAP32[$to_nxt>>2]|0;
      $67 = (($66) + 1|0);
      HEAP32[$to_nxt>>2] = $67;
      HEAP8[$66>>0] = $65;
      $68 = $12 >>> 6;
      $69 = $68 & 63;
      $70 = $69 | 128;
      $71 = $70&255;
      $72 = HEAP32[$to_nxt>>2]|0;
      $73 = (($72) + 1|0);
      HEAP32[$to_nxt>>2] = $73;
      HEAP8[$72>>0] = $71;
      $74 = $12 & 63;
      $75 = $74 | 128;
      $76 = $75&255;
      $77 = HEAP32[$to_nxt>>2]|0;
      $78 = (($77) + 1|0);
      HEAP32[$to_nxt>>2] = $78;
      HEAP8[$77>>0] = $76;
      break;
     }
    }
   } while(0);
   $79 = HEAP32[$frm_nxt>>2]|0;
   $80 = (($79) + 4|0);
   HEAP32[$frm_nxt>>2] = $80;
   $10 = $80;
  }
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$0$ph = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre = $frm_end;
  $$pre$phiZ2D = $$pre;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = (($2) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = (($2) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = (($2) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$phiZ2D = $3;
     } else {
      $$pre$phiZ2D = $3;
     }
    } else {
     $$pre$phiZ2D = $3;
    }
   } else {
    $$pre$phiZ2D = $3;
   }
  } else {
   $$pre$phiZ2D = $3;
  }
 }
 L9: while(1) {
  $16 = HEAP32[$frm_nxt>>2]|0;
  $17 = ($16>>>0)<($frm_end>>>0);
  if (!($17)) {
   $$lcssa = $17;
   label = 40;
   break;
  }
  $18 = HEAP32[$to_nxt>>2]|0;
  $19 = ($18>>>0)<($to_end>>>0);
  if (!($19)) {
   $$lcssa = $17;
   label = 40;
   break;
  }
  $20 = HEAP8[$16>>0]|0;
  $21 = $20&255;
  $22 = ($20<<24>>24)>(-1);
  do {
   if ($22) {
    $23 = ($21>>>0)>($Maxcode>>>0);
    if ($23) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    HEAP32[$18>>2] = $21;
    $24 = (($16) + 1|0);
    HEAP32[$frm_nxt>>2] = $24;
   } else {
    $25 = ($20&255)<(194);
    if ($25) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $26 = ($20&255)<(224);
    if ($26) {
     $27 = $16;
     $28 = (($$pre$phiZ2D) - ($27))|0;
     $29 = ($28|0)<(2);
     if ($29) {
      $$0$ph = 1;
      label = 41;
      break L9;
     }
     $30 = (($16) + 1|0);
     $31 = HEAP8[$30>>0]|0;
     $32 = $31&255;
     $33 = $32 & 192;
     $34 = ($33|0)==(128);
     if (!($34)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
     $35 = $21 << 6;
     $36 = $35 & 1984;
     $37 = $32 & 63;
     $38 = $37 | $36;
     $39 = ($38>>>0)>($Maxcode>>>0);
     if ($39) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
     HEAP32[$18>>2] = $38;
     $40 = (($16) + 2|0);
     HEAP32[$frm_nxt>>2] = $40;
     break;
    }
    $41 = ($20&255)<(240);
    if ($41) {
     $42 = $16;
     $43 = (($$pre$phiZ2D) - ($42))|0;
     $44 = ($43|0)<(3);
     if ($44) {
      $$0$ph = 1;
      label = 41;
      break L9;
     }
     $45 = (($16) + 1|0);
     $46 = HEAP8[$45>>0]|0;
     $47 = (($16) + 2|0);
     $48 = HEAP8[$47>>0]|0;
     if ((($21|0) == 237)) {
      $51 = $46 & -32;
      $52 = ($51<<24>>24)==(-128);
      if (!($52)) {
       $$0$ph = 2;
       label = 41;
       break L9;
      }
     } else if ((($21|0) == 224)) {
      $49 = $46 & -32;
      $50 = ($49<<24>>24)==(-96);
      if (!($50)) {
       $$0$ph = 2;
       label = 41;
       break L9;
      }
     } else {
      $53 = $46 & -64;
      $54 = ($53<<24>>24)==(-128);
      if (!($54)) {
       $$0$ph = 2;
       label = 41;
       break L9;
      }
     }
     $55 = $48&255;
     $56 = $55 & 192;
     $57 = ($56|0)==(128);
     if (!($57)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
     $58 = $21 << 12;
     $59 = $58 & 61440;
     $60 = $46&255;
     $61 = $60 << 6;
     $62 = $61 & 4032;
     $63 = $62 | $59;
     $64 = $55 & 63;
     $65 = $63 | $64;
     $66 = ($65>>>0)>($Maxcode>>>0);
     if ($66) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
     HEAP32[$18>>2] = $65;
     $67 = (($16) + 3|0);
     HEAP32[$frm_nxt>>2] = $67;
     break;
    }
    $68 = ($20&255)<(245);
    if (!($68)) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $69 = $16;
    $70 = (($$pre$phiZ2D) - ($69))|0;
    $71 = ($70|0)<(4);
    if ($71) {
     $$0$ph = 1;
     label = 41;
     break L9;
    }
    $72 = (($16) + 1|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = (($16) + 2|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = (($16) + 3|0);
    $77 = HEAP8[$76>>0]|0;
    if ((($21|0) == 240)) {
     $$off = (($73) + 112)<<24>>24;
     $78 = ($$off&255)<(48);
     if (!($78)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
    } else if ((($21|0) == 244)) {
     $79 = $73 & -16;
     $80 = ($79<<24>>24)==(-128);
     if (!($80)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
    } else {
     $81 = $73 & -64;
     $82 = ($81<<24>>24)==(-128);
     if (!($82)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
    }
    $83 = $75&255;
    $84 = $83 & 192;
    $85 = ($84|0)==(128);
    if (!($85)) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $86 = $77&255;
    $87 = $86 & 192;
    $88 = ($87|0)==(128);
    if (!($88)) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $89 = $21 << 18;
    $90 = $89 & 1835008;
    $91 = $73&255;
    $92 = $91 << 12;
    $93 = $92 & 258048;
    $94 = $93 | $90;
    $95 = $83 << 6;
    $96 = $95 & 4032;
    $97 = $94 | $96;
    $98 = $86 & 63;
    $99 = $97 | $98;
    $100 = ($99>>>0)>($Maxcode>>>0);
    if ($100) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    HEAP32[$18>>2] = $99;
    $101 = (($16) + 4|0);
    HEAP32[$frm_nxt>>2] = $101;
   }
  } while(0);
  $102 = HEAP32[$to_nxt>>2]|0;
  $103 = (($102) + 4|0);
  HEAP32[$to_nxt>>2] = $103;
 }
 if ((label|0) == 40) {
  $104 = $$lcssa&1;
  $$0 = $104;
 }
 else if ((label|0) == 41) {
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa41 = 0, $$lcssa42 = 0, $$lcssa43 = 0, $$lcssa44 = 0, $$lcssa45 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$2 = 0, $nchar32_t$0 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = (($frm) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = (($frm) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = (($frm) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $frm_nxt$1 = $frm_nxt$1$ph;$nchar32_t$0 = 0;
 L7: while(1) {
  $14 = ($frm_nxt$1>>>0)<($frm_end>>>0);
  $15 = ($nchar32_t$0>>>0)<($mx>>>0);
  $or$cond = $15 & $14;
  if (!($or$cond)) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  $16 = HEAP8[$frm_nxt$1>>0]|0;
  $17 = $16&255;
  $18 = ($16<<24>>24)>(-1);
  do {
   if ($18) {
    $19 = ($17>>>0)>($Maxcode>>>0);
    if ($19) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $20 = (($frm_nxt$1) + 1|0);
    $frm_nxt$2 = $20;
   } else {
    $21 = ($16&255)<(194);
    if ($21) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $22 = ($16&255)<(224);
    if ($22) {
     $23 = $frm_nxt$1;
     $24 = (($$pre) - ($23))|0;
     $25 = ($24|0)<(2);
     if ($25) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $26 = (($frm_nxt$1) + 1|0);
     $27 = HEAP8[$26>>0]|0;
     $28 = $27&255;
     $29 = $28 & 192;
     $30 = ($29|0)==(128);
     if (!($30)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $31 = $17 << 6;
     $32 = $31 & 1984;
     $33 = $28 & 63;
     $34 = $33 | $32;
     $35 = ($34>>>0)>($Maxcode>>>0);
     if ($35) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $36 = (($frm_nxt$1) + 2|0);
     $frm_nxt$2 = $36;
     break;
    }
    $37 = ($16&255)<(240);
    if ($37) {
     $38 = $frm_nxt$1;
     $39 = (($$pre) - ($38))|0;
     $40 = ($39|0)<(3);
     if ($40) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $41 = (($frm_nxt$1) + 1|0);
     $42 = HEAP8[$41>>0]|0;
     $43 = (($frm_nxt$1) + 2|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($17|0) == 237)) {
      $49 = $42 & -32;
      $50 = ($49<<24>>24)==(-128);
      if (!($50)) {
       $$lcssa43 = $38;
       label = 23;
       break L7;
      }
     } else if ((($17|0) == 224)) {
      $45 = $42 & -32;
      $46 = ($45<<24>>24)==(-96);
      if (!($46)) {
       $$lcssa44 = $38;
       label = 21;
       break L7;
      }
     } else {
      $53 = $42 & -64;
      $54 = ($53<<24>>24)==(-128);
      if (!($54)) {
       $$lcssa45 = $38;
       label = 25;
       break L7;
      }
     }
     $57 = $44&255;
     $58 = $57 & 192;
     $59 = ($58|0)==(128);
     if (!($59)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $60 = $17 << 12;
     $61 = $60 & 61440;
     $62 = $42&255;
     $63 = $62 << 6;
     $64 = $63 & 4032;
     $65 = $64 | $61;
     $66 = $57 & 63;
     $67 = $65 | $66;
     $68 = ($67>>>0)>($Maxcode>>>0);
     if ($68) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $69 = (($frm_nxt$1) + 3|0);
     $frm_nxt$2 = $69;
     break;
    }
    $70 = ($16&255)<(245);
    if (!($70)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $71 = $frm_nxt$1;
    $72 = (($$pre) - ($71))|0;
    $73 = ($72|0)<(4);
    if ($73) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $74 = (($frm_nxt$1) + 1|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = (($frm_nxt$1) + 2|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = (($frm_nxt$1) + 3|0);
    $79 = HEAP8[$78>>0]|0;
    if ((($17|0) == 240)) {
     $$off = (($75) + 112)<<24>>24;
     $80 = ($$off&255)<(48);
     if (!($80)) {
      $$lcssa41 = $71;
      label = 33;
      break L7;
     }
    } else if ((($17|0) == 244)) {
     $83 = $75 & -16;
     $84 = ($83<<24>>24)==(-128);
     if (!($84)) {
      $$lcssa = $71;
      label = 35;
      break L7;
     }
    } else {
     $87 = $75 & -64;
     $88 = ($87<<24>>24)==(-128);
     if (!($88)) {
      $$lcssa42 = $71;
      label = 37;
      break L7;
     }
    }
    $91 = $77&255;
    $92 = $91 & 192;
    $93 = ($92|0)==(128);
    if (!($93)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $94 = $79&255;
    $95 = $94 & 192;
    $96 = ($95|0)==(128);
    if (!($96)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $97 = $17 << 18;
    $98 = $97 & 1835008;
    $99 = $75&255;
    $100 = $99 << 12;
    $101 = $100 & 258048;
    $102 = $101 | $98;
    $103 = $91 << 6;
    $104 = $103 & 4032;
    $105 = $102 | $104;
    $106 = $94 & 63;
    $107 = $105 | $106;
    $108 = ($107>>>0)>($Maxcode>>>0);
    if ($108) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $109 = (($frm_nxt$1) + 4|0);
    $frm_nxt$2 = $109;
   }
  } while(0);
  $110 = (($nchar32_t$0) + 1)|0;
  $frm_nxt$1 = $frm_nxt$2;$nchar32_t$0 = $110;
 }
 if ((label|0) == 21) {
  $47 = $frm;
  $48 = (($$lcssa44) - ($47))|0;
  $$0 = $48;
 }
 else if ((label|0) == 23) {
  $51 = $frm;
  $52 = (($$lcssa43) - ($51))|0;
  $$0 = $52;
 }
 else if ((label|0) == 25) {
  $55 = $frm;
  $56 = (($$lcssa45) - ($55))|0;
  $$0 = $56;
 }
 else if ((label|0) == 33) {
  $81 = $frm;
  $82 = (($$lcssa41) - ($81))|0;
  $$0 = $82;
 }
 else if ((label|0) == 35) {
  $85 = $frm;
  $86 = (($$lcssa) - ($85))|0;
  $$0 = $86;
 }
 else if ((label|0) == 37) {
  $89 = $frm;
  $90 = (($$lcssa42) - ($89))|0;
  $$0 = $90;
 }
 else if ((label|0) == 43) {
  $111 = $frm_nxt$1$lcssa;
  $112 = $frm;
  $113 = (($111) - ($112))|0;
  $$0 = $113;
 }
 return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 L1: do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   do {
    if ($10) {
     HEAP32[$__err>>2] = 4;
     $21 = ($5|0)>(0);
     $22 = ($4>>>0)>(0);
     $23 = ($5|0)==(0);
     $24 = $23 & $22;
     $25 = $21 | $24;
     if ($25) {
      $$0 = 2147483647;
      break L1;
     }
    } else {
     $11 = ($5|0)<(-1);
     $12 = ($4>>>0)<(2147483648);
     $13 = ($5|0)==(-1);
     $14 = $13 & $12;
     $15 = $11 | $14;
     if ($15) {
      HEAP32[$__err>>2] = 4;
      break;
     }
     $16 = ($5|0)>(0);
     $17 = ($4>>>0)>(2147483647);
     $18 = ($5|0)==(0);
     $19 = $18 & $17;
     $20 = $16 | $19;
     if ($20) {
      HEAP32[$__err>>2] = 4;
      $$0 = 2147483647;
      break L1;
     } else {
      $$0 = $4;
      break L1;
     }
    }
   } while(0);
   $$0 = -2147483648;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $18 = 0;$19 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $18 = 0;$19 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   if ($10) {
    HEAP32[$__err>>2] = 4;
    $11 = ($5|0)>(0);
    $12 = ($4>>>0)>(0);
    $13 = ($5|0)==(0);
    $14 = $13 & $12;
    $15 = $11 | $14;
    $16 = $15 ? -1 : 0;
    $17 = $15 ? 2147483647 : -2147483648;
    tempRet0 = $17;
    STACKTOP = sp;return ($16|0);
   } else {
    $18 = $5;$19 = $4;
   }
  }
 } while(0);
 tempRet0 = $18;
 STACKTOP = sp;return ($19|0);
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(65535);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $18 = $6&65535;
    $$0 = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $13 = 0;$14 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   if ($12) {
    HEAP32[$__err>>2] = 4;
    $13 = -1;$14 = -1;
   } else {
    $13 = $7;$14 = $6;
   }
  }
 } while(0);
 tempRet0 = $13;
 STACKTOP = sp;return ($14|0);
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
   }
   $10 = $4;
   $$0 = $10;
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i$i = 0, $$not$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741823);
 if ($0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = (($this) + 128|0);
 $2 = HEAP8[$1>>0]|0;
 $$not$i$i = ($2<<24>>24)==(0);
 $3 = ($__n>>>0)<(29);
 $or$cond$i$i = $3 & $$not$i$i;
 if ($or$cond$i$i) {
  $4 = (($this) + 16|0);
  HEAP8[$1>>0] = 1;
  $$0$i$i = $4;
 } else {
  $5 = $__n << 2;
  $6 = (__Znwj($5)|0);
  $$0$i$i = $6;
 }
 $7 = (($this) + 4|0);
 HEAP32[$7>>2] = $$0$i$i;
 HEAP32[$this>>2] = $$0$i$i;
 $8 = (($$0$i$i) + ($__n<<2)|0);
 $9 = (($this) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $$pre = HEAP32[$0>>2]|0;
 $$0 = $__n;$1 = $$pre;
 while(1) {
  $2 = ($1|0)==(0|0);
  if ($2) {
   $4 = 0;
  } else {
   HEAP32[$1>>2] = 0;
   $$pre1 = HEAP32[$0>>2]|0;
   $4 = $$pre1;
  }
  $3 = (($4) + 4|0);
  HEAP32[$0>>2] = $3;
  $5 = (($$0) + -1)|0;
  $6 = ($5|0)==(0);
  if ($6) {
   break;
  } else {
   $$0 = $5;$1 = $3;
  }
 }
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)<($__n>>>0);
 if ($8) {
  $9 = (($this) + 16|0);
  $10 = HEAP32[$this>>2]|0;
  $11 = $10;
  $12 = (($5) - ($11))|0;
  $13 = $12 >> 2;
  $14 = (($13) + ($__n))|0;
  $15 = ($14>>>0)>(1073741823);
  if ($15) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $16 = (($4) - ($11))|0;
  $17 = $16 >> 2;
  $18 = ($17>>>0)<(536870911);
  if ($18) {
   $19 = $16 >> 1;
   $20 = ($19>>>0)<($14>>>0);
   $21 = $20 ? $14 : $19;
   $$0$i = $21;
  } else {
   $$0$i = 1073741823;
  }
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v,$$0$i,$13,$9);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($__v,$__n);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$not$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = (($this) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 do {
  if ($2) {
   $8 = 0;
  } else {
   $3 = (($__a) + 112|0);
   $4 = HEAP8[$3>>0]|0;
   $$not$i$i = ($4<<24>>24)==(0);
   $5 = ($__cap>>>0)<(29);
   $or$cond$i$i = $5 & $$not$i$i;
   if ($or$cond$i$i) {
    HEAP8[$3>>0] = 1;
    $8 = $__a;
    break;
   } else {
    $6 = $__cap << 2;
    $7 = (__Znwj($6)|0);
    $8 = $7;
    break;
   }
  }
 } while(0);
 HEAP32[$this>>2] = $8;
 $9 = (($8) + ($__start<<2)|0);
 $10 = (($this) + 8|0);
 HEAP32[$10>>2] = $9;
 $11 = (($this) + 4|0);
 HEAP32[$11>>2] = $9;
 $12 = (($8) + ($__cap<<2)|0);
 HEAP32[$0>>2] = $12;
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $$pre = HEAP32[$0>>2]|0;
 $$0 = $__n;$1 = $$pre;
 while(1) {
  $2 = ($1|0)==(0|0);
  if ($2) {
   $4 = 0;
  } else {
   HEAP32[$1>>2] = 0;
   $$pre1 = HEAP32[$0>>2]|0;
   $4 = $$pre1;
  }
  $3 = (($4) + 4|0);
  HEAP32[$0>>2] = $3;
  $5 = (($$0) + -1)|0;
  $6 = ($5|0)==(0);
  if ($6) {
   break;
  } else {
   $$0 = $5;$1 = $3;
  }
 }
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($this) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($__v) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<2)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = (($__v) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = (($this) + 8|0);
 $17 = (($__v) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 8|0);
 $$pre$i$i$i = HEAP32[$2>>2]|0;
 $3 = $$pre$i$i$i;
 while(1) {
  $4 = ($3|0)==($1|0);
  if ($4) {
   break;
  }
  $5 = (($3) + -4|0);
  HEAP32[$2>>2] = $5;
  $3 = $5;
 }
 $6 = HEAP32[$this>>2]|0;
 $7 = ($6|0)==(0|0);
 do {
  if (!($7)) {
   $8 = (($this) + 16|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==($6|0);
   if ($10) {
    $11 = (($9) + 112|0);
    HEAP8[$11>>0] = 0;
    break;
   } else {
    __ZdlPv($6);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+1)|0);
 return;
}
function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+-1)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  $3 = HEAP32[$this>>2]|0;
  $4 = (($3) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  FUNCTION_TABLE_vi[$5 & 1023]($this);
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __ZNKSt3__114error_category23default_error_conditionEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = $ev;
 $0 = (($agg$result) + 4|0);
 HEAP32[$0>>2] = $this;
 return;
}
function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = HEAP32[$this>>2]|0;
 $2 = (($1) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 FUNCTION_TABLE_viii[$3 & 1023]($0,$this,$code);
 $4 = (($0) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($condition) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5|0)==($7|0);
 if ($8) {
  $9 = HEAP32[$0>>2]|0;
  $10 = HEAP32[$condition>>2]|0;
  $11 = ($9|0)==($10|0);
  $12 = $11;
 } else {
  $12 = 0;
 }
 STACKTOP = sp;return ($12|0);
}
function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($code) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==($this|0);
 if ($2) {
  $3 = HEAP32[$code>>2]|0;
  $4 = ($3|0)==($condition|0);
  $5 = $4;
 } else {
  $5 = 0;
 }
 return ($5|0);
}
function __ZNKSt3__112__do_message7messageEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strerror(($ev|0))|0);
 $1 = (_strlen(($0|0))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,$0,$1);
 return;
}
function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$ec,$what_arg) {
 $agg$result = $agg$result|0;
 $ec = $ec|0;
 $what_arg = $what_arg|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = HEAP32[$ec>>2]|0;
 $2 = ($1|0)==(0);
 do {
  if (!($2)) {
   $3 = HEAP8[$what_arg>>0]|0;
   $4 = $3 & 1;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $8 = $3&255;
    $9 = $8 >>> 1;
    $10 = $9;
   } else {
    $6 = (($what_arg) + 4|0);
    $7 = HEAP32[$6>>2]|0;
    $10 = $7;
   }
   $11 = ($10|0)==(0);
   if ($11) {
    $17 = $1;
   } else {
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($what_arg,14728)|0);
    $$pre = HEAP32[$ec>>2]|0;
    $17 = $$pre;
   }
   $12 = (($ec) + 4|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = HEAP32[$13>>2]|0;
   $15 = (($14) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_viii[$16 & 1023]($0,$13,$17);
   $18 = HEAP8[$0>>0]|0;
   $19 = $18 & 1;
   $20 = ($19<<24>>24)==(0);
   if ($20) {
    $25 = (($0) + 1|0);
    $26 = $18&255;
    $27 = $26 >>> 1;
    $28 = $25;$29 = $27;
   } else {
    $21 = (($0) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (($0) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $28 = $22;$29 = $24;
   }
   __THREW__ = 0;
   (invoke_iiii(556,($what_arg|0),($28|0),($29|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    $32 = ___cxa_find_matching_catch()|0;
    $33 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    ___resumeException($32|0);
    // unreachable;
   } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    break;
   }
  }
 } while(0);
 ;HEAP32[$agg$result+0>>2]=HEAP32[$what_arg+0>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$what_arg+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$what_arg+8>>2]|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $34 = (($what_arg) + ($__i$0$i$i<<2)|0);
  HEAP32[$34>>2] = 0;
  $35 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $35;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$ec,$what_arg) {
 $this = $this|0;
 $ec = $ec|0;
 $what_arg = $what_arg|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 12|0;
 $1 = sp;
 $2 = (_strlen(($what_arg|0))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1,$what_arg,$2);
 __THREW__ = 0;
 invoke_viii(557,($0|0),($ec|0),($1|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   $18 = ___cxa_find_matching_catch()|0;
   $19 = tempRet0;
   $$0 = $19;$$01 = $18;
  } else {
   __THREW__ = 0;
   invoke_vii(379,($this|0),($0|0));
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    $20 = ___cxa_find_matching_catch()|0;
    $21 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $$0 = $21;$$01 = $20;
    break;
   } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    HEAP32[$this>>2] = ((14736 + 8|0));
    $7 = (($this) + 8|0);
    $8 = $ec;
    $9 = $8;
    $10 = HEAP32[$9>>2]|0;
    $11 = (($8) + 4)|0;
    $12 = $11;
    $13 = HEAP32[$12>>2]|0;
    $14 = $7;
    $15 = $14;
    HEAP32[$15>>2] = $10;
    $16 = (($14) + 4)|0;
    $17 = $16;
    HEAP32[$17>>2] = $13;
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($$01|0);
 // unreachable;
}
function __ZNSt3__112system_errorD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 return;
}
function __ZNSt3__112system_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__114error_categoryD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag,$arg,$func) {
 $flag = $flag|0;
 $arg = $arg|0;
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_pthread_mutex_lock((14880|0))|0);
 while(1) {
  $0 = HEAP32[$flag>>2]|0;
  $1 = ($0|0)==(1);
  if (!($1)) {
   break;
  }
  (_pthread_cond_wait((14904|0),(14880|0))|0);
 }
 $2 = HEAP32[$flag>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   HEAP32[$flag>>2] = 1;
   __THREW__ = 0;
   (invoke_ii(558,(14880|0))|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if (!($5)) {
    __THREW__ = 0;
    invoke_vi($func|0,($arg|0));
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if (!($7)) {
     __THREW__ = 0;
     (invoke_ii(559,(14880|0))|0);
     $8 = __THREW__; __THREW__ = 0;
     $9 = $8&1;
     if (!($9)) {
      HEAP32[$flag>>2] = -1;
      __THREW__ = 0;
      (invoke_ii(558,(14880|0))|0);
      $10 = __THREW__; __THREW__ = 0;
      $11 = $10&1;
      if (!($11)) {
       __THREW__ = 0;
       (invoke_ii(560,(14904|0))|0);
       $12 = __THREW__; __THREW__ = 0;
       $13 = $12&1;
       if (!($13)) {
        break;
       }
      }
     }
    }
   }
   $14 = ___cxa_find_matching_catch(0|0)|0;
   $15 = tempRet0;
   (___cxa_begin_catch(($14|0))|0);
   __THREW__ = 0;
   (invoke_ii(559,(14880|0))|0);
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    HEAP32[$flag>>2] = 0;
    __THREW__ = 0;
    (invoke_ii(558,(14880|0))|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     __THREW__ = 0;
     (invoke_ii(560,(14904|0))|0);
     $20 = __THREW__; __THREW__ = 0;
     $21 = $20&1;
     if (!($21)) {
      __THREW__ = 0;
      invoke_v(561);
      $22 = __THREW__; __THREW__ = 0;
      $23 = $22&1;
      if (!($23)) {
       // unreachable;
      }
     }
    }
   }
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   __THREW__ = 0;
   invoke_v(420);
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if ($27) {
    $28 = ___cxa_find_matching_catch(0|0)|0;
    $29 = tempRet0;
    ___clang_call_terminate($28);
    // unreachable;
   } else {
    ___resumeException($24|0);
    // unreachable;
   }
  } else {
   (_pthread_mutex_unlock((14880|0))|0);
  }
 } while(0);
 return;
}
function runPostSets() {

}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _strlen(ptr) {
    ptr = ptr|0;
    var curr = 0;
    curr = ptr;
    while (((HEAP8[((curr)>>0)])|0)) {
      curr = (curr + 1)|0;
    }
    return (curr - ptr)|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return (tempRet0 = tempRet0, $10$0) | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return (tempRet0 = tempRet0, $1$0) | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&127](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&1023](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&1023](a1|0,a2|0);
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&1023](a1|0)|0;
}


function dynCall_id(index,a1) {
  index = index|0;
  a1=+a1;
  return FUNCTION_TABLE_id[index&511](+a1)|0;
}


function dynCall_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0; a11=a11|0;
  return FUNCTION_TABLE_iiiiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0,a11|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&1023](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0; a11=a11|0; a12=a12|0; a13=a13|0; a14=a14|0; a15=a15|0;
  FUNCTION_TABLE_viiiiiiiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0,a11|0,a12|0,a13|0,a14|0,a15|0);
}


function dynCall_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=+a6;
  FUNCTION_TABLE_viiiiid[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,+a6);
}


function dynCall_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  FUNCTION_TABLE_viiiiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0);
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_di(index,a1) {
  index = index|0;
  a1=a1|0;
  return +FUNCTION_TABLE_di[index&511](a1|0);
}


function dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  FUNCTION_TABLE_viiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0);
}


function dynCall_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=+a7;
  FUNCTION_TABLE_viiiiiid[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,+a7);
}


function dynCall_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0;
  FUNCTION_TABLE_viiiiiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0);
}


function dynCall_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0;
  FUNCTION_TABLE_viiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&1023](a1|0,a2|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_diii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return +FUNCTION_TABLE_diii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_i(index) {
  index = index|0;
  
  return FUNCTION_TABLE_i[index&1023]()|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&1023](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&1023]();
}


function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return FUNCTION_TABLE_iiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&127](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_iiiiiiii(0);return 0; }
function b1(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(1); }
function b2(p0) { p0 = p0|0; nullFunc_vi(2); }
function _freelocale__wrapper(p0) { p0 = p0|0; _freelocale(p0|0); }
function b3(p0,p1) { p0 = p0|0;p1 = p1|0; nullFunc_vii(3); }
function b4(p0) { p0 = p0|0; nullFunc_ii(4);return 0; }
function _uselocale__wrapper(p0) { p0 = p0|0; return _uselocale(p0|0)|0; }
function _pthread_mutex_unlock__wrapper(p0) { p0 = p0|0; return _pthread_mutex_unlock(p0|0)|0; }
function _pthread_mutex_lock__wrapper(p0) { p0 = p0|0; return _pthread_mutex_lock(p0|0)|0; }
function _pthread_cond_broadcast__wrapper(p0) { p0 = p0|0; return _pthread_cond_broadcast(p0|0)|0; }
function b5(p0) { p0 = +p0; nullFunc_id(5);return 0; }
function b6(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0;p10 = p10|0; nullFunc_iiiiiiiiiiii(6);return 0; }
function b7(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(7);return 0; }
function _fprintf__wrapper(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; return _fprintf(p0|0,p1|0,p2|0)|0; }
function _newlocale__wrapper(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; return _newlocale(p0|0,p1|0,p2|0)|0; }
function b8(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0;p10 = p10|0;p11 = p11|0;p12 = p12|0;p13 = p13|0;p14 = p14|0; nullFunc_viiiiiiiiiiiiiii(8); }
function b9(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = +p5; nullFunc_viiiiid(9); }
function b10(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_viiiiiiii(10); }
function b11(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(11); }
function b12(p0) { p0 = p0|0; nullFunc_di(12);return +0; }
function b13(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_viiiiiii(13); }
function b14(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = +p6; nullFunc_viiiiiid(14); }
function b15(p0,p1,p2,p3,p4,p5,p6,p7,p8) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0; nullFunc_viiiiiiiii(15); }
function b16(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0; nullFunc_viiiiiiiiii(16); }
function b17(p0,p1) { p0 = p0|0;p1 = p1|0; nullFunc_iii(17);return 0; }
function _printf__wrapper(p0,p1) { p0 = p0|0;p1 = p1|0; return _printf(p0|0,p1|0)|0; }
function b18(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(18);return 0; }
function b19(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_diii(19);return +0; }
function b20() { ; nullFunc_i(20);return 0; }
function ___ctype_b_loc__wrapper() { ; return ___ctype_b_loc()|0; }
function ___ctype_toupper_loc__wrapper() { ; return ___ctype_toupper_loc()|0; }
function ___ctype_tolower_loc__wrapper() { ; return ___ctype_tolower_loc()|0; }
function b21(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(21);return 0; }
function _catgets__wrapper(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; return _catgets(p0|0,p1|0,p2|0,p3|0)|0; }
function b22(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(22); }
function ___cxa_throw__wrapper(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; ___cxa_throw(p0|0,p1|0,p2|0); }
function b23() { ; nullFunc_v(23); }
function ___cxa_pure_virtual__wrapper() { ; ___cxa_pure_virtual(); }
function ___cxa_end_catch__wrapper() { ; ___cxa_end_catch(); }
function ___cxa_rethrow__wrapper() { ; ___cxa_rethrow(); }
function b24(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(24);return 0; }
function b25(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(25); }

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0];
var FUNCTION_TABLE_viiiii = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_vi = [b2,__ZN6ikfast14IkSolutionListIdED2Ev,__ZN6ikfast14IkSolutionListIdED0Ev,b2,b2,b2,__ZN6ikfast14IkSolutionListIdE5ClearEv,__ZN6ikfast10IkSolutionIdED2Ev,__ZN6ikfast10IkSolutionIdED0Ev,b2,b2,b2,b2,__ZNK6ikfast10IkSolutionIdE8ValidateEv,b2,__ZN6ikfast14IkSolutionBaseIdED2Ev,__ZN6ikfast14IkSolutionBaseIdED0Ev,b2,b2,__ZN6ikfast18IkSolutionListBaseIdED2Ev,__ZN6ikfast18IkSolutionListBaseIdED0Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,b2
,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,b2,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,b2,__ZNSt12length_errorD0Ev,__ZNSt12out_of_rangeD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,b2,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b2,b2,b2,b2,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b2,b2,b2,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,b2,b2,b2,b2,__ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev,__ZNSt3__19basic_iosIcNS_11char_traitsIcEEED0Ev
,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,b2,b2,b2,b2,b2,__ZNSt3__18ios_base7failureD2Ev,__ZNSt3__18ios_base7failureD0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__114error_categoryD2Ev,__ZNSt3__119__iostream_categoryD0Ev,b2,b2,b2,b2,b2,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,b2,b2,b2,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev,b2,b2,b2,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev
,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,b2
,b2,b2,b2,b2,b2,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,b2,b2,b2,b2,b2
,b2,b2,b2,b2,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,b2,b2
,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,b2,b2,b2,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev
,b2,b2,b2,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,b2,b2,b2,b2
,b2,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,b2,b2,b2,b2,b2,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,b2,b2,b2,b2,b2,b2
,b2,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZNSt3__112system_errorD2Ev,__ZNSt3__112system_errorD0Ev,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__16vectorIdNS_9allocatorIdEEED2Ev
,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev,b2,b2,__ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev,b2,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev,b2,__ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev,b2,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev,__ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ev,b2,b2,b2,b2
,__ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEED2Ev,b2,b2,b2,b2,b2,__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev,b2,b2,__ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev,b2,b2,b2,b2,__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev,b2,b2,b2,__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev,b2,b2,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ev,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev
,__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv,b2,b2,b2,__ZNSt3__112__deallocateEPv,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE26__invalidate_all_iteratorsEv,__ZNSt3__16vectorIiNS_9allocatorIiEEE26__invalidate_all_iteratorsEv,b2,b2,b2,b2,b2,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_freelocale__wrapper,b2,b2,__ZNSt3__112__do_nothingEPv,b2,__ZNSt3__121__throw_runtime_errorEPKc,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_free,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_vii = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv
,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,b3,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,b3,b3,b3,b3,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,b3,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,b3,b3,b3,b3,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,b3,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,b3,b3,b3,b3
,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,b3,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__18messagesIcE8do_closeEi,b3,b3
,b3,b3,__ZNKSt3__18messagesIwE8do_closeEi,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv
,__ZNKSt3__18numpunctIcE12do_falsenameEv,b3,b3,b3,b3,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej,b3,b3,b3,b3,b3,b3,b3
,b3,__ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj,__ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj,b3,__ZNSt13runtime_errorC2EPKc,b3,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_,b3,b3,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,b3,b3,b3,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEj,b3,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi,b3,b3,__ZNKSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv,__ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,b3,b3,__ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej,b3,b3,b3,b3,b3,b3
,b3,b3,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ej,b3,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj,b3,__ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj,__ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj,b3,b3,__ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE7destroyIS5_EEvRS8_PT_,__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj,__ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE,b3,__ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_shrinkEj,__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj,__ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE,b3,__ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_shrinkEj,b3,b3,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_,b3,b3,b3,b3,__ZNSt3__19basic_iosIcNS_11char_traitsIcEEE8setstateEj,b3
,b3,b3,b3,__ZNSt3__116allocator_traitsINS_9allocatorIdEEE7destroyIdEEvRS2_PT_,b3,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_,__ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_,__ZNSt3__116allocator_traitsINS_9allocatorIjEEE7destroyIjEEvRS2_PT_,b3,b3,b3,b3,__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__annotate_shrinkEj,b3,__ZNKSt3__16vectorIiNS_9allocatorIiEEE17__annotate_shrinkEj,b3,b3,b3,__ZNSt3__116allocator_traitsINS_9allocatorIiEEE7destroyIiEEvRS2_PT_,__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE7destroyIS4_EEvRS5_PT_,b3,b3,b3,b3,b3,b3,b3,_abort_message,b3,b3
,__ZNSt3__118__libcpp_refstringC2EPKc,__ZNSt11logic_errorC2EPKc,b3,b3,__ZNSt3__18ios_base16__call_callbacksENS0_5eventE,b3,__ZNSt3__18ios_base5clearEj,b3,__ZNKSt3__18ios_base6getlocEv,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,b3,b3,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw,b3,b3,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj,b3,b3,b3,b3,b3,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej,b3,__ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_,__ZNSt3__17codecvtIwc11__mbstate_tEC2Ej,__ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_
,__ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_,b3,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_ii = [b4,b4,b4,b4,b4,__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv,b4,b4,b4,b4,b4,__ZNK6ikfast10IkSolutionIdE7GetFreeEv,__ZNK6ikfast10IkSolutionIdE6GetDOFEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,b4,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,b4,b4,b4,b4,b4,b4,__ZNKSt9bad_alloc4whatEv
,b4,b4,__ZNKSt11logic_error4whatEv,b4,b4,__ZNKSt13runtime_error4whatEv,b4,b4,b4,b4,__ZNKSt8bad_cast4whatEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__119__iostream_category4nameEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,b4,b4,b4,b4,b4,b4,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv
,__ZNKSt3__120__time_get_c_storageIcE3__XEv,b4,b4,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,b4,b4,b4,b4,b4,b4,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,b4,b4,b4
,b4,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv
,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,b4,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,b4,b4,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,b4,b4
,b4,b4,b4,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,b4
,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,b4,b4,b4,b4,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,b4,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,b4,b4,b4,b4,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,b4,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv,__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentrycvbEv,__ZNKSt3__18ios_base5flagsEv,__ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE4fillEv,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5rdbufEv,b4,b4,__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv,b4,__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv,b4,__ZNKSt3__19nullptr_tcvPT_IiEEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,__Znwj,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_uselocale__wrapper,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,_wcslen,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_pthread_mutex_unlock__wrapper,_pthread_mutex_lock__wrapper,_pthread_cond_broadcast__wrapper,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_id = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,__Z13__DOUBLE_BITSd,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5];
var FUNCTION_TABLE_iiiiiiiiiiii = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_,b6,b6
,b6,b6,b6,b6,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6];
var FUNCTION_TABLE_iiii = [b7,b7,b7,__ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,b7,b7,b7,b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,b7,b7,b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_sn_write,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,b7,b7,b7,b7,b7,b7,__ZNKSt3__17collateIcE7do_hashEPKcS3_,b7,b7,b7,b7,__ZNKSt3__17collateIwE7do_hashEPKwS3_,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b7,b7,b7,b7
,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,b7,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,b7,b7,__ZNKSt3__15ctypeIcE9do_narrowEcc,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__15ctypeIwE5do_isEtw,b7,b7,b7,b7,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,b7,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,b7,b7,__ZNKSt3__15ctypeIwE9do_narrowEwc,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_fprintf__wrapper,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_do_read,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_newlocale__wrapper,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,b7,b7,b7,b7,b7,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_wcrtomb,b7,b7,_mbtowc
,_mbrlen,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_vasprintf,b7,b7,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_viiiiiiiiiiiiiii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i,b8,__ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8];
var FUNCTION_TABLE_viiiiid = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,b9,b9,b9,b9,b9,b9,b9,b9,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9];
var FUNCTION_TABLE_viiiiiiii = [b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,b10,b10,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b10,b10,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b10,b10];
var FUNCTION_TABLE_viiiiii = [b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,b11,b11
,b11,b11,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,b11
,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,b11,b11,b11,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,b11,b11,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,b11,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,b11,b11,b11,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b11,b11,b11
,b11,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11];
var FUNCTION_TABLE_di = [b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_atof,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12];
var FUNCTION_TABLE_viiiiiii = [b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b13,b13,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b13,b13,b13,b13,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx
,b13,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,b13,b13,b13,b13,b13,b13,b13,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,b13,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,b13,b13,b13,b13,b13,b13,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b13,b13,b13,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE,b13,b13,__ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE,b13,b13,__ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13];
var FUNCTION_TABLE_viiiiiid = [b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,b14,b14,b14,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14];
var FUNCTION_TABLE_viiiiiiiii = [b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_viiiiiiiiii = [b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri
,b16,b16,b16,b16,b16,__ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri,b16,b16,b16,b16,__ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri,b16,__ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16];
var FUNCTION_TABLE_iii = [b17,b17,b17,b17,__ZNK6ikfast14IkSolutionListIdE11GetSolutionEj,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,b17,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,__ZNKSt3__15ctypeIcE10do_toupperEc,b17,__ZNKSt3__15ctypeIcE10do_tolowerEc,b17,__ZNKSt3__15ctypeIcE8do_widenEc,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNKSt3__15ctypeIwE10do_toupperEw,b17,__ZNKSt3__15ctypeIwE10do_tolowerEw,b17,__ZNKSt3__15ctypeIwE8do_widenEc,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__16vectorIdNS_9allocatorIdEEEixEj,b17,b17,_printf__wrapper,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi,b17,b17,b17,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj,b17,b17,b17,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEaSERKS6_,__ZNSt3__16vectorIiNS_9allocatorIiEEEaSERKS3_,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__13minIjEERKT_S3_S3_,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,__ZNSt3__116allocator_traitsINS_9allocatorIdEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10__max_sizeENS_17integral_constantIbLb1EEERKS5_,__ZNSt3__116allocator_traitsINS_9allocatorIiEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_,b17,b17,__ZNSt3__116allocator_traitsINS_9allocatorIjEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,__ZNKSt3__16locale9use_facetERNS0_2idE,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,_isxdigit_l,_isdigit_l,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_iiiiii = [b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,b18,b18,b18,b18,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,b18,b18,b18,b18,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b18,b18,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,b18,b18,b18,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b18,b18,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j
,b18,b18,b18,b18,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b18,b18,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,b18,b18,b18,b18,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b18,b18,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,_wcsnrtombs,b18,_mbsnrtowcs,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18];
var FUNCTION_TABLE_diii = [b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19];
var FUNCTION_TABLE_i = [b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__Z20GetNumFreeParametersv,b20,b20,b20,b20,b20,b20,__Z12GetNumJointsv,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__115__get_nullptr_tEv,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,___cxa_get_globals_fast,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__16__clocEv,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__16locale5__imp12make_classicEv,b20,__ZNSt3__16locale5__imp11make_globalEv,__ZNSt3__16locale8__globalEv,b20,b20,___ctype_b_loc__wrapper,___ctype_toupper_loc__wrapper,___ctype_tolower_loc__wrapper,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20];
var FUNCTION_TABLE_iiiii = [b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,b21,b21,b21,b21,b21,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z,b21,b21,b21,__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz,b21,b21,b21,b21,b21,b21,b21,b21,_mbsrtowcs,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,_catgets__wrapper,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,_mbrtowc,b21
,b21,b21,b21,b21,b21,__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji,__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21];
var FUNCTION_TABLE_viii = [b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd,__ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_,b22,b22,b22,b22,b22,b22,b22,__ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNKSt3__114error_category23default_error_conditionEi,b22,b22,__ZNKSt3__119__iostream_category7messageEi,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_,b22,b22,b22,b22,b22,___cxa_throw__wrapper,b22,b22,b22,b22,b22,b22,__ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9constructIS5_S5_EEvRS8_PT_RKT0_,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE20__link_nodes_at_backEPNS_11__list_nodeIS3_PvEESA_
,b22,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEEC2EPNS_15basic_streambufIcS2_EE,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjjEEvRS2_PT_RKT0_,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_,__ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,__ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE,b22,b22,b22,b22,b22,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,__ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,b22,b22,b22,b22,b22,__ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22];
var FUNCTION_TABLE_v = [b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,___cxa_pure_virtual__wrapper,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,__ZL25default_terminate_handlerv,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,___cxa_end_catch__wrapper,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,__ZSt17__throw_bad_allocv,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,___cxa_rethrow__wrapper,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23];
var FUNCTION_TABLE_iiiiiiiii = [b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,b24,b24,b24,b24
,b24,b24,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b24,b24,b24,b24,b24,b24,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24];
var FUNCTION_TABLE_viiii = [b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25
,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25
,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b25,b25,b25,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b25,b25,b25,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b25,b25,b25
,b25,b25,b25,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,__ZNKSt3__17collateIcE12do_transformEPKcS3_,b25,b25,b25,b25,__ZNKSt3__17collateIwE12do_transformEPKwS3_,b25,b25
,b25,b25,b25,b25,b25,b25,b25,b25,b25];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, _main: _main, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _strlen: _strlen, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_id: dynCall_id, dynCall_iiiiiiiiiiii: dynCall_iiiiiiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiiiiiiiiiiiii: dynCall_viiiiiiiiiiiiiii, dynCall_viiiiid: dynCall_viiiiid, dynCall_viiiiiiii: dynCall_viiiiiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_di: dynCall_di, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiiiid: dynCall_viiiiiid, dynCall_viiiiiiiii: dynCall_viiiiiiiii, dynCall_viiiiiiiiii: dynCall_viiiiiiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_diii: dynCall_diii, dynCall_i: dynCall_i, dynCall_iiiii: dynCall_iiiii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var real____cxa_can_catch = asm["___cxa_can_catch"]; asm["___cxa_can_catch"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_can_catch.apply(null, arguments);
};

var real__main = asm["_main"]; asm["_main"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__main.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"]; asm["___cxa_is_pointer_type"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_is_pointer_type.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__memmove.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real__strlen = asm["_strlen"]; asm["_strlen"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__strlen.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_id = Module["dynCall_id"] = asm["dynCall_id"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiiiiii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      for (var i = 0; i < data.length; i++) {
        assert(HEAPU8[STATIC_BASE + i] === 0, "area for memory initializer should not have been touched before it's loaded");
      }
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }
    var request = Module['memoryInitializerRequest'];
    if (request) {
      // a network request has already been created, just use that
      if (request.response) {
        setTimeout(function() {
          applyMemoryInitializer(request.response);
        }, 0); // it's already here; but, apply it asynchronously
      } else {
        request.addEventListener('load', function() { // wait for it
          if (request.status !== 200 && request.status !== 0) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status);
          }
          if (!request.response || typeof request.response !== 'object' || !request.response.byteLength) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest response (expected ArrayBuffer): ' + request.response);
          }
          applyMemoryInitializer(request.response);
        });
      }
    } else {
      // fetch it from the network ourselves
      Browser.asyncLoad(memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {
    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  abortDecorators.forEach(function(decorator) {
    output = decorator(output, what);
  });
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = false;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



